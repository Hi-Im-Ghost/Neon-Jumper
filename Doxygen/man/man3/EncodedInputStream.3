.TH "EncodedInputStream< Encoding, InputByteStream >" 3 "Fri Jan 21 2022" "Version 1.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
EncodedInputStream< Encoding, InputByteStream > \- Input byte stream wrapper with a statically bound encoding\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <encodedstream\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef Encoding::Ch \fBCh\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEncodedInputStream\fP (InputByteStream &is)"
.br
.ti -1c
.RI "\fBCh\fP \fBPeek\fP () const"
.br
.ti -1c
.RI "\fBCh\fP \fBTake\fP ()"
.br
.ti -1c
.RI "size_t \fBTell\fP () const"
.br
.ti -1c
.RI "void \fBPut\fP (\fBCh\fP)"
.br
.ti -1c
.RI "void \fBFlush\fP ()"
.br
.ti -1c
.RI "\fBCh\fP * \fBPutBegin\fP ()"
.br
.ti -1c
.RI "size_t \fBPutEnd\fP (\fBCh\fP *)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBRAPIDJSON_STATIC_ASSERT\fP (sizeof(typename InputByteStream::Ch)==1)"
.br
.ti -1c
.RI "\fBEncodedInputStream\fP (const \fBEncodedInputStream\fP &)"
.br
.ti -1c
.RI "\fBEncodedInputStream\fP & \fBoperator=\fP (const \fBEncodedInputStream\fP &)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "InputByteStream & \fBis_\fP"
.br
.ti -1c
.RI "\fBCh\fP \fBcurrent_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename \fBEncoding\fP, typename InputByteStream>
.br
class EncodedInputStream< Encoding, InputByteStream >"Input byte stream wrapper with a statically bound encoding\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fIEncoding\fP The interpretation of encoding of the stream\&. Either \fBUTF8\fP, \fBUTF16LE\fP, \fBUTF16BE\fP, \fBUTF32LE\fP, \fBUTF32BE\fP\&. 
.br
\fIInputByteStream\fP Type of input byte stream\&. For example, \fBFileReadStream\fP\&. 
.RE
.PP

.SH "Member Typedef Documentation"
.PP 
.SS "template<typename \fBEncoding\fP , typename InputByteStream > typedef Encoding::Ch \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >::Ch"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename \fBEncoding\fP , typename InputByteStream > \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >\fB::EncodedInputStream\fP (InputByteStream & is)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename InputByteStream > \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >\fB::EncodedInputStream\fP (const \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream > &)\fC [private]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename \fBEncoding\fP , typename InputByteStream > void \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >::Flush ()\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename InputByteStream > \fBEncodedInputStream\fP & \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >::operator= (const \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream > &)\fC [private]\fP"

.SS "template<typename \fBEncoding\fP , typename InputByteStream > \fBCh\fP \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >::Peek () const\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename InputByteStream > void \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >::Put (\fBCh\fP)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename InputByteStream > \fBCh\fP * \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >::PutBegin ()\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename InputByteStream > size_t \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >::PutEnd (\fBCh\fP *)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename InputByteStream > \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >::RAPIDJSON_STATIC_ASSERT (sizeof(typename InputByteStream::Ch) = \fC=1\fP)\fC [private]\fP"

.SS "template<typename \fBEncoding\fP , typename InputByteStream > \fBCh\fP \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >::Take ()\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename InputByteStream > size_t \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >::Tell () const\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<typename \fBEncoding\fP , typename InputByteStream > \fBCh\fP \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >::current_\fC [private]\fP"

.SS "template<typename \fBEncoding\fP , typename InputByteStream > InputByteStream& \fBEncodedInputStream\fP< \fBEncoding\fP, InputByteStream >::is_\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
