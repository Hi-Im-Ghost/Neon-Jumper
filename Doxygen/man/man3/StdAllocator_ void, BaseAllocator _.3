.TH "StdAllocator< void, BaseAllocator >" 3 "Fri Jan 21 2022" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
StdAllocator< void, BaseAllocator >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <allocators\&.h>\fP
.PP
Inherits std::allocator< void >\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBrebind\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef BaseAllocator \fBBaseAllocatorType\fP"
.br
.ti -1c
.RI "typedef allocator_type::value_type \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBStdAllocator\fP () RAPIDJSON_NOEXCEPT"
.br
.ti -1c
.RI "\fBStdAllocator\fP (const \fBStdAllocator\fP &rhs) RAPIDJSON_NOEXCEPT"
.br
.ti -1c
.RI "template<typename U > \fBStdAllocator\fP (const \fBStdAllocator\fP< U, BaseAllocator > &rhs) RAPIDJSON_NOEXCEPT"
.br
.ti -1c
.RI "\fBStdAllocator\fP (const BaseAllocator &baseAllocator) RAPIDJSON_NOEXCEPT"
.br
.ti -1c
.RI "\fB~StdAllocator\fP () RAPIDJSON_NOEXCEPT"
.br
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "typedef std::allocator< void > \fBallocator_type\fP"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "BaseAllocator \fBbaseAllocator_\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "template<typename , typename > class \fBStdAllocator\fP"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename BaseAllocator > typedef std::allocator<void> \fBStdAllocator\fP< void, BaseAllocator >::allocator_type\fC [private]\fP"

.SS "template<typename BaseAllocator > typedef BaseAllocator \fBStdAllocator\fP< void, BaseAllocator >::BaseAllocatorType"

.SS "template<typename BaseAllocator > typedef allocator_type::value_type \fBStdAllocator\fP< void, BaseAllocator >::value_type"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename BaseAllocator > \fBStdAllocator\fP< void, BaseAllocator >\fB::StdAllocator\fP ()\fC [inline]\fP"

.SS "template<typename BaseAllocator > \fBStdAllocator\fP< void, BaseAllocator >\fB::StdAllocator\fP (const \fBStdAllocator\fP< void, BaseAllocator > & rhs)\fC [inline]\fP"

.SS "template<typename BaseAllocator > template<typename U > \fBStdAllocator\fP< void, BaseAllocator >\fB::StdAllocator\fP (const \fBStdAllocator\fP< U, BaseAllocator > & rhs)\fC [inline]\fP"

.SS "template<typename BaseAllocator > \fBStdAllocator\fP< void, BaseAllocator >\fB::StdAllocator\fP (const BaseAllocator & baseAllocator)\fC [inline]\fP"

.SS "template<typename BaseAllocator > \fBStdAllocator\fP< void, BaseAllocator >::~\fBStdAllocator\fP ()\fC [inline]\fP"

.SH "Friends And Related Function Documentation"
.PP 
.SS "template<typename BaseAllocator > template<typename , typename > friend class \fBStdAllocator\fP\fC [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<typename BaseAllocator > BaseAllocator \fBStdAllocator\fP< void, BaseAllocator >::baseAllocator_\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
