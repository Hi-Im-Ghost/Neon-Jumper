.TH "src/rapidjson/include/rapidjson/stringbuffer.h" 3 "Fri Jan 14 2022" "Version 1.0.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/rapidjson/include/rapidjson/stringbuffer.h
.SH SYNOPSIS
.br
.PP
\fC#include 'stream\&.h'\fP
.br
\fC#include 'internal/stack\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBGenericStringBuffer< Encoding, Allocator >\fP"
.br
.RI "Represents an in-memory output stream\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBGenericStringBuffer\fP< \fBUTF8\fP<> > \fBStringBuffer\fP"
.br
.RI "String buffer with \fBUTF8\fP encoding\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename \fBEncoding\fP , typename \fBAllocator\fP > void \fBPutReserve\fP (\fBGenericStringBuffer\fP< \fBEncoding\fP, \fBAllocator\fP > &stream, size_t count)"
.br
.ti -1c
.RI "template<typename \fBEncoding\fP , typename \fBAllocator\fP > void \fBPutUnsafe\fP (\fBGenericStringBuffer\fP< \fBEncoding\fP, \fBAllocator\fP > &stream, typename Encoding::Ch c)"
.br
.ti -1c
.RI "template<> void \fBPutN\fP (\fBGenericStringBuffer\fP< \fBUTF8\fP<> > &stream, char c, size_t n)"
.br
.RI "Implement specialized version of \fBPutN()\fP with memset() for better performance\&. "
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBGenericStringBuffer\fP<\fBUTF8\fP<> > \fBStringBuffer\fP"

.PP
String buffer with \fBUTF8\fP encoding\&. 
.SH "Function Documentation"
.PP 
.SS "template<> void PutN (\fBGenericStringBuffer\fP< \fBUTF8\fP<> > & stream, char c, size_t n)\fC [inline]\fP"

.PP
Implement specialized version of \fBPutN()\fP with memset() for better performance\&. 
.SS "template<typename \fBEncoding\fP , typename \fBAllocator\fP > void PutReserve (\fBGenericStringBuffer\fP< \fBEncoding\fP, \fBAllocator\fP > & stream, size_t count)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename \fBAllocator\fP > void PutUnsafe (\fBGenericStringBuffer\fP< \fBEncoding\fP, \fBAllocator\fP > & stream, typename Encoding::Ch c)\fC [inline]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
