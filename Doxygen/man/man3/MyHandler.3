.TH "MyHandler" 3 "Fri Jan 21 2022" "Version 1.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MyHandler
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMyHandler\fP ()"
.br
.ti -1c
.RI "bool \fBNull\fP ()"
.br
.ti -1c
.RI "bool \fBBool\fP (bool b)"
.br
.ti -1c
.RI "bool \fBInt\fP (int i)"
.br
.ti -1c
.RI "bool \fBUint\fP (unsigned u)"
.br
.ti -1c
.RI "bool \fBInt64\fP (\fBint64_t\fP i)"
.br
.ti -1c
.RI "bool \fBUint64\fP (\fBuint64_t\fP u)"
.br
.ti -1c
.RI "bool \fBDouble\fP (double d)"
.br
.ti -1c
.RI "bool \fBRawNumber\fP (const char *str, \fBSizeType\fP length, bool)"
.br
.ti -1c
.RI "bool \fBString\fP (const char *str, \fBSizeType\fP length, bool)"
.br
.ti -1c
.RI "bool \fBStartObject\fP ()"
.br
.ti -1c
.RI "bool \fBKey\fP (const char *str, \fBSizeType\fP length, bool)"
.br
.ti -1c
.RI "bool \fBEndObject\fP (\fBSizeType\fP memberCount)"
.br
.ti -1c
.RI "bool \fBStartArray\fP ()"
.br
.ti -1c
.RI "bool \fBEndArray\fP (\fBSizeType\fP elementCount)"
.br
.ti -1c
.RI "bool \fBNull\fP ()"
.br
.ti -1c
.RI "bool \fBBool\fP (bool b)"
.br
.ti -1c
.RI "bool \fBInt\fP (int i)"
.br
.ti -1c
.RI "bool \fBUint\fP (unsigned u)"
.br
.ti -1c
.RI "bool \fBInt64\fP (\fBint64_t\fP i)"
.br
.ti -1c
.RI "bool \fBUint64\fP (\fBuint64_t\fP u)"
.br
.ti -1c
.RI "bool \fBDouble\fP (double d)"
.br
.ti -1c
.RI "bool \fBRawNumber\fP (const char *str, \fBSizeType\fP length, bool copy)"
.br
.ti -1c
.RI "bool \fBString\fP (const char *str, \fBSizeType\fP length, bool copy)"
.br
.ti -1c
.RI "bool \fBStartObject\fP ()"
.br
.ti -1c
.RI "bool \fBKey\fP (const char *str, \fBSizeType\fP length, bool copy)"
.br
.ti -1c
.RI "bool \fBEndObject\fP (\fBSizeType\fP memberCount)"
.br
.ti -1c
.RI "bool \fBStartArray\fP ()"
.br
.ti -1c
.RI "bool \fBEndArray\fP (\fBSizeType\fP elementCount)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "const char * \fBtype\fP"
.br
.ti -1c
.RI "std::string \fBdata\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBMyHandler\fP (const \fBMyHandler\fP &noCopyConstruction)"
.br
.ti -1c
.RI "\fBMyHandler\fP & \fBoperator=\fP (const \fBMyHandler\fP &noAssignment)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "MyHandler::MyHandler ()\fC [inline]\fP"

.SS "MyHandler::MyHandler (const \fBMyHandler\fP & noCopyConstruction)\fC [private]\fP"

.SH "Member Function Documentation"
.PP 
.SS "bool MyHandler::Bool (bool b)\fC [inline]\fP"

.SS "bool MyHandler::Bool (bool b)\fC [inline]\fP"

.SS "bool MyHandler::Double (double d)\fC [inline]\fP"

.SS "bool MyHandler::Double (double d)\fC [inline]\fP"

.SS "bool MyHandler::EndArray (\fBSizeType\fP elementCount)\fC [inline]\fP"

.SS "bool MyHandler::EndArray (\fBSizeType\fP elementCount)\fC [inline]\fP"

.SS "bool MyHandler::EndObject (\fBSizeType\fP memberCount)\fC [inline]\fP"

.SS "bool MyHandler::EndObject (\fBSizeType\fP memberCount)\fC [inline]\fP"

.SS "bool MyHandler::Int (int i)\fC [inline]\fP"

.SS "bool MyHandler::Int (int i)\fC [inline]\fP"

.SS "bool MyHandler::Int64 (\fBint64_t\fP i)\fC [inline]\fP"

.SS "bool MyHandler::Int64 (\fBint64_t\fP i)\fC [inline]\fP"

.SS "bool MyHandler::Key (const char * str, \fBSizeType\fP length, bool copy)\fC [inline]\fP"

.SS "bool MyHandler::Key (const char * str, \fBSizeType\fP length, bool)\fC [inline]\fP"

.SS "bool MyHandler::Null ()\fC [inline]\fP"

.SS "bool MyHandler::Null ()\fC [inline]\fP"

.SS "\fBMyHandler\fP & MyHandler::operator= (const \fBMyHandler\fP & noAssignment)\fC [private]\fP"

.SS "bool MyHandler::RawNumber (const char * str, \fBSizeType\fP length, bool copy)\fC [inline]\fP"

.SS "bool MyHandler::RawNumber (const char * str, \fBSizeType\fP length, bool)\fC [inline]\fP"

.SS "bool MyHandler::StartArray ()\fC [inline]\fP"

.SS "bool MyHandler::StartArray ()\fC [inline]\fP"

.SS "bool MyHandler::StartObject ()\fC [inline]\fP"

.SS "bool MyHandler::StartObject ()\fC [inline]\fP"

.SS "bool MyHandler::String (const char * str, \fBSizeType\fP length, bool copy)\fC [inline]\fP"

.SS "bool MyHandler::String (const char * str, \fBSizeType\fP length, bool)\fC [inline]\fP"

.SS "bool MyHandler::Uint (unsigned u)\fC [inline]\fP"

.SS "bool MyHandler::Uint (unsigned u)\fC [inline]\fP"

.SS "bool MyHandler::Uint64 (\fBuint64_t\fP u)\fC [inline]\fP"

.SS "bool MyHandler::Uint64 (\fBuint64_t\fP u)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "std::string MyHandler::data"

.SS "const char* MyHandler::type"


.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
