.TH "src/rapidjson/include/rapidjson/msinttypes/inttypes.h" 3 "Fri Jan 14 2022" "Version 1.0.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/rapidjson/include/rapidjson/msinttypes/inttypes.h
.SH SYNOPSIS
.br
.PP
\fC#include 'stdint\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBimaxdiv_t\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBPRId8\fP   'd'"
.br
.ti -1c
.RI "#define \fBPRIi8\fP   'i'"
.br
.ti -1c
.RI "#define \fBPRIdLEAST8\fP   'd'"
.br
.ti -1c
.RI "#define \fBPRIiLEAST8\fP   'i'"
.br
.ti -1c
.RI "#define \fBPRIdFAST8\fP   'd'"
.br
.ti -1c
.RI "#define \fBPRIiFAST8\fP   'i'"
.br
.ti -1c
.RI "#define \fBPRId16\fP   'hd'"
.br
.ti -1c
.RI "#define \fBPRIi16\fP   'hi'"
.br
.ti -1c
.RI "#define \fBPRIdLEAST16\fP   'hd'"
.br
.ti -1c
.RI "#define \fBPRIiLEAST16\fP   'hi'"
.br
.ti -1c
.RI "#define \fBPRIdFAST16\fP   'hd'"
.br
.ti -1c
.RI "#define \fBPRIiFAST16\fP   'hi'"
.br
.ti -1c
.RI "#define \fBPRId32\fP   'I32d'"
.br
.ti -1c
.RI "#define \fBPRIi32\fP   'I32i'"
.br
.ti -1c
.RI "#define \fBPRIdLEAST32\fP   'I32d'"
.br
.ti -1c
.RI "#define \fBPRIiLEAST32\fP   'I32i'"
.br
.ti -1c
.RI "#define \fBPRIdFAST32\fP   'I32d'"
.br
.ti -1c
.RI "#define \fBPRIiFAST32\fP   'I32i'"
.br
.ti -1c
.RI "#define \fBPRId64\fP   'I64d'"
.br
.ti -1c
.RI "#define \fBPRIi64\fP   'I64i'"
.br
.ti -1c
.RI "#define \fBPRIdLEAST64\fP   'I64d'"
.br
.ti -1c
.RI "#define \fBPRIiLEAST64\fP   'I64i'"
.br
.ti -1c
.RI "#define \fBPRIdFAST64\fP   'I64d'"
.br
.ti -1c
.RI "#define \fBPRIiFAST64\fP   'I64i'"
.br
.ti -1c
.RI "#define \fBPRIdMAX\fP   'I64d'"
.br
.ti -1c
.RI "#define \fBPRIiMAX\fP   'I64i'"
.br
.ti -1c
.RI "#define \fBPRIdPTR\fP   'Id'"
.br
.ti -1c
.RI "#define \fBPRIiPTR\fP   'Ii'"
.br
.ti -1c
.RI "#define \fBPRIo8\fP   'o'"
.br
.ti -1c
.RI "#define \fBPRIu8\fP   'u'"
.br
.ti -1c
.RI "#define \fBPRIx8\fP   'x'"
.br
.ti -1c
.RI "#define \fBPRIX8\fP   'X'"
.br
.ti -1c
.RI "#define \fBPRIoLEAST8\fP   'o'"
.br
.ti -1c
.RI "#define \fBPRIuLEAST8\fP   'u'"
.br
.ti -1c
.RI "#define \fBPRIxLEAST8\fP   'x'"
.br
.ti -1c
.RI "#define \fBPRIXLEAST8\fP   'X'"
.br
.ti -1c
.RI "#define \fBPRIoFAST8\fP   'o'"
.br
.ti -1c
.RI "#define \fBPRIuFAST8\fP   'u'"
.br
.ti -1c
.RI "#define \fBPRIxFAST8\fP   'x'"
.br
.ti -1c
.RI "#define \fBPRIXFAST8\fP   'X'"
.br
.ti -1c
.RI "#define \fBPRIo16\fP   'ho'"
.br
.ti -1c
.RI "#define \fBPRIu16\fP   'hu'"
.br
.ti -1c
.RI "#define \fBPRIx16\fP   'hx'"
.br
.ti -1c
.RI "#define \fBPRIX16\fP   'hX'"
.br
.ti -1c
.RI "#define \fBPRIoLEAST16\fP   'ho'"
.br
.ti -1c
.RI "#define \fBPRIuLEAST16\fP   'hu'"
.br
.ti -1c
.RI "#define \fBPRIxLEAST16\fP   'hx'"
.br
.ti -1c
.RI "#define \fBPRIXLEAST16\fP   'hX'"
.br
.ti -1c
.RI "#define \fBPRIoFAST16\fP   'ho'"
.br
.ti -1c
.RI "#define \fBPRIuFAST16\fP   'hu'"
.br
.ti -1c
.RI "#define \fBPRIxFAST16\fP   'hx'"
.br
.ti -1c
.RI "#define \fBPRIXFAST16\fP   'hX'"
.br
.ti -1c
.RI "#define \fBPRIo32\fP   'I32o'"
.br
.ti -1c
.RI "#define \fBPRIu32\fP   'I32u'"
.br
.ti -1c
.RI "#define \fBPRIx32\fP   'I32x'"
.br
.ti -1c
.RI "#define \fBPRIX32\fP   'I32X'"
.br
.ti -1c
.RI "#define \fBPRIoLEAST32\fP   'I32o'"
.br
.ti -1c
.RI "#define \fBPRIuLEAST32\fP   'I32u'"
.br
.ti -1c
.RI "#define \fBPRIxLEAST32\fP   'I32x'"
.br
.ti -1c
.RI "#define \fBPRIXLEAST32\fP   'I32X'"
.br
.ti -1c
.RI "#define \fBPRIoFAST32\fP   'I32o'"
.br
.ti -1c
.RI "#define \fBPRIuFAST32\fP   'I32u'"
.br
.ti -1c
.RI "#define \fBPRIxFAST32\fP   'I32x'"
.br
.ti -1c
.RI "#define \fBPRIXFAST32\fP   'I32X'"
.br
.ti -1c
.RI "#define \fBPRIo64\fP   'I64o'"
.br
.ti -1c
.RI "#define \fBPRIu64\fP   'I64u'"
.br
.ti -1c
.RI "#define \fBPRIx64\fP   'I64x'"
.br
.ti -1c
.RI "#define \fBPRIX64\fP   'I64X'"
.br
.ti -1c
.RI "#define \fBPRIoLEAST64\fP   'I64o'"
.br
.ti -1c
.RI "#define \fBPRIuLEAST64\fP   'I64u'"
.br
.ti -1c
.RI "#define \fBPRIxLEAST64\fP   'I64x'"
.br
.ti -1c
.RI "#define \fBPRIXLEAST64\fP   'I64X'"
.br
.ti -1c
.RI "#define \fBPRIoFAST64\fP   'I64o'"
.br
.ti -1c
.RI "#define \fBPRIuFAST64\fP   'I64u'"
.br
.ti -1c
.RI "#define \fBPRIxFAST64\fP   'I64x'"
.br
.ti -1c
.RI "#define \fBPRIXFAST64\fP   'I64X'"
.br
.ti -1c
.RI "#define \fBPRIoMAX\fP   'I64o'"
.br
.ti -1c
.RI "#define \fBPRIuMAX\fP   'I64u'"
.br
.ti -1c
.RI "#define \fBPRIxMAX\fP   'I64x'"
.br
.ti -1c
.RI "#define \fBPRIXMAX\fP   'I64X'"
.br
.ti -1c
.RI "#define \fBPRIoPTR\fP   'Io'"
.br
.ti -1c
.RI "#define \fBPRIuPTR\fP   'Iu'"
.br
.ti -1c
.RI "#define \fBPRIxPTR\fP   'Ix'"
.br
.ti -1c
.RI "#define \fBPRIXPTR\fP   'IX'"
.br
.ti -1c
.RI "#define \fBSCNd8\fP   'd'"
.br
.ti -1c
.RI "#define \fBSCNi8\fP   'i'"
.br
.ti -1c
.RI "#define \fBSCNdLEAST8\fP   'd'"
.br
.ti -1c
.RI "#define \fBSCNiLEAST8\fP   'i'"
.br
.ti -1c
.RI "#define \fBSCNdFAST8\fP   'd'"
.br
.ti -1c
.RI "#define \fBSCNiFAST8\fP   'i'"
.br
.ti -1c
.RI "#define \fBSCNd16\fP   'hd'"
.br
.ti -1c
.RI "#define \fBSCNi16\fP   'hi'"
.br
.ti -1c
.RI "#define \fBSCNdLEAST16\fP   'hd'"
.br
.ti -1c
.RI "#define \fBSCNiLEAST16\fP   'hi'"
.br
.ti -1c
.RI "#define \fBSCNdFAST16\fP   'hd'"
.br
.ti -1c
.RI "#define \fBSCNiFAST16\fP   'hi'"
.br
.ti -1c
.RI "#define \fBSCNd32\fP   'ld'"
.br
.ti -1c
.RI "#define \fBSCNi32\fP   'li'"
.br
.ti -1c
.RI "#define \fBSCNdLEAST32\fP   'ld'"
.br
.ti -1c
.RI "#define \fBSCNiLEAST32\fP   'li'"
.br
.ti -1c
.RI "#define \fBSCNdFAST32\fP   'ld'"
.br
.ti -1c
.RI "#define \fBSCNiFAST32\fP   'li'"
.br
.ti -1c
.RI "#define \fBSCNd64\fP   'I64d'"
.br
.ti -1c
.RI "#define \fBSCNi64\fP   'I64i'"
.br
.ti -1c
.RI "#define \fBSCNdLEAST64\fP   'I64d'"
.br
.ti -1c
.RI "#define \fBSCNiLEAST64\fP   'I64i'"
.br
.ti -1c
.RI "#define \fBSCNdFAST64\fP   'I64d'"
.br
.ti -1c
.RI "#define \fBSCNiFAST64\fP   'I64i'"
.br
.ti -1c
.RI "#define \fBSCNdMAX\fP   'I64d'"
.br
.ti -1c
.RI "#define \fBSCNiMAX\fP   'I64i'"
.br
.ti -1c
.RI "#define \fBSCNdPTR\fP   'ld'"
.br
.ti -1c
.RI "#define \fBSCNiPTR\fP   'li'"
.br
.ti -1c
.RI "#define \fBSCNo8\fP   'o'"
.br
.ti -1c
.RI "#define \fBSCNu8\fP   'u'"
.br
.ti -1c
.RI "#define \fBSCNx8\fP   'x'"
.br
.ti -1c
.RI "#define \fBSCNX8\fP   'X'"
.br
.ti -1c
.RI "#define \fBSCNoLEAST8\fP   'o'"
.br
.ti -1c
.RI "#define \fBSCNuLEAST8\fP   'u'"
.br
.ti -1c
.RI "#define \fBSCNxLEAST8\fP   'x'"
.br
.ti -1c
.RI "#define \fBSCNXLEAST8\fP   'X'"
.br
.ti -1c
.RI "#define \fBSCNoFAST8\fP   'o'"
.br
.ti -1c
.RI "#define \fBSCNuFAST8\fP   'u'"
.br
.ti -1c
.RI "#define \fBSCNxFAST8\fP   'x'"
.br
.ti -1c
.RI "#define \fBSCNXFAST8\fP   'X'"
.br
.ti -1c
.RI "#define \fBSCNo16\fP   'ho'"
.br
.ti -1c
.RI "#define \fBSCNu16\fP   'hu'"
.br
.ti -1c
.RI "#define \fBSCNx16\fP   'hx'"
.br
.ti -1c
.RI "#define \fBSCNX16\fP   'hX'"
.br
.ti -1c
.RI "#define \fBSCNoLEAST16\fP   'ho'"
.br
.ti -1c
.RI "#define \fBSCNuLEAST16\fP   'hu'"
.br
.ti -1c
.RI "#define \fBSCNxLEAST16\fP   'hx'"
.br
.ti -1c
.RI "#define \fBSCNXLEAST16\fP   'hX'"
.br
.ti -1c
.RI "#define \fBSCNoFAST16\fP   'ho'"
.br
.ti -1c
.RI "#define \fBSCNuFAST16\fP   'hu'"
.br
.ti -1c
.RI "#define \fBSCNxFAST16\fP   'hx'"
.br
.ti -1c
.RI "#define \fBSCNXFAST16\fP   'hX'"
.br
.ti -1c
.RI "#define \fBSCNo32\fP   'lo'"
.br
.ti -1c
.RI "#define \fBSCNu32\fP   'lu'"
.br
.ti -1c
.RI "#define \fBSCNx32\fP   'lx'"
.br
.ti -1c
.RI "#define \fBSCNX32\fP   'lX'"
.br
.ti -1c
.RI "#define \fBSCNoLEAST32\fP   'lo'"
.br
.ti -1c
.RI "#define \fBSCNuLEAST32\fP   'lu'"
.br
.ti -1c
.RI "#define \fBSCNxLEAST32\fP   'lx'"
.br
.ti -1c
.RI "#define \fBSCNXLEAST32\fP   'lX'"
.br
.ti -1c
.RI "#define \fBSCNoFAST32\fP   'lo'"
.br
.ti -1c
.RI "#define \fBSCNuFAST32\fP   'lu'"
.br
.ti -1c
.RI "#define \fBSCNxFAST32\fP   'lx'"
.br
.ti -1c
.RI "#define \fBSCNXFAST32\fP   'lX'"
.br
.ti -1c
.RI "#define \fBSCNo64\fP   'I64o'"
.br
.ti -1c
.RI "#define \fBSCNu64\fP   'I64u'"
.br
.ti -1c
.RI "#define \fBSCNx64\fP   'I64x'"
.br
.ti -1c
.RI "#define \fBSCNX64\fP   'I64X'"
.br
.ti -1c
.RI "#define \fBSCNoLEAST64\fP   'I64o'"
.br
.ti -1c
.RI "#define \fBSCNuLEAST64\fP   'I64u'"
.br
.ti -1c
.RI "#define \fBSCNxLEAST64\fP   'I64x'"
.br
.ti -1c
.RI "#define \fBSCNXLEAST64\fP   'I64X'"
.br
.ti -1c
.RI "#define \fBSCNoFAST64\fP   'I64o'"
.br
.ti -1c
.RI "#define \fBSCNuFAST64\fP   'I64u'"
.br
.ti -1c
.RI "#define \fBSCNxFAST64\fP   'I64x'"
.br
.ti -1c
.RI "#define \fBSCNXFAST64\fP   'I64X'"
.br
.ti -1c
.RI "#define \fBSCNoMAX\fP   'I64o'"
.br
.ti -1c
.RI "#define \fBSCNuMAX\fP   'I64u'"
.br
.ti -1c
.RI "#define \fBSCNxMAX\fP   'I64x'"
.br
.ti -1c
.RI "#define \fBSCNXMAX\fP   'I64X'"
.br
.ti -1c
.RI "#define \fBSCNoPTR\fP   'lo'"
.br
.ti -1c
.RI "#define \fBSCNuPTR\fP   'lu'"
.br
.ti -1c
.RI "#define \fBSCNxPTR\fP   'lx'"
.br
.ti -1c
.RI "#define \fBSCNXPTR\fP   'lX'"
.br
.ti -1c
.RI "#define \fBimaxabs\fP   _abs64"
.br
.ti -1c
.RI "#define \fBstrtoimax\fP   _strtoi64"
.br
.ti -1c
.RI "#define \fBstrtoumax\fP   _strtoui64"
.br
.ti -1c
.RI "#define \fBwcstoimax\fP   _wcstoi64"
.br
.ti -1c
.RI "#define \fBwcstoumax\fP   _wcstoui64"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "_inline \fBimaxdiv_t\fP __cdecl \fBimaxdiv\fP (\fBintmax_t\fP numer, \fBintmax_t\fP denom)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define imaxabs   _abs64"

.SS "#define PRId16   'hd'"

.SS "#define PRId32   'I32d'"

.SS "#define PRId64   'I64d'"

.SS "#define PRId8   'd'"

.SS "#define PRIdFAST16   'hd'"

.SS "#define PRIdFAST32   'I32d'"

.SS "#define PRIdFAST64   'I64d'"

.SS "#define PRIdFAST8   'd'"

.SS "#define PRIdLEAST16   'hd'"

.SS "#define PRIdLEAST32   'I32d'"

.SS "#define PRIdLEAST64   'I64d'"

.SS "#define PRIdLEAST8   'd'"

.SS "#define PRIdMAX   'I64d'"

.SS "#define PRIdPTR   'Id'"

.SS "#define PRIi16   'hi'"

.SS "#define PRIi32   'I32i'"

.SS "#define PRIi64   'I64i'"

.SS "#define PRIi8   'i'"

.SS "#define PRIiFAST16   'hi'"

.SS "#define PRIiFAST32   'I32i'"

.SS "#define PRIiFAST64   'I64i'"

.SS "#define PRIiFAST8   'i'"

.SS "#define PRIiLEAST16   'hi'"

.SS "#define PRIiLEAST32   'I32i'"

.SS "#define PRIiLEAST64   'I64i'"

.SS "#define PRIiLEAST8   'i'"

.SS "#define PRIiMAX   'I64i'"

.SS "#define PRIiPTR   'Ii'"

.SS "#define PRIo16   'ho'"

.SS "#define PRIo32   'I32o'"

.SS "#define PRIo64   'I64o'"

.SS "#define PRIo8   'o'"

.SS "#define PRIoFAST16   'ho'"

.SS "#define PRIoFAST32   'I32o'"

.SS "#define PRIoFAST64   'I64o'"

.SS "#define PRIoFAST8   'o'"

.SS "#define PRIoLEAST16   'ho'"

.SS "#define PRIoLEAST32   'I32o'"

.SS "#define PRIoLEAST64   'I64o'"

.SS "#define PRIoLEAST8   'o'"

.SS "#define PRIoMAX   'I64o'"

.SS "#define PRIoPTR   'Io'"

.SS "#define PRIu16   'hu'"

.SS "#define PRIu32   'I32u'"

.SS "#define PRIu64   'I64u'"

.SS "#define PRIu8   'u'"

.SS "#define PRIuFAST16   'hu'"

.SS "#define PRIuFAST32   'I32u'"

.SS "#define PRIuFAST64   'I64u'"

.SS "#define PRIuFAST8   'u'"

.SS "#define PRIuLEAST16   'hu'"

.SS "#define PRIuLEAST32   'I32u'"

.SS "#define PRIuLEAST64   'I64u'"

.SS "#define PRIuLEAST8   'u'"

.SS "#define PRIuMAX   'I64u'"

.SS "#define PRIuPTR   'Iu'"

.SS "#define PRIx16   'hx'"

.SS "#define PRIX16   'hX'"

.SS "#define PRIx32   'I32x'"

.SS "#define PRIX32   'I32X'"

.SS "#define PRIx64   'I64x'"

.SS "#define PRIX64   'I64X'"

.SS "#define PRIx8   'x'"

.SS "#define PRIX8   'X'"

.SS "#define PRIxFAST16   'hx'"

.SS "#define PRIXFAST16   'hX'"

.SS "#define PRIxFAST32   'I32x'"

.SS "#define PRIXFAST32   'I32X'"

.SS "#define PRIxFAST64   'I64x'"

.SS "#define PRIXFAST64   'I64X'"

.SS "#define PRIxFAST8   'x'"

.SS "#define PRIXFAST8   'X'"

.SS "#define PRIxLEAST16   'hx'"

.SS "#define PRIXLEAST16   'hX'"

.SS "#define PRIxLEAST32   'I32x'"

.SS "#define PRIXLEAST32   'I32X'"

.SS "#define PRIxLEAST64   'I64x'"

.SS "#define PRIXLEAST64   'I64X'"

.SS "#define PRIxLEAST8   'x'"

.SS "#define PRIXLEAST8   'X'"

.SS "#define PRIxMAX   'I64x'"

.SS "#define PRIXMAX   'I64X'"

.SS "#define PRIxPTR   'Ix'"

.SS "#define PRIXPTR   'IX'"

.SS "#define SCNd16   'hd'"

.SS "#define SCNd32   'ld'"

.SS "#define SCNd64   'I64d'"

.SS "#define SCNd8   'd'"

.SS "#define SCNdFAST16   'hd'"

.SS "#define SCNdFAST32   'ld'"

.SS "#define SCNdFAST64   'I64d'"

.SS "#define SCNdFAST8   'd'"

.SS "#define SCNdLEAST16   'hd'"

.SS "#define SCNdLEAST32   'ld'"

.SS "#define SCNdLEAST64   'I64d'"

.SS "#define SCNdLEAST8   'd'"

.SS "#define SCNdMAX   'I64d'"

.SS "#define SCNdPTR   'ld'"

.SS "#define SCNi16   'hi'"

.SS "#define SCNi32   'li'"

.SS "#define SCNi64   'I64i'"

.SS "#define SCNi8   'i'"

.SS "#define SCNiFAST16   'hi'"

.SS "#define SCNiFAST32   'li'"

.SS "#define SCNiFAST64   'I64i'"

.SS "#define SCNiFAST8   'i'"

.SS "#define SCNiLEAST16   'hi'"

.SS "#define SCNiLEAST32   'li'"

.SS "#define SCNiLEAST64   'I64i'"

.SS "#define SCNiLEAST8   'i'"

.SS "#define SCNiMAX   'I64i'"

.SS "#define SCNiPTR   'li'"

.SS "#define SCNo16   'ho'"

.SS "#define SCNo32   'lo'"

.SS "#define SCNo64   'I64o'"

.SS "#define SCNo8   'o'"

.SS "#define SCNoFAST16   'ho'"

.SS "#define SCNoFAST32   'lo'"

.SS "#define SCNoFAST64   'I64o'"

.SS "#define SCNoFAST8   'o'"

.SS "#define SCNoLEAST16   'ho'"

.SS "#define SCNoLEAST32   'lo'"

.SS "#define SCNoLEAST64   'I64o'"

.SS "#define SCNoLEAST8   'o'"

.SS "#define SCNoMAX   'I64o'"

.SS "#define SCNoPTR   'lo'"

.SS "#define SCNu16   'hu'"

.SS "#define SCNu32   'lu'"

.SS "#define SCNu64   'I64u'"

.SS "#define SCNu8   'u'"

.SS "#define SCNuFAST16   'hu'"

.SS "#define SCNuFAST32   'lu'"

.SS "#define SCNuFAST64   'I64u'"

.SS "#define SCNuFAST8   'u'"

.SS "#define SCNuLEAST16   'hu'"

.SS "#define SCNuLEAST32   'lu'"

.SS "#define SCNuLEAST64   'I64u'"

.SS "#define SCNuLEAST8   'u'"

.SS "#define SCNuMAX   'I64u'"

.SS "#define SCNuPTR   'lu'"

.SS "#define SCNx16   'hx'"

.SS "#define SCNX16   'hX'"

.SS "#define SCNx32   'lx'"

.SS "#define SCNX32   'lX'"

.SS "#define SCNx64   'I64x'"

.SS "#define SCNX64   'I64X'"

.SS "#define SCNx8   'x'"

.SS "#define SCNX8   'X'"

.SS "#define SCNxFAST16   'hx'"

.SS "#define SCNXFAST16   'hX'"

.SS "#define SCNxFAST32   'lx'"

.SS "#define SCNXFAST32   'lX'"

.SS "#define SCNxFAST64   'I64x'"

.SS "#define SCNXFAST64   'I64X'"

.SS "#define SCNxFAST8   'x'"

.SS "#define SCNXFAST8   'X'"

.SS "#define SCNxLEAST16   'hx'"

.SS "#define SCNXLEAST16   'hX'"

.SS "#define SCNxLEAST32   'lx'"

.SS "#define SCNXLEAST32   'lX'"

.SS "#define SCNxLEAST64   'I64x'"

.SS "#define SCNXLEAST64   'I64X'"

.SS "#define SCNxLEAST8   'x'"

.SS "#define SCNXLEAST8   'X'"

.SS "#define SCNxMAX   'I64x'"

.SS "#define SCNXMAX   'I64X'"

.SS "#define SCNxPTR   'lx'"

.SS "#define SCNXPTR   'lX'"

.SS "#define strtoimax   _strtoi64"

.SS "#define strtoumax   _strtoui64"

.SS "#define wcstoimax   _wcstoi64"

.SS "#define wcstoumax   _wcstoui64"

.SH "Function Documentation"
.PP 
.SS "_inline \fBimaxdiv_t\fP __cdecl imaxdiv (\fBintmax_t\fP numer, \fBintmax_t\fP denom)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
