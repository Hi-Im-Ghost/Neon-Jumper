.TH "GenericStreamWrapper< InputStream, Encoding >" 3 "Fri Jan 14 2022" "Version 1.0.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GenericStreamWrapper< InputStream, Encoding > \- A Stream Wrapper\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <stream\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef Encoding::Ch \fBCh\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGenericStreamWrapper\fP (InputStream &is)"
.br
.ti -1c
.RI "\fBCh\fP \fBPeek\fP () const"
.br
.ti -1c
.RI "\fBCh\fP \fBTake\fP ()"
.br
.ti -1c
.RI "size_t \fBTell\fP ()"
.br
.ti -1c
.RI "\fBCh\fP * \fBPutBegin\fP ()"
.br
.ti -1c
.RI "void \fBPut\fP (\fBCh\fP ch)"
.br
.ti -1c
.RI "void \fBFlush\fP ()"
.br
.ti -1c
.RI "size_t \fBPutEnd\fP (\fBCh\fP *ch)"
.br
.ti -1c
.RI "const \fBCh\fP * \fBPeek4\fP () const"
.br
.ti -1c
.RI "\fBUTFType\fP \fBGetType\fP () const"
.br
.ti -1c
.RI "bool \fBHasBOM\fP () const"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "InputStream & \fBis_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename InputStream, typename \fBEncoding\fP = UTF8<>>
.br
class GenericStreamWrapper< InputStream, Encoding >"A Stream Wrapper\&. 

\\tThis string stream is a wrapper for any stream by just forwarding any \\treceived message to the origin stream\&. 
.PP
\fBNote\fP
.RS 4
implements Stream concept 
.RE
.PP

.SH "Member Typedef Documentation"
.PP 
.SS "template<typename InputStream , typename \fBEncoding\fP  = UTF8<>> typedef Encoding::Ch \fBGenericStreamWrapper\fP< InputStream, \fBEncoding\fP >::Ch"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename InputStream , typename \fBEncoding\fP  = UTF8<>> \fBGenericStreamWrapper\fP< InputStream, \fBEncoding\fP >\fB::GenericStreamWrapper\fP (InputStream & is)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename InputStream , typename \fBEncoding\fP  = UTF8<>> void \fBGenericStreamWrapper\fP< InputStream, \fBEncoding\fP >::Flush ()\fC [inline]\fP"

.SS "template<typename InputStream , typename \fBEncoding\fP  = UTF8<>> \fBUTFType\fP \fBGenericStreamWrapper\fP< InputStream, \fBEncoding\fP >::GetType () const\fC [inline]\fP"

.SS "template<typename InputStream , typename \fBEncoding\fP  = UTF8<>> bool \fBGenericStreamWrapper\fP< InputStream, \fBEncoding\fP >::HasBOM () const\fC [inline]\fP"

.SS "template<typename InputStream , typename \fBEncoding\fP  = UTF8<>> \fBCh\fP \fBGenericStreamWrapper\fP< InputStream, \fBEncoding\fP >::Peek () const\fC [inline]\fP"

.SS "template<typename InputStream , typename \fBEncoding\fP  = UTF8<>> const \fBCh\fP * \fBGenericStreamWrapper\fP< InputStream, \fBEncoding\fP >::Peek4 () const\fC [inline]\fP"

.SS "template<typename InputStream , typename \fBEncoding\fP  = UTF8<>> void \fBGenericStreamWrapper\fP< InputStream, \fBEncoding\fP >::Put (\fBCh\fP ch)\fC [inline]\fP"

.SS "template<typename InputStream , typename \fBEncoding\fP  = UTF8<>> \fBCh\fP * \fBGenericStreamWrapper\fP< InputStream, \fBEncoding\fP >::PutBegin ()\fC [inline]\fP"

.SS "template<typename InputStream , typename \fBEncoding\fP  = UTF8<>> size_t \fBGenericStreamWrapper\fP< InputStream, \fBEncoding\fP >::PutEnd (\fBCh\fP * ch)\fC [inline]\fP"

.SS "template<typename InputStream , typename \fBEncoding\fP  = UTF8<>> \fBCh\fP \fBGenericStreamWrapper\fP< InputStream, \fBEncoding\fP >::Take ()\fC [inline]\fP"

.SS "template<typename InputStream , typename \fBEncoding\fP  = UTF8<>> size_t \fBGenericStreamWrapper\fP< InputStream, \fBEncoding\fP >::Tell ()\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<typename InputStream , typename \fBEncoding\fP  = UTF8<>> InputStream& \fBGenericStreamWrapper\fP< InputStream, \fBEncoding\fP >::is_\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
