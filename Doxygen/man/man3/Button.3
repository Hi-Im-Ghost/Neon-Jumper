.TH "Button" 3 "Fri Jan 21 2022" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Button
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Button\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBButtonState\fP { \fBIDLE\fP, \fBHOVER\fP, \fBACTIVE\fP }"
.br
.RI "Typ wyliczeniowy dla stanów przycisków\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBButton\fP (const std::string &\fBtext\fP, float posX, float posY, float \fBwidth\fP, float \fBheight\fP)"
.br
.RI "Konstruktor który tworzy przycisk na wskazanej w parametrach pozycji x i y oraz wysokości i szerokości z tekstem\&. "
.ti -1c
.RI "bool \fBintersects\fP (const sf::Shape &shape)"
.br
.ti -1c
.RI "void \fBsetState\fP (\fBButtonState\fP newState)"
.br
.RI "Ustawia stan przycisku\&. "
.ti -1c
.RI "\fBButtonState\fP \fBgetState\fP ()"
.br
.RI "Zwraca stan przycisku\&. "
.ti -1c
.RI "void \fBrender\fP (sf::RenderTarget &window)"
.br
.RI "Przenosi na ekran przycisk\&. "
.ti -1c
.RI "void \fBupdate\fP (const sf::RectangleShape &cursor)"
.br
.RI "Służy do aktualizacji stanu przycisku kursorem myszy\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "sf::Color \fBcolorIdle\fP"
.br
.RI "Przechowuje kolor podstawowy\&. "
.ti -1c
.RI "sf::Color \fBcolorHover\fP"
.br
.RI "Przechowuje kolor interakcji\&. "
.ti -1c
.RI "sf::Color \fBcolorActive\fP"
.br
.RI "Przechowuje kolor aktywacji\&. "
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBinitText\fP (const std::string &\fBtext\fP)"
.br
.RI "Metoda służąca do inicjalizacji tekstu przekazanego przez parametr\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "sf::RectangleShape \fBbuttonShape\fP"
.br
.RI "Zmienna reprezentujaca kształt prostokąta dla przycisków\&. "
.ti -1c
.RI "sf::Text \fBtext\fP"
.br
.RI "Zmienna przechowujaca tekst\&. "
.ti -1c
.RI "sf::Font \fBfont\fP"
.br
.RI "Zmienna przechowująca informację o rodzaju czcionki\&. "
.ti -1c
.RI "float \fBwidth\fP"
.br
.RI "Zmienna przechowująca szerokość przycisku\&. "
.ti -1c
.RI "float \fBheight\fP"
.br
.RI "Zmienna przechowujaca wysokość przycisku\&. "
.ti -1c
.RI "\fBButtonState\fP \fBstate\fP"
.br
.RI "Obiekt dla typu wyliczeniowego reprezentujacy stan przycisku\&. "
.in -1c
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBButton::ButtonState\fP"

.PP
Typ wyliczeniowy dla stanów przycisków\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIIDLE \fP\fP
.TP
\fB\fIHOVER \fP\fP
.TP
\fB\fIACTIVE \fP\fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Button::Button (const std::string & text, float posX, float posY, float width, float height)"

.PP
Konstruktor który tworzy przycisk na wskazanej w parametrach pozycji x i y oraz wysokości i szerokości z tekstem\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBButtonState\fP Button::getState ()\fC [inline]\fP"

.PP
Zwraca stan przycisku\&. 
.SS "void Button::initText (const std::string & text)\fC [private]\fP"

.PP
Metoda służąca do inicjalizacji tekstu przekazanego przez parametr\&. 
.SS "bool Button::intersects (const sf::Shape & shape)"

.SS "void Button::render (sf::RenderTarget & window)"

.PP
Przenosi na ekran przycisk\&. 
.SS "void Button::setState (\fBButtonState\fP newState)"

.PP
Ustawia stan przycisku\&. 
.SS "void Button::update (const sf::RectangleShape & cursor)"

.PP
Służy do aktualizacji stanu przycisku kursorem myszy\&. 
.SH "Member Data Documentation"
.PP 
.SS "sf::RectangleShape Button::buttonShape\fC [private]\fP"

.PP
Zmienna reprezentujaca kształt prostokąta dla przycisków\&. 
.SS "sf::Color Button::colorActive"

.PP
Przechowuje kolor aktywacji\&. 
.SS "sf::Color Button::colorHover"

.PP
Przechowuje kolor interakcji\&. 
.SS "sf::Color Button::colorIdle"

.PP
Przechowuje kolor podstawowy\&. 
.SS "sf::Font Button::font\fC [private]\fP"

.PP
Zmienna przechowująca informację o rodzaju czcionki\&. 
.SS "float Button::height\fC [private]\fP"

.PP
Zmienna przechowujaca wysokość przycisku\&. 
.SS "\fBButtonState\fP Button::state\fC [private]\fP"

.PP
Obiekt dla typu wyliczeniowego reprezentujacy stan przycisku\&. 
.SS "sf::Text Button::text\fC [private]\fP"

.PP
Zmienna przechowujaca tekst\&. 
.SS "float Button::width\fC [private]\fP"

.PP
Zmienna przechowująca szerokość przycisku\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
