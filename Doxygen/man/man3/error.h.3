.TH "src/rapidjson/include/rapidjson/error/error.h" 3 "Fri Jan 21 2022" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/rapidjson/include/rapidjson/error/error.h
.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./rapidjson\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBParseResult\fP"
.br
.RI "Result of parsing (wraps ParseErrorCode) "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBRAPIDJSON_ERROR_CHARTYPE\fP   char"
.br
.RI "Character type of error messages\&. "
.ti -1c
.RI "#define \fBRAPIDJSON_ERROR_STRING\fP(x)   x"
.br
.RI "Macro for converting string literial to \fBRAPIDJSON_ERROR_CHARTYPE\fP[]\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef const \fBRAPIDJSON_ERROR_CHARTYPE\fP *(* \fBGetParseErrorFunc\fP) (\fBParseErrorCode\fP)"
.br
.RI "Function pointer type of GetParseError()\&. "
.ti -1c
.RI "typedef const \fBRAPIDJSON_ERROR_CHARTYPE\fP *(* \fBGetValidateErrorFunc\fP) (\fBValidateErrorCode\fP)"
.br
.RI "Function pointer type of GetValidateError()\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBParseErrorCode\fP { \fBkParseErrorNone\fP = 0, \fBkParseErrorDocumentEmpty\fP, \fBkParseErrorDocumentRootNotSingular\fP, \fBkParseErrorValueInvalid\fP, \fBkParseErrorObjectMissName\fP, \fBkParseErrorObjectMissColon\fP, \fBkParseErrorObjectMissCommaOrCurlyBracket\fP, \fBkParseErrorArrayMissCommaOrSquareBracket\fP, \fBkParseErrorStringUnicodeEscapeInvalidHex\fP, \fBkParseErrorStringUnicodeSurrogateInvalid\fP, \fBkParseErrorStringEscapeInvalid\fP, \fBkParseErrorStringMissQuotationMark\fP, \fBkParseErrorStringInvalidEncoding\fP, \fBkParseErrorNumberTooBig\fP, \fBkParseErrorNumberMissFraction\fP, \fBkParseErrorNumberMissExponent\fP, \fBkParseErrorTermination\fP, \fBkParseErrorUnspecificSyntaxError\fP }"
.br
.RI "Error code of parsing\&. "
.ti -1c
.RI "enum \fBValidateErrorCode\fP { \fBkValidateErrors\fP = -1, \fBkValidateErrorNone\fP = 0, \fBkValidateErrorMultipleOf\fP, \fBkValidateErrorMaximum\fP, \fBkValidateErrorExclusiveMaximum\fP, \fBkValidateErrorMinimum\fP, \fBkValidateErrorExclusiveMinimum\fP, \fBkValidateErrorMaxLength\fP, \fBkValidateErrorMinLength\fP, \fBkValidateErrorPattern\fP, \fBkValidateErrorMaxItems\fP, \fBkValidateErrorMinItems\fP, \fBkValidateErrorUniqueItems\fP, \fBkValidateErrorAdditionalItems\fP, \fBkValidateErrorMaxProperties\fP, \fBkValidateErrorMinProperties\fP, \fBkValidateErrorRequired\fP, \fBkValidateErrorAdditionalProperties\fP, \fBkValidateErrorPatternProperties\fP, \fBkValidateErrorDependencies\fP, \fBkValidateErrorEnum\fP, \fBkValidateErrorType\fP, \fBkValidateErrorOneOf\fP, \fBkValidateErrorOneOfMatch\fP, \fBkValidateErrorAllOf\fP, \fBkValidateErrorAnyOf\fP, \fBkValidateErrorNot\fP }"
.br
.RI "Error codes when validating\&. "
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
