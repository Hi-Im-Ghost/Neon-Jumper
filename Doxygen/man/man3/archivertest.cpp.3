.TH "src/rapidjson/example/archiver/archivertest.cpp" 3 "Fri Jan 14 2022" "Version 1.0.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/rapidjson/example/archiver/archivertest.cpp
.SH SYNOPSIS
.br
.PP
\fC#include 'archiver\&.h'\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <vector>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBStudent\fP"
.br
.ti -1c
.RI "struct \fBGroup\fP"
.br
.ti -1c
.RI "class \fBShape\fP"
.br
.ti -1c
.RI "class \fBCircle\fP"
.br
.ti -1c
.RI "class \fBBox\fP"
.br
.ti -1c
.RI "class \fBCanvas\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename \fBArchiver\fP > \fBArchiver\fP & \fBoperator&\fP (\fBArchiver\fP &ar, \fBStudent\fP &s)"
.br
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &os, const \fBStudent\fP &s)"
.br
.ti -1c
.RI "void \fBtest1\fP ()"
.br
.ti -1c
.RI "template<typename \fBArchiver\fP > \fBArchiver\fP & \fBoperator&\fP (\fBArchiver\fP &ar, \fBGroup\fP &g)"
.br
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &os, const \fBGroup\fP &g)"
.br
.ti -1c
.RI "void \fBtest2\fP ()"
.br
.ti -1c
.RI "template<typename \fBArchiver\fP > \fBArchiver\fP & \fBoperator&\fP (\fBArchiver\fP &ar, \fBShape\fP &s)"
.br
.ti -1c
.RI "template<typename \fBArchiver\fP > \fBArchiver\fP & \fBoperator&\fP (\fBArchiver\fP &ar, \fBCircle\fP &c)"
.br
.ti -1c
.RI "template<typename \fBArchiver\fP > \fBArchiver\fP & \fBoperator&\fP (\fBArchiver\fP &ar, \fBBox\fP &b)"
.br
.ti -1c
.RI "template<typename \fBArchiver\fP > \fBArchiver\fP & \fBoperator&\fP (\fBArchiver\fP &ar, \fBShape\fP *&shape)"
.br
.ti -1c
.RI "template<typename \fBArchiver\fP > \fBArchiver\fP & \fBoperator&\fP (\fBArchiver\fP &ar, \fBCanvas\fP &c)"
.br
.ti -1c
.RI "void \fBtest3\fP ()"
.br
.ti -1c
.RI "int \fBmain\fP ()"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int main ()"

.SS "template<typename \fBArchiver\fP > \fBArchiver\fP & operator& (\fBArchiver\fP & ar, \fBBox\fP & b)"

.SS "template<typename \fBArchiver\fP > \fBArchiver\fP & operator& (\fBArchiver\fP & ar, \fBCanvas\fP & c)"

.SS "template<typename \fBArchiver\fP > \fBArchiver\fP & operator& (\fBArchiver\fP & ar, \fBCircle\fP & c)"

.SS "template<typename \fBArchiver\fP > \fBArchiver\fP & operator& (\fBArchiver\fP & ar, \fBGroup\fP & g)"

.SS "template<typename \fBArchiver\fP > \fBArchiver\fP & operator& (\fBArchiver\fP & ar, \fBShape\fP & s)"

.SS "template<typename \fBArchiver\fP > \fBArchiver\fP & operator& (\fBArchiver\fP & ar, \fBShape\fP *& shape)"

.SS "template<typename \fBArchiver\fP > \fBArchiver\fP & operator& (\fBArchiver\fP & ar, \fBStudent\fP & s)"

.SS "std::ostream & operator<< (std::ostream & os, const \fBGroup\fP & g)"

.SS "std::ostream & operator<< (std::ostream & os, const \fBStudent\fP & s)"

.SS "void test1 ()"

.SS "void test2 ()"

.SS "void test3 ()"

.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
