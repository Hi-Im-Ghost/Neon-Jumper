.TH "JsonxWriter< OutputStream >" 3 "Fri Jan 14 2022" "Version 1.0.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
JsonxWriter< OutputStream >
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBJsonxWriter\fP (OutputStream &os)"
.br
.ti -1c
.RI "bool \fBNull\fP ()"
.br
.ti -1c
.RI "bool \fBBool\fP (bool b)"
.br
.ti -1c
.RI "bool \fBInt\fP (int i)"
.br
.ti -1c
.RI "bool \fBUint\fP (unsigned i)"
.br
.ti -1c
.RI "bool \fBInt64\fP (\fBint64_t\fP i)"
.br
.ti -1c
.RI "bool \fBUint64\fP (\fBuint64_t\fP i)"
.br
.ti -1c
.RI "bool \fBDouble\fP (double d)"
.br
.ti -1c
.RI "bool \fBRawNumber\fP (const char *str, \fBSizeType\fP length, bool)"
.br
.ti -1c
.RI "bool \fBString\fP (const char *str, \fBSizeType\fP length, bool)"
.br
.ti -1c
.RI "bool \fBStartObject\fP ()"
.br
.ti -1c
.RI "bool \fBKey\fP (const char *str, \fBSizeType\fP length, bool)"
.br
.ti -1c
.RI "bool \fBEndObject\fP (\fBSizeType\fP)"
.br
.ti -1c
.RI "bool \fBStartArray\fP ()"
.br
.ti -1c
.RI "bool \fBEndArray\fP (\fBSizeType\fP)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename OutputStream > \fBJsonxWriter\fP< OutputStream >\fB::JsonxWriter\fP (OutputStream & os)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::Bool (bool b)\fC [inline]\fP"

.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::Double (double d)\fC [inline]\fP"

.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::EndArray (\fBSizeType\fP)\fC [inline]\fP"

.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::EndObject (\fBSizeType\fP)\fC [inline]\fP"

.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::Int (int i)\fC [inline]\fP"

.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::Int64 (\fBint64_t\fP i)\fC [inline]\fP"

.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::Key (const char * str, \fBSizeType\fP length, bool)\fC [inline]\fP"

.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::Null ()\fC [inline]\fP"

.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::RawNumber (const char * str, \fBSizeType\fP length, bool)\fC [inline]\fP"

.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::StartArray ()\fC [inline]\fP"

.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::StartObject ()\fC [inline]\fP"

.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::String (const char * str, \fBSizeType\fP length, bool)\fC [inline]\fP"

.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::Uint (unsigned i)\fC [inline]\fP"

.SS "template<typename OutputStream > bool \fBJsonxWriter\fP< OutputStream >::Uint64 (\fBuint64_t\fP i)\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
