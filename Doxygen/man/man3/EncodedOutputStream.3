.TH "EncodedOutputStream< Encoding, OutputByteStream >" 3 "Fri Jan 14 2022" "Version 1.0.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
EncodedOutputStream< Encoding, OutputByteStream > \- Output byte stream wrapper with statically bound encoding\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <encodedstream\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef Encoding::Ch \fBCh\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEncodedOutputStream\fP (OutputByteStream &os, bool putBOM=true)"
.br
.ti -1c
.RI "void \fBPut\fP (\fBCh\fP c)"
.br
.ti -1c
.RI "void \fBFlush\fP ()"
.br
.ti -1c
.RI "\fBCh\fP \fBPeek\fP () const"
.br
.ti -1c
.RI "\fBCh\fP \fBTake\fP ()"
.br
.ti -1c
.RI "size_t \fBTell\fP () const"
.br
.ti -1c
.RI "\fBCh\fP * \fBPutBegin\fP ()"
.br
.ti -1c
.RI "size_t \fBPutEnd\fP (\fBCh\fP *)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename \fBEncoding\fP, typename OutputByteStream>
.br
class EncodedOutputStream< Encoding, OutputByteStream >"Output byte stream wrapper with statically bound encoding\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fIEncoding\fP The interpretation of encoding of the stream\&. Either \fBUTF8\fP, \fBUTF16LE\fP, \fBUTF16BE\fP, \fBUTF32LE\fP, \fBUTF32BE\fP\&. 
.br
\fIOutputByteStream\fP Type of input byte stream\&. For example, \fBFileWriteStream\fP\&. 
.RE
.PP

.SH "Member Typedef Documentation"
.PP 
.SS "template<typename \fBEncoding\fP , typename OutputByteStream > typedef Encoding::Ch \fBEncodedOutputStream\fP< \fBEncoding\fP, OutputByteStream >::Ch"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename \fBEncoding\fP , typename OutputByteStream > \fBEncodedOutputStream\fP< \fBEncoding\fP, OutputByteStream >\fB::EncodedOutputStream\fP (OutputByteStream & os, bool putBOM = \fCtrue\fP)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename \fBEncoding\fP , typename OutputByteStream > void \fBEncodedOutputStream\fP< \fBEncoding\fP, OutputByteStream >::Flush ()\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename OutputByteStream > \fBCh\fP \fBEncodedOutputStream\fP< \fBEncoding\fP, OutputByteStream >::Peek () const\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename OutputByteStream > void \fBEncodedOutputStream\fP< \fBEncoding\fP, OutputByteStream >::Put (\fBCh\fP c)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename OutputByteStream > \fBCh\fP * \fBEncodedOutputStream\fP< \fBEncoding\fP, OutputByteStream >::PutBegin ()\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename OutputByteStream > size_t \fBEncodedOutputStream\fP< \fBEncoding\fP, OutputByteStream >::PutEnd (\fBCh\fP *)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename OutputByteStream > \fBCh\fP \fBEncodedOutputStream\fP< \fBEncoding\fP, OutputByteStream >::Take ()\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP , typename OutputByteStream > size_t \fBEncodedOutputStream\fP< \fBEncoding\fP, OutputByteStream >::Tell () const\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
