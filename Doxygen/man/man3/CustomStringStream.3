.TH "CustomStringStream< Encoding >" 3 "Fri Jan 21 2022" "Version 1.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CustomStringStream< Encoding >
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef Encoding::Ch \fBCh\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCustomStringStream\fP (const \fBCh\fP *src)"
.br
.ti -1c
.RI "\fBCh\fP \fBPeek\fP () const"
.br
.ti -1c
.RI "\fBCh\fP \fBTake\fP ()"
.br
.ti -1c
.RI "size_t \fBTell\fP () const"
.br
.ti -1c
.RI "\fBCh\fP * \fBPutBegin\fP ()"
.br
.ti -1c
.RI "void \fBPut\fP (\fBCh\fP)"
.br
.ti -1c
.RI "void \fBFlush\fP ()"
.br
.ti -1c
.RI "size_t \fBPutEnd\fP (\fBCh\fP *)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBCustomStringStream\fP (const \fBCustomStringStream\fP &)"
.br
.ti -1c
.RI "\fBCustomStringStream\fP & \fBoperator=\fP (const \fBCustomStringStream\fP &)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "const \fBCh\fP * \fBsrc_\fP"
.br
.RI "Current read position\&. "
.ti -1c
.RI "const \fBCh\fP * \fBhead_\fP"
.br
.RI "Original head of the string\&. "
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename \fBEncoding\fP > typedef Encoding::Ch \fBCustomStringStream\fP< \fBEncoding\fP >::Ch"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename \fBEncoding\fP > \fBCustomStringStream\fP< \fBEncoding\fP >\fB::CustomStringStream\fP (const \fBCh\fP * src)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP > \fBCustomStringStream\fP< \fBEncoding\fP >\fB::CustomStringStream\fP (const \fBCustomStringStream\fP< \fBEncoding\fP > &)\fC [private]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename \fBEncoding\fP > void \fBCustomStringStream\fP< \fBEncoding\fP >::Flush ()\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP > \fBCustomStringStream\fP & \fBCustomStringStream\fP< \fBEncoding\fP >::operator= (const \fBCustomStringStream\fP< \fBEncoding\fP > &)\fC [private]\fP"

.SS "template<typename \fBEncoding\fP > \fBCh\fP \fBCustomStringStream\fP< \fBEncoding\fP >::Peek () const\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP > void \fBCustomStringStream\fP< \fBEncoding\fP >::Put (\fBCh\fP)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP > \fBCh\fP * \fBCustomStringStream\fP< \fBEncoding\fP >::PutBegin ()\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP > size_t \fBCustomStringStream\fP< \fBEncoding\fP >::PutEnd (\fBCh\fP *)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP > \fBCh\fP \fBCustomStringStream\fP< \fBEncoding\fP >::Take ()\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP > size_t \fBCustomStringStream\fP< \fBEncoding\fP >::Tell () const\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<typename \fBEncoding\fP > const \fBCh\fP* \fBCustomStringStream\fP< \fBEncoding\fP >::head_\fC [private]\fP"

.PP
Original head of the string\&. 
.SS "template<typename \fBEncoding\fP > const \fBCh\fP* \fBCustomStringStream\fP< \fBEncoding\fP >::src_\fC [private]\fP"

.PP
Current read position\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
