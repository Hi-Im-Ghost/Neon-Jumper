.TH "md_src_rapidjson_doc_performance" 3 "Fri Jan 21 2022" "Version 1.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_rapidjson_doc_performance \- Performance 
There is a [native JSON benchmark collection] \fC1\fP which evaluates speed, memory usage and code size of various operations among 37 JSON libraries\&.
.PP
The old performance article for RapidJSON 0\&.1 is provided \fChere\fP\&.
.PP
Additionally, you may refer to the following third-party benchmarks\&.
.SH "Third-party benchmarks"
.PP
.IP "\(bu" 2
\fCBasic benchmarks for miscellaneous C++ JSON parsers and generators\fP by Mateusz Loskot (Jun 2013)
.IP "  \(bu" 4
\fCcasablanca\fP
.IP "  \(bu" 4
\fCjson_spirit\fP
.IP "  \(bu" 4
\fCjsoncpp\fP
.IP "  \(bu" 4
\fClibjson\fP
.IP "  \(bu" 4
\fCrapidjson\fP
.IP "  \(bu" 4
\fCQJsonDocument\fP
.PP

.IP "\(bu" 2
\fCJSON Parser Benchmarking\fP by Chad Austin (Jan 2013)
.IP "  \(bu" 4
\fCsajson\fP
.IP "  \(bu" 4
\fCrapidjson\fP
.IP "  \(bu" 4
\fCvjson\fP
.IP "  \(bu" 4
\fCYAJL\fP
.IP "  \(bu" 4
\fCJansson\fP 
.PP

.PP

