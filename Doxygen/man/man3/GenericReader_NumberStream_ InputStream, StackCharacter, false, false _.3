.TH "GenericReader< SourceEncoding, TargetEncoding, StackAllocator >::NumberStream< InputStream, StackCharacter, false, false >" 3 "Fri Jan 21 2022" "Version 1.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GenericReader< SourceEncoding, TargetEncoding, StackAllocator >::NumberStream< InputStream, StackCharacter, false, false >
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBGenericReader< SourceEncoding, TargetEncoding, StackAllocator >::NumberStream< InputStream, StackCharacter, true, false >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef InputStream::Ch \fBCh\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNumberStream\fP (\fBGenericReader\fP &reader, InputStream &s)"
.br
.ti -1c
.RI "RAPIDJSON_FORCEINLINE \fBCh\fP \fBPeek\fP () const"
.br
.ti -1c
.RI "RAPIDJSON_FORCEINLINE \fBCh\fP \fBTakePush\fP ()"
.br
.ti -1c
.RI "RAPIDJSON_FORCEINLINE \fBCh\fP \fBTake\fP ()"
.br
.ti -1c
.RI "RAPIDJSON_FORCEINLINE void \fBPush\fP (char)"
.br
.ti -1c
.RI "size_t \fBTell\fP ()"
.br
.ti -1c
.RI "size_t \fBLength\fP ()"
.br
.ti -1c
.RI "const StackCharacter * \fBPop\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBNumberStream\fP & \fBoperator=\fP (const \fBNumberStream\fP &)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "InputStream & \fBis\fP"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator> template<typename InputStream , typename StackCharacter > typedef InputStream::Ch \fBGenericReader\fP< SourceEncoding, TargetEncoding, StackAllocator >\fB::NumberStream\fP< InputStream, StackCharacter, false, false >::Ch"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator> template<typename InputStream , typename StackCharacter > \fBGenericReader\fP< SourceEncoding, TargetEncoding, StackAllocator >::NumberStream< InputStream, StackCharacter, false, false >::NumberStream (\fBGenericReader\fP & reader, InputStream & s)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator> template<typename InputStream , typename StackCharacter > size_t \fBGenericReader\fP< SourceEncoding, TargetEncoding, StackAllocator >\fB::NumberStream\fP< InputStream, StackCharacter, false, false >::Length ()\fC [inline]\fP"

.SS "template<typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator> template<typename InputStream , typename StackCharacter > \fBNumberStream\fP & \fBGenericReader\fP< SourceEncoding, TargetEncoding, StackAllocator >\fB::NumberStream\fP< InputStream, StackCharacter, false, false >::operator= (const \fBNumberStream\fP< InputStream, StackCharacter, false, false > &)\fC [protected]\fP"

.SS "template<typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator> template<typename InputStream , typename StackCharacter > RAPIDJSON_FORCEINLINE \fBCh\fP \fBGenericReader\fP< SourceEncoding, TargetEncoding, StackAllocator >\fB::NumberStream\fP< InputStream, StackCharacter, false, false >::Peek () const\fC [inline]\fP"

.SS "template<typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator> template<typename InputStream , typename StackCharacter > const StackCharacter * \fBGenericReader\fP< SourceEncoding, TargetEncoding, StackAllocator >\fB::NumberStream\fP< InputStream, StackCharacter, false, false >::Pop ()\fC [inline]\fP"

.SS "template<typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator> template<typename InputStream , typename StackCharacter > RAPIDJSON_FORCEINLINE void \fBGenericReader\fP< SourceEncoding, TargetEncoding, StackAllocator >\fB::NumberStream\fP< InputStream, StackCharacter, false, false >::Push (char)\fC [inline]\fP"

.SS "template<typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator> template<typename InputStream , typename StackCharacter > RAPIDJSON_FORCEINLINE \fBCh\fP \fBGenericReader\fP< SourceEncoding, TargetEncoding, StackAllocator >\fB::NumberStream\fP< InputStream, StackCharacter, false, false >::Take ()\fC [inline]\fP"

.SS "template<typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator> template<typename InputStream , typename StackCharacter > RAPIDJSON_FORCEINLINE \fBCh\fP \fBGenericReader\fP< SourceEncoding, TargetEncoding, StackAllocator >\fB::NumberStream\fP< InputStream, StackCharacter, false, false >::TakePush ()\fC [inline]\fP"

.SS "template<typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator> template<typename InputStream , typename StackCharacter > size_t \fBGenericReader\fP< SourceEncoding, TargetEncoding, StackAllocator >\fB::NumberStream\fP< InputStream, StackCharacter, false, false >::Tell ()\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator> template<typename InputStream , typename StackCharacter > InputStream& \fBGenericReader\fP< SourceEncoding, TargetEncoding, StackAllocator >\fB::NumberStream\fP< InputStream, StackCharacter, false, false >::is\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
