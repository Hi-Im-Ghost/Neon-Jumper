.TH "src/rapidjson/test/unittest/bigintegertest.cpp" 3 "Fri Jan 21 2022" "Version 1.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/rapidjson/test/unittest/bigintegertest.cpp
.SH SYNOPSIS
.br
.PP
\fC#include 'unittest\&.h'\fP
.br
\fC#include 'rapidjson/internal/biginteger\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBBIGINTEGER_LITERAL\fP(s)   BigInteger(s, sizeof(s) \- 1)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static const BigInteger \fBkZero\fP (0)"
.br
.ti -1c
.RI "static const BigInteger \fBkOne\fP (1)"
.br
.ti -1c
.RI "\fBTEST\fP (BigInteger, Constructor)"
.br
.ti -1c
.RI "\fBTEST\fP (BigInteger, AddUint64)"
.br
.ti -1c
.RI "\fBTEST\fP (BigInteger, MultiplyUint64)"
.br
.ti -1c
.RI "\fBTEST\fP (BigInteger, MultiplyUint32)"
.br
.ti -1c
.RI "\fBTEST\fP (BigInteger, LeftShift)"
.br
.ti -1c
.RI "\fBTEST\fP (BigInteger, Compare)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "static const BigInteger \fBkUint64Max\fP = \fBBIGINTEGER_LITERAL\fP('18446744073709551615')"
.br
.ti -1c
.RI "static const BigInteger \fBkTwo64\fP = \fBBIGINTEGER_LITERAL\fP('18446744073709551616')"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define BIGINTEGER_LITERAL(s)   BigInteger(s, sizeof(s) \- 1)"

.SH "Function Documentation"
.PP 
.SS "static const BigInteger kOne (1)\fC [static]\fP"

.SS "static const BigInteger kZero (0)\fC [static]\fP"

.SS "TEST (BigInteger, AddUint64)"

.SS "TEST (BigInteger, Compare)"

.SS "TEST (BigInteger, Constructor)"

.SS "TEST (BigInteger, LeftShift)"

.SS "TEST (BigInteger, MultiplyUint32)"

.SS "TEST (BigInteger, MultiplyUint64)"

.SH "Variable Documentation"
.PP 
.SS "const BigInteger kTwo64 = \fBBIGINTEGER_LITERAL\fP('18446744073709551616')\fC [static]\fP"

.SS "const BigInteger kUint64Max = \fBBIGINTEGER_LITERAL\fP('18446744073709551615')\fC [static]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
