.TH "EncodedStreamTest" 3 "Fri Jan 14 2022" "Version 1.0.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
EncodedStreamTest
.SH SYNOPSIS
.br
.PP
.PP
Inherits testing::Test\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEncodedStreamTest\fP ()"
.br
.ti -1c
.RI "virtual \fB~EncodedStreamTest\fP ()"
.br
.ti -1c
.RI "virtual void \fBSetUp\fP ()"
.br
.ti -1c
.RI "virtual void \fBTearDown\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "template<typename FileEncoding , typename MemoryEncoding > void \fBTestEncodedInputStream\fP (const char *filename)"
.br
.ti -1c
.RI "void \fBTestAutoUTFInputStream\fP (const char *filename, bool expectHasBOM)"
.br
.ti -1c
.RI "template<typename FileEncoding , typename MemoryEncoding > void \fBTestEncodedOutputStream\fP (const char *expectedFilename, bool putBOM)"
.br
.ti -1c
.RI "void \fBTestAutoUTFOutputStream\fP (\fBUTFType\fP type, bool putBOM, const char *expectedFilename)"
.br
.ti -1c
.RI "bool \fBCompareFile\fP (const char *filename, const char *expectedFilename)"
.br
.ti -1c
.RI "bool \fBCompareBufferFile\fP (const char *actualBuffer, size_t actualLength, const char *expectedFilename)"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static FILE * \fBOpen\fP (const char *filename)"
.br
.ti -1c
.RI "static char * \fBReadFile\fP (const char *filename, bool appendPath, size_t *outLength)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "char * \fBjson_\fP"
.br
.ti -1c
.RI "size_t \fBlength_\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "EncodedStreamTest::EncodedStreamTest ()\fC [inline]\fP"

.SS "EncodedStreamTest::~EncodedStreamTest ()\fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "bool EncodedStreamTest::CompareBufferFile (const char * actualBuffer, size_t actualLength, const char * expectedFilename)\fC [inline]\fP, \fC [protected]\fP"

.SS "bool EncodedStreamTest::CompareFile (const char * filename, const char * expectedFilename)\fC [inline]\fP, \fC [protected]\fP"

.SS "static FILE * EncodedStreamTest::Open (const char * filename)\fC [inline]\fP, \fC [static]\fP, \fC [protected]\fP"

.SS "static char * EncodedStreamTest::ReadFile (const char * filename, bool appendPath, size_t * outLength)\fC [inline]\fP, \fC [static]\fP, \fC [protected]\fP"

.SS "virtual void EncodedStreamTest::SetUp ()\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual void EncodedStreamTest::TearDown ()\fC [inline]\fP, \fC [virtual]\fP"

.SS "void EncodedStreamTest::TestAutoUTFInputStream (const char * filename, bool expectHasBOM)\fC [inline]\fP, \fC [protected]\fP"

.SS "void EncodedStreamTest::TestAutoUTFOutputStream (\fBUTFType\fP type, bool putBOM, const char * expectedFilename)\fC [inline]\fP, \fC [protected]\fP"

.SS "template<typename FileEncoding , typename MemoryEncoding > void EncodedStreamTest::TestEncodedInputStream (const char * filename)\fC [inline]\fP, \fC [protected]\fP"

.SS "template<typename FileEncoding , typename MemoryEncoding > void EncodedStreamTest::TestEncodedOutputStream (const char * expectedFilename, bool putBOM)\fC [inline]\fP, \fC [protected]\fP"

.SH "Member Data Documentation"
.PP 
.SS "char* EncodedStreamTest::json_\fC [protected]\fP"

.SS "size_t EncodedStreamTest::length_\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
