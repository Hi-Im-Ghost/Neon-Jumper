.TH "JsonWriter" 3 "Fri Jan 21 2022" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
JsonWriter
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <archiver\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBJsonWriter\fP ()"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fB~JsonWriter\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "const char * \fBGetString\fP () const"
.br
.RI "Obtains the serialized JSON string\&. "
.ti -1c
.RI "\fBoperator bool\fP () const"
.br
.ti -1c
.RI "\fBJsonWriter\fP & \fBStartObject\fP ()"
.br
.ti -1c
.RI "\fBJsonWriter\fP & \fBMember\fP (const char *name)"
.br
.ti -1c
.RI "bool \fBHasMember\fP (const char *name) const"
.br
.ti -1c
.RI "\fBJsonWriter\fP & \fBEndObject\fP ()"
.br
.ti -1c
.RI "\fBJsonWriter\fP & \fBStartArray\fP (size_t *size=0)"
.br
.ti -1c
.RI "\fBJsonWriter\fP & \fBEndArray\fP ()"
.br
.ti -1c
.RI "\fBJsonWriter\fP & \fBoperator&\fP (bool &b)"
.br
.ti -1c
.RI "\fBJsonWriter\fP & \fBoperator&\fP (unsigned &u)"
.br
.ti -1c
.RI "\fBJsonWriter\fP & \fBoperator&\fP (int &i)"
.br
.ti -1c
.RI "\fBJsonWriter\fP & \fBoperator&\fP (double &d)"
.br
.ti -1c
.RI "\fBJsonWriter\fP & \fBoperator&\fP (std::string &s)"
.br
.ti -1c
.RI "\fBJsonWriter\fP & \fBSetNull\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const bool \fBIsReader\fP = false"
.br
.ti -1c
.RI "static const bool \fBIsWriter\fP = !\fBIsReader\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBJsonWriter\fP (const \fBJsonWriter\fP &)"
.br
.ti -1c
.RI "\fBJsonWriter\fP & \fBoperator=\fP (const \fBJsonWriter\fP &)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "void * \fBmWriter\fP"
.br
.RI "JSON writer\&. "
.ti -1c
.RI "void * \fBmStream\fP"
.br
.RI "Stream buffer\&. "
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "JsonWriter::JsonWriter ()"

.PP
Constructor\&. 
.SS "JsonWriter::~JsonWriter ()"

.PP
Destructor\&. 
.SS "JsonWriter::JsonWriter (const \fBJsonWriter\fP &)\fC [private]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBJsonWriter\fP & JsonWriter::EndArray ()"

.SS "\fBJsonWriter\fP & JsonWriter::EndObject ()"

.SS "const char * JsonWriter::GetString () const"

.PP
Obtains the serialized JSON string\&. 
.SS "bool JsonWriter::HasMember (const char * name) const"

.SS "\fBJsonWriter\fP & JsonWriter::Member (const char * name)"

.SS "JsonWriter::operator bool () const\fC [inline]\fP"

.SS "\fBJsonWriter\fP & JsonWriter::operator& (bool & b)"

.SS "\fBJsonWriter\fP & JsonWriter::operator& (double & d)"

.SS "\fBJsonWriter\fP & JsonWriter::operator& (int & i)"

.SS "\fBJsonWriter\fP & JsonWriter::operator& (std::string & s)"

.SS "\fBJsonWriter\fP & JsonWriter::operator& (unsigned & u)"

.SS "\fBJsonWriter\fP & JsonWriter::operator= (const \fBJsonWriter\fP &)\fC [private]\fP"

.SS "\fBJsonWriter\fP & JsonWriter::SetNull ()"

.SS "\fBJsonWriter\fP & JsonWriter::StartArray (size_t * size = \fC0\fP)"

.SS "\fBJsonWriter\fP & JsonWriter::StartObject ()"

.SH "Member Data Documentation"
.PP 
.SS "const bool JsonWriter::IsReader = false\fC [static]\fP"

.SS "const bool JsonWriter::IsWriter = !\fBIsReader\fP\fC [static]\fP"

.SS "void* JsonWriter::mStream\fC [private]\fP"

.PP
Stream buffer\&. 
.SS "void* JsonWriter::mWriter\fC [private]\fP"

.PP
JSON writer\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
