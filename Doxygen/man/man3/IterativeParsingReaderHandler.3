.TH "IterativeParsingReaderHandler< Encoding >" 3 "Fri Jan 21 2022" "Version 1.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
IterativeParsingReaderHandler< Encoding >
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBHandlerTerminateAtEndArray\fP, \fBHandlerTerminateAtEndObject\fP, \fBHandlerTerminateAtStartArray\fP, and \fBHandlerTerminateAtStartObject\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef Encoding::Ch \fBCh\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBIterativeParsingReaderHandler\fP ()"
.br
.ti -1c
.RI "bool \fBNull\fP ()"
.br
.ti -1c
.RI "bool \fBBool\fP (bool)"
.br
.ti -1c
.RI "bool \fBInt\fP (int)"
.br
.ti -1c
.RI "bool \fBUint\fP (unsigned)"
.br
.ti -1c
.RI "bool \fBInt64\fP (\fBint64_t\fP)"
.br
.ti -1c
.RI "bool \fBUint64\fP (\fBuint64_t\fP)"
.br
.ti -1c
.RI "bool \fBDouble\fP (double)"
.br
.ti -1c
.RI "bool \fBRawNumber\fP (const \fBCh\fP *, \fBSizeType\fP, bool)"
.br
.ti -1c
.RI "bool \fBString\fP (const \fBCh\fP *, \fBSizeType\fP, bool)"
.br
.ti -1c
.RI "bool \fBStartObject\fP ()"
.br
.ti -1c
.RI "bool \fBKey\fP (const \fBCh\fP *, \fBSizeType\fP, bool)"
.br
.ti -1c
.RI "bool \fBEndObject\fP (\fBSizeType\fP c)"
.br
.ti -1c
.RI "bool \fBStartArray\fP ()"
.br
.ti -1c
.RI "bool \fBEndArray\fP (\fBSizeType\fP c)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBuint32_t\fP \fBLogs\fP [\fBLogCapacity\fP]"
.br
.ti -1c
.RI "size_t \fBLogCount\fP"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const \fBuint32_t\fP \fBLOG_NULL\fP = 0x10000000"
.br
.ti -1c
.RI "static const \fBuint32_t\fP \fBLOG_BOOL\fP = 0x20000000"
.br
.ti -1c
.RI "static const \fBuint32_t\fP \fBLOG_INT\fP = 0x30000000"
.br
.ti -1c
.RI "static const \fBuint32_t\fP \fBLOG_UINT\fP = 0x40000000"
.br
.ti -1c
.RI "static const \fBuint32_t\fP \fBLOG_INT64\fP = 0x50000000"
.br
.ti -1c
.RI "static const \fBuint32_t\fP \fBLOG_UINT64\fP = 0x60000000"
.br
.ti -1c
.RI "static const \fBuint32_t\fP \fBLOG_DOUBLE\fP = 0x70000000"
.br
.ti -1c
.RI "static const \fBuint32_t\fP \fBLOG_STRING\fP = 0x80000000"
.br
.ti -1c
.RI "static const \fBuint32_t\fP \fBLOG_STARTOBJECT\fP = 0x90000000"
.br
.ti -1c
.RI "static const \fBuint32_t\fP \fBLOG_KEY\fP = 0xA0000000"
.br
.ti -1c
.RI "static const \fBuint32_t\fP \fBLOG_ENDOBJECT\fP = 0xB0000000"
.br
.ti -1c
.RI "static const \fBuint32_t\fP \fBLOG_STARTARRAY\fP = 0xC0000000"
.br
.ti -1c
.RI "static const \fBuint32_t\fP \fBLOG_ENDARRAY\fP = 0xD0000000"
.br
.ti -1c
.RI "static const size_t \fBLogCapacity\fP = 256"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename \fBEncoding\fP  = UTF8<>> typedef Encoding::Ch \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::Ch"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename \fBEncoding\fP  = UTF8<>> \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >\fB::IterativeParsingReaderHandler\fP ()\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::Bool (bool)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::Double (double)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::EndArray (\fBSizeType\fP c)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::EndObject (\fBSizeType\fP c)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::Int (int)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::Int64 (\fBint64_t\fP)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::Key (const \fBCh\fP *, \fBSizeType\fP, bool)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::Null ()\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::RawNumber (const \fBCh\fP *, \fBSizeType\fP, bool)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::StartArray ()\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::StartObject ()\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::String (const \fBCh\fP *, \fBSizeType\fP, bool)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::Uint (unsigned)\fC [inline]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> bool \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::Uint64 (\fBuint64_t\fP)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<typename \fBEncoding\fP  = UTF8<>> const \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LOG_BOOL = 0x20000000\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> const \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LOG_DOUBLE = 0x70000000\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> const \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LOG_ENDARRAY = 0xD0000000\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> const \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LOG_ENDOBJECT = 0xB0000000\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> const \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LOG_INT = 0x30000000\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> const \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LOG_INT64 = 0x50000000\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> const \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LOG_KEY = 0xA0000000\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> const \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LOG_NULL = 0x10000000\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> const \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LOG_STARTARRAY = 0xC0000000\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> const \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LOG_STARTOBJECT = 0x90000000\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> const \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LOG_STRING = 0x80000000\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> const \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LOG_UINT = 0x40000000\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> const \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LOG_UINT64 = 0x60000000\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> const size_t \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LogCapacity = 256\fC [static]\fP"

.SS "template<typename \fBEncoding\fP  = UTF8<>> size_t \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::LogCount"

.SS "template<typename \fBEncoding\fP  = UTF8<>> \fBuint32_t\fP \fBIterativeParsingReaderHandler\fP< \fBEncoding\fP >::Logs[\fBLogCapacity\fP]"


.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
