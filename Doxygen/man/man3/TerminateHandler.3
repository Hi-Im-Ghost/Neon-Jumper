.TH "TerminateHandler< e >" 3 "Fri Jan 21 2022" "Version 1.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TerminateHandler< e >
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBNull\fP ()"
.br
.ti -1c
.RI "bool \fBBool\fP (bool)"
.br
.ti -1c
.RI "bool \fBInt\fP (int)"
.br
.ti -1c
.RI "bool \fBUint\fP (unsigned)"
.br
.ti -1c
.RI "bool \fBInt64\fP (\fBint64_t\fP)"
.br
.ti -1c
.RI "bool \fBUint64\fP (\fBuint64_t\fP)"
.br
.ti -1c
.RI "bool \fBDouble\fP (double)"
.br
.ti -1c
.RI "bool \fBRawNumber\fP (const char *, \fBSizeType\fP, bool)"
.br
.ti -1c
.RI "bool \fBString\fP (const char *, \fBSizeType\fP, bool)"
.br
.ti -1c
.RI "bool \fBStartObject\fP ()"
.br
.ti -1c
.RI "bool \fBKey\fP (const char *, \fBSizeType\fP, bool)"
.br
.ti -1c
.RI "bool \fBEndObject\fP (\fBSizeType\fP)"
.br
.ti -1c
.RI "bool \fBStartArray\fP ()"
.br
.ti -1c
.RI "bool \fBEndArray\fP (\fBSizeType\fP)"
.br
.ti -1c
.RI "bool \fBNull\fP ()"
.br
.ti -1c
.RI "bool \fBBool\fP (bool)"
.br
.ti -1c
.RI "bool \fBInt\fP (int)"
.br
.ti -1c
.RI "bool \fBUint\fP (unsigned)"
.br
.ti -1c
.RI "bool \fBInt64\fP (\fBint64_t\fP)"
.br
.ti -1c
.RI "bool \fBUint64\fP (\fBuint64_t\fP)"
.br
.ti -1c
.RI "bool \fBDouble\fP (double)"
.br
.ti -1c
.RI "bool \fBRawNumber\fP (const char *, \fBSizeType\fP, bool)"
.br
.ti -1c
.RI "bool \fBString\fP (const char *, \fBSizeType\fP, bool)"
.br
.ti -1c
.RI "bool \fBStartObject\fP ()"
.br
.ti -1c
.RI "bool \fBKey\fP (const char *, \fBSizeType\fP, bool)"
.br
.ti -1c
.RI "bool \fBEndObject\fP (\fBSizeType\fP)"
.br
.ti -1c
.RI "bool \fBStartArray\fP ()"
.br
.ti -1c
.RI "bool \fBEndArray\fP (\fBSizeType\fP)"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "template<int e> bool \fBTerminateHandler\fP< e >::Bool (bool)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Bool (bool)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Double (double)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Double (double)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::EndArray (\fBSizeType\fP)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::EndArray (\fBSizeType\fP)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::EndObject (\fBSizeType\fP)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::EndObject (\fBSizeType\fP)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Int (int)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Int (int)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Int64 (\fBint64_t\fP)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Int64 (\fBint64_t\fP)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Key (const char *, \fBSizeType\fP, bool)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Key (const char *, \fBSizeType\fP, bool)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Null ()\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Null ()\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::RawNumber (const char *, \fBSizeType\fP, bool)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::RawNumber (const char *, \fBSizeType\fP, bool)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::StartArray ()\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::StartArray ()\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::StartObject ()\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::StartObject ()\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::String (const char *, \fBSizeType\fP, bool)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::String (const char *, \fBSizeType\fP, bool)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Uint (unsigned)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Uint (unsigned)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Uint64 (\fBuint64_t\fP)\fC [inline]\fP"

.SS "template<int e> bool \fBTerminateHandler\fP< e >::Uint64 (\fBuint64_t\fP)\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
