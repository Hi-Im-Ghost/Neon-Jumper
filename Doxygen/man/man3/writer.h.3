.TH "src/rapidjson/include/rapidjson/writer.h" 3 "Fri Jan 14 2022" "Version 1.0.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/rapidjson/include/rapidjson/writer.h
.SH SYNOPSIS
.br
.PP
\fC#include 'stream\&.h'\fP
.br
\fC#include 'internal/clzll\&.h'\fP
.br
\fC#include 'internal/meta\&.h'\fP
.br
\fC#include 'internal/stack\&.h'\fP
.br
\fC#include 'internal/strfunc\&.h'\fP
.br
\fC#include 'internal/dtoa\&.h'\fP
.br
\fC#include 'internal/itoa\&.h'\fP
.br
\fC#include 'stringbuffer\&.h'\fP
.br
\fC#include <new>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBWriter< OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags >\fP"
.br
.RI "JSON writer\&. "
.ti -1c
.RI "struct \fBWriter< OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags >::Level\fP"
.br
.RI "Information for each nested level\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBRAPIDJSON_WRITE_DEFAULT_FLAGS\fP   \fBkWriteNoFlags\fP"
.br
.ti -1c
.RI "#define \fBZ16\fP   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBWriteFlag\fP { \fBkWriteNoFlags\fP = 0, \fBkWriteValidateEncodingFlag\fP = 1, \fBkWriteNanAndInfFlag\fP = 2, \fBkWriteDefaultFlags\fP = RAPIDJSON_WRITE_DEFAULT_FLAGS }"
.br
.RI "Combination of writeFlags\&. "
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define RAPIDJSON_WRITE_DEFAULT_FLAGS   \fBkWriteNoFlags\fP"

.SS "#define Z16   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBWriteFlag\fP"

.PP
Combination of writeFlags\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIkWriteNoFlags \fP\fP
No flags are set\&. 
.TP
\fB\fIkWriteValidateEncodingFlag \fP\fP
Validate encoding of JSON strings\&. 
.TP
\fB\fIkWriteNanAndInfFlag \fP\fP
Allow writing of Infinity, -Infinity and NaN\&. 
.TP
\fB\fIkWriteDefaultFlags \fP\fP
Default write flags\&. Can be customized by defining RAPIDJSON_WRITE_DEFAULT_FLAGS\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
