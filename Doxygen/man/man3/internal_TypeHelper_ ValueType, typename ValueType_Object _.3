.TH "internal::TypeHelper< ValueType, typename ValueType::Object >" 3 "Fri Jan 21 2022" "Version 1.0" "Neon Jumper" \" -*- nroff -*-
.ad l
.nh
.SH NAME
internal::TypeHelper< ValueType, typename ValueType::Object >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <document\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBValueType::Object\fP \fBObjectType\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBIs\fP (const \fBValueType\fP &v)"
.br
.ti -1c
.RI "static \fBObjectType\fP \fBGet\fP (\fBValueType\fP &v)"
.br
.ti -1c
.RI "static \fBValueType\fP & \fBSet\fP (\fBValueType\fP &v, \fBObjectType\fP data)"
.br
.ti -1c
.RI "static \fBValueType\fP & \fBSet\fP (\fBValueType\fP &v, \fBObjectType\fP data, typename \fBValueType::AllocatorType\fP &)"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename \fBValueType\fP > typedef \fBValueType::Object\fP \fBinternal::TypeHelper\fP< \fBValueType\fP, typename \fBValueType::Object\fP >::ObjectType"

.SH "Member Function Documentation"
.PP 
.SS "template<typename \fBValueType\fP > static \fBObjectType\fP \fBinternal::TypeHelper\fP< \fBValueType\fP, typename \fBValueType::Object\fP >::Get (\fBValueType\fP & v)\fC [inline]\fP, \fC [static]\fP"

.SS "template<typename \fBValueType\fP > static bool \fBinternal::TypeHelper\fP< \fBValueType\fP, typename \fBValueType::Object\fP >::Is (const \fBValueType\fP & v)\fC [inline]\fP, \fC [static]\fP"

.SS "template<typename \fBValueType\fP > static \fBValueType\fP & \fBinternal::TypeHelper\fP< \fBValueType\fP, typename \fBValueType::Object\fP >::Set (\fBValueType\fP & v, \fBObjectType\fP data)\fC [inline]\fP, \fC [static]\fP"

.SS "template<typename \fBValueType\fP > static \fBValueType\fP & \fBinternal::TypeHelper\fP< \fBValueType\fP, typename \fBValueType::Object\fP >::Set (\fBValueType\fP & v, \fBObjectType\fP data, typename \fBValueType::AllocatorType\fP &)\fC [inline]\fP, \fC [static]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Neon Jumper from the source code\&.
