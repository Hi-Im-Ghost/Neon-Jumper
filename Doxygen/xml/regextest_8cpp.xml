<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="regextest_8cpp" kind="file" language="C++">
    <compoundname>regextest.cpp</compoundname>
    <includes refid="unittest_8h" local="yes">unittest.h</includes>
    <includes refid="regex_8h" local="yes">rapidjson/internal/regex.h</includes>
    <incdepgraph>
      <node id="6">
        <label>../allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>encodings.h</label>
        <link refid="encodings_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>internal/meta.h</label>
        <link refid="meta_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>rapidjson/internal/regex.h</label>
        <link refid="regex_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>swap.h</label>
        <link refid="swap_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>../stream.h</label>
        <link refid="stream_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/rapidjson/test/unittest/regextest.cpp</label>
        <link refid="regextest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>unittest.h</label>
        <link refid="unittest_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cassert</label>
      </node>
      <node id="17">
        <label>cstddef</label>
      </node>
      <node id="8">
        <label>cstdlib</label>
      </node>
      <node id="9">
        <label>cstring</label>
      </node>
      <node id="3">
        <label>gtest/gtest.h</label>
      </node>
      <node id="12">
        <label>memory</label>
      </node>
      <node id="4">
        <label>stdexcept</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="regextest_8cpp_1a5434fc5857bd1456b47ab1f89ad35098" prot="public" static="no">
        <name>EURO</name>
        <initializer>&quot;\xE2\x82\xAC&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="404" column="9" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" prot="public" static="no">
        <name>TEST_INVALID</name>
        <param><defname>s</defname></param>
        <initializer>    {\
        Regex re(s);\
        EXPECT_FALSE(re.IsValid());\
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="589" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Single)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Single</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="20" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="20" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a9f5f104eb29b493ba0cf3d88e7ccf2f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Concatenation)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Concatenation</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="29" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="29" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1ab2c1dab85277a95c0d8f63a0d7932280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Alternation1)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Alternation1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="41" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="41" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a8958e10f913d41a4f130d7a90bc36109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Alternation2)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Alternation2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="54" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="54" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a4935dc01746cdf09ddc5c40f855fdc34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Parenthesis1)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Parenthesis1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="66" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="66" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1adad68bb47b6019c9789d548c2e16f4bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Parenthesis2)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Parenthesis2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="78" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="78" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a51706383c0b0745bf5deaec6a356fa20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Parenthesis3)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Parenthesis3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="90" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="90" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1ab3660284a866e1b38128832952301a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, ZeroOrOne1)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>ZeroOrOne1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="103" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="103" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a69d5aa19c98edd1c583084a57b52c423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, ZeroOrOne2)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>ZeroOrOne2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="112" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="112" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a86d5177b7bfa3ad21bdedee7858fb246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, ZeroOrOne3)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>ZeroOrOne3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="124" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="124" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a5bfb68eb7300039e328dfd5229a01d55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, ZeroOrOne4)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>ZeroOrOne4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="136" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="136" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a3686c9aa735631ce12ddeaeff182c1dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, ZeroOrOne5)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>ZeroOrOne5</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="150" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="150" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1ae26efb0cf2a86adcc118d3cec67459a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, ZeroOrMore1)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>ZeroOrMore1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="160" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="160" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a461556287c755c1523ae785f2cdfebd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, ZeroOrMore2)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>ZeroOrMore2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="171" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="171" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1aa9d44367baa9feaa13f56bd3db85f723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, ZeroOrMore3)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>ZeroOrMore3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="182" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="182" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1ae64f25bb4a800aa8cb56e29506a92755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, ZeroOrMore4)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>ZeroOrMore4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="196" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="196" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1acf303a61ed3dc3e78162e043bd722ab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, OneOrMore1)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>OneOrMore1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="207" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="207" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1ab5eaedc150f27cbff58b89409f81441f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, OneOrMore2)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>OneOrMore2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="218" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="218" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a56170b119ba1cb63cb6f56c17b895b90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, OneOrMore3)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>OneOrMore3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="228" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="228" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1ad9856cc9219629528b1163c39a49b6ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, OneOrMore4)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>OneOrMore4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="241" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="241" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a6dff68def4615f25c278610e2ba0b51a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, QuantifierExact1)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>QuantifierExact1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="251" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="251" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a201a2f3aa40f995245e1cf61f50173c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, QuantifierExact2)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>QuantifierExact2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="262" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="262" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a3cfb69a95cf9faa9e107fac21570bfd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, QuantifierExact3)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>QuantifierExact3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="273" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="273" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a7d0565b30cef53039b81555c20aa4788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, QuantifierMin1)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>QuantifierMin1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="286" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="286" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1aceeb4372d8f8bffa5afe5f5b181bbfec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, QuantifierMin2)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>QuantifierMin2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="298" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="298" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a8fcf728559bdbb4c18cab8ae8dd01844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, QuantifierMin3)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>QuantifierMin3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="309" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="309" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1aa1d34ea422c754e17f1af018917ffab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, QuantifierMinMax1)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>QuantifierMinMax1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="322" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="322" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a1d0baf9ad759c6cbb8cae7dcff7df081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, QuantifierMinMax2)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>QuantifierMinMax2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="335" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="335" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1aa53c89d72e27ca7d5030e034ae88b3ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, QuantifierMinMax3)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>QuantifierMinMax3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="348" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="348" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1afddf32b93ac293a87ebbf708f2c9d19a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, QuantifierMinMax4)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>QuantifierMinMax4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="366" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="366" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a88fc24c0b52bc49b9b82e513397a0a23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, QuantifierMinMax5)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>QuantifierMinMax5</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="385" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="385" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a381af5b77c706a40e6bc9a8ef561213a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Unicode)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Unicode</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="406" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="406" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a26baa15b641c8c8200ebedd68f72b3bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, AnyCharacter)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>AnyCharacter</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="416" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="416" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a5eee49c855b7e6aa70ea9afa54551da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, CharacterRange1)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>CharacterRange1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="427" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="427" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a03bdf5b8c7c85f58f3d94cf3c88021d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, CharacterRange2)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>CharacterRange2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="440" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="440" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1ad8766e194579bc7b258e0351b59f0ac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, CharacterRange3)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>CharacterRange3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="453" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="453" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a6fce7647b571b45ef18cbe1096a31b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, CharacterRange4)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>CharacterRange4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="466" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="466" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1aced64e292ed888b561abe6152cf25dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, CharacterRange5)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>CharacterRange5</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="479" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="479" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a7c4605405d9ad43a0da07e169cb69d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, CharacterRange6)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>CharacterRange6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="488" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="488" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a3ada903d344b111ae36967dbd30bcba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, CharacterRange7)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>CharacterRange7</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="499" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="499" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a4081650a6aa86d371eee0cdb1b457a28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, CharacterRange8)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>CharacterRange8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="510" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="510" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a64325e2a1d76fb7a8f92d7bccd1a8da2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Search)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Search</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="521" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="521" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a1eda53a0cbf84cccc01a36819bc6751e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Search_BeginAnchor)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Search_BeginAnchor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="537" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="537" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a887e8f018eb36b77ad013086f1449544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Search_EndAnchor)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Search_EndAnchor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="552" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="552" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a187f2920cd48f579f856c82442441ba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Search_BothAnchor)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Search_BothAnchor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="567" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="567" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a00d40453c1add72f9d4bd76397ccaf73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Escape)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Escape</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="579" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="579" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a33959d5936db2191b7849ce2f395b4ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Invalid)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Invalid</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="588" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="588" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1accdc2f6fbc70061692589a4d7fdd0d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Issue538)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Issue538</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="629" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="629" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="regextest_8cpp_1a86b74f2568edad0f59ccf1746046f910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Regex, Issue583)</argsstring>
        <name>TEST</name>
        <param>
          <type>Regex</type>
        </param>
        <param>
          <type>Issue583</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/regextest.cpp" line="634" column="1" bodyfile="src/rapidjson/test/unittest/regextest.cpp" bodystart="634" bodyend="637"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://opensource.org/licenses/MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unittest_8h" kindref="compound">unittest.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="regex_8h" kindref="compound">rapidjson/internal/regex.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">rapidjson::internal;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Single)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Concatenation)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Alternation1)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;abab|abbb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ababa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Alternation2)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a|b|c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Parenthesis1)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;(ab)c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Parenthesis2)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a(bc)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Parenthesis3)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;(a|b)(c|d)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;ad&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;bc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;bd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>ZeroOrOne1)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>ZeroOrOne2)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a?b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ba&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>ZeroOrOne3)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;ab?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ba&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>ZeroOrOne4)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a?b?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ba&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>ZeroOrOne5)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a(ab)?b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;aabb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;aab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>ZeroOrMore1)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>ZeroOrMore2)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a*b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;aab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>ZeroOrMore3)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a*b*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;bb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;aabb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ba&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>ZeroOrMore4)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a(ab)*b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;aabb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;aababb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>OneOrMore1)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>OneOrMore2)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a+b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;aab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>OneOrMore3)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a+b+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;aab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;aabb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ba&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>OneOrMore4)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a(ab)+b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;aabb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;aababb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>QuantifierExact1)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;ab{3}c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbbc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>QuantifierExact2)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a(bc){3}d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbcbcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ad&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbcbcbcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>QuantifierExact3)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a(b|c){3}d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;acccd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ad&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;accccd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>QuantifierMin1)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;ab{3,}c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbbc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbbbc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>QuantifierMin2)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a(bc){3,}d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbcbcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbcbcbcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ad&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>QuantifierMin3)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a(b|c){3,}d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;acccd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;accccd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ad&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>QuantifierMinMax1)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;ab{3,5}c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbbc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbbbc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ac&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbbbbc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>QuantifierMinMax2)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a(bc){3,5}d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbcbcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbcbcbcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbcbcbcbcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ad&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbcbcbcbcbcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>QuantifierMinMax3)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a(b|c){3,5}d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;acccd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;accccd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;acccccd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbbbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;ad&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;accccccd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbbbbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Issue538</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>QuantifierMinMax4)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a(b|c){0,3}d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;ad&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;acd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;accd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;acccd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;accccd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Issue538</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>QuantifierMinMax5)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a(b|c){0,}d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;ad&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;acd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;accd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;acccd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abbbbd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;accccd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;abcbcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;aad&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EURO<sp/>&quot;\xE2\x82\xAC&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>&quot;\xE2\x82\xAC&quot;<sp/>is<sp/>UTF-8<sp/>rsquence<sp/>of<sp/>Euro<sp/>sign<sp/>U+20AC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Unicode)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal"><sp/><ref refid="regextest_8cpp_1a5434fc5857bd1456b47ab1f89ad35098" kindref="member">EURO</ref><sp/></highlight><highlight class="stringliteral">&quot;+b&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal"><sp/><ref refid="regextest_8cpp_1a5434fc5857bd1456b47ab1f89ad35098" kindref="member">EURO</ref><sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal"><sp/><ref refid="regextest_8cpp_1a5434fc5857bd1456b47ab1f89ad35098" kindref="member">EURO</ref><sp/><ref refid="regextest_8cpp_1a5434fc5857bd1456b47ab1f89ad35098" kindref="member">EURO</ref><sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;a?b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal"><sp/><ref refid="regextest_8cpp_1a5434fc5857bd1456b47ab1f89ad35098" kindref="member">EURO</ref><sp/></highlight><highlight class="stringliteral">&quot;\xAC&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">//<sp/>unaware<sp/>of<sp/>UTF-8<sp/>will<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>AnyCharacter)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(<ref refid="regextest_8cpp_1a5434fc5857bd1456b47ab1f89ad35098" kindref="member">EURO</ref>));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>CharacterRange1)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;[abc]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;`&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>CharacterRange2)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;[^abc]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;`&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>CharacterRange3)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;[a-c]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;`&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>CharacterRange4)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;[^a-c]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;`&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>CharacterRange5)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;[-]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>CharacterRange6)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;[a-]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;`&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>CharacterRange7)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;[-a]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;`&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>CharacterRange8)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;[a-zA-Z0-9]*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;Milo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;MT19937&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;43&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;a_b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(</highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Search)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Search(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Search(</highlight><highlight class="stringliteral">&quot;_abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Search(</highlight><highlight class="stringliteral">&quot;abc_&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Search(</highlight><highlight class="stringliteral">&quot;_abc_&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Search(</highlight><highlight class="stringliteral">&quot;__abc__&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Search(</highlight><highlight class="stringliteral">&quot;abcabc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;bc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;cba&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Search_BeginAnchor)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;^abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Search(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Search(</highlight><highlight class="stringliteral">&quot;abc_&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Search(</highlight><highlight class="stringliteral">&quot;abcabc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;_abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;_abc_&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;bc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;cba&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Search_EndAnchor)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;abc$&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Search(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Search(</highlight><highlight class="stringliteral">&quot;_abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Search(</highlight><highlight class="stringliteral">&quot;abcabc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;abc_&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;_abc_&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;bc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;cba&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Search_BothAnchor)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;^abc$&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Search(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Search(</highlight><highlight class="stringliteral">&quot;abcd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Escape)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\\^\\$\\|\\(\\)\\?\\*\\+\\.\\[\\]\\{\\}\\\\\\f\\n\\r\\t\\v[\\b][\\[][\\]]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(s);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref><sp/>rs(re);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(rs.Match(</highlight><highlight class="stringliteral">&quot;^$|()?*+.[]{}\\\x0C\n\r\t\x0B\b[]&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(rs.Match(s));<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>escaping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Invalid)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_INVALID(s)<sp/>\</highlight></codeline>
<codeline lineno="590"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="591"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Regex<sp/>re(s);\</highlight></codeline>
<codeline lineno="592"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(re.IsValid());\</highlight></codeline>
<codeline lineno="593"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;a|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;(a))&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;(a|)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;(a||b)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;(|b)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;a{a}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;a{0}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;a{-1}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;a{}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TEST_INVALID(&quot;a{0,}&quot;);<sp/><sp/><sp/>//<sp/>Support<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;a{,0}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;a{1,0}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;a{-1,0}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;a{-1,1}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;a{4294967296}&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>overflow<sp/>of<sp/>unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;a{1a}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;[^]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;[\\a]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="regextest_8cpp_1ae270a8a2de2750e2425c7b17459c8960" kindref="member">TEST_INVALID</ref>(</highlight><highlight class="stringliteral">&quot;\\a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TEST_INVALID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Issue538)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;^[0-9]+(\\\\.[0-9]+){0,2}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><ref refid="regextest_8cpp_1a6926fa190879f4c751bbf0aae4be823c" kindref="member">TEST</ref>(<ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>,<sp/>Issue583)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref><sp/>re(</highlight><highlight class="stringliteral">&quot;[0-9]{99999}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(re.IsValid());</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>EURO</highlight></codeline>
    </programlisting>
    <location file="src/rapidjson/test/unittest/regextest.cpp"/>
  </compounddef>
</doxygen>
