<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="readertest_8cpp" kind="file" language="C++">
    <compoundname>readertest.cpp</compoundname>
    <includes refid="unittest_8h" local="yes">unittest.h</includes>
    <includes refid="reader_8h" local="yes">rapidjson/reader.h</includes>
    <includes refid="dtoa_8h" local="yes">rapidjson/internal/dtoa.h</includes>
    <includes refid="itoa_8h" local="yes">rapidjson/internal/itoa.h</includes>
    <includes refid="memorystream_8h" local="yes">rapidjson/memorystream.h</includes>
    <includes local="no">limits</includes>
    <includes local="no">sstream</includes>
    <incdepgraph>
      <node id="6">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>encodedstream.h</label>
        <link refid="encodedstream_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>encodings.h</label>
        <link refid="encodings_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>biginteger.h</label>
        <link refid="biginteger_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>internal/clzll.h</label>
        <link refid="clzll_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>diyfp.h</label>
        <link refid="diyfp_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>rapidjson/internal/dtoa.h</label>
        <link refid="dtoa_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>ieee754.h</label>
        <link refid="ieee754_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>itoa.h</label>
        <link refid="itoa_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>internal/meta.h</label>
        <link refid="meta_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>pow10.h</label>
        <link refid="pow10_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>internal/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>internal/strtod.h</label>
        <link refid="strtod_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>swap.h</label>
        <link refid="swap_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>memorystream.h</label>
        <link refid="memorystream_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>rapidjson/reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stream.h</label>
        <link refid="stream_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/rapidjson/test/unittest/readertest.cpp</label>
        <link refid="readertest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>unittest.h</label>
        <link refid="unittest_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cassert</label>
      </node>
      <node id="27">
        <label>climits</label>
      </node>
      <node id="20">
        <label>cstddef</label>
      </node>
      <node id="8">
        <label>cstdlib</label>
      </node>
      <node id="9">
        <label>cstring</label>
      </node>
      <node id="3">
        <label>gtest/gtest.h</label>
      </node>
      <node id="25">
        <label>limits</label>
      </node>
      <node id="12">
        <label>memory</label>
      </node>
      <node id="31">
        <label>sstream</label>
      </node>
      <node id="4">
        <label>stdexcept</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_parse_bool_handler" prot="public">ParseBoolHandler</innerclass>
    <innerclass refid="struct_parse_int_handler" prot="public">ParseIntHandler</innerclass>
    <innerclass refid="struct_parse_uint_handler" prot="public">ParseUintHandler</innerclass>
    <innerclass refid="struct_parse_int64_handler" prot="public">ParseInt64Handler</innerclass>
    <innerclass refid="struct_parse_uint64_handler" prot="public">ParseUint64Handler</innerclass>
    <innerclass refid="struct_parse_double_handler" prot="public">ParseDoubleHandler</innerclass>
    <innerclass refid="struct_parse_string_handler" prot="public">ParseStringHandler</innerclass>
    <innerclass refid="struct_parse_array_handler" prot="public">ParseArrayHandler</innerclass>
    <innerclass refid="struct_parse_object_handler" prot="public">ParseObjectHandler</innerclass>
    <innerclass refid="struct_parse_empty_object_handler" prot="public">ParseEmptyObjectHandler</innerclass>
    <innerclass refid="struct_parse_multiple_root_handler" prot="public">ParseMultipleRootHandler</innerclass>
    <innerclass refid="class_custom_string_stream" prot="public">CustomStringStream</innerclass>
    <innerclass refid="class_i_stream_wrapper" prot="public">IStreamWrapper</innerclass>
    <innerclass refid="class_w_i_stream_wrapper" prot="public">WIStreamWrapper</innerclass>
    <innerclass refid="struct_iterative_parsing_reader_handler" prot="public">IterativeParsingReaderHandler</innerclass>
    <innerclass refid="struct_handler_terminate_at_start_object" prot="public">HandlerTerminateAtStartObject</innerclass>
    <innerclass refid="struct_handler_terminate_at_start_array" prot="public">HandlerTerminateAtStartArray</innerclass>
    <innerclass refid="struct_handler_terminate_at_end_object" prot="public">HandlerTerminateAtEndObject</innerclass>
    <innerclass refid="struct_handler_terminate_at_end_array" prot="public">HandlerTerminateAtEndArray</innerclass>
    <innerclass refid="struct_terminate_handler" prot="public">TerminateHandler</innerclass>
    <innerclass refid="struct_numbers_as_strings_handler" prot="public">NumbersAsStringsHandler</innerclass>
    <innerclass refid="struct_numbers_as_strings_handler_w_char__t" prot="public">NumbersAsStringsHandlerWChar_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" prot="public" static="no">
        <name>TEST_INTEGER</name>
        <param><defname>Handler</defname></param>
        <param><defname>str</defname></param>
        <param><defname>x</defname></param>
        <initializer>    { \
        <ref refid="fwd_8h_1a2d1473c3dd9ab6c975589b45436fe55e" kindref="member">StringStream</ref> s(str); \
        <ref refid="classrapidjson_1_1_handler" kindref="compound">Handler</ref> h; \
        <ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref> reader; \
        reader.Parse(s, h); \
        EXPECT_EQ(1u, h.step_); \
        EXPECT_EQ(x, h.actual_); \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="114" column="9"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" prot="public" static="no">
        <name>TEST_DOUBLE</name>
        <param><defname>fullPrecision</defname></param>
        <param><defname>str</defname></param>
        <param><defname>x</defname></param>
        <initializer>    { \
        <ref refid="fwd_8h_1a2d1473c3dd9ab6c975589b45436fe55e" kindref="member">StringStream</ref> s(str); \
        <ref refid="struct_parse_double_handler" kindref="compound">ParseDoubleHandler</ref> h; \
        <ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref> reader; \
        ASSERT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ac0856bac4945cbd1d09e9502fd8f852f" kindref="member">kParseErrorNone</ref>, reader.Parse&lt;fullPrecision ? <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a057fbeacafb16bb7d24c9998262cae46" kindref="member">kParseFullPrecisionFlag</ref> : 0&gt;(s, h).Code()); \
        EXPECT_EQ(1u, h.step_); \
        <ref refid="classinternal_1_1_double" kindref="compound">internal::Double</ref> e(x), <ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>(h.actual_); \
        if (fullPrecision) { \
            EXPECT_EQ(e.Uint64Value(), a.Uint64Value()); \
            if (e.Uint64Value() != a.Uint64Value()) \
                printf(&quot;  String: %s\n  Actual: %.17g\nExpected: %.17g\n&quot;, str, h.actual_, x); \
        } \
        else { \
            EXPECT_EQ(e.Sign(), a.Sign()); /* for 0.0 != -0.0 */ \
            EXPECT_DOUBLE_EQ(x, h.actual_); \
        } \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="189" column="9"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" prot="public" static="no">
        <name>TEST_NUMBER_ERROR</name>
        <param><defname>errorCode</defname></param>
        <param><defname>str</defname></param>
        <param><defname>errorOffset</defname></param>
        <param><defname>streamPos</defname></param>
        <initializer>    { \
        char buffer[2048]; \
        ASSERT_LT(std::strlen(str), 2048u); \
        sprintf(buffer, &quot;%s&quot;, str); \
        <ref refid="fwd_8h_1a87256fd77e335ea15cd195ed8c55e312" kindref="member">InsituStringStream</ref> s(buffer); \
        <ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;&gt; h; \
        <ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref> reader; \
        EXPECT_FALSE(reader.Parse&lt;fullPrecision ? <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a057fbeacafb16bb7d24c9998262cae46" kindref="member">kParseFullPrecisionFlag</ref> : 0&gt;(s, h)); \
        EXPECT_EQ(errorCode, reader.GetParseErrorCode());\
        EXPECT_EQ(errorOffset, reader.GetErrorOffset());\
        EXPECT_EQ(streamPos, s.Tell());\
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="631" column="9"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" prot="public" static="no">
        <name>TEST_STRING</name>
        <param><defname>Encoding</defname></param>
        <param><defname>e</defname></param>
        <param><defname>x</defname></param>
        <initializer>    { \
        Encoding::Ch* buffer = <ref refid="unittest_8h_1a0b8e1bafb97ad4a272c5cc4469a13687" kindref="member">StrDup</ref>(x); \
        <ref refid="struct_generic_insitu_string_stream" kindref="compound">GenericInsituStringStream</ref>&lt;<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>&gt; is(buffer); \
        <ref refid="struct_parse_string_handler" kindref="compound">ParseStringHandler</ref>&lt;<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>&gt; h; \
        <ref refid="class_generic_reader" kindref="compound">GenericReader</ref>&lt;<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>&gt; reader; \
        reader.Parse&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref> | <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9b3baa16346575d2dc072b23a88e1928" kindref="member">kParseValidateEncodingFlag</ref>&gt;(is, h); \
        EXPECT_EQ(0, <ref refid="unittest_8h_1a8d8e3cf93e9b811c207711d0b353de02" kindref="member">StrCmp</ref>&lt;Encoding::Ch&gt;(e, h.str_)); \
        EXPECT_EQ(<ref refid="unittest_8h_1a158bf1a4953297866644112d81a7a3e7" kindref="member">StrLen</ref>(e), h.length_); \
        free(buffer); \
        <ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream</ref>&lt;<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>&gt; s(x); \
        <ref refid="struct_parse_string_handler" kindref="compound">ParseStringHandler</ref>&lt;<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>&gt; h2; \
        <ref refid="class_generic_reader" kindref="compound">GenericReader</ref>&lt;<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>&gt; reader2; \
        reader2.Parse(s, h2); \
        EXPECT_EQ(0, <ref refid="unittest_8h_1a8d8e3cf93e9b811c207711d0b353de02" kindref="member">StrCmp</ref>&lt;Encoding::Ch&gt;(e, h2.str_)); \
        EXPECT_EQ(<ref refid="unittest_8h_1a158bf1a4953297866644112d81a7a3e7" kindref="member">StrLen</ref>(e), h2.length_); \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="783" column="9"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" prot="public" static="no">
        <name>ARRAY</name>
        <param><defname>...</defname></param>
        <initializer>{ __VA_ARGS__ }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="805" column="9"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1aca32d23ddbdec658bb1ca388b6f6bb97" prot="public" static="no">
        <name>TEST_STRINGARRAY</name>
        <param><defname>Encoding</defname></param>
        <param><defname>utype</defname></param>
        <param><defname>array</defname></param>
        <param><defname>x</defname></param>
        <initializer>    { \
        static const utype ue[] = array; \
        static const Encoding::Ch* e = reinterpret_cast&lt;const Encoding::Ch *&gt;(&amp;ue[0]); \
        <ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, e, x); \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="806" column="9"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1afe94ee74dfe8222d034c1c8924b51080" prot="public" static="no">
        <name>TEST_STRINGARRAY2</name>
        <param><defname>Encoding</defname></param>
        <param><defname>utype</defname></param>
        <param><defname>earray</defname></param>
        <param><defname>xarray</defname></param>
        <initializer>    { \
        static const utype ue[] = earray; \
        static const utype xe[] = xarray; \
        static const Encoding::Ch* e = reinterpret_cast&lt;const Encoding::Ch *&gt;(&amp;ue[0]); \
        static const Encoding::Ch* x = reinterpret_cast&lt;const Encoding::Ch *&gt;(&amp;xe[0]); \
        <ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, e, x); \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="813" column="9"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1a5f47d54ec9d33d6d02cf84fbf375b393" prot="public" static="no">
        <name>TEST_STRING_ERROR</name>
        <param><defname>errorCode</defname></param>
        <param><defname>str</defname></param>
        <param><defname>errorOffset</defname></param>
        <param><defname>streamPos</defname></param>
        <initializer>{\
    <ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream</ref>&lt;<ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt; &gt; s(str);\
    <ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;<ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt; &gt; h;\
    <ref refid="class_generic_reader" kindref="compound">GenericReader</ref>&lt;<ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt; , <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt; &gt; reader;\
    reader.Parse&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9b3baa16346575d2dc072b23a88e1928" kindref="member">kParseValidateEncodingFlag</ref>&gt;(s, h);\
    EXPECT_EQ(errorCode, reader.GetParseErrorCode());\
    EXPECT_EQ(errorOffset, reader.GetErrorOffset());\
    EXPECT_EQ(streamPos, s.Tell());\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="908" column="9"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" prot="public" static="no">
        <name>ARRAY</name>
        <param><defname>...</defname></param>
        <initializer>{ __VA_ARGS__ }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="919" column="9"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" prot="public" static="no">
        <name>TEST_STRINGENCODING_ERROR</name>
        <param><defname>Encoding</defname></param>
        <param><defname>TargetEncoding</defname></param>
        <param><defname>utype</defname></param>
        <param><defname>array</defname></param>
        <initializer>    { \
        static const utype ue[] = array; \
        static const Encoding::Ch* e = reinterpret_cast&lt;const Encoding::Ch *&gt;(&amp;ue[0]); \
        EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a17ecb2ed1524b513d64a93f4a7a8b456" kindref="member">kParseErrorStringInvalidEncoding</ref>, <ref refid="readertest_8cpp_1aecbde81eaceef1ab965fbccc9c6a2cc1" kindref="member">TestString</ref>&lt;<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>&gt;(e));\
        /* decode error */\
        <ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream</ref>&lt;<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>&gt; s(e);\
        <ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;TargetEncoding&gt; h;\
        <ref refid="class_generic_reader" kindref="compound">GenericReader</ref>&lt;<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, TargetEncoding&gt; reader;\
        reader.Parse(s, h);\
        EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a17ecb2ed1524b513d64a93f4a7a8b456" kindref="member">kParseErrorStringInvalidEncoding</ref>, reader.GetParseErrorCode());\
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="920" column="9"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1aab63dea66734b992ac716833984e6a6e" prot="public" static="no">
        <name>TEST_ARRAY_ERROR</name>
        <param><defname>errorCode</defname></param>
        <param><defname>str</defname></param>
        <param><defname>errorOffset</defname></param>
        <initializer>    { \
        unsigned streamPos = errorOffset; \
        char buffer[1001]; \
        strncpy(buffer, str, 1000); \
        <ref refid="fwd_8h_1a87256fd77e335ea15cd195ed8c55e312" kindref="member">InsituStringStream</ref> s(buffer); \
        <ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;&gt; h; \
        <ref refid="class_generic_reader" kindref="compound">GenericReader</ref>&lt;<ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt;, <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt;, <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>&gt; reader; \
        EXPECT_FALSE(reader.Parse(s, h)); \
        EXPECT_EQ(errorCode, reader.GetParseErrorCode());\
        EXPECT_EQ(errorOffset, reader.GetErrorOffset());\
        EXPECT_EQ(streamPos, s.Tell());\
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1066" column="9"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" prot="public" static="no">
        <name>TEST_ERROR</name>
        <param><defname>errorCode</defname></param>
        <param><defname>str</defname></param>
        <param><defname>errorOffset</defname></param>
        <initializer>    { \
        unsigned streamPos = errorOffset; \
        char buffer[1001]; \
        strncpy(buffer, str, 1000); \
        <ref refid="fwd_8h_1a87256fd77e335ea15cd195ed8c55e312" kindref="member">InsituStringStream</ref> s(buffer); \
        <ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;&gt; h; \
        <ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref> reader; \
        EXPECT_FALSE(reader.Parse(s, h)); \
        EXPECT_EQ(errorCode, reader.GetParseErrorCode());\
        EXPECT_EQ(errorOffset, reader.GetErrorOffset());\
        EXPECT_EQ(streamPos, s.Tell());\
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1234" column="9" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" prot="public" static="no">
        <name>TESTERRORHANDLING</name>
        <param><defname>text</defname></param>
        <param><defname>errorCode</defname></param>
        <param><defname>offset</defname></param>
        <initializer>{\
    unsigned streamPos = offset; \
    <ref refid="fwd_8h_1a2d1473c3dd9ab6c975589b45436fe55e" kindref="member">StringStream</ref> json(text); \
    <ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;&gt; handler; \
    <ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref> reader; \
    reader.Parse&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aadb14f5a3b6b33e28055e913a2eae5e9" kindref="member">kParseIterativeFlag</ref>&gt;(json, handler); \
    EXPECT_TRUE(reader.HasParseError()); \
    EXPECT_EQ(errorCode, reader.GetParseErrorCode()); \
    EXPECT_EQ(offset, reader.GetErrorOffset()); \
    EXPECT_EQ(streamPos, json.Tell()); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1439" column="9" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" prot="public" static="no">
        <name>TEST_TERMINATION</name>
        <param><defname>e</defname></param>
        <param><defname>json</defname></param>
        <initializer>{\
    <ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref> reader;\
    <ref refid="struct_terminate_handler" kindref="compound">TerminateHandler</ref>&lt;e&gt; h;\
    <ref refid="fwd_8h_1a2d1473c3dd9ab6c975589b45436fe55e" kindref="member">StringStream</ref> is(json);\
    EXPECT_FALSE(reader.Parse(is, h));\
    EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a6fed2d9a15f88540a1ba785f0de2cbe6" kindref="member">kParseErrorTermination</ref>, reader.GetParseErrorCode());\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1760" column="9" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1760" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1a0cb67eee4e9c25329656c6c6359073d7" prot="public" static="no">
        <name>TEST_NAN_INF</name>
        <param><defname>str</defname></param>
        <param><defname>x</defname></param>
        <initializer>    { \
        { \
            <ref refid="fwd_8h_1a2d1473c3dd9ab6c975589b45436fe55e" kindref="member">StringStream</ref> s(str); \
            <ref refid="struct_parse_double_handler" kindref="compound">ParseDoubleHandler</ref> h; \
            <ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref> reader; \
            ASSERT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ac0856bac4945cbd1d09e9502fd8f852f" kindref="member">kParseErrorNone</ref>, reader.Parse&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9849d65c1d3edd796bd75897c6a37eb6" kindref="member">kParseNanAndInfFlag</ref>&gt;(s, h).Code()); \
            EXPECT_EQ(1u, h.step_); \
            <ref refid="classinternal_1_1_double" kindref="compound">internal::Double</ref> e(x), <ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>(h.actual_); \
            EXPECT_EQ(e.IsNan(), a.IsNan()); \
            EXPECT_EQ(e.IsInf(), a.IsInf()); \
            if (!e.IsNan()) \
                EXPECT_EQ(e.Sign(), a.Sign()); \
        } \
        { \
            const char* json = &quot;{ \&quot;naninfdouble\&quot;: &quot; str &quot; } &quot;; \
            <ref refid="fwd_8h_1a2d1473c3dd9ab6c975589b45436fe55e" kindref="member">StringStream</ref> s(json); \
            <ref refid="struct_numbers_as_strings_handler" kindref="compound">NumbersAsStringsHandler</ref> h(str); \
            <ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref> reader; \
            EXPECT_TRUE(reader.Parse&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9849d65c1d3edd796bd75897c6a37eb6" kindref="member">kParseNanAndInfFlag</ref>&gt;(s, h)); \
        } \
        { \
            char* json = <ref refid="unittest_8h_1a0b8e1bafb97ad4a272c5cc4469a13687" kindref="member">StrDup</ref>(&quot;{ \&quot;naninfdouble\&quot;: &quot; str &quot; } &quot;); \
            <ref refid="fwd_8h_1a87256fd77e335ea15cd195ed8c55e312" kindref="member">InsituStringStream</ref> s(json); \
            <ref refid="struct_numbers_as_strings_handler" kindref="compound">NumbersAsStringsHandler</ref> h(str); \
            <ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref> reader; \
            EXPECT_TRUE(reader.Parse&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref>|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9849d65c1d3edd796bd75897c6a37eb6" kindref="member">kParseNanAndInfFlag</ref>&gt;(s, h)); \
            free(json); \
        } \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2280" column="9"/>
      </memberdef>
      <memberdef kind="define" id="readertest_8cpp_1a49931364fff3592ba2dcb37ac90d3b10" prot="public" static="no">
        <name>TEST_NAN_INF_ERROR</name>
        <param><defname>errorCode</defname></param>
        <param><defname>str</defname></param>
        <param><defname>errorOffset</defname></param>
        <initializer>    { \
        unsigned streamPos = errorOffset; \
        char buffer[1001]; \
        strncpy(buffer, str, 1000); \
        <ref refid="fwd_8h_1a87256fd77e335ea15cd195ed8c55e312" kindref="member">InsituStringStream</ref> s(buffer); \
        <ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;&gt; h; \
        <ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref> reader; \
        EXPECT_FALSE(reader.Parse&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9849d65c1d3edd796bd75897c6a37eb6" kindref="member">kParseNanAndInfFlag</ref>&gt;(s, h)); \
        EXPECT_EQ(errorCode, reader.GetParseErrorCode());\
        EXPECT_EQ(errorOffset, reader.GetErrorOffset());\
        EXPECT_EQ(streamPos, s.Tell());\
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2310" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseTrue)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseTrue</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="52" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="52" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a89b2294cf02d35650e58af5b803143b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseFalse)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseFalse</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="60" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="60" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a0f338ae50a463adeddde167f9409bedc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseNumber_Integer)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseNumber_Integer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="113" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="113" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a5c2101dbf9a27e30498703f68bd8c730" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>fullPrecision</declname>
            <defname>fullPrecision</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void TestParseDouble</definition>
        <argsstring>()</argsstring>
        <name>TestParseDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="188" column="13" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="188" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1aa293384d534e668619d44318d3d77d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseNumber_NormalPrecisionDouble)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseNumber_NormalPrecisionDouble</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="587" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="587" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1aa2ce5bf11a889af8f9efe3fd77240fd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseNumber_FullPrecisionDouble)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseNumber_FullPrecisionDouble</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="591" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="591" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a2be15887d12d0e7bb634d6807da64b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseNumber_NormalPrecisionError)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseNumber_NormalPrecisionError</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="595" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="595" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a79e292edbfa6bebc9c8c3194b8a3696b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>fullPrecision</declname>
            <defname>fullPrecision</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void TestParseNumberError</definition>
        <argsstring>()</argsstring>
        <name>TestParseNumberError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="630" column="13" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="630" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a0a70a215ad0f6c5484dfbcb0d32dec72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseNumberError_NormalPrecisionDouble)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseNumberError_NormalPrecisionDouble</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="747" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="747" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a2bbd1606be48d3fa85117a864ec9c9e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseNumberError_FullPrecisionDouble)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseNumberError_FullPrecisionDouble</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="751" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="751" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a15e169b6344e504df0eea4b5121060da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseString)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseString</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="782" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="782" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a74f5978d08350eef0b4c9e458f9fb811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseString_Transcoding)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseString_Transcoding</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="867" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="867" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1ab541be9d37347bb83774aa2bc99a7482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseString_TranscodingWithValidation)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseString_TranscodingWithValidation</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="878" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="878" bodyend="887"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a90cebede6f67a54e178e049793bf0d98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseString_NonDestructive)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseString_NonDestructive</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="889" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="889" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1aecbde81eaceef1ab965fbccc9c6a2cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7" kindref="member">ParseErrorCode</ref></type>
        <definition>ParseErrorCode TestString</definition>
        <argsstring>(const typename Encoding::Ch *str)</argsstring>
        <name>TestString</name>
        <param>
          <type>const typename Encoding::Ch *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="899" column="16" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="899" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1abd8b31cbdcf64777f9389eb782096914" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseString_Error)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseString_Error</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="907" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="907" bodyend="1031"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a351a887dbc1a7a7edc582e45e8c0e2e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseEmptyArray)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseEmptyArray</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1045" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1045" bodyend="1053"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1af99e41513ed14fec7e1d4d3e2f610819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseArray)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseArray</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1055" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1055" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a2bbae6820b8599a03c91235a3b96e141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseArray_Error)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseArray_Error</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1065" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1065" bodyend="1090"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a2c25bdca73b3dcbf73aa441f9277384f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseObject)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseObject</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1136" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1136" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a18bca8296eaae111c4373dfa381a1c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, Parse_EmptyObject)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>Parse_EmptyObject</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1170" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1170" bodyend="1176"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a43a70800373051361573d37f95bb433e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>parseFlags</declname>
            <defname>parseFlags</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void TestMultipleRoot</definition>
        <argsstring>()</argsstring>
        <name>TestMultipleRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1191" column="6" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1191" bodyend="1201"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a5b7ceca8eb13509ac2015a74c90b004a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, Parse_MultipleRoot)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>Parse_MultipleRoot</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1203" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1203" bodyend="1205"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a190231ffaeee049afcbe613dbbc5751b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseIterative_MultipleRoot)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseIterative_MultipleRoot</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1207" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1207" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a3e697a5cd8deeff851239ddc33e9466f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>parseFlags</declname>
            <defname>parseFlags</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void TestInsituMultipleRoot</definition>
        <argsstring>()</argsstring>
        <name>TestInsituMultipleRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1212" column="6" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1212" bodyend="1224"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1aa237ee4974ab4463734b51bc308d53bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseInsitu_MultipleRoot)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseInsitu_MultipleRoot</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1226" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1226" bodyend="1228"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a341f256b64084922f5f08d42b610a183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseInsituIterative_MultipleRoot)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseInsituIterative_MultipleRoot</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1230" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1230" bodyend="1232"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a903c1326dbf0e8ce889aaee534ce5c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseDocument_Error)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseDocument_Error</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1248" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1248" bodyend="1259"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1abb4708dbc92034ce8428154fc3446ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseValue_Error)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseValue_Error</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1261" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1261" bodyend="1268"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1aae5733e8671508fb38ac9e90911e1be7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseObject_Error)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseObject_Error</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1270" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1270" bodyend="1301"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1abfa886640a194ac6dbdd83d87d6d6501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, SkipWhitespace)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type><ref refid="reader_8h_1aeddf0374b22926be76140ec6708dc203" kindref="member">SkipWhitespace</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1305" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1305" bodyend="1312"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a9fb049586354f7af008ba7f57cb7932c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, CustomStringStream)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type><ref refid="class_custom_string_stream" kindref="compound">CustomStringStream</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1354" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1354" bodyend="1361"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a90f7ee3e65bb9a8d14555eb2dd6e4393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, Parse_IStreamWrapper_StringStream)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>Parse_IStreamWrapper_StringStream</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1425" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1425" bodyend="1435"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1aeaebdcc79099df91507f5f015d762569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, IterativeParsing_ErrorHandling)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>IterativeParsing_ErrorHandling</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1452" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1452" bodyend="1484"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a2112c6391e74b80c3d2db6e327d88e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, IterativeParsing_General)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>IterativeParsing_General</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1550" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1550" bodyend="1585"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a993a1536dc41d6024e435a2c48b24923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, IterativeParsing_Count)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>IterativeParsing_Count</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1587" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1587" bodyend="1620"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a70dd9ea1fe24447f13125e256e315086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, IterativePullParsing_General)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>IterativePullParsing_General</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1622" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1622" bodyend="1665"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a870329d14861214eb2ae5a9a8609bf8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, IterativeParsing_ShortCircuit)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>IterativeParsing_ShortCircuit</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1684" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1684" bodyend="1732"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a854d1d6e5e6ac5e209a75851b64f6085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, BaseReaderHandler_Default)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>BaseReaderHandler_Default</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1735" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1735" bodyend="1740"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a37d7b918c516febe122eb98fd95d835d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseTerminationByHandler)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseTerminationByHandler</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1769" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1769" bodyend="1787"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a8dc48b304866b695871d888ea0a2592d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseComments)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseComments</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1789" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1789" bodyend="1805"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a3f3480cf5d13c5818b549265bf3ac1ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseEmptyInlineComment)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseEmptyInlineComment</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1807" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1807" bodyend="1815"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a56fcadf8f03df7af57cad7acadf504ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseEmptyOnelineComment)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseEmptyOnelineComment</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1817" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1817" bodyend="1825"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1afd6d8f1c19c09ae0d6f919f61bbad887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseMultipleCommentsInARow)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseMultipleCommentsInARow</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1827" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1827" bodyend="1838"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a942f3e82ad0c2e74f2ed0d5bb92d5495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, InlineCommentsAreDisabledByDefault)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>InlineCommentsAreDisabledByDefault</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1840" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1840" bodyend="1861"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a877aa3d42a2ee1b20d26c2480b1104ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, OnelineCommentsAreDisabledByDefault)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>OnelineCommentsAreDisabledByDefault</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1863" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1863" bodyend="1870"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a5df37d2665c76b6becee133720872a39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, EofAfterOneLineComment)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>EofAfterOneLineComment</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1872" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1872" bodyend="1880"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a6e04bdedbeaf39e022d22054f399af8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, IncompleteMultilineComment)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>IncompleteMultilineComment</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1882" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1882" bodyend="1890"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a4ed130c1c10e5e9c32bb00ca9fb715ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, IncompleteMultilineComment2)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>IncompleteMultilineComment2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1892" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1892" bodyend="1900"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a287de0c3676e77b625b3984de3c8018d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, UnrecognizedComment)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>UnrecognizedComment</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1902" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1902" bodyend="1910"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a54ff7ac35c2b6ed78f427e77b9ba2b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, NumbersAsStrings)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>NumbersAsStrings</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="1942" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="1942" bodyend="2022"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1ae854759d4b07a3e1f82705d7e577787e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, NumbersAsStringsWChar_t)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>NumbersAsStringsWChar_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2054" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2054" bodyend="2134"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a53b9204ec8bf882697790d11e728f81f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>extraFlags</declname>
            <defname>extraFlags</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void TestTrailingCommas</definition>
        <argsstring>()</argsstring>
        <name>TestTrailingCommas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2137" column="6" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2137" bodyend="2174"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a6915cfb99ca350fe96d8d3bcfdd8cd88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, TrailingCommas)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>TrailingCommas</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2176" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2176" bodyend="2178"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a682347bb2b9e7237a432cc36c07c81a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, TrailingCommasIterative)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>TrailingCommasIterative</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2180" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2180" bodyend="2182"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a655f124d90808a045e7fb01f27c56c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>extraFlags</declname>
            <defname>extraFlags</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void TestMultipleTrailingCommaErrors</definition>
        <argsstring>()</argsstring>
        <name>TestMultipleTrailingCommaErrors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2185" column="6" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2185" bodyend="2207"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a5f560a3f67d416d54dcfded7ecfbd04f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, MultipleTrailingCommaErrors)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>MultipleTrailingCommaErrors</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2209" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2209" bodyend="2211"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a41e6c386bd804991906f8e7420df4635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, MultipleTrailingCommaErrorsIterative)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>MultipleTrailingCommaErrorsIterative</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2213" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2213" bodyend="2215"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a32605d0e16ee73d21ab6009f266e3593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>extraFlags</declname>
            <defname>extraFlags</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void TestEmptyExceptForCommaErrors</definition>
        <argsstring>()</argsstring>
        <name>TestEmptyExceptForCommaErrors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2218" column="6" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2218" bodyend="2239"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1aa18cc109c75368968b1be3c938ad2e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, EmptyExceptForCommaErrors)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>EmptyExceptForCommaErrors</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2241" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2241" bodyend="2243"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1ab5c9b6f1601c378c4448ceba82e07e09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, EmptyExceptForCommaErrorsIterative)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>EmptyExceptForCommaErrorsIterative</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2245" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2245" bodyend="2247"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1aee91bf3d9cd695a8cbe30cecb97e8351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>extraFlags</declname>
            <defname>extraFlags</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void TestTrailingCommaHandlerTermination</definition>
        <argsstring>()</argsstring>
        <name>TestTrailingCommaHandlerTermination</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2250" column="6" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2250" bodyend="2269"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a5cf2c15500cac34d39712e79413904b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, TrailingCommaHandlerTermination)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>TrailingCommaHandlerTermination</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2271" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2271" bodyend="2273"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1ad85517af92c65a0853f67ad7d1609513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, TrailingCommaHandlerTerminationIterative)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>TrailingCommaHandlerTerminationIterative</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2275" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2275" bodyend="2277"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a317013469a1faa845f73423bcf057668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, ParseNanAndInfinity)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>ParseNanAndInfinity</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2279" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2279" bodyend="2344"/>
      </memberdef>
      <memberdef kind="function" id="readertest_8cpp_1a29547e2b6fa655bc161c074a0a183c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Reader, EscapedApostrophe)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref></type>
        </param>
        <param>
          <type>EscapedApostrophe</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/readertest.cpp" line="2346" column="1" bodyfile="src/rapidjson/test/unittest/readertest.cpp" bodystart="2346" bodyend="2368"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://opensource.org/licenses/MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unittest_8h" kindref="compound">unittest.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reader_8h" kindref="compound">rapidjson/reader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dtoa_8h" kindref="compound">rapidjson/internal/dtoa.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="itoa_8h" kindref="compound">rapidjson/internal/itoa.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memorystream_8h" kindref="compound">rapidjson/memorystream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerapidjson" kindref="compound">rapidjson</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">RAPIDJSON_DIAG_OFF(effc++)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">RAPIDJSON_DIAG_OFF(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">-equal)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">RAPIDJSON_DIAG_OFF(missing-noreturn)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__GNUC__<sp/>&gt;=<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">RAPIDJSON_DIAG_OFF(dangling-</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">RAPIDJSON_DIAG_OFF(variadic-macros)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">RAPIDJSON_DIAG_OFF(c++98-compat-pedantic)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expect&gt;</highlight></codeline>
<codeline lineno="42" refid="struct_parse_bool_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_parse_bool_handler" kindref="compound">ParseBoolHandler</ref><sp/>:<sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;UTF8&lt;&gt;,<sp/>ParseBoolHandler&lt;expect&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_bool_handler_1a5e72739a61eb59ba94707af007f3d7c8" kindref="member">ParseBoolHandler</ref>()<sp/>:<sp/><ref refid="struct_parse_bool_handler_1adbc3eb6c0be7e5d04f0c18e9b5a8dda0" kindref="member">step_</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_bool_handler_1acb03293febb0ba636d87e8ad40cae173" kindref="member">Default</ref>()<sp/>{<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gcc<sp/>4.8.x<sp/>generates<sp/>warning<sp/>in<sp/>EXPECT_EQ(bool,<sp/>bool)<sp/>on<sp/>this<sp/>gtest<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>with<sp/>EXPECT_TRUE().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_bool_handler_1a0049f3ad34f900872d3a7af3b13dad9d" kindref="member">Bool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/></highlight><highlight class="comment">/*EXPECT_EQ(expect,<sp/>b);<sp/>*/</highlight><highlight class="normal">EXPECT_TRUE(expect<sp/>==<sp/>b);<sp/><sp/>++<ref refid="struct_parse_bool_handler_1adbc3eb6c0be7e5d04f0c18e9b5a8dda0" kindref="member">step_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_parse_bool_handler_1adbc3eb6c0be7e5d04f0c18e9b5a8dda0" kindref="member">step_</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseTrue)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_bool_handler" kindref="compound">ParseBoolHandler&lt;true&gt;</ref><sp/>h;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(s,<sp/>h);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>h.<ref refid="struct_parse_bool_handler_1adbc3eb6c0be7e5d04f0c18e9b5a8dda0" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseFalse)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_bool_handler" kindref="compound">ParseBoolHandler&lt;false&gt;</ref><sp/>h;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(s,<sp/>h);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>h.<ref refid="struct_parse_bool_handler_1adbc3eb6c0be7e5d04f0c18e9b5a8dda0" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="struct_parse_int_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_parse_int_handler" kindref="compound">ParseIntHandler</ref><sp/>:<sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;UTF8&lt;&gt;,<sp/>ParseIntHandler&gt;<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_int_handler_1a5c913e117644f43d59fbcacaa0522a85" kindref="member">ParseIntHandler</ref>()<sp/>:<sp/><ref refid="struct_parse_int_handler_1a3f46d0e16ce7e6b971365be591fa34d3" kindref="member">step_</ref>(0),<sp/><ref refid="struct_parse_int_handler_1aea386237fde9c8138d8d789b8aae08ec" kindref="member">actual_</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_int_handler_1a11a5ab998e97d1147bed4719e1fcd1be" kindref="member">Default</ref>()<sp/>{<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_int_handler_1a49c206f58fa5e14ac98fa7177e7ecb76" kindref="member">Int</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/><ref refid="struct_parse_int_handler_1aea386237fde9c8138d8d789b8aae08ec" kindref="member">actual_</ref><sp/>=<sp/>i;<sp/><ref refid="struct_parse_int_handler_1a3f46d0e16ce7e6b971365be591fa34d3" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_parse_int_handler_1a3f46d0e16ce7e6b971365be591fa34d3" kindref="member">step_</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_parse_int_handler_1aea386237fde9c8138d8d789b8aae08ec" kindref="member">actual_</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="struct_parse_uint_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_parse_uint_handler" kindref="compound">ParseUintHandler</ref><sp/>:<sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;UTF8&lt;&gt;,<sp/>ParseUintHandler&gt;<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_uint_handler_1aafbf33bfbdedf113b7b912d4f6c33db6" kindref="member">ParseUintHandler</ref>()<sp/>:<sp/><ref refid="struct_parse_uint_handler_1af43d2a71bdc15a2583732ac816a551d6" kindref="member">step_</ref>(0),<sp/><ref refid="struct_parse_uint_handler_1ad70a6aa614308f65904c868f7664aa53" kindref="member">actual_</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_uint_handler_1acd10fc590290ed95ccd99775548160e8" kindref="member">Default</ref>()<sp/>{<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_uint_handler_1a2290648d0503467464ab0ad8d2183f37" kindref="member">Uint</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/><ref refid="struct_parse_uint_handler_1ad70a6aa614308f65904c868f7664aa53" kindref="member">actual_</ref><sp/>=<sp/>i;<sp/><ref refid="struct_parse_uint_handler_1af43d2a71bdc15a2583732ac816a551d6" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_parse_uint_handler_1af43d2a71bdc15a2583732ac816a551d6" kindref="member">step_</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_parse_uint_handler_1ad70a6aa614308f65904c868f7664aa53" kindref="member">actual_</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="struct_parse_int64_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_parse_int64_handler" kindref="compound">ParseInt64Handler</ref><sp/>:<sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;UTF8&lt;&gt;,<sp/>ParseInt64Handler&gt;<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_int64_handler_1a96a1294a2026f43974ece2944c4be676" kindref="member">ParseInt64Handler</ref>()<sp/>:<sp/><ref refid="struct_parse_int64_handler_1acd24bb7ddd2bc1ff8b984410d783e0ee" kindref="member">step_</ref>(0),<sp/><ref refid="struct_parse_int64_handler_1aeaeb5c885362daaf95734924ee6169e4" kindref="member">actual_</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_int64_handler_1ac0082efdf022e83aa346c9013e4ea15f" kindref="member">Default</ref>()<sp/>{<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_int64_handler_1ad97b59ad9cf7b43e4ee7beb9c7d96070" kindref="member">Int64</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i)<sp/>{<sp/><ref refid="struct_parse_int64_handler_1aeaeb5c885362daaf95734924ee6169e4" kindref="member">actual_</ref><sp/>=<sp/>i;<sp/><ref refid="struct_parse_int64_handler_1acd24bb7ddd2bc1ff8b984410d783e0ee" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_parse_int64_handler_1acd24bb7ddd2bc1ff8b984410d783e0ee" kindref="member">step_</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/><ref refid="struct_parse_int64_handler_1aeaeb5c885362daaf95734924ee6169e4" kindref="member">actual_</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="struct_parse_uint64_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_parse_uint64_handler" kindref="compound">ParseUint64Handler</ref><sp/>:<sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;UTF8&lt;&gt;,<sp/>ParseUint64Handler&gt;<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_uint64_handler_1aaf3899d57b8d0a729413be42d97ff136" kindref="member">ParseUint64Handler</ref>()<sp/>:<sp/><ref refid="struct_parse_uint64_handler_1a756d7b1d6639d040323d0c018af1efa7" kindref="member">step_</ref>(0),<sp/><ref refid="struct_parse_uint64_handler_1ab388e859e8549d588f4ba614c71c32b8" kindref="member">actual_</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_uint64_handler_1a5c055b99b7b40666041732a562bc47a5" kindref="member">Default</ref>()<sp/>{<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_uint64_handler_1a602ae7b070e774602f84f462f8c4628f" kindref="member">Uint64</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>i)<sp/>{<sp/><ref refid="struct_parse_uint64_handler_1ab388e859e8549d588f4ba614c71c32b8" kindref="member">actual_</ref><sp/>=<sp/>i;<sp/><ref refid="struct_parse_uint64_handler_1a756d7b1d6639d040323d0c018af1efa7" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_parse_uint64_handler_1a756d7b1d6639d040323d0c018af1efa7" kindref="member">step_</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/><ref refid="struct_parse_uint64_handler_1ab388e859e8549d588f4ba614c71c32b8" kindref="member">actual_</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="struct_parse_double_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_parse_double_handler" kindref="compound">ParseDoubleHandler</ref><sp/>:<sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;UTF8&lt;&gt;,<sp/>ParseDoubleHandler&gt;<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_double_handler_1a86acadf6b8f9d430e06fc2be726da0f3" kindref="member">ParseDoubleHandler</ref>()<sp/>:<sp/><ref refid="struct_parse_double_handler_1a2ae77600834d2a72a13e7d7e0e22cdbb" kindref="member">step_</ref>(0),<sp/><ref refid="struct_parse_double_handler_1a5d949538e0cea58ea4d7048a09d30119" kindref="member">actual_</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_double_handler_1ae2a1a5ffe93b2c95470117b103cf7efa" kindref="member">Default</ref>()<sp/>{<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_double_handler_1a5b2b5da1eb50e5baae2682c108beac39" kindref="member">Double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/>{<sp/><ref refid="struct_parse_double_handler_1a5d949538e0cea58ea4d7048a09d30119" kindref="member">actual_</ref><sp/>=<sp/>d;<sp/><ref refid="struct_parse_double_handler_1a2ae77600834d2a72a13e7d7e0e22cdbb" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_parse_double_handler_1a2ae77600834d2a72a13e7d7e0e22cdbb" kindref="member">step_</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_parse_double_handler_1a5d949538e0cea58ea4d7048a09d30119" kindref="member">actual_</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseNumber_Integer)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_INTEGER(Handler,<sp/>str,<sp/>x)<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StringStream<sp/>s(str);<sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handler<sp/>h;<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reader<sp/>reader;<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader.Parse(s,<sp/>h);<sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>h.step_);<sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(x,<sp/>h.actual_);<sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_uint_handler" kindref="compound">ParseUintHandler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>0u);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_uint_handler" kindref="compound">ParseUintHandler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;123&quot;</highlight><highlight class="normal">,<sp/>123u);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_uint_handler" kindref="compound">ParseUintHandler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;2147483648&quot;</highlight><highlight class="normal">,<sp/>2147483648u);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2^31<sp/>-<sp/>1<sp/>(cannot<sp/>be<sp/>stored<sp/>in<sp/>int)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_uint_handler" kindref="compound">ParseUintHandler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;4294967295&quot;</highlight><highlight class="normal">,<sp/>4294967295u);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_int_handler" kindref="compound">ParseIntHandler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-123&quot;</highlight><highlight class="normal">,<sp/>-123);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_int_handler" kindref="compound">ParseIntHandler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-2147483648&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0x80000000));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-2^31<sp/>(min<sp/>of<sp/>int)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_uint64_handler" kindref="compound">ParseUint64Handler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;4294967296&quot;</highlight><highlight class="normal">,<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(1,<sp/>0));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2^32<sp/>(max<sp/>of<sp/>unsigned<sp/>+<sp/>1,<sp/>force<sp/>to<sp/>use<sp/>uint64_t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_uint64_handler" kindref="compound">ParseUint64Handler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;18446744073709551615&quot;</highlight><highlight class="normal">,<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0xFFFFFFFF));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2^64<sp/>-<sp/>1<sp/>(max<sp/>of<sp/>uint64_t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_int64_handler" kindref="compound">ParseInt64Handler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-2147483649&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x7FFFFFFF)));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-2^31<sp/>-1<sp/>(min<sp/>of<sp/>int<sp/>-<sp/>1,<sp/>force<sp/>to<sp/>use<sp/>int64_t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_int64_handler" kindref="compound">ParseInt64Handler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-9223372036854775808&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0x80000000,<sp/>0x00000000)));<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-2^63<sp/>(min<sp/>of<sp/>int64_t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Random<sp/>test<sp/>for<sp/>uint32_t/int32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>u;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref><sp/>i;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}u;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_random" kindref="compound">Random</ref><sp/>r;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u.u<sp/>=<sp/>r();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[32];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespaceinternal_1a90e3cb218b557548f361e99dc718b4b1" kindref="member">internal::u32toa</ref>(u.u,<sp/>buffer)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_uint_handler" kindref="compound">ParseUintHandler</ref>,<sp/>buffer,<sp/>u.u);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u.i<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespaceinternal_1ac6c7d763acc9ca9f15a759241640328e" kindref="member">internal::i32toa</ref>(u.i,<sp/>buffer)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_int_handler" kindref="compound">ParseIntHandler</ref>,<sp/>buffer,<sp/>u.i);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Random<sp/>test<sp/>for<sp/>uint64_t/int64_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>u;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}u;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_random" kindref="compound">Random</ref><sp/>r;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u.u<sp/>=<sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>(r())<sp/>&lt;&lt;<sp/>32;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u.u<sp/>|=<sp/>r();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[32];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u.u<sp/>&gt;<sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>(4294967295u))<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespaceinternal_1a489150922c0320e4290b455bf3c6e36c" kindref="member">internal::u64toa</ref>(u.u,<sp/>buffer)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_uint64_handler" kindref="compound">ParseUint64Handler</ref>,<sp/>buffer,<sp/>u.u);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u.i<sp/>&lt;<sp/>-<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref>(2147483648u))<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespaceinternal_1a527358458754f514c249c55c27b35526" kindref="member">internal::i64toa</ref>(u.i,<sp/>buffer)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aa487c2e30c2c0abec07c6ef75baf3aee" kindref="member">TEST_INTEGER</ref>(<ref refid="struct_parse_int64_handler" kindref="compound">ParseInt64Handler</ref>,<sp/>buffer,<sp/>u.i);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TEST_INTEGER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fullPrecision&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestParseDouble()<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_DOUBLE(fullPrecision,<sp/>str,<sp/>x)<sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StringStream<sp/>s(str);<sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParseDoubleHandler<sp/>h;<sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reader<sp/>reader;<sp/>\</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(kParseErrorNone,<sp/>reader.Parse&lt;fullPrecision<sp/>?<sp/>kParseFullPrecisionFlag<sp/>:<sp/>0&gt;(s,<sp/>h).Code());<sp/>\</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>h.step_);<sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::Double<sp/>e(x),<sp/>a(h.actual_);<sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(fullPrecision)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(e.Uint64Value(),<sp/>a.Uint64Value());<sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(e.Uint64Value()<sp/>!=<sp/>a.Uint64Value())<sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;<sp/><sp/>String:<sp/>%s\n<sp/><sp/>Actual:<sp/>%.17g\nExpected:<sp/>%.17g\n&quot;</highlight><highlight class="normal">,<sp/>str,<sp/>h.actual_,<sp/>x);<sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(e.Sign(),<sp/>a.Sign());<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>0.0<sp/>!=<sp/>-0.0<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_DOUBLE_EQ(x,<sp/>h.actual_);<sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;0.0&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;-0.0&quot;</highlight><highlight class="normal">,<sp/>-0.0);<sp/></highlight><highlight class="comment">//<sp/>For<sp/>checking<sp/>issue<sp/>#289</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;0e100&quot;</highlight><highlight class="normal">,<sp/>0.0);<sp/></highlight><highlight class="comment">//<sp/>For<sp/>checking<sp/>issue<sp/>#1249</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal">,<sp/>1.0);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;-1.0&quot;</highlight><highlight class="normal">,<sp/>-1.0);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1.5&quot;</highlight><highlight class="normal">,<sp/>1.5);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;-1.5&quot;</highlight><highlight class="normal">,<sp/>-1.5);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;3.1416&quot;</highlight><highlight class="normal">,<sp/>3.1416);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1E10&quot;</highlight><highlight class="normal">,<sp/>1E10);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1e10&quot;</highlight><highlight class="normal">,<sp/>1e10);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1E+10&quot;</highlight><highlight class="normal">,<sp/>1E+10);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1E-10&quot;</highlight><highlight class="normal">,<sp/>1E-10);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;-1E10&quot;</highlight><highlight class="normal">,<sp/>-1E10);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;-1e10&quot;</highlight><highlight class="normal">,<sp/>-1e10);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;-1E+10&quot;</highlight><highlight class="normal">,<sp/>-1E+10);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;-1E-10&quot;</highlight><highlight class="normal">,<sp/>-1E-10);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1.234E+10&quot;</highlight><highlight class="normal">,<sp/>1.234E+10);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1.234E-10&quot;</highlight><highlight class="normal">,<sp/>1.234E-10);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1.79769e+308&quot;</highlight><highlight class="normal">,<sp/>1.79769e+308);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;2.22507e-308&quot;</highlight><highlight class="normal">,<sp/>2.22507e-308);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;-1.79769e+308&quot;</highlight><highlight class="normal">,<sp/>-1.79769e+308);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;-2.22507e-308&quot;</highlight><highlight class="normal">,<sp/>-2.22507e-308);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;4.9406564584124654e-324&quot;</highlight><highlight class="normal">,<sp/>4.9406564584124654e-324);<sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>denormal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;2.2250738585072009e-308&quot;</highlight><highlight class="normal">,<sp/>2.2250738585072009e-308);<sp/></highlight><highlight class="comment">//<sp/>Max<sp/>subnormal<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;2.2250738585072014e-308&quot;</highlight><highlight class="normal">,<sp/>2.2250738585072014e-308);<sp/></highlight><highlight class="comment">//<sp/>Min<sp/>normal<sp/>positive<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1.7976931348623157e+308&quot;</highlight><highlight class="normal">,<sp/>1.7976931348623157e+308);<sp/></highlight><highlight class="comment">//<sp/>Max<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1e-10000&quot;</highlight><highlight class="normal">,<sp/>0.0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>underflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;18446744073709551616&quot;</highlight><highlight class="normal">,<sp/>18446744073709551616.0);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2^64<sp/>(max<sp/>of<sp/>uint64_t<sp/>+<sp/>1,<sp/>force<sp/>to<sp/>use<sp/>double)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;-9223372036854775809&quot;</highlight><highlight class="normal">,<sp/>-9223372036854775809.0);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-2^63<sp/>-<sp/>1(min<sp/>of<sp/>int64_t<sp/>+<sp/>1,<sp/>force<sp/>to<sp/>use<sp/>double)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;0.9868011474609375&quot;</highlight><highlight class="normal">,<sp/>0.9868011474609375);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>https://github.com/Tencent/rapidjson/issues/120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;123e34&quot;</highlight><highlight class="normal">,<sp/>123e34);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fast<sp/>Path<sp/>Cases<sp/>In<sp/>Disguise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;45913141877270640000.0&quot;</highlight><highlight class="normal">,<sp/>45913141877270640000.0);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;2.2250738585072011e-308&quot;</highlight><highlight class="normal">,<sp/>2.2250738585072011e-308);<sp/></highlight><highlight class="comment">//<sp/>http://www.exploringbinary.com/php-hangs-on-numeric-value-2-2250738585072011e-308/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1e-00011111111111&quot;</highlight><highlight class="normal">,<sp/>0.0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>#313</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;-1e-00011111111111&quot;</highlight><highlight class="normal">,<sp/>-0.0);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1e-214748363&quot;</highlight><highlight class="normal">,<sp/>0.0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>supported<sp/>negative<sp/>exponent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1e-214748364&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1e-21474836311&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1.00000000001e-2147483638&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;0.017976931348623157e+310&quot;</highlight><highlight class="normal">,<sp/>1.7976931348623157e+308);<sp/></highlight><highlight class="comment">//<sp/>Max<sp/>double<sp/>in<sp/>another<sp/>form</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;128.74836467836484838364836483643636483648e-336&quot;</highlight><highlight class="normal">,<sp/>0.0);<sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>#1251</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>abs((2^-1022<sp/>-<sp/>2^-1074)<sp/>-<sp/>2.2250738585072012e-308)<sp/>=<sp/>3.109754131239141401123495768877590405345064751974375599...<sp/>x<sp/>10^-324</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>abs((2^-1022)<sp/>-<sp/>2.2250738585072012e-308)<sp/>=<sp/>1.830902327173324040642192159804623318305533274168872044...<sp/>x<sp/>10<sp/>^<sp/>-324</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>2.2250738585072012e-308<sp/>should<sp/>round<sp/>to<sp/>2^-1022<sp/>=<sp/>2.2250738585072014e-308</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;2.2250738585072012e-308&quot;</highlight><highlight class="normal">,<sp/>2.2250738585072014e-308);<sp/></highlight><highlight class="comment">//<sp/>http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>More<sp/>closer<sp/>to<sp/>normal/subnormal<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boundary<sp/>=<sp/>2^-1022<sp/>-<sp/>2^-1075<sp/>=<sp/>2.225073858507201136057409796709131975934819546351645648...<sp/>x<sp/>10^-308</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;2.22507385850720113605740979670913197593481954635164564e-308&quot;</highlight><highlight class="normal">,<sp/>2.2250738585072009e-308);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;2.22507385850720113605740979670913197593481954635164565e-308&quot;</highlight><highlight class="normal">,<sp/>2.2250738585072014e-308);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.0<sp/>is<sp/>in<sp/>(1.0<sp/>-<sp/>2^-54,<sp/>1.0<sp/>+<sp/>2^-53)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.0<sp/>-<sp/>2^-54<sp/>=<sp/>0.999999999999999944488848768742172978818416595458984375</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;0.999999999999999944488848768742172978818416595458984375&quot;</highlight><highlight class="normal">,<sp/>1.0);<sp/></highlight><highlight class="comment">//<sp/>round<sp/>to<sp/>even</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;0.999999999999999944488848768742172978818416595458984374&quot;</highlight><highlight class="normal">,<sp/>0.99999999999999989);<sp/></highlight><highlight class="comment">//<sp/>previous<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;0.999999999999999944488848768742172978818416595458984376&quot;</highlight><highlight class="normal">,<sp/>1.0);<sp/></highlight><highlight class="comment">//<sp/>next<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.0<sp/>+<sp/>2^-53<sp/>=<sp/>1.00000000000000011102230246251565404236316680908203125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1.00000000000000011102230246251565404236316680908203125&quot;</highlight><highlight class="normal">,<sp/>1.0);<sp/></highlight><highlight class="comment">//<sp/>round<sp/>to<sp/>even</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1.00000000000000011102230246251565404236316680908203124&quot;</highlight><highlight class="normal">,<sp/>1.0);<sp/></highlight><highlight class="comment">//<sp/>previous<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1.00000000000000011102230246251565404236316680908203126&quot;</highlight><highlight class="normal">,<sp/>1.00000000000000022);<sp/></highlight><highlight class="comment">//<sp/>next<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Numbers<sp/>from<sp/>https://github.com/floitsch/double-conversion/blob/master/test/cctest/test-strtod.cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;72057594037927928.0&quot;</highlight><highlight class="normal">,<sp/>72057594037927928.0);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;72057594037927936.0&quot;</highlight><highlight class="normal">,<sp/>72057594037927936.0);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;72057594037927932.0&quot;</highlight><highlight class="normal">,<sp/>72057594037927936.0);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;7205759403792793199999e-5&quot;</highlight><highlight class="normal">,<sp/>72057594037927928.0);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;7205759403792793200001e-5&quot;</highlight><highlight class="normal">,<sp/>72057594037927936.0);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;9223372036854774784.0&quot;</highlight><highlight class="normal">,<sp/>9223372036854774784.0);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;9223372036854775808.0&quot;</highlight><highlight class="normal">,<sp/>9223372036854775808.0);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;9223372036854775296.0&quot;</highlight><highlight class="normal">,<sp/>9223372036854775808.0);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;922337203685477529599999e-5&quot;</highlight><highlight class="normal">,<sp/>9223372036854774784.0);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;922337203685477529600001e-5&quot;</highlight><highlight class="normal">,<sp/>9223372036854775808.0);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;10141204801825834086073718800384&quot;</highlight><highlight class="normal">,<sp/>10141204801825834086073718800384.0);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;10141204801825835211973625643008&quot;</highlight><highlight class="normal">,<sp/>10141204801825835211973625643008.0);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;10141204801825834649023672221696&quot;</highlight><highlight class="normal">,<sp/>10141204801825835211973625643008.0);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1014120480182583464902367222169599999e-5&quot;</highlight><highlight class="normal">,<sp/>10141204801825834086073718800384.0);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1014120480182583464902367222169600001e-5&quot;</highlight><highlight class="normal">,<sp/>10141204801825835211973625643008.0);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;5708990770823838890407843763683279797179383808&quot;</highlight><highlight class="normal">,<sp/>5708990770823838890407843763683279797179383808.0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;5708990770823839524233143877797980545530986496&quot;</highlight><highlight class="normal">,<sp/>5708990770823839524233143877797980545530986496.0);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;5708990770823839207320493820740630171355185152&quot;</highlight><highlight class="normal">,<sp/>5708990770823839524233143877797980545530986496.0);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;5708990770823839207320493820740630171355185151999e-3&quot;</highlight><highlight class="normal">,<sp/>5708990770823838890407843763683279797179383808.0);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;5708990770823839207320493820740630171355185152001e-3&quot;</highlight><highlight class="normal">,<sp/>5708990770823839524233143877797980545530986496.0);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>n1e308[310];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;1&apos;<sp/>followed<sp/>by<sp/>308<sp/>&apos;0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1e308[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>309;<sp/>i++)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1e308[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1e308[309]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/>n1e308,<sp/>1E308);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cover<sp/>trimming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;2.22507385850720113605740979670913197593481954635164564802342610972482222202107694551652952390813508&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7914149158913039621106870086438694594645527657207407820621743379988141063267329253552286881372149012&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;9811224514518898490572223072852551331557550159143974763979834118019993239625482890171070818506906306&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6665599493827577257201576306269066333264756530000924588831643303777979186961204949739037782970490505&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;1080609940730262937128958950003583799967207254304360284078895771796150945516748243471030702609144621&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5722898802581825451803257070188608721131280795122334262883686223215037756666225039825343359745688844&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;2390026549819838548794829220689472168983109969836584681402285424333066033985088644580400103493397042&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7567186443383770486037861622771738545623065874679014086723327636718751234567890123456789012345678901&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;e-308&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>2.2250738585072014e-308);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>100;<sp/></highlight><highlight class="comment">//<sp/>Tested<sp/>with<sp/>1000000<sp/>locally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_random" kindref="compound">Random</ref><sp/>r;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;<sp/></highlight><highlight class="comment">//<sp/>Reusing<sp/>reader<sp/>to<sp/>prevent<sp/>heap<sp/>allocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exhaustively<sp/>test<sp/>different<sp/>exponents<sp/>with<sp/>random<sp/>significant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>exp<sp/>=<sp/>0;<sp/>exp<sp/>&lt;<sp/>2047;<sp/>exp++)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>call<sp/>r()<sp/>in<sp/>two<sp/>statements<sp/>for<sp/>cross-platform<sp/>coherent<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>u<sp/>=<sp/>(exp<sp/>&lt;&lt;<sp/>52)<sp/>|<sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>(r()<sp/>&amp;<sp/>0x000FFFFF)<sp/>&lt;&lt;<sp/>32;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>|=<sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>(r());</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_double" kindref="compound">internal::Double</ref><sp/>d<sp/>=<sp/><ref refid="classinternal_1_1_double" kindref="compound">internal::Double</ref>(u);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[32];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespaceinternal_1a38ffd2dab9bb216948f828f3a36c801f" kindref="member">internal::dtoa</ref>(d.<ref refid="classinternal_1_1_double_1a665c64824d1046528cbc4066a9ed0ef8" kindref="member">Value</ref>(),<sp/>buffer)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(buffer);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_double_handler" kindref="compound">ParseDoubleHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ac0856bac4945cbd1d09e9502fd8f852f" kindref="member">kParseErrorNone</ref>,<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;fullPrecision<sp/>?<sp/><ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a057fbeacafb16bb7d24c9998262cae46" kindref="member">kParseFullPrecisionFlag</ref><sp/>:<sp/>0&gt;(s,<sp/>h).Code());</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>h.<ref refid="struct_parse_double_handler_1a2ae77600834d2a72a13e7d7e0e22cdbb" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_double" kindref="compound">internal::Double</ref><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>(h.<ref refid="struct_parse_double_handler_1a5d949538e0cea58ea4d7048a09d30119" kindref="member">actual_</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullPrecision)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(d.<ref refid="classinternal_1_1_double_1a1a35be6344c886f159cb36a1498a62ac" kindref="member">Uint64Value</ref>(),<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.Uint64Value());</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d.<ref refid="classinternal_1_1_double_1a1a35be6344c886f159cb36a1498a62ac" kindref="member">Uint64Value</ref>()<sp/>!=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.Uint64Value())</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>String:<sp/>%s\n<sp/><sp/>Actual:<sp/>%.17g\nExpected:<sp/>%.17g\n&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>h.<ref refid="struct_parse_double_handler_1a5d949538e0cea58ea4d7048a09d30119" kindref="member">actual_</ref>,<sp/>d.<ref refid="classinternal_1_1_double_1a665c64824d1046528cbc4066a9ed0ef8" kindref="member">Value</ref>());</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(d.<ref refid="classinternal_1_1_double_1ab09c26873ca4c3e471a97c4559bf317d" kindref="member">Sign</ref>(),<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.Sign());<sp/></highlight><highlight class="comment">//<sp/>for<sp/>0.0<sp/>!=<sp/>-0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_DOUBLE_EQ(d.<ref refid="classinternal_1_1_double_1a665c64824d1046528cbc4066a9ed0ef8" kindref="member">Value</ref>(),<sp/>h.<ref refid="struct_parse_double_handler_1a5d949538e0cea58ea4d7048a09d30119" kindref="member">actual_</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>#340</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;7.450580596923828e-9&quot;</highlight><highlight class="normal">,<sp/>7.450580596923828e-9);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_double" kindref="compound">internal::Double</ref><sp/>d(1.0);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>324;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[32];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespaceinternal_1a38ffd2dab9bb216948f828f3a36c801f" kindref="member">internal::dtoa</ref>(d.Value(),<sp/>buffer)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(buffer);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_double_handler" kindref="compound">ParseDoubleHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ac0856bac4945cbd1d09e9502fd8f852f" kindref="member">kParseErrorNone</ref>,<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;fullPrecision<sp/>?<sp/><ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a057fbeacafb16bb7d24c9998262cae46" kindref="member">kParseFullPrecisionFlag</ref><sp/>:<sp/>0&gt;(s,<sp/>h).Code());</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>h.<ref refid="struct_parse_double_handler_1a2ae77600834d2a72a13e7d7e0e22cdbb" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_double" kindref="compound">internal::Double</ref><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>(h.<ref refid="struct_parse_double_handler_1a5d949538e0cea58ea4d7048a09d30119" kindref="member">actual_</ref>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullPrecision)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(d.Uint64Value(),<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.Uint64Value());</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d.Uint64Value()<sp/>!=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.Uint64Value())</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>String:<sp/>%s\n<sp/><sp/>Actual:<sp/>%.17g\nExpected:<sp/>%.17g\n&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>h.<ref refid="struct_parse_double_handler_1a5d949538e0cea58ea4d7048a09d30119" kindref="member">actual_</ref>,<sp/>d.Value());</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(d.Sign(),<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.Sign());<sp/></highlight><highlight class="comment">//<sp/>for<sp/>0.0<sp/>!=<sp/>-0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_DOUBLE_EQ(d.Value(),<sp/>h.<ref refid="struct_parse_double_handler_1a5d949538e0cea58ea4d7048a09d30119" kindref="member">actual_</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>d.Value()<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>1249</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;0e100&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>1251</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;128.74836467836484838364836483643636483648e-336&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>1256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;6223372036854775296.1701512723685473547372536854755293372036854685477&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;529752233737201701512337200972013723685473123372036872036854236854737&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;247372368372367752975258547752975254729752547372368737201701512354737&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;83723677529752585477247372368372368547354737253685475529752&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6223372036854775808.0);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>(length<sp/>+<sp/>exponent)<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;0e+2147483647&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;0e-2147483648&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1e-2147483648&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;0e+9223372036854775807&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;0e-9223372036854775808&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullPrecision)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1e-325&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1e-324&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;2e-324&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;2.4703282292062327e-324&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;2.4703282292062328e-324&quot;</highlight><highlight class="normal">,<sp/>5e-324);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;2.48e-324&quot;</highlight><highlight class="normal">,5e-324);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;2.5e-324&quot;</highlight><highlight class="normal">,<sp/>5e-324);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Slightly<sp/>above<sp/>max-normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,<sp/></highlight><highlight class="stringliteral">&quot;1.7976931348623158e+308&quot;</highlight><highlight class="normal">,<sp/>1.7976931348623158e+308);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;17976931348623157081452742373170435679807056752584499659891747680315726&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;07800285387605895586327668781715404589535143824642343213268894641827684&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;67546703537516986049910576551282076245490090389328944075868508455133942&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;30458323690322294816580855933212334827479782620414472316873817718091929&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;9881250404026184124858368&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::numeric_limits&lt;double&gt;::max)());</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;243546080556034731077856379609316893158278902575447060151047&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;212703405344938119816206067372775299130836050315842578309818&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;316450894337978612745889730079163798234256495613858256849283&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;467066859489192118352020514036083287319232435355752493038825&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;828481044358810649108367633313557305310641892225870327827273&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;41408256.000000&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.4354608055603473e+307);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>9007199254740991<sp/>*<sp/>2^971<sp/>(max<sp/>normal)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1.797693134862315708145274237317043567980705675258449965989174768031572607800285&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;38760589558632766878171540458953514382464234321326889464182768467546703537516986&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;04991057655128207624549009038932894407586850845513394230458323690322294816580855&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;9332123348274797826204144723168738177180919299881250404026184124858368e+308&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.797693134862315708e+308<sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1.fffffffffffffp1023</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>work<sp/>at<sp/>least<sp/>in<sp/>full-precision<sp/>mode...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0.00000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0000000000000000000024703282292062327208828439643411068618252&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;9901307162382212792841250337753635104375932649918180817996189&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;8982823477228588654633283551779698981993873980053909390631503&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;5659515570226392290858392449105184435931802849936536152500319&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;3704576782492193656236698636584807570015857692699037063119282&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;7955855133292783433840935197801553124659726357957462276646527&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2827220056374006485499977096599470454020828166226237857393450&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;7363390079677619305775067401763246736009689513405355374585166&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;6113422376667860416215968046191446729184030053005753084904876&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;5391711386591646239524912623653881879636239373280423891018672&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;3484976682350898633885879256283027559956575244555072551893136&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;9083625477918694866799496832404970582102851318545139621383772&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2826145437693412532098591327667236328125&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>9007199254740991<sp/>*<sp/>2^-1074<sp/>=<sp/>(2^53<sp/>-<sp/>1)<sp/>*<sp/>2^-1074</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;4.450147717014402272114819593418263951869639092703291296046852219449644444042153&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;89103305904781627017582829831782607924221374017287738918929105531441481564124348&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;67599762821265346585071045737627442980259622449029037796981144446145705102663115&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;10031828794952795966823603998647925096578034214163701381261333311989876551545144&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;03152612538132666529513060001849177663286607555958373922409899478075565940981010&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;21612198814605258742579179000071675999344145086087205681577915435923018910334964&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;86942061405218289243144579760516365090360651414037721744226256159024466852576737&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;24464300755133324500796506867194913776884780053099639677097589658441378944337966&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;21993967316936280457084866613206797017728916080020698679408551343728867675409720&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;757232455434770912461317493580281734466552734375e-308&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4.450147717014402272e-308<sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1.fffffffffffffp-1022</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>9007199254740990<sp/>*<sp/>2^-1074</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;4.450147717014401778049173752171719775300846224481918930987049605124880018456471&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;39035755177760751831052846195619008686241717547743167145836439860405887584484471&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;19639655002484083577939142623582164522087943959208000909794783876158397872163051&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;22622675229968408654350206725478309956546318828765627255022767720818849892988457&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;26333908582101604036318532842699932130356061901518261174396928478121372742040102&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;17446565569357687263889031732270082446958029584739170416643195242132750803227473&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;16608838720742955671061336566907126801014814608027120593609275183716632624844904&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;31985250929886016737037234388448352929102742708402644340627409931664203093081360&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;70794835812045179006047003875039546061891526346421705014598610179523165038319441&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;51446491086954182492263498716056346893310546875e-308&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4.450147717014401778e-308<sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1.ffffffffffffep-1022</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>half<sp/>way<sp/>between<sp/>the<sp/>two<sp/>numbers<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>round<sp/>to<sp/>nearest<sp/>even.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;4.450147717014402025081996672794991863585242658592605113516950912287262231249312&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;64069530541271189424317838013700808305231545782515453032382772695923684574304409&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;93619708911874715081505094180604803751173783204118519353387964161152051487413083&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;16327252012460602310586905362063117526562176521464664318142050516404363222266800&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;64743260560117135282915796422274554896821334728738317548403413978098469341510556&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;19529382191981473003234105366170879223151087335413188049110555339027884856781219&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;01775450062980622457102958163711745945687733011032421168917765671370549738710820&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;78224775842509670618916870627821633352993761380751142008862499795052791018709663&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;46394401564490729731565935244123171539810221213221201847003580761626016356864581&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1358486831521563686919762403704226016998291015625e-308&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4.450147717014401778e-308<sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1.ffffffffffffep-1022</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;4.450147717014402025081996672794991863585242658592605113516950912287262231249312&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;64069530541271189424317838013700808305231545782515453032382772695923684574304409&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;93619708911874715081505094180604803751173783204118519353387964161152051487413083&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;16327252012460602310586905362063117526562176521464664318142050516404363222266800&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;64743260560117135282915796422274554896821334728738317548403413978098469341510556&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;19529382191981473003234105366170879223151087335413188049110555339027884856781219&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;01775450062980622457102958163711745945687733011032421168917765671370549738710820&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;78224775842509670618916870627821633352993761380751142008862499795052791018709663&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;46394401564490729731565935244123171539810221213221201847003580761626016356864581&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;13584868315215636869197624037042260169982910156250000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000e-308&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4.450147717014401778e-308<sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1.ffffffffffffep-1022</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>round<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>work<sp/>at<sp/>least<sp/>in<sp/>full-precision<sp/>mode...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;4.450147717014402025081996672794991863585242658592605113516950912287262231249312&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;64069530541271189424317838013700808305231545782515453032382772695923684574304409&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;93619708911874715081505094180604803751173783204118519353387964161152051487413083&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;16327252012460602310586905362063117526562176521464664318142050516404363222266800&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;64743260560117135282915796422274554896821334728738317548403413978098469341510556&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;19529382191981473003234105366170879223151087335413188049110555339027884856781219&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;01775450062980622457102958163711745945687733011032421168917765671370549738710820&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;78224775842509670618916870627821633352993761380751142008862499795052791018709663&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;46394401564490729731565935244123171539810221213221201847003580761626016356864581&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;13584868315215636869197624037042260169982910156250000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000001e-308&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4.450147717014402272e-308<sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1.fffffffffffffp-1022</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>round<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;4.450147717014402025081996672794991863585242658592605113516950912287262231249312&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;64069530541271189424317838013700808305231545782515453032382772695923684574304409&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;93619708911874715081505094180604803751173783204118519353387964161152051487413083&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;16327252012460602310586905362063117526562176521464664318142050516404363222266800&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;64743260560117135282915796422274554896821334728738317548403413978098469341510556&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;19529382191981473003234105366170879223151087335413188049110555339027884856781219&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;01775450062980622457102958163711745945687733011032421168917765671370549738710820&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;78224775842509670618916870627821633352993761380751142008862499795052791018709663&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;46394401564490729731565935244123171539810221213221201847003580761626016356864581&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;13584868315215636869197624037042260169982910156249999999999999999999999999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999e-308&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4.450147717014401778e-308<sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1.ffffffffffffep-1022</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Slightly<sp/>below<sp/>half<sp/>way<sp/>between<sp/>max-normal<sp/>and<sp/>infinity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>round<sp/>down.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a21b994bed3341147071a62be3e1c592f" kindref="member">TEST_DOUBLE</ref>(fullPrecision,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1.797693134862315807937289714053034150799341327100378269361737789804449682927647&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;50946649017977587207096330286416692887910946555547851940402630657488671505820681&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;90890200070838367627385484581771153176447573027006985557136695962284291481986083&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;49364752927190741684443655107043427115596995080930428801779041744977919999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;99999999999999999999999999999999999999999999999999999999999999999999999999999999e+308&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.797693134862315708e+308<sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1.fffffffffffffp1023</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TEST_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseNumber_NormalPrecisionDouble)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>TestParseDouble&lt;false&gt;();</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseNumber_FullPrecisionDouble)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>TestParseDouble&lt;true&gt;();</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseNumber_NormalPrecisionError)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>1000000;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_random" kindref="compound">Random</ref><sp/>r;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ulpSum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ulpMax<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_double" kindref="compound">internal::Double</ref><sp/>e,<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>call<sp/>r()<sp/>in<sp/>two<sp/>statements<sp/>for<sp/>cross-platform<sp/>coherent<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>u<sp/>=<sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>(r())<sp/>&lt;&lt;<sp/>32;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>|=<sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>(r());</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(e.<ref refid="classinternal_1_1_double_1a312312ab2798ee85cbd0e739fcefa386" kindref="member">IsNan</ref>()<sp/>||<sp/>e.<ref refid="classinternal_1_1_double_1afe1ce48f7fb9797e1a2044c58a6b226c" kindref="member">IsInf</ref>()<sp/>||<sp/>!e.<ref refid="classinternal_1_1_double_1a8a39cd42010c69681da35d87f1331381" kindref="member">IsNormal</ref>());</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[32];</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespaceinternal_1a38ffd2dab9bb216948f828f3a36c801f" kindref="member">internal::dtoa</ref>(e.<ref refid="classinternal_1_1_double_1a665c64824d1046528cbc4066a9ed0ef8" kindref="member">Value</ref>(),<sp/>buffer)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(buffer);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_double_handler" kindref="compound">ParseDoubleHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ac0856bac4945cbd1d09e9502fd8f852f" kindref="member">kParseErrorNone</ref>,<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(s,<sp/>h).<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>());</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>h.<ref refid="struct_parse_double_handler_1a2ae77600834d2a72a13e7d7e0e22cdbb" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>h.<ref refid="struct_parse_double_handler_1a5d949538e0cea58ea4d7048a09d30119" kindref="member">actual_</ref>;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>bias1<sp/>=<sp/>e.<ref refid="classinternal_1_1_double_1ab3d3a81274e4f4b9b415db7c664d3ac9" kindref="member">ToBias</ref>();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>bias2<sp/>=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.ToBias();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ulp<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bias1<sp/>&gt;=<sp/>bias2<sp/>?<sp/>bias1<sp/>-<sp/>bias2<sp/>:<sp/>bias2<sp/>-<sp/>bias1);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ulpMax<sp/>=<sp/>(std::max)(ulpMax,<sp/>ulp);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ulpSum<sp/>+=<sp/>ulp;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ULP<sp/>Average<sp/>=<sp/>%g,<sp/>Max<sp/>=<sp/>%g<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>ulpSum<sp/>/<sp/>count,<sp/>ulpMax);</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fullPrecision&gt;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestParseNumberError()<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_NUMBER_ERROR(errorCode,<sp/>str,<sp/>errorOffset,<sp/>streamPos)<sp/>\</highlight></codeline>
<codeline lineno="632"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="633"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>buffer[2048];<sp/>\</highlight></codeline>
<codeline lineno="634"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_LT(std::strlen(str),<sp/>2048u);<sp/>\</highlight></codeline>
<codeline lineno="635"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buffer,<sp/>&quot;%s&quot;</highlight><highlight class="normal">,<sp/>str);<sp/>\</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsituStringStream<sp/>s(buffer);<sp/>\</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseReaderHandler&lt;&gt;<sp/>h;<sp/>\</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reader<sp/>reader;<sp/>\</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.Parse&lt;fullPrecision<sp/>?<sp/>kParseFullPrecisionFlag<sp/>:<sp/>0&gt;(s,<sp/>h));<sp/>\</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(errorCode,<sp/>reader.GetParseErrorCode());\</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(errorOffset,<sp/>reader.GetErrorOffset());\</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(streamPos,<sp/>s.Tell());\</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>too<sp/>big<sp/>to<sp/>be<sp/>stored<sp/>in<sp/>double.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>n1e309[311];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;1&apos;<sp/>followed<sp/>by<sp/>309<sp/>&apos;0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1e309[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>310;<sp/>i++)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1e309[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1e309[310]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/>n1e309,<sp/>0u,<sp/>310u);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1e309&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>5u);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Miss<sp/>fraction<sp/>part<sp/>in<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a08a2cc2b4cacfba1673ed536eee229ce" kindref="member">kParseErrorNumberMissFraction</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1.&quot;</highlight><highlight class="normal">,<sp/>2u,<sp/>2u);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a08a2cc2b4cacfba1673ed536eee229ce" kindref="member">kParseErrorNumberMissFraction</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1.a&quot;</highlight><highlight class="normal">,<sp/>2u,<sp/>2u);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Miss<sp/>exponent<sp/>in<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a82cdbd740e22b819a70d05e585c2a442" kindref="member">kParseErrorNumberMissExponent</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1e&quot;</highlight><highlight class="normal">,<sp/>2u,<sp/>2u);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a82cdbd740e22b819a70d05e585c2a442" kindref="member">kParseErrorNumberMissExponent</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1e_&quot;</highlight><highlight class="normal">,<sp/>2u,<sp/>2u);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>849</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1.8e308&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>7u);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/></highlight><highlight class="stringliteral">&quot;5e308&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>5u);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1e309&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>5u);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1.0e310&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>7u);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1.00e310&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>8u);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-1.8e308&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>8u);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-1e309&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>6u);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>1253</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/></highlight><highlight class="stringliteral">&quot;2e308&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>5u);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>1259</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;88474320368547737236837236775298547354737253685475547552933720368546854775297525&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;29337203685468547770151233720097201372368547312337203687203685423685123372036872&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;03685473724737236837236775297525854775297525472975254737236873720170151235473783&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;7236737247372368772473723683723456789012E66&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>283u);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>(length<sp/>+<sp/>exponent)<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1e+2147483647&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>13u);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1e+9223372036854775807&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>22u);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1e+10000&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>8u);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1e+50000&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>8u);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>9007199254740992<sp/>*<sp/>2^971<sp/>(&quot;infinity&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1.797693134862315907729305190789024733617976978942306572734300811577326758055009&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;63132708477322407536021120113879871393357658789768814416622492847430639474124377&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;76789342486548527630221960124609411945308295208500576883815068234246288147391311&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0540827237163350510684586298239947245938479716304835356329624224137216e+308&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>315u);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>tests<sp/>(currently)<sp/>fail<sp/>in<sp/>normal-precision<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullPrecision)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Half<sp/>way<sp/>between<sp/>max-normal<sp/>and<sp/>infinity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>round<sp/>to<sp/>infinity<sp/>in<sp/>nearest-even<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1.797693134862315807937289714053034150799341327100378269361737789804449682927647&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;50946649017977587207096330286416692887910946555547851940402630657488671505820681&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;90890200070838367627385484581771153176447573027006985557136695962284291481986083&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;49364752927190741684443655107043427115596995080930428801779041744977920000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000e+308&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>1125u);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...round<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1.797693134862315807937289714053034150799341327100378269361737789804449682927647&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;50946649017977587207096330286416692887910946555547851940402630657488671505820681&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;90890200070838367627385484581771153176447573027006985557136695962284291481986083&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;49364752927190741684443655107043427115596995080930428801779041744977920000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000001e+308&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>1205u);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0915e2497a66e1c6569fbc2346abc4a7" kindref="member">TEST_NUMBER_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae52aaa70fde46e4cc422420309700b82" kindref="member">kParseErrorNumberTooBig</ref>,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;10000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0000000000000000000000000000000000000000000000000000000000000000000001&quot;</highlight><highlight class="normal">,<sp/>0u,<sp/>310u);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TEST_NUMBER_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseNumberError_NormalPrecisionDouble)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>TestParseNumberError&lt;false&gt;();</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseNumberError_FullPrecisionDouble)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>TestParseNumberError&lt;true&gt;();</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding&gt;</highlight></codeline>
<codeline lineno="756" refid="struct_parse_string_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_parse_string_handler" kindref="compound">ParseStringHandler</ref><sp/>:<sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;Encoding,<sp/>ParseStringHandler&lt;Encoding&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_string_handler_1ab987034113f24ebb84f2081431c14b8d" kindref="member">ParseStringHandler</ref>()<sp/>:<sp/><ref refid="struct_parse_string_handler_1a545fb18d029f435253138f28fb9543e4" kindref="member">str_</ref>(0),<sp/><ref refid="struct_parse_string_handler_1a3746bb851ada03277ac2bebda98952c3" kindref="member">length_</ref>(0),<sp/><ref refid="struct_parse_string_handler_1a0d6d3434802c1b62abb5a74775a7756d" kindref="member">copy_</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_string_handler_1a9adc0ad9d43120798dddd46cebd7c14a" kindref="member">~ParseStringHandler</ref>()<sp/>{<sp/>EXPECT_TRUE(<ref refid="struct_parse_string_handler_1a545fb18d029f435253138f28fb9543e4" kindref="member">str_</ref><sp/>!=<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_parse_string_handler_1a0d6d3434802c1b62abb5a74775a7756d" kindref="member">copy_</ref>)<sp/>free(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">typename<sp/>Encoding::Ch*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="struct_parse_string_handler_1a545fb18d029f435253138f28fb9543e4" kindref="member">str_</ref>));<sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_string_handler_1ab987034113f24ebb84f2081431c14b8d" kindref="member">ParseStringHandler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_parse_string_handler" kindref="compound">ParseStringHandler</ref>&amp;);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_string_handler" kindref="compound">ParseStringHandler</ref>&amp;<sp/><ref refid="struct_parse_string_handler_1a3b7e3646a256c53389f4472fd428dd59" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_parse_string_handler" kindref="compound">ParseStringHandler</ref>&amp;);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_string_handler_1a3fc17a01915fff8ab1c5f463fd9004cb" kindref="member">Default</ref>()<sp/>{<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_string_handler_1a9e073d67082866a6ec8aa13c35072541" kindref="member">String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch*<sp/>str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(0,<sp/><ref refid="struct_parse_string_handler_1a545fb18d029f435253138f28fb9543e4" kindref="member">str_</ref>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_string_handler_1a545fb18d029f435253138f28fb9543e4" kindref="member">str_</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">typename<sp/>Encoding::Ch*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(malloc((length<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch)));</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">typename<sp/>Encoding::Ch*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="struct_parse_string_handler_1a545fb18d029f435253138f28fb9543e4" kindref="member">str_</ref>),<sp/>str,<sp/>(length<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch));</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_string_handler_1a545fb18d029f435253138f28fb9543e4" kindref="member">str_</ref><sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_string_handler_1a3746bb851ada03277ac2bebda98952c3" kindref="member">length_</ref><sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_string_handler_1a0d6d3434802c1b62abb5a74775a7756d" kindref="member">copy_</ref><sp/>=<sp/>copy;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch*<sp/><ref refid="struct_parse_string_handler_1a545fb18d029f435253138f28fb9543e4" kindref="member">str_</ref>;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_parse_string_handler_1a3746bb851ada03277ac2bebda98952c3" kindref="member">length_</ref>;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_string_handler_1a0d6d3434802c1b62abb5a74775a7756d" kindref="member">copy_</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal">};</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseString)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_STRING(Encoding,<sp/>e,<sp/>x)<sp/>\</highlight></codeline>
<codeline lineno="784"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="785"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Encoding::Ch*<sp/>buffer<sp/>=<sp/>StrDup(x);<sp/>\</highlight></codeline>
<codeline lineno="786"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GenericInsituStringStream&lt;Encoding&gt;<sp/>is(buffer);<sp/>\</highlight></codeline>
<codeline lineno="787"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParseStringHandler&lt;Encoding&gt;<sp/>h;<sp/>\</highlight></codeline>
<codeline lineno="788"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GenericReader&lt;Encoding,<sp/>Encoding&gt;<sp/>reader;<sp/>\</highlight></codeline>
<codeline lineno="789"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader.Parse&lt;kParseInsituFlag<sp/>|<sp/>kParseValidateEncodingFlag&gt;(is,<sp/>h);<sp/>\</highlight></codeline>
<codeline lineno="790"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(0,<sp/>StrCmp&lt;Encoding::Ch&gt;(e,<sp/>h.str_));<sp/>\</highlight></codeline>
<codeline lineno="791"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(StrLen(e),<sp/>h.length_);<sp/>\</highlight></codeline>
<codeline lineno="792"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buffer);<sp/>\</highlight></codeline>
<codeline lineno="793"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GenericStringStream&lt;Encoding&gt;<sp/>s(x);<sp/>\</highlight></codeline>
<codeline lineno="794"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParseStringHandler&lt;Encoding&gt;<sp/>h2;<sp/>\</highlight></codeline>
<codeline lineno="795"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GenericReader&lt;Encoding,<sp/>Encoding&gt;<sp/>reader2;<sp/>\</highlight></codeline>
<codeline lineno="796"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader2.Parse(s,<sp/>h2);<sp/>\</highlight></codeline>
<codeline lineno="797"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(0,<sp/>StrCmp&lt;Encoding::Ch&gt;(e,<sp/>h2.str_));<sp/>\</highlight></codeline>
<codeline lineno="798"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(StrLen(e),<sp/>h2.length_);<sp/>\</highlight></codeline>
<codeline lineno="799"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>String<sp/>constant<sp/>L&quot;\xXX&quot;<sp/>can<sp/>only<sp/>specify<sp/>character<sp/>code<sp/>in<sp/>bytes,<sp/>which<sp/>is<sp/>not<sp/>endianness-neutral.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>old<sp/>compiler<sp/>does<sp/>not<sp/>support<sp/>u&quot;&quot;<sp/>and<sp/>U&quot;&quot;<sp/>string<sp/>literal.<sp/>So<sp/>here<sp/>specify<sp/>string<sp/>literal<sp/>by<sp/>array<sp/>of<sp/>Ch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>addition,<sp/>GCC<sp/>4.8<sp/>generates<sp/>-Wnarrowing<sp/>warnings<sp/>when<sp/>character<sp/>code<sp/>&gt;=<sp/>128<sp/>are<sp/>assigned<sp/>to<sp/>signed<sp/>integer<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Therefore,<sp/>utype<sp/>is<sp/>added<sp/>for<sp/>declaring<sp/>unsigned<sp/>array,<sp/>and<sp/>then<sp/>cast<sp/>it<sp/>to<sp/>Encoding::Ch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARRAY(...)<sp/>{<sp/>__VA_ARGS__<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_STRINGARRAY(Encoding,<sp/>utype,<sp/>array,<sp/>x)<sp/>\</highlight></codeline>
<codeline lineno="807"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="808"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>utype<sp/>ue[]<sp/>=<sp/>array;<sp/>\</highlight></codeline>
<codeline lineno="809"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>Encoding::Ch*<sp/>e<sp/>=<sp/>reinterpret_cast&lt;const<sp/>Encoding::Ch<sp/>*&gt;(&amp;ue[0]);<sp/>\</highlight></codeline>
<codeline lineno="810"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_STRING(Encoding,<sp/>e,<sp/>x);<sp/>\</highlight></codeline>
<codeline lineno="811"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_STRINGARRAY2(Encoding,<sp/>utype,<sp/>earray,<sp/>xarray)<sp/>\</highlight></codeline>
<codeline lineno="814"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="815"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>utype<sp/>ue[]<sp/>=<sp/>earray;<sp/>\</highlight></codeline>
<codeline lineno="816"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>utype<sp/>xe[]<sp/>=<sp/>xarray;<sp/>\</highlight></codeline>
<codeline lineno="817"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>Encoding::Ch*<sp/>e<sp/>=<sp/>reinterpret_cast&lt;const<sp/>Encoding::Ch<sp/>*&gt;(&amp;ue[0]);<sp/>\</highlight></codeline>
<codeline lineno="818"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>Encoding::Ch*<sp/>x<sp/>=<sp/>reinterpret_cast&lt;const<sp/>Encoding::Ch<sp/>*&gt;(&amp;xe[0]);<sp/>\</highlight></codeline>
<codeline lineno="819"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_STRING(Encoding,<sp/>e,<sp/>x);<sp/>\</highlight></codeline>
<codeline lineno="820"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;Hello\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Hello\nWorld&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;Hello\\nWorld\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\\/\b\f\n\r\t&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\\\&quot;\\\\/\\b\\f\\n\\r\\t\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\x24&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\\u0024\&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dollar<sp/>sign<sp/>U+0024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\xC2\xA2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\\u00A2\&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cents<sp/>sign<sp/>U+00A2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\xE2\x82\xAC&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\\u20AC\&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Euro<sp/>sign<sp/>U+20AC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\xF0\x9D\x84\x9E&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\\uD834\\uDD1E\&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>G<sp/>clef<sp/>sign<sp/>U+1D11E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UTF16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/>L</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;\&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/>L</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;\&quot;Hello\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/>L</highlight><highlight class="stringliteral">&quot;Hello\nWorld&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;\&quot;Hello\\nWorld\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a9d7119f7924a0a61bdd167748c770dae" kindref="member">TEST_STRING</ref>(<ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/>L</highlight><highlight class="stringliteral">&quot;\&quot;\\/\b\f\n\r\t&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;\&quot;\\\&quot;\\\\/\\b\\f\\n\\r\\t\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aca32d23ddbdec658bb1ca388b6f6bb97" kindref="member">TEST_STRINGARRAY</ref>(<ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(0x0024,<sp/>0x0000),<sp/>L</highlight><highlight class="stringliteral">&quot;\&quot;\\u0024\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aca32d23ddbdec658bb1ca388b6f6bb97" kindref="member">TEST_STRINGARRAY</ref>(<ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(0x00A2,<sp/>0x0000),<sp/>L</highlight><highlight class="stringliteral">&quot;\&quot;\\u00A2\&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Cents<sp/>sign<sp/>U+00A2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aca32d23ddbdec658bb1ca388b6f6bb97" kindref="member">TEST_STRINGARRAY</ref>(<ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(0x20AC,<sp/>0x0000),<sp/>L</highlight><highlight class="stringliteral">&quot;\&quot;\\u20AC\&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Euro<sp/>sign<sp/>U+20AC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aca32d23ddbdec658bb1ca388b6f6bb97" kindref="member">TEST_STRINGARRAY</ref>(<ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(0xD834,<sp/>0xDD1E,<sp/>0x0000),<sp/>L</highlight><highlight class="stringliteral">&quot;\&quot;\\uD834\\uDD1E\&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>G<sp/>clef<sp/>sign<sp/>U+1D11E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UTF32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1afe94ee74dfe8222d034c1c8924b51080" kindref="member">TEST_STRINGARRAY2</ref>(<ref refid="struct_u_t_f32" kindref="compound">UTF32&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">),<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1afe94ee74dfe8222d034c1c8924b51080" kindref="member">TEST_STRINGARRAY2</ref>(<ref refid="struct_u_t_f32" kindref="compound">UTF32&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;H&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">),<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;H&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1afe94ee74dfe8222d034c1c8924b51080" kindref="member">TEST_STRINGARRAY2</ref>(<ref refid="struct_u_t_f32" kindref="compound">UTF32&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;H&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">),<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;H&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1afe94ee74dfe8222d034c1c8924b51080" kindref="member">TEST_STRINGARRAY2</ref>(<ref refid="struct_u_t_f32" kindref="compound">UTF32&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\b&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\f&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">),<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1afe94ee74dfe8222d034c1c8924b51080" kindref="member">TEST_STRINGARRAY2</ref>(<ref refid="struct_u_t_f32" kindref="compound">UTF32&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(0x00024,<sp/>0x0000),<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1afe94ee74dfe8222d034c1c8924b51080" kindref="member">TEST_STRINGARRAY2</ref>(<ref refid="struct_u_t_f32" kindref="compound">UTF32&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(0x000A2,<sp/>0x0000),<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cents<sp/>sign<sp/>U+00A2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1afe94ee74dfe8222d034c1c8924b51080" kindref="member">TEST_STRINGARRAY2</ref>(<ref refid="struct_u_t_f32" kindref="compound">UTF32&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(0x020AC,<sp/>0x0000),<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Euro<sp/>sign<sp/>U+20AC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1afe94ee74dfe8222d034c1c8924b51080" kindref="member">TEST_STRINGARRAY2</ref>(<ref refid="struct_u_t_f32" kindref="compound">UTF32&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(0x1D11E,<sp/>0x0000),<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>G<sp/>clef<sp/>sign<sp/>U+1D11E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TEST_STRINGARRAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ARRAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TEST_STRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Support<sp/>of<sp/>null<sp/>character<sp/>in<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(</highlight><highlight class="stringliteral">&quot;\&quot;Hello\\u0000World\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>e[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello\0World&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_string_handler" kindref="compound">ParseStringHandler&lt;UTF8&lt;&gt;</ref><sp/>&gt;<sp/>h;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(s,<sp/>h);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(0,<sp/>memcmp(e,<sp/>h.<ref refid="struct_parse_string_handler_1a545fb18d029f435253138f28fb9543e4" kindref="member">str_</ref>,<sp/>h.<ref refid="struct_parse_string_handler_1a3746bb851ada03277ac2bebda98952c3" kindref="member">length_</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(11u,<sp/>h.<ref refid="struct_parse_string_handler_1a3746bb851ada03277ac2bebda98952c3" kindref="member">length_</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseString_Transcoding)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>x<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;Hello\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>e<sp/>=<sp/>L</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;UTF8&lt;&gt;</ref><sp/>&gt;<sp/>is(x);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref><sp/>&gt;<sp/>reader;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_string_handler" kindref="compound">ParseStringHandler&lt;UTF16&lt;&gt;</ref><sp/>&gt;<sp/>h;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(is,<sp/>h);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0,<sp/><ref refid="unittest_8h_1a8d8e3cf93e9b811c207711d0b353de02" kindref="member">StrCmp</ref>&lt;<ref refid="struct_u_t_f16_1a811680d50447c98be4fd94c0a27504bb" kindref="member">UTF16&lt;&gt;::Ch</ref>&gt;(e,<sp/>h.<ref refid="struct_parse_string_handler_1a545fb18d029f435253138f28fb9543e4" kindref="member">str_</ref>));</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="unittest_8h_1a158bf1a4953297866644112d81a7a3e7" kindref="member">StrLen</ref>(e),<sp/>h.<ref refid="struct_parse_string_handler_1a3746bb851ada03277ac2bebda98952c3" kindref="member">length_</ref>);</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseString_TranscodingWithValidation)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>x<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;Hello\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>e<sp/>=<sp/>L</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;UTF8&lt;&gt;</ref><sp/>&gt;<sp/>is(x);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref><sp/>&gt;<sp/>reader;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_string_handler" kindref="compound">ParseStringHandler&lt;UTF16&lt;&gt;</ref><sp/>&gt;<sp/>h;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9b3baa16346575d2dc072b23a88e1928" kindref="member">kParseValidateEncodingFlag</ref>&gt;(is,<sp/>h);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0,<sp/><ref refid="unittest_8h_1a8d8e3cf93e9b811c207711d0b353de02" kindref="member">StrCmp</ref>&lt;<ref refid="struct_u_t_f16_1a811680d50447c98be4fd94c0a27504bb" kindref="member">UTF16&lt;&gt;::Ch</ref>&gt;(e,<sp/>h.<ref refid="struct_parse_string_handler_1a545fb18d029f435253138f28fb9543e4" kindref="member">str_</ref>));</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="unittest_8h_1a158bf1a4953297866644112d81a7a3e7" kindref="member">StrLen</ref>(e),<sp/>h.<ref refid="struct_parse_string_handler_1a3746bb851ada03277ac2bebda98952c3" kindref="member">length_</ref>);</highlight></codeline>
<codeline lineno="887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseString_NonDestructive)<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(</highlight><highlight class="stringliteral">&quot;\&quot;Hello\\nWorld\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_string_handler" kindref="compound">ParseStringHandler&lt;UTF8&lt;&gt;</ref><sp/>&gt;<sp/>h;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(s,<sp/>h);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0,<sp/><ref refid="unittest_8h_1a8d8e3cf93e9b811c207711d0b353de02" kindref="member">StrCmp</ref>(</highlight><highlight class="stringliteral">&quot;Hello\nWorld&quot;</highlight><highlight class="normal">,<sp/>h.<ref refid="struct_parse_string_handler_1a545fb18d029f435253138f28fb9543e4" kindref="member">str_</ref>));</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(11u,<sp/>h.<ref refid="struct_parse_string_handler_1a3746bb851ada03277ac2bebda98952c3" kindref="member">length_</ref>);</highlight></codeline>
<codeline lineno="896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding&gt;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7" kindref="member">ParseErrorCode</ref><sp/><ref refid="readertest_8cpp_1aecbde81eaceef1ab965fbccc9c6a2cc1" kindref="member">TestString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;Encoding&gt;</ref><sp/>s(str);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler&lt;Encoding&gt;</ref><sp/>h;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;Encoding, Encoding&gt;</ref><sp/>reader;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>reader.template<sp/>Parse&lt;kParseValidateEncodingFlag&gt;(s,<sp/>h);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reader.<ref refid="class_generic_reader_1a937bf90919f50e1c370b312cee5833e8" kindref="member">GetParseErrorCode</ref>();</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseString_Error)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_STRING_ERROR(errorCode,<sp/>str,<sp/>errorOffset,<sp/>streamPos)\</highlight></codeline>
<codeline lineno="909"><highlight class="preprocessor">{\</highlight></codeline>
<codeline lineno="910"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GenericStringStream&lt;UTF8&lt;&gt;<sp/>&gt;<sp/>s(str);\</highlight></codeline>
<codeline lineno="911"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BaseReaderHandler&lt;UTF8&lt;&gt;<sp/>&gt;<sp/>h;\</highlight></codeline>
<codeline lineno="912"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GenericReader&lt;UTF8&lt;&gt;<sp/>,<sp/>UTF8&lt;&gt;<sp/>&gt;<sp/>reader;\</highlight></codeline>
<codeline lineno="913"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>reader.Parse&lt;kParseValidateEncodingFlag&gt;(s,<sp/>h);\</highlight></codeline>
<codeline lineno="914"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>EXPECT_EQ(errorCode,<sp/>reader.GetParseErrorCode());\</highlight></codeline>
<codeline lineno="915"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>EXPECT_EQ(errorOffset,<sp/>reader.GetErrorOffset());\</highlight></codeline>
<codeline lineno="916"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>EXPECT_EQ(streamPos,<sp/>s.Tell());\</highlight></codeline>
<codeline lineno="917"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARRAY(...)<sp/>{<sp/>__VA_ARGS__<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_STRINGENCODING_ERROR(Encoding,<sp/>TargetEncoding,<sp/>utype,<sp/>array)<sp/>\</highlight></codeline>
<codeline lineno="921"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="922"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>utype<sp/>ue[]<sp/>=<sp/>array;<sp/>\</highlight></codeline>
<codeline lineno="923"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>Encoding::Ch*<sp/>e<sp/>=<sp/>reinterpret_cast&lt;const<sp/>Encoding::Ch<sp/>*&gt;(&amp;ue[0]);<sp/>\</highlight></codeline>
<codeline lineno="924"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(kParseErrorStringInvalidEncoding,<sp/>TestString&lt;Encoding&gt;(e));\</highlight></codeline>
<codeline lineno="925"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>decode<sp/>error<sp/>*/</highlight><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="926"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GenericStringStream&lt;Encoding&gt;<sp/>s(e);\</highlight></codeline>
<codeline lineno="927"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseReaderHandler&lt;TargetEncoding&gt;<sp/>h;\</highlight></codeline>
<codeline lineno="928"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GenericReader&lt;Encoding,<sp/>TargetEncoding&gt;<sp/>reader;\</highlight></codeline>
<codeline lineno="929"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader.Parse(s,<sp/>h);\</highlight></codeline>
<codeline lineno="930"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(kParseErrorStringInvalidEncoding,<sp/>reader.GetParseErrorCode());\</highlight></codeline>
<codeline lineno="931"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>escape<sp/>character<sp/>in<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a5f47d54ec9d33d6d02cf84fbf375b393" kindref="member">TEST_STRING_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a98bb3f3b1e12fdb7f278b9fa4029306f" kindref="member">kParseErrorStringEscapeInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[\&quot;\\a\&quot;]&quot;</highlight><highlight class="normal">,<sp/>2u,<sp/>3u);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Incorrect<sp/>hex<sp/>digit<sp/>after<sp/>\\u<sp/>escape<sp/>in<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a5f47d54ec9d33d6d02cf84fbf375b393" kindref="member">TEST_STRING_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7afc65ea941a0a26812f0f258d2429e5d2" kindref="member">kParseErrorStringUnicodeEscapeInvalidHex</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[\&quot;\\uABCG\&quot;]&quot;</highlight><highlight class="normal">,<sp/>2u,<sp/>7u);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Quotation<sp/>in<sp/>\\u<sp/>escape<sp/>in<sp/>string<sp/>(Issue<sp/>#288)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a5f47d54ec9d33d6d02cf84fbf375b393" kindref="member">TEST_STRING_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7afc65ea941a0a26812f0f258d2429e5d2" kindref="member">kParseErrorStringUnicodeEscapeInvalidHex</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[\&quot;\\uaaa\&quot;]&quot;</highlight><highlight class="normal">,<sp/>2u,<sp/>7u);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a5f47d54ec9d33d6d02cf84fbf375b393" kindref="member">TEST_STRING_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7afc65ea941a0a26812f0f258d2429e5d2" kindref="member">kParseErrorStringUnicodeEscapeInvalidHex</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[\&quot;\\uD800\\uFFF\&quot;]&quot;</highlight><highlight class="normal">,<sp/>2u,<sp/>13u);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>surrogate<sp/>pair<sp/>in<sp/>string<sp/>is<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a5f47d54ec9d33d6d02cf84fbf375b393" kindref="member">TEST_STRING_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ad9fced6763a06435ca448626c74e5c72" kindref="member">kParseErrorStringUnicodeSurrogateInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[\&quot;\\uD800X\&quot;]&quot;</highlight><highlight class="normal">,<sp/>2u,<sp/>8u);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a5f47d54ec9d33d6d02cf84fbf375b393" kindref="member">TEST_STRING_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ad9fced6763a06435ca448626c74e5c72" kindref="member">kParseErrorStringUnicodeSurrogateInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[\&quot;\\uD800\\uFFFF\&quot;]&quot;</highlight><highlight class="normal">,<sp/>2u,<sp/>14u);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Single<sp/>low<sp/>surrogate<sp/>pair<sp/>in<sp/>string<sp/>is<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a5f47d54ec9d33d6d02cf84fbf375b393" kindref="member">TEST_STRING_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ad9fced6763a06435ca448626c74e5c72" kindref="member">kParseErrorStringUnicodeSurrogateInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[\&quot;\\udc4d\&quot;]&quot;</highlight><highlight class="normal">,<sp/>2u,<sp/>8u);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Missing<sp/>a<sp/>closing<sp/>quotation<sp/>mark<sp/>in<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a5f47d54ec9d33d6d02cf84fbf375b393" kindref="member">TEST_STRING_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a6369e5b4e4922720cbc45c5941efc4af" kindref="member">kParseErrorStringMissQuotationMark</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[\&quot;Test]&quot;</highlight><highlight class="normal">,<sp/>7u,<sp/>7u);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-test.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/><sp/>Malformed<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.1<sp/>Unexpected<sp/>continuation<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>e[]<sp/>=<sp/>{<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0x80u;<sp/>c<sp/>&lt;=<sp/>0xBFu;<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7" kindref="member">ParseErrorCode</ref><sp/>error<sp/>=<sp/>TestString&lt;UTF8&lt;&gt;<sp/>&gt;(e);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a17ecb2ed1524b513d64a93f4a7a8b456" kindref="member">kParseErrorStringInvalidEncoding</ref>,<sp/>error);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a17ecb2ed1524b513d64a93f4a7a8b456" kindref="member">kParseErrorStringInvalidEncoding</ref>)</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>static_cast&lt;unsigned&gt;(c)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.2<sp/>Lonely<sp/>start<sp/>characters,<sp/>3.5<sp/>Impossible<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>e[]<sp/>=<sp/>{<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0xC0u;<sp/>c<sp/>&lt;=<sp/>0xFFu;<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e[2]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>streamPos;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;=<sp/>0xC1u)</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streamPos<sp/>=<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>0xC0<sp/>-<sp/>0xC1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;=<sp/>0xDFu)</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streamPos<sp/>=<sp/>4;<sp/></highlight><highlight class="comment">//<sp/>0xC2<sp/>-<sp/>0xDF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;=<sp/>0xEFu)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streamPos<sp/>=<sp/>5;<sp/></highlight><highlight class="comment">//<sp/>0xE0<sp/>-<sp/>0xEF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;=<sp/>0xF4u)</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streamPos<sp/>=<sp/>6;<sp/></highlight><highlight class="comment">//<sp/>0xF0<sp/>-<sp/>0xF4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streamPos<sp/>=<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>0xF5<sp/>-<sp/>0xFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a5f47d54ec9d33d6d02cf84fbf375b393" kindref="member">TEST_STRING_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a17ecb2ed1524b513d64a93f4a7a8b456" kindref="member">kParseErrorStringInvalidEncoding</ref>,<sp/>e,<sp/>2u,<sp/>streamPos);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4<sp/><sp/>Overlong<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4.1<sp/><sp/>Examples<sp/>of<sp/>an<sp/>overlong<sp/>ASCII<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xC0u,<sp/>0xAFu,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xE0u,<sp/>0x80u,<sp/>0xAFu,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xF0u,<sp/>0x80u,<sp/>0x80u,<sp/>0xAFu,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4.2<sp/><sp/>Maximum<sp/>overlong<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xC1u,<sp/>0xBFu,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xE0u,<sp/>0x9Fu,<sp/>0xBFu,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xF0u,<sp/>0x8Fu,<sp/>0xBFu,<sp/>0xBFu,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4.3<sp/><sp/>Overlong<sp/>representation<sp/>of<sp/>the<sp/>NUL<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xC0u,<sp/>0x80u,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xE0u,<sp/>0x80u,<sp/>0x80u,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xF0u,<sp/>0x80u,<sp/>0x80u,<sp/>0x80u,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5<sp/><sp/>Illegal<sp/>code<sp/>positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5.1<sp/>Single<sp/>UTF-16<sp/>surrogates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xEDu,<sp/>0xA0u,<sp/>0x80u,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xEDu,<sp/>0xADu,<sp/>0xBFu,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xEDu,<sp/>0xAEu,<sp/>0x80u,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xEDu,<sp/>0xAFu,<sp/>0xBFu,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xEDu,<sp/>0xB0u,<sp/>0x80u,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xEDu,<sp/>0xBEu,<sp/>0x80u,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xEDu,<sp/>0xBFu,<sp/>0xBFu,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Malform<sp/>UTF-16<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xDC00,<sp/>0xDC00,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0xD800,<sp/>0xD800,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Malform<sp/>UTF-32<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_u_t_f32" kindref="compound">UTF32&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/>0x110000,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Malform<sp/>ASCII<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_a_s_c_i_i" kindref="compound">ASCII&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">(0x80u),<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_a_s_c_i_i" kindref="compound">ASCII&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">(0x01u),<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a61f78b99d29fd8c3f30ba08cdd193d32" kindref="member">TEST_STRINGENCODING_ERROR</ref>(<ref refid="struct_a_s_c_i_i" kindref="compound">ASCII&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;&gt;</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/><ref refid="readertest_8cpp_1a5d00524e55c84dee4a584e0536b2da71" kindref="member">ARRAY</ref>(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">(0x1Cu),<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ARRAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TEST_STRINGARRAY_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>count&gt;</highlight></codeline>
<codeline lineno="1034" refid="struct_parse_array_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_parse_array_handler" kindref="compound">ParseArrayHandler</ref><sp/>:<sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;UTF8&lt;&gt;,<sp/>ParseArrayHandler&lt;count&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_array_handler_1ac64203174648ebaf7f011841d9b713dc" kindref="member">ParseArrayHandler</ref>()<sp/>:<sp/><ref refid="struct_parse_array_handler_1a468c68c967c196a63f584c6b62df3371" kindref="member">step_</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_array_handler_1a17437d5727576748fe67dbc50faca9a7" kindref="member">Default</ref>()<sp/>{<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_array_handler_1afcb547be410c8028227a48fdaf845a0e" kindref="member">Uint</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/>EXPECT_EQ(<ref refid="struct_parse_array_handler_1a468c68c967c196a63f584c6b62df3371" kindref="member">step_</ref>,<sp/>i);<sp/><ref refid="struct_parse_array_handler_1a468c68c967c196a63f584c6b62df3371" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_array_handler_1a504d6c8596ce1ea29051750c74854853" kindref="member">StartArray</ref>()<sp/>{<sp/>EXPECT_EQ(0u,<sp/><ref refid="struct_parse_array_handler_1a468c68c967c196a63f584c6b62df3371" kindref="member">step_</ref>);<sp/><ref refid="struct_parse_array_handler_1a468c68c967c196a63f584c6b62df3371" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_array_handler_1a4209f2d7780a62fd2b418a0795703555" kindref="member">EndArray</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/><ref refid="struct_parse_array_handler_1a468c68c967c196a63f584c6b62df3371" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_parse_array_handler_1a468c68c967c196a63f584c6b62df3371" kindref="member">step_</ref>;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseEmptyArray)<sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json<sp/>=<sp/><ref refid="unittest_8h_1a0b8e1bafb97ad4a272c5cc4469a13687" kindref="member">StrDup</ref>(</highlight><highlight class="stringliteral">&quot;[<sp/>]<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">InsituStringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_array_handler" kindref="compound">ParseArrayHandler&lt;0&gt;</ref><sp/>h;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(s,<sp/>h);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(2u,<sp/>h.<ref refid="struct_parse_array_handler_1a468c68c967c196a63f584c6b62df3371" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>free(json);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseArray)<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json<sp/>=<sp/><ref refid="unittest_8h_1a0b8e1bafb97ad4a272c5cc4469a13687" kindref="member">StrDup</ref>(</highlight><highlight class="stringliteral">&quot;[1,<sp/>2,<sp/>3,<sp/>4]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">InsituStringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_array_handler" kindref="compound">ParseArrayHandler&lt;4&gt;</ref><sp/>h;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(s,<sp/>h);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(6u,<sp/>h.<ref refid="struct_parse_array_handler_1a468c68c967c196a63f584c6b62df3371" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>free(json);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseArray_Error)<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_ARRAY_ERROR(errorCode,<sp/>str,<sp/>errorOffset)<sp/>\</highlight></codeline>
<codeline lineno="1067"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1068"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>streamPos<sp/>=<sp/>errorOffset;<sp/>\</highlight></codeline>
<codeline lineno="1069"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>buffer[1001];<sp/>\</highlight></codeline>
<codeline lineno="1070"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(buffer,<sp/>str,<sp/>1000);<sp/>\</highlight></codeline>
<codeline lineno="1071"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsituStringStream<sp/>s(buffer);<sp/>\</highlight></codeline>
<codeline lineno="1072"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseReaderHandler&lt;&gt;<sp/>h;<sp/>\</highlight></codeline>
<codeline lineno="1073"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GenericReader&lt;UTF8&lt;&gt;,<sp/>UTF8&lt;&gt;,<sp/>CrtAllocator&gt;<sp/>reader;<sp/>\</highlight></codeline>
<codeline lineno="1074"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.Parse(s,<sp/>h));<sp/>\</highlight></codeline>
<codeline lineno="1075"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(errorCode,<sp/>reader.GetParseErrorCode());\</highlight></codeline>
<codeline lineno="1076"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(errorOffset,<sp/>reader.GetErrorOffset());\</highlight></codeline>
<codeline lineno="1077"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(streamPos,<sp/>s.Tell());\</highlight></codeline>
<codeline lineno="1078"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Missing<sp/>a<sp/>comma<sp/>or<sp/>&apos;]&apos;<sp/>after<sp/>an<sp/>array<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aab63dea66734b992ac716833984e6a6e" kindref="member">TEST_ARRAY_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7abfdd2bd90134fec4fe6a22762d16a5f5" kindref="member">kParseErrorArrayMissCommaOrSquareBracket</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[1&quot;</highlight><highlight class="normal">,<sp/>2u);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aab63dea66734b992ac716833984e6a6e" kindref="member">TEST_ARRAY_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7abfdd2bd90134fec4fe6a22762d16a5f5" kindref="member">kParseErrorArrayMissCommaOrSquareBracket</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[1}&quot;</highlight><highlight class="normal">,<sp/>2u);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aab63dea66734b992ac716833984e6a6e" kindref="member">TEST_ARRAY_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7abfdd2bd90134fec4fe6a22762d16a5f5" kindref="member">kParseErrorArrayMissCommaOrSquareBracket</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[1<sp/>2]&quot;</highlight><highlight class="normal">,<sp/>3u);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>cannot<sp/>have<sp/>a<sp/>trailing<sp/>comma<sp/>(without<sp/>kParseTrailingCommasFlag);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>value<sp/>must<sp/>follow<sp/>a<sp/>comma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1aab63dea66734b992ac716833984e6a6e" kindref="member">TEST_ARRAY_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[1,]&quot;</highlight><highlight class="normal">,<sp/>3u);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TEST_ARRAY_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092" refid="struct_parse_object_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>:<sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;UTF8&lt;&gt;,<sp/>ParseObjectHandler&gt;<sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler_1a9e5b32f000bc1a38ed99f2bd3c967363" kindref="member">ParseObjectHandler</ref>()<sp/>:<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_object_handler_1ab90eeb8596785e4f2b9feb5b9b4a49cb" kindref="member">Default</ref>()<sp/>{<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_object_handler_1a0b1076793ab2d19b4017bf6dfb19a99f" kindref="member">Null</ref>()<sp/>{<sp/>EXPECT_EQ(8u,<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_object_handler_1a1b47ff2a076afea48735aa77f1466ae8" kindref="member">Bool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>EXPECT_TRUE(b);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>EXPECT_FALSE(b);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_object_handler_1a22a89331f240cdc2fb78deac9d3ac59d" kindref="member">Int</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:<sp/>EXPECT_EQ(123,<sp/>i);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>15:<sp/>EXPECT_EQ(1,<sp/>i);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:<sp/>EXPECT_EQ(2,<sp/>i);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>17:<sp/>EXPECT_EQ(3,<sp/>i);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_object_handler_1aa3347801f07d5ab978dd2fcd7e54069b" kindref="member">Uint</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_parse_object_handler_1a22a89331f240cdc2fb78deac9d3ac59d" kindref="member">Int</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i));<sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_object_handler_1adae123b13d958a45f5eefcfc82fa7123" kindref="member">Double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/>{<sp/>EXPECT_EQ(12u,<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);<sp/>EXPECT_DOUBLE_EQ(3.1416,<sp/>d);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_object_handler_1a849dabf93e84f088db726968e721bb95" kindref="member">String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">,<sp/>str);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;world&quot;</highlight><highlight class="normal">,<sp/>str);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">,<sp/>str);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">,<sp/>str);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">,<sp/>str);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">,<sp/>str);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:<sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;pi&quot;</highlight><highlight class="normal">,<sp/>str);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>13:<sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>str);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_object_handler_1a995e4c0451d701ac45e9c509c477a9b5" kindref="member">StartObject</ref>()<sp/>{<sp/>EXPECT_EQ(0u,<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_object_handler_1a371fd6b2b3b27f2951a5ff489d695775" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>memberCount)<sp/>{<sp/>EXPECT_EQ(19u,<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);<sp/>EXPECT_EQ(7u,<sp/>memberCount);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_object_handler_1a71432fed9dc7989153f4e9ecb5b393a7" kindref="member">StartArray</ref>()<sp/>{<sp/>EXPECT_EQ(14u,<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_object_handler_1aa182002069d26bf2ff6f05f02c2ea8ae" kindref="member">EndArray</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>elementCount)<sp/>{<sp/>EXPECT_EQ(18u,<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);<sp/>EXPECT_EQ(3u,<sp/>elementCount);<sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseObject)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;,<sp/>\&quot;t\&quot;<sp/>:<sp/>true<sp/>,<sp/>\&quot;f\&quot;<sp/>:<sp/>false,<sp/>\&quot;n\&quot;:<sp/>null,<sp/>\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3]<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insitu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json2<sp/>=<sp/><ref refid="unittest_8h_1a0b8e1bafb97ad4a272c5cc4469a13687" kindref="member">StrDup</ref>(json);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">InsituStringStream</ref><sp/>s(json2);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref>&gt;(s,<sp/>h);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(20u,<sp/>h.<ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(json2);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(s,<sp/>h);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(20u,<sp/>h.<ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160" refid="struct_parse_empty_object_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_parse_empty_object_handler" kindref="compound">ParseEmptyObjectHandler</ref><sp/>:<sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;UTF8&lt;&gt;,<sp/>ParseEmptyObjectHandler&gt;<sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_empty_object_handler_1aef7b76204dd314fc87cdeb170d57bf4b" kindref="member">ParseEmptyObjectHandler</ref>()<sp/>:<sp/><ref refid="struct_parse_empty_object_handler_1a38d695565121de3067ca59f79b7012e7" kindref="member">step_</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_empty_object_handler_1a92b0cce8870399503d6276e177d794cc" kindref="member">Default</ref>()<sp/>{<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_empty_object_handler_1aa0673ac9a0fe9e1404442e5716a12b41" kindref="member">StartObject</ref>()<sp/>{<sp/>EXPECT_EQ(0u,<sp/><ref refid="struct_parse_empty_object_handler_1a38d695565121de3067ca59f79b7012e7" kindref="member">step_</ref>);<sp/><ref refid="struct_parse_empty_object_handler_1a38d695565121de3067ca59f79b7012e7" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_empty_object_handler_1a89c9d61c0165b068882b5550777a7ed0" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/>EXPECT_EQ(1u,<sp/><ref refid="struct_parse_empty_object_handler_1a38d695565121de3067ca59f79b7012e7" kindref="member">step_</ref>);<sp/><ref refid="struct_parse_empty_object_handler_1a38d695565121de3067ca59f79b7012e7" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_parse_empty_object_handler_1a38d695565121de3067ca59f79b7012e7" kindref="member">step_</ref>;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>Parse_EmptyObject)<sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(</highlight><highlight class="stringliteral">&quot;{<sp/>}<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_empty_object_handler" kindref="compound">ParseEmptyObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(s,<sp/>h);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(2u,<sp/>h.<ref refid="struct_parse_empty_object_handler_1a38d695565121de3067ca59f79b7012e7" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178" refid="struct_parse_multiple_root_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_parse_multiple_root_handler" kindref="compound">ParseMultipleRootHandler</ref><sp/>:<sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;UTF8&lt;&gt;,<sp/>ParseMultipleRootHandler&gt;<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_multiple_root_handler_1a73e30e419cfc3e60a7ec620abe9d8a2e" kindref="member">ParseMultipleRootHandler</ref>()<sp/>:<sp/><ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_multiple_root_handler_1a536f5fe930ad7dc9d9fd5cd55612dedd" kindref="member">Default</ref>()<sp/>{<sp/>ADD_FAILURE();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_multiple_root_handler_1a2d66af062219b2a2d162ebada0750db4" kindref="member">StartObject</ref>()<sp/>{<sp/>EXPECT_EQ(0u,<sp/><ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>);<sp/><ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_multiple_root_handler_1a77da373f340f2c9e436abc05ed4322b1" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/>EXPECT_EQ(1u,<sp/><ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>);<sp/><ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_multiple_root_handler_1a525e057b00107029ef215afe61e2aa08" kindref="member">StartArray</ref>()<sp/>{<sp/>EXPECT_EQ(2u,<sp/><ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>);<sp/><ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_parse_multiple_root_handler_1ad50319871ac57269cdda20fd861ef732" kindref="member">EndArray</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/>EXPECT_EQ(3u,<sp/><ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>);<sp/><ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags&gt;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="readertest_8cpp_1a43a70800373051361573d37f95bb433e" kindref="member">TestMultipleRoot</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(</highlight><highlight class="stringliteral">&quot;{}[]<sp/>a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_multiple_root_handler" kindref="compound">ParseMultipleRootHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;parseFlags&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(2u,<sp/>h.<ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;parseFlags&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(4u,<sp/>h.<ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>s.Take());</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>s.Take());</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>Parse_MultipleRoot)<sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>TestMultipleRoot&lt;kParseStopWhenDoneFlag&gt;();</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseIterative_MultipleRoot)<sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>TestMultipleRoot&lt;kParseIterativeFlag<sp/>|<sp/>kParseStopWhenDoneFlag&gt;();</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags&gt;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="readertest_8cpp_1a3e697a5cd8deeff851239ddc33e9466f" kindref="member">TestInsituMultipleRoot</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;{}[]<sp/>a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">InsituStringStream</ref><sp/>s(buffer);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_multiple_root_handler" kindref="compound">ParseMultipleRootHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref><sp/>|<sp/>parseFlags&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(2u,<sp/>h.<ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref><sp/>|<sp/>parseFlags&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(4u,<sp/>h.<ref refid="struct_parse_multiple_root_handler_1adc5434fe7e07351845abf19f85239a10" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>s.Take());</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>s.Take());</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>free(buffer);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseInsitu_MultipleRoot)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>TestInsituMultipleRoot&lt;kParseStopWhenDoneFlag&gt;();</highlight></codeline>
<codeline lineno="1228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseInsituIterative_MultipleRoot)<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>TestInsituMultipleRoot&lt;kParseIterativeFlag<sp/>|<sp/>kParseStopWhenDoneFlag&gt;();</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_ERROR(errorCode,<sp/>str,<sp/>errorOffset)<sp/>\</highlight></codeline>
<codeline lineno="1235"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>streamPos<sp/>=<sp/>errorOffset;<sp/>\</highlight></codeline>
<codeline lineno="1237"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>buffer[1001];<sp/>\</highlight></codeline>
<codeline lineno="1238"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(buffer,<sp/>str,<sp/>1000);<sp/>\</highlight></codeline>
<codeline lineno="1239"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsituStringStream<sp/>s(buffer);<sp/>\</highlight></codeline>
<codeline lineno="1240"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseReaderHandler&lt;&gt;<sp/>h;<sp/>\</highlight></codeline>
<codeline lineno="1241"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reader<sp/>reader;<sp/>\</highlight></codeline>
<codeline lineno="1242"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.Parse(s,<sp/>h));<sp/>\</highlight></codeline>
<codeline lineno="1243"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(errorCode,<sp/>reader.GetParseErrorCode());\</highlight></codeline>
<codeline lineno="1244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(errorOffset,<sp/>reader.GetErrorOffset());\</highlight></codeline>
<codeline lineno="1245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(streamPos,<sp/>s.Tell());\</highlight></codeline>
<codeline lineno="1246"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseDocument_Error)<sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>document<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a04b368d184e84b50580be2faa55f738a" kindref="member">kParseErrorDocumentEmpty</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0u);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a04b368d184e84b50580be2faa55f738a" kindref="member">kParseErrorDocumentEmpty</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a04b368d184e84b50580be2faa55f738a" kindref="member">kParseErrorDocumentEmpty</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>2u);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>document<sp/>root<sp/>must<sp/>not<sp/>follow<sp/>by<sp/>other<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a2293b39033220f4c2a568482c497dab5" kindref="member">kParseErrorDocumentRootNotSingular</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[]<sp/>0&quot;</highlight><highlight class="normal">,<sp/>3u);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a2293b39033220f4c2a568482c497dab5" kindref="member">kParseErrorDocumentRootNotSingular</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{}<sp/>0&quot;</highlight><highlight class="normal">,<sp/>3u);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a2293b39033220f4c2a568482c497dab5" kindref="member">kParseErrorDocumentRootNotSingular</ref>,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>[]&quot;</highlight><highlight class="normal">,<sp/>5u);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a2293b39033220f4c2a568482c497dab5" kindref="member">kParseErrorDocumentRootNotSingular</ref>,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>2u);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseValue_Error)<sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;nulL&quot;</highlight><highlight class="normal">,<sp/>3u);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;truE&quot;</highlight><highlight class="normal">,<sp/>3u);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;falsE&quot;</highlight><highlight class="normal">,<sp/>4u);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;a]&quot;</highlight><highlight class="normal">,<sp/>0u);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;.1&quot;</highlight><highlight class="normal">,<sp/>0u);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseObject_Error)<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Missing<sp/>a<sp/>name<sp/>for<sp/>object<sp/>member.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{1}&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{:1}&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{null:1}&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{true:1}&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{false:1}&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{1:1}&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{[]:1}&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{{}:1}&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{xyz:1}&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Missing<sp/>a<sp/>colon<sp/>after<sp/>a<sp/>name<sp/>of<sp/>object<sp/>member.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a55cda7eb30436986ab42a61e06caf017" kindref="member">kParseErrorObjectMissColon</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;<sp/>1}&quot;</highlight><highlight class="normal">,<sp/>5u);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a55cda7eb30436986ab42a61e06caf017" kindref="member">kParseErrorObjectMissColon</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;,1}&quot;</highlight><highlight class="normal">,<sp/>4u);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>a<sp/>comma<sp/>or<sp/>&apos;}&apos;<sp/>after<sp/>an<sp/>object<sp/>member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a34f70d7ed2fa121954f5fc5b5113d05f" kindref="member">kParseErrorObjectMissCommaOrCurlyBracket</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;:1]&quot;</highlight><highlight class="normal">,<sp/>6u);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Object<sp/>cannot<sp/>have<sp/>a<sp/>trailing<sp/>comma<sp/>(without<sp/>kParseTrailingCommasFlag);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>object<sp/>member<sp/>name<sp/>must<sp/>follow<sp/>a<sp/>comma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1af0cc358a05148bd414d612047eda8637" kindref="member">TEST_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;:1,}&quot;</highlight><highlight class="normal">,<sp/>7u);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>tests<sp/>that<sp/>MemoryStream<sp/>is<sp/>checking<sp/>the<sp/>length<sp/>in<sp/>Peek().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_memory_stream" kindref="compound">MemoryStream</ref><sp/>ms(</highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler&lt;&gt;</ref><sp/>h;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450af77d115d3bbed0a448b6b335f3b93b36" kindref="member">kParseStopWhenDoneFlag</ref>&gt;(ms,<sp/>h));</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/>reader.<ref refid="class_generic_reader_1a937bf90919f50e1c370b312cee5833e8" kindref="member">GetParseErrorCode</ref>());</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TEST_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/><ref refid="reader_8h_1a60338858b2582eca23f3e509a2d82e0e" kindref="member">SkipWhitespace</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>ss(</highlight><highlight class="stringliteral">&quot;<sp/>A<sp/>\t\tB\n<sp/>\n\nC\r\r<sp/>\rD<sp/>\t\n\r<sp/>E&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expected<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ABCDE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8h_1a60338858b2582eca23f3e509a2d82e0e" kindref="member">SkipWhitespace</ref>(ss);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expected[i],<sp/>ss.Take());</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>implementing<sp/>a<sp/>stream<sp/>without<sp/>copy<sp/>stream<sp/>optimization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clone<sp/>from<sp/>GenericStringStream<sp/>except<sp/>that<sp/>copy<sp/>constructor<sp/>is<sp/>disabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding&gt;</highlight></codeline>
<codeline lineno="1317" refid="class_custom_string_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_custom_string_stream" kindref="compound">CustomStringStream</ref><sp/>{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch<sp/><ref refid="class_custom_string_stream_1a91593b56dd1b81c3a054fd737ced3c9b" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_custom_string_stream_1ae52f3c6066b9af8eb092ba6c15194d5b" kindref="member">CustomStringStream</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_custom_string_stream_1a91593b56dd1b81c3a054fd737ced3c9b" kindref="member">Ch</ref><sp/>*src)<sp/>:<sp/>src_(src),<sp/>head_(src)<sp/>{}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_custom_string_stream_1a91593b56dd1b81c3a054fd737ced3c9b" kindref="member">Ch</ref><sp/><ref refid="class_custom_string_stream_1a6d4e3fca7431796282842f3844b59a0c" kindref="member">Peek</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*src_;<sp/>}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_custom_string_stream_1a91593b56dd1b81c3a054fd737ced3c9b" kindref="member">Ch</ref><sp/><ref refid="class_custom_string_stream_1a84df37e5ad6bb53bb96c406502a7bc24" kindref="member">Take</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*src_++;<sp/>}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_custom_string_stream_1aaa90887a920b8fb1b69890baabd235c4" kindref="member">Tell</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(src_<sp/>-<sp/>head_);<sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_custom_string_stream_1a91593b56dd1b81c3a054fd737ced3c9b" kindref="member">Ch</ref>*<sp/><ref refid="class_custom_string_stream_1a203bbea8b48fa7885e8e0ed6f233a3bf" kindref="member">PutBegin</ref>()<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_custom_string_stream_1ad57289c3cbb96b2d479ab0f8e17e0bd5" kindref="member">Put</ref>(<ref refid="class_custom_string_stream_1a91593b56dd1b81c3a054fd737ced3c9b" kindref="member">Ch</ref>)<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_custom_string_stream_1a4720bd4fb0ff01a8a860971346f89305" kindref="member">Flush</ref>()<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_custom_string_stream_1a4858f871165f0824151412e23138b207" kindref="member">PutEnd</ref>(<ref refid="class_custom_string_stream_1a91593b56dd1b81c3a054fd737ced3c9b" kindref="member">Ch</ref>*)<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prohibit<sp/>copy<sp/>constructor<sp/>&amp;<sp/>assignment<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_custom_string_stream_1ae52f3c6066b9af8eb092ba6c15194d5b" kindref="member">CustomStringStream</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_custom_string_stream" kindref="compound">CustomStringStream</ref>&amp;);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_custom_string_stream" kindref="compound">CustomStringStream</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_custom_string_stream" kindref="compound">CustomStringStream</ref>&amp;);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_custom_string_stream_1a91593b56dd1b81c3a054fd737ced3c9b" kindref="member">Ch</ref>*<sp/>src_;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_custom_string_stream_1a91593b56dd1b81c3a054fd737ced3c9b" kindref="member">Ch</ref>*<sp/>head_;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1339"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>following<sp/>code<sp/>is<sp/>compiled,<sp/>it<sp/>should<sp/>generate<sp/>compilation<sp/>error<sp/>as<sp/>predicted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Because<sp/>CustomStringStream&lt;&gt;<sp/>is<sp/>not<sp/>copyable<sp/>via<sp/>making<sp/>copy<sp/>constructor<sp/>private.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerapidjson" kindref="compound">rapidjson</ref><sp/>{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding&gt;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_stream_traits" kindref="compound">StreamTraits</ref>&lt;<ref refid="class_custom_string_stream" kindref="compound">CustomStringStream</ref>&lt;<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>copyOptimization<sp/>=<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="1349"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>rapidjson</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/><ref refid="class_custom_string_stream" kindref="compound">CustomStringStream</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;,<sp/>\&quot;t\&quot;<sp/>:<sp/>true<sp/>,<sp/>\&quot;f\&quot;<sp/>:<sp/>false,<sp/>\&quot;n\&quot;:<sp/>null,<sp/>\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3]<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_custom_string_stream" kindref="compound">CustomStringStream&lt;UTF8&lt;char&gt;</ref><sp/>&gt;<sp/>s(json);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(s,<sp/>h);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(20u,<sp/>h.<ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365" refid="class_i_stream_wrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_i_stream_wrapper" kindref="compound">IStreamWrapper</ref><sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_i_stream_wrapper_1a30ab1388f00d344ee40c209daba89e74" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_stream_wrapper_1aebb05a3ffc84e22223bbfb470a563539" kindref="member">IStreamWrapper</ref>(std::istream&amp;<sp/>is)<sp/>:<sp/>is_(is)<sp/>{}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_stream_wrapper_1a30ab1388f00d344ee40c209daba89e74" kindref="member">Ch</ref><sp/><ref refid="class_i_stream_wrapper_1a6ae7cad8ce8004e478217944a7ea9a29" kindref="member">Peek</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>is_.peek();</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/>std::char_traits&lt;char&gt;::eof()<sp/>?<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_i_stream_wrapper_1a30ab1388f00d344ee40c209daba89e74" kindref="member">Ch</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_stream_wrapper_1a30ab1388f00d344ee40c209daba89e74" kindref="member">Ch</ref><sp/><ref refid="class_i_stream_wrapper_1a992cd4a65ad4b6fbccbd5a2006fb38cf" kindref="member">Take</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>is_.get();</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/>std::char_traits&lt;char&gt;::eof()<sp/>?<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_i_stream_wrapper_1a30ab1388f00d344ee40c209daba89e74" kindref="member">Ch</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_i_stream_wrapper_1ac3fe30e0604ae39a30b74dfec86fb3f1" kindref="member">Tell</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(is_.tellg());<sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_stream_wrapper_1a30ab1388f00d344ee40c209daba89e74" kindref="member">Ch</ref>*<sp/><ref refid="class_i_stream_wrapper_1a538bc21aa265ebf60f18c33cd37040e5" kindref="member">PutBegin</ref>()<sp/>{<sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_stream_wrapper_1a2d836cc9a53db8f3f33483b03be8c4e2" kindref="member">Put</ref>(<ref refid="class_i_stream_wrapper_1a30ab1388f00d344ee40c209daba89e74" kindref="member">Ch</ref>)<sp/>{<sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_stream_wrapper_1af601aaec43730945cbb8cb07304bee1f" kindref="member">Flush</ref>()<sp/>{<sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_i_stream_wrapper_1a4cd3c4f0ce83b270359eb1b25d312761" kindref="member">PutEnd</ref>(<ref refid="class_i_stream_wrapper_1a30ab1388f00d344ee40c209daba89e74" kindref="member">Ch</ref>*)<sp/>{<sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_stream_wrapper_1aebb05a3ffc84e22223bbfb470a563539" kindref="member">IStreamWrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_stream_wrapper" kindref="compound">IStreamWrapper</ref>&amp;);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_stream_wrapper" kindref="compound">IStreamWrapper</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_stream_wrapper" kindref="compound">IStreamWrapper</ref>&amp;);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istream&amp;<sp/>is_;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395" refid="class_w_i_stream_wrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_w_i_stream_wrapper" kindref="compound">WIStreamWrapper</ref><sp/>{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/><ref refid="class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><ref refid="class_w_i_stream_wrapper_1ade2c5d942e477be8aeb6d525d329f2e4" kindref="member">WIStreamWrapper</ref>(std::wistream&amp;<sp/>is)<sp/>:<sp/>is_(is)<sp/>{}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><ref refid="class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9" kindref="member">Ch</ref><sp/><ref refid="class_w_i_stream_wrapper_1abc20884603971a83a8e30fd938a1a603" kindref="member">Peek</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>is_.peek();</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/>std::char_traits&lt;wchar_t&gt;::eof()<sp/>?<sp/><ref refid="class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9" kindref="member">Ch</ref>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>:<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9" kindref="member">Ch</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><ref refid="class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9" kindref="member">Ch</ref><sp/><ref refid="class_w_i_stream_wrapper_1ac456d670481c585b48b82e76542fdc67" kindref="member">Take</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>is_.get();</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/>std::char_traits&lt;wchar_t&gt;::eof()<sp/>?<sp/><ref refid="class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9" kindref="member">Ch</ref>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>:<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9" kindref="member">Ch</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_w_i_stream_wrapper_1acaa96a99cbb9aa48c5f5b49aecc09f97" kindref="member">Tell</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(is_.tellg());<sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><ref refid="class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9" kindref="member">Ch</ref>*<sp/><ref refid="class_w_i_stream_wrapper_1a038758cd930e6b4bccb243a6f16aa6ca" kindref="member">PutBegin</ref>()<sp/>{<sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_w_i_stream_wrapper_1a2a50671457b7610f44924c2ff1f8d3e6" kindref="member">Put</ref>(<ref refid="class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9" kindref="member">Ch</ref>)<sp/>{<sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_w_i_stream_wrapper_1a40943c14231bc79f9a57c3364cc43432" kindref="member">Flush</ref>()<sp/>{<sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_w_i_stream_wrapper_1aa144af9605ff7e798e19b6add8c67d77" kindref="member">PutEnd</ref>(<ref refid="class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9" kindref="member">Ch</ref>*)<sp/>{<sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><ref refid="class_w_i_stream_wrapper_1ade2c5d942e477be8aeb6d525d329f2e4" kindref="member">WIStreamWrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_i_stream_wrapper" kindref="compound">WIStreamWrapper</ref>&amp;);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><ref refid="class_w_i_stream_wrapper" kindref="compound">WIStreamWrapper</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_i_stream_wrapper" kindref="compound">WIStreamWrapper</ref>&amp;);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>std::wistream&amp;<sp/>is_;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>Parse_IStreamWrapper_StringStream)<sp/>{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;[1,2,3,4]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss(json);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_stream_wrapper" kindref="compound">IStreamWrapper</ref><sp/>is(ss);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_array_handler" kindref="compound">ParseArrayHandler&lt;4&gt;</ref><sp/>h;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(is,<sp/>h);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="1435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>iterative<sp/>parsing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TESTERRORHANDLING(text,<sp/>errorCode,<sp/>offset)\</highlight></codeline>
<codeline lineno="1440"><highlight class="preprocessor">{\</highlight></codeline>
<codeline lineno="1441"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>unsigned<sp/>streamPos<sp/>=<sp/>offset;<sp/>\</highlight></codeline>
<codeline lineno="1442"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>StringStream<sp/>json(text);<sp/>\</highlight></codeline>
<codeline lineno="1443"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BaseReaderHandler&lt;&gt;<sp/>handler;<sp/>\</highlight></codeline>
<codeline lineno="1444"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Reader<sp/>reader;<sp/>\</highlight></codeline>
<codeline lineno="1445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>reader.Parse&lt;kParseIterativeFlag&gt;(json,<sp/>handler);<sp/>\</highlight></codeline>
<codeline lineno="1446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.HasParseError());<sp/>\</highlight></codeline>
<codeline lineno="1447"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>EXPECT_EQ(errorCode,<sp/>reader.GetParseErrorCode());<sp/>\</highlight></codeline>
<codeline lineno="1448"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>EXPECT_EQ(offset,<sp/>reader.GetErrorOffset());<sp/>\</highlight></codeline>
<codeline lineno="1449"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>EXPECT_EQ(streamPos,<sp/>json.Tell());<sp/>\</highlight></codeline>
<codeline lineno="1450"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>IterativeParsing_ErrorHandling)<sp/>{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;:<sp/>a}&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/>6u);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a04b368d184e84b50580be2faa55f738a" kindref="member">kParseErrorDocumentEmpty</ref>,<sp/>0u);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;{}{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a2293b39033220f4c2a568482c497dab5" kindref="member">kParseErrorDocumentRootNotSingular</ref>,<sp/>2u);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;{1}&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/>1u);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;,<sp/>1}&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a55cda7eb30436986ab42a61e06caf017" kindref="member">kParseErrorObjectMissColon</ref>,<sp/>4u);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;}&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a55cda7eb30436986ab42a61e06caf017" kindref="member">kParseErrorObjectMissColon</ref>,<sp/>4u);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;:<sp/>1&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a34f70d7ed2fa121954f5fc5b5113d05f" kindref="member">kParseErrorObjectMissCommaOrCurlyBracket</ref>,<sp/>7u);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;[1<sp/>2<sp/>3]&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7abfdd2bd90134fec4fe6a22762d16a5f5" kindref="member">kParseErrorArrayMissCommaOrSquareBracket</ref>,<sp/>3u);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;{\&quot;a:<sp/>1&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a6369e5b4e4922720cbc45c5941efc4af" kindref="member">kParseErrorStringMissQuotationMark</ref>,<sp/>6u);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;:}&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/>5u);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;:]&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/>5u);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;[1,2,}&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/>5u);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;[}]&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/>1u);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;[,]&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/>1u);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;[1,,]&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/>3u);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trailing<sp/>commas<sp/>are<sp/>not<sp/>allowed<sp/>without<sp/>kParseTrailingCommasFlag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;:<sp/>1,}&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/>8u);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;[1,2,3,]&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/>7u);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Any<sp/>JSON<sp/>value<sp/>can<sp/>be<sp/>a<sp/>valid<sp/>root<sp/>element<sp/>in<sp/>RFC7159.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;ab&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a6369e5b4e4922720cbc45c5941efc4af" kindref="member">kParseErrorStringMissQuotationMark</ref>,<sp/>3u);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;truE&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/>3u);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;False&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/>0u);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;true,<sp/>false&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a2293b39033220f4c2a568482c497dab5" kindref="member">kParseErrorDocumentRootNotSingular</ref>,<sp/>4u);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;false,<sp/>false&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a2293b39033220f4c2a568482c497dab5" kindref="member">kParseErrorDocumentRootNotSingular</ref>,<sp/>5u);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;nulL&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/>3u);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;null<sp/>,<sp/>null&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a2293b39033220f4c2a568482c497dab5" kindref="member">kParseErrorDocumentRootNotSingular</ref>,<sp/>5u);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a42611f55159ca2d7b080ee7b5995a51e" kindref="member">TESTERRORHANDLING</ref>(</highlight><highlight class="stringliteral">&quot;1a&quot;</highlight><highlight class="normal">,<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a2293b39033220f4c2a568482c497dab5" kindref="member">kParseErrorDocumentRootNotSingular</ref>,<sp/>1u);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding<sp/>=<sp/>UTF8&lt;&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1487" refid="struct_iterative_parsing_reader_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_iterative_parsing_reader_handler" kindref="compound">IterativeParsingReaderHandler</ref><sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch<sp/><ref refid="struct_iterative_parsing_reader_handler_1ab2a1071324757bf9f617d09f0998e2a0" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1a3c096cea45af81e09675b0954f9df5b1" kindref="member">LOG_NULL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x10000000;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1a1cec7d66e55f8d8dc1f60f78502b6058" kindref="member">LOG_BOOL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x20000000;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1a580d89f73e2a327bdba873a3c68b550a" kindref="member">LOG_INT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x30000000;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1a6c21e30374cb3b8aa0030d0920a03131" kindref="member">LOG_UINT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x40000000;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1a23450d62f01eb0951379e3b03d4fc340" kindref="member">LOG_INT64</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x50000000;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1a3c53bd31348781d8138a96a1ae67b54f" kindref="member">LOG_UINT64</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x60000000;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1a1a30c03ff10fc96c5d0bc35aa9e2704a" kindref="member">LOG_DOUBLE</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x70000000;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1a931864e899c8da14a11446b180f09502" kindref="member">LOG_STRING</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x80000000;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1ab488e7de7961b7b234bd5a315594b1cc" kindref="member">LOG_STARTOBJECT</ref><sp/>=<sp/>0x90000000;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1a940ea6a3d815546e8bc2707795bb927c" kindref="member">LOG_KEY</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0xA0000000;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1a952f68ebc1bb8b6852e71c76dfaf518b" kindref="member">LOG_ENDOBJECT</ref><sp/><sp/><sp/>=<sp/>0xB0000000;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1ad1c867965c72e99e85d98b43ed86cfdd" kindref="member">LOG_STARTARRAY</ref><sp/><sp/>=<sp/>0xC0000000;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1af4a9abe34b336931c1624e07409c8365" kindref="member">LOG_ENDARRAY</ref><sp/><sp/><sp/><sp/>=<sp/>0xD0000000;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref><sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>];</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_iterative_parsing_reader_handler_1ab1b40c3fcbc2f53c641124b99b0cf023" kindref="member">IterativeParsingReaderHandler</ref>()<sp/>:<sp/><ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>(0)<sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1a749649db75f791e04833c9aa82eb93ea" kindref="member">Null</ref>()<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);<sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1a3c096cea45af81e09675b0954f9df5b1" kindref="member">LOG_NULL</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1ab45ff8f39b4537568aa0f7d25669d569" kindref="member">Bool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);<sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1a1cec7d66e55f8d8dc1f60f78502b6058" kindref="member">LOG_BOOL</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1ab2e5476c61b710ee8cced770297ced2b" kindref="member">Int</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);<sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1a580d89f73e2a327bdba873a3c68b550a" kindref="member">LOG_INT</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1ac25635362ab5139ccb8aea0fa5403d9d" kindref="member">Uint</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);<sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1a580d89f73e2a327bdba873a3c68b550a" kindref="member">LOG_INT</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1ab1a990b65daec328c99059a086001ccf" kindref="member">Int64</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref>)<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);<sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1a23450d62f01eb0951379e3b03d4fc340" kindref="member">LOG_INT64</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1a4a68c6855ba60b33b6b2bcb8bf6f0891" kindref="member">Uint64</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>)<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);<sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1a3c53bd31348781d8138a96a1ae67b54f" kindref="member">LOG_UINT64</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1a509a1218da0724dd76979d071f9cff38" kindref="member">Double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);<sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1a1a30c03ff10fc96c5d0bc35aa9e2704a" kindref="member">LOG_DOUBLE</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1a8fced3aa6a40040123a0408098986624" kindref="member">RawNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1ab2a1071324757bf9f617d09f0998e2a0" kindref="member">Ch</ref>*,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);<sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1a931864e899c8da14a11446b180f09502" kindref="member">LOG_STRING</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1a05dcb37660a1083a044756bcab92a05c" kindref="member">String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1ab2a1071324757bf9f617d09f0998e2a0" kindref="member">Ch</ref>*,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);<sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1a931864e899c8da14a11446b180f09502" kindref="member">LOG_STRING</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1a6190db7ad16ce10cf0dbcae3788decf0" kindref="member">StartObject</ref>()<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);<sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1ab488e7de7961b7b234bd5a315594b1cc" kindref="member">LOG_STARTOBJECT</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1a0966244f2ac26fbf6e806317a1472d3f" kindref="member">Key</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1ab2a1071324757bf9f617d09f0998e2a0" kindref="member">Ch</ref>*,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);<sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1a940ea6a3d815546e8bc2707795bb927c" kindref="member">LOG_KEY</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1aee1c9b5a18ec7e0c8aba23b35bfd8c2d" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c)<sp/>&amp;<sp/>0xF0000000)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1a952f68ebc1bb8b6852e71c76dfaf518b" kindref="member">LOG_ENDOBJECT</ref><sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1a144a7b777ddab8498549a992d7556b05" kindref="member">StartArray</ref>()<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);<sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1ad1c867965c72e99e85d98b43ed86cfdd" kindref="member">LOG_STARTARRAY</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler_1a799522d5e138c61dd035276f6dbf4edf" kindref="member">EndArray</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref><sp/>&lt;<sp/><ref refid="struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5" kindref="member">LogCapacity</ref>);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c)<sp/>&amp;<sp/>0xF0000000)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>++]<sp/>=<sp/><ref refid="struct_iterative_parsing_reader_handler_1af4a9abe34b336931c1624e07409c8365" kindref="member">LOG_ENDARRAY</ref><sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>IterativeParsing_General)<sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>is(</highlight><highlight class="stringliteral">&quot;[1,<sp/>{\&quot;k\&quot;:<sp/>[1,<sp/>2]},<sp/>null,<sp/>false,<sp/>true,<sp/>\&quot;string\&quot;,<sp/>1.2]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_iterative_parsing_reader_handler" kindref="compound">IterativeParsingReaderHandler&lt;&gt;</ref><sp/>handler;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aadb14f5a3b6b33e28055e913a2eae5e9" kindref="member">kParseIterativeFlag</ref>&gt;(is,<sp/>handler);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(r.<ref refid="struct_parse_result_1adfe0ef5b994e82f8aa9ebf0b30c924b1" kindref="member">IsError</ref>());</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>e[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ad1c867965c72e99e85d98b43ed86cfdd" kindref="member">LOG_STARTARRAY</ref>,</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a580d89f73e2a327bdba873a3c68b550a" kindref="member">LOG_INT</ref>,</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ab488e7de7961b7b234bd5a315594b1cc" kindref="member">LOG_STARTOBJECT</ref>,</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a940ea6a3d815546e8bc2707795bb927c" kindref="member">LOG_KEY</ref>,</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ad1c867965c72e99e85d98b43ed86cfdd" kindref="member">LOG_STARTARRAY</ref>,</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a580d89f73e2a327bdba873a3c68b550a" kindref="member">LOG_INT</ref>,</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a580d89f73e2a327bdba873a3c68b550a" kindref="member">LOG_INT</ref>,</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1af4a9abe34b336931c1624e07409c8365" kindref="member">LOG_ENDARRAY</ref><sp/>|<sp/>2,</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a952f68ebc1bb8b6852e71c76dfaf518b" kindref="member">LOG_ENDOBJECT</ref><sp/>|<sp/>1,</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a3c096cea45af81e09675b0954f9df5b1" kindref="member">LOG_NULL</ref>,</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a1cec7d66e55f8d8dc1f60f78502b6058" kindref="member">LOG_BOOL</ref>,</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a1cec7d66e55f8d8dc1f60f78502b6058" kindref="member">LOG_BOOL</ref>,</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a931864e899c8da14a11446b180f09502" kindref="member">LOG_STRING</ref>,</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a1a30c03ff10fc96c5d0bc35aa9e2704a" kindref="member">LOG_DOUBLE</ref>,</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1af4a9abe34b336931c1624e07409c8365" kindref="member">LOG_ENDARRAY</ref><sp/>|<sp/>7</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(e)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(e[i],<sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[i])<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;i<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>IterativeParsing_Count)<sp/>{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>is(</highlight><highlight class="stringliteral">&quot;[{},<sp/>{\&quot;k\&quot;:<sp/>1},<sp/>[1],<sp/>[]]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_iterative_parsing_reader_handler" kindref="compound">IterativeParsingReaderHandler&lt;&gt;</ref><sp/>handler;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aadb14f5a3b6b33e28055e913a2eae5e9" kindref="member">kParseIterativeFlag</ref>&gt;(is,<sp/>handler);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(r.<ref refid="struct_parse_result_1adfe0ef5b994e82f8aa9ebf0b30c924b1" kindref="member">IsError</ref>());</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>e[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ad1c867965c72e99e85d98b43ed86cfdd" kindref="member">LOG_STARTARRAY</ref>,</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ab488e7de7961b7b234bd5a315594b1cc" kindref="member">LOG_STARTOBJECT</ref>,</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a952f68ebc1bb8b6852e71c76dfaf518b" kindref="member">LOG_ENDOBJECT</ref><sp/>|<sp/>0,</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ab488e7de7961b7b234bd5a315594b1cc" kindref="member">LOG_STARTOBJECT</ref>,</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a940ea6a3d815546e8bc2707795bb927c" kindref="member">LOG_KEY</ref>,</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a580d89f73e2a327bdba873a3c68b550a" kindref="member">LOG_INT</ref>,</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a952f68ebc1bb8b6852e71c76dfaf518b" kindref="member">LOG_ENDOBJECT</ref><sp/>|<sp/>1,</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ad1c867965c72e99e85d98b43ed86cfdd" kindref="member">LOG_STARTARRAY</ref>,</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a580d89f73e2a327bdba873a3c68b550a" kindref="member">LOG_INT</ref>,</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1af4a9abe34b336931c1624e07409c8365" kindref="member">LOG_ENDARRAY</ref><sp/>|<sp/>1,</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ad1c867965c72e99e85d98b43ed86cfdd" kindref="member">LOG_STARTARRAY</ref>,</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1af4a9abe34b336931c1624e07409c8365" kindref="member">LOG_ENDARRAY</ref><sp/>|<sp/>0,</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1af4a9abe34b336931c1624e07409c8365" kindref="member">LOG_ENDARRAY</ref><sp/>|<sp/>4</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(e)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(e[i],<sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[i])<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;i<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>IterativePullParsing_General)<sp/>{</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_iterative_parsing_reader_handler" kindref="compound">IterativeParsingReaderHandler&lt;&gt;</ref><sp/>handler;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/>e[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ad1c867965c72e99e85d98b43ed86cfdd" kindref="member">LOG_STARTARRAY</ref>,</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a580d89f73e2a327bdba873a3c68b550a" kindref="member">LOG_INT</ref>,</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ab488e7de7961b7b234bd5a315594b1cc" kindref="member">LOG_STARTOBJECT</ref>,</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a940ea6a3d815546e8bc2707795bb927c" kindref="member">LOG_KEY</ref>,</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ad1c867965c72e99e85d98b43ed86cfdd" kindref="member">LOG_STARTARRAY</ref>,</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a580d89f73e2a327bdba873a3c68b550a" kindref="member">LOG_INT</ref>,</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a580d89f73e2a327bdba873a3c68b550a" kindref="member">LOG_INT</ref>,</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1af4a9abe34b336931c1624e07409c8365" kindref="member">LOG_ENDARRAY</ref><sp/>|<sp/>2,</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a952f68ebc1bb8b6852e71c76dfaf518b" kindref="member">LOG_ENDOBJECT</ref><sp/>|<sp/>1,</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a3c096cea45af81e09675b0954f9df5b1" kindref="member">LOG_NULL</ref>,</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a1cec7d66e55f8d8dc1f60f78502b6058" kindref="member">LOG_BOOL</ref>,</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a1cec7d66e55f8d8dc1f60f78502b6058" kindref="member">LOG_BOOL</ref>,</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a931864e899c8da14a11446b180f09502" kindref="member">LOG_STRING</ref>,</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a1a30c03ff10fc96c5d0bc35aa9e2704a" kindref="member">LOG_DOUBLE</ref>,</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1af4a9abe34b336931c1624e07409c8365" kindref="member">LOG_ENDARRAY</ref><sp/>|<sp/>7</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>is(</highlight><highlight class="stringliteral">&quot;[1,<sp/>{\&quot;k\&quot;:<sp/>[1,<sp/>2]},<sp/>null,<sp/>false,<sp/>true,<sp/>\&quot;string\&quot;,<sp/>1.2]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a7de472eda2ad9de13cfd8c1de74f1754" kindref="member">IterativeParseInit</ref>();</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!reader.<ref refid="class_generic_reader_1aa1e9e1eef614fde971550ed2f955151d" kindref="member">IterativeParseComplete</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>oldLogCount<sp/>=<sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(oldLogCount<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(e)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;overrun&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a257891331e0c259903e7066fb4cebf92" kindref="member">IterativeParseNext</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9104b0946d648e9467cb7a967401ec80" kindref="member">kParseDefaultFlags</ref>&gt;(is,<sp/>handler))<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;parse<sp/>fail&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(handler.<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>,<sp/>oldLogCount<sp/>+<sp/>1)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;handler<sp/>should<sp/>be<sp/>invoked<sp/>exactly<sp/>once<sp/>each<sp/>time&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(e[oldLogCount],<sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884" kindref="member">Logs</ref>[oldLogCount])<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;wrong<sp/>event<sp/>returned&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(e)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;handler<sp/>invoked<sp/>wrong<sp/>number<sp/>of<sp/>times&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>handler<sp/>should<sp/>not<sp/>be<sp/>invoked<sp/>when<sp/>the<sp/>JSON<sp/>has<sp/>been<sp/>fully<sp/>read,<sp/>but<sp/>it<sp/>should<sp/>not<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>oldLogCount<sp/>=<sp/>handler.<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a257891331e0c259903e7066fb4cebf92" kindref="member">IterativeParseNext</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9104b0946d648e9467cb7a967401ec80" kindref="member">kParseDefaultFlags</ref>&gt;(is,<sp/>handler))<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;parse-next<sp/>past<sp/>complete<sp/>is<sp/>allowed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(handler.<ref refid="struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d" kindref="member">LogCount</ref>,<sp/>oldLogCount)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;parse-next<sp/>past<sp/>complete<sp/>should<sp/>not<sp/>invoke<sp/>handler&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;parse-next<sp/>past<sp/>complete<sp/>should<sp/>not<sp/>generate<sp/>parse<sp/>error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>iterative<sp/>parsing<sp/>on<sp/>kParseErrorTermination.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668" refid="struct_handler_terminate_at_start_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_handler_terminate_at_start_object" kindref="compound">HandlerTerminateAtStartObject</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler" kindref="compound">IterativeParsingReaderHandler</ref>&lt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_handler_terminate_at_start_object_1a1cf0ecbf5ed319c4bc8984466c5850b0" kindref="member">StartObject</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1670"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672" refid="struct_handler_terminate_at_start_array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_handler_terminate_at_start_array" kindref="compound">HandlerTerminateAtStartArray</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler" kindref="compound">IterativeParsingReaderHandler</ref>&lt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_handler_terminate_at_start_array_1af79cfaabcb17f808ce51b7665a965f1d" kindref="member">StartArray</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676" refid="struct_handler_terminate_at_end_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_handler_terminate_at_end_object" kindref="compound">HandlerTerminateAtEndObject</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler" kindref="compound">IterativeParsingReaderHandler</ref>&lt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_handler_terminate_at_end_object_1a8ccaa7a86b3e7582dd15d97e8ec3bdbd" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1678"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680" refid="struct_handler_terminate_at_end_array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_handler_terminate_at_end_array" kindref="compound">HandlerTerminateAtEndArray</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_iterative_parsing_reader_handler" kindref="compound">IterativeParsingReaderHandler</ref>&lt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_handler_terminate_at_end_array_1a81fc7b4ab7818f08c133eb6d0755baca" kindref="member">EndArray</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>IterativeParsing_ShortCircuit)<sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_handler_terminate_at_start_object" kindref="compound">HandlerTerminateAtStartObject</ref><sp/>handler;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>is(</highlight><highlight class="stringliteral">&quot;[1,<sp/>{}]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aadb14f5a3b6b33e28055e913a2eae5e9" kindref="member">kParseIterativeFlag</ref>&gt;(is,<sp/>handler);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a6fed2d9a15f88540a1ba785f0de2cbe6" kindref="member">kParseErrorTermination</ref>,<sp/>r.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>());</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(4u,<sp/>r.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>());</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_handler_terminate_at_start_array" kindref="compound">HandlerTerminateAtStartArray</ref><sp/>handler;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>is(</highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;:<sp/>[]}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aadb14f5a3b6b33e28055e913a2eae5e9" kindref="member">kParseIterativeFlag</ref>&gt;(is,<sp/>handler);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a6fed2d9a15f88540a1ba785f0de2cbe6" kindref="member">kParseErrorTermination</ref>,<sp/>r.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>());</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(6u,<sp/>r.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>());</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_handler_terminate_at_end_object" kindref="compound">HandlerTerminateAtEndObject</ref><sp/>handler;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>is(</highlight><highlight class="stringliteral">&quot;[1,<sp/>{}]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aadb14f5a3b6b33e28055e913a2eae5e9" kindref="member">kParseIterativeFlag</ref>&gt;(is,<sp/>handler);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a6fed2d9a15f88540a1ba785f0de2cbe6" kindref="member">kParseErrorTermination</ref>,<sp/>r.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>());</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(5u,<sp/>r.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>());</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_handler_terminate_at_end_array" kindref="compound">HandlerTerminateAtEndArray</ref><sp/>handler;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>is(</highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;:<sp/>[]}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aadb14f5a3b6b33e28055e913a2eae5e9" kindref="member">kParseIterativeFlag</ref>&gt;(is,<sp/>handler);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a6fed2d9a15f88540a1ba785f0de2cbe6" kindref="member">kParseErrorTermination</ref>,<sp/>r.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>());</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(7u,<sp/>r.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>());</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>covering<sp/>BaseReaderHandler<sp/>default<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>BaseReaderHandler_Default)<sp/>{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler&lt;&gt;</ref><sp/>h;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>is(</highlight><highlight class="stringliteral">&quot;[null,<sp/>true,<sp/>-1,<sp/>1,<sp/>-1234567890123456789,<sp/>1234567890123456789,<sp/>3.14,<sp/>\&quot;s\&quot;,<sp/>{<sp/>\&quot;a\&quot;<sp/>:<sp/>1<sp/>}]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(is,<sp/>h));</highlight></codeline>
<codeline lineno="1740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e&gt;</highlight></codeline>
<codeline lineno="1743" refid="struct_terminate_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_terminate_handler" kindref="compound">TerminateHandler</ref><sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1a2bab78847c2684ba6fed380525b6d7ad" kindref="member">Null</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1a5e457a5a3bc77923f6a6fcb95f2d9d97" kindref="member">Bool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1a480f1029deeee28bea50b0bc02c3f5c2" kindref="member">Int</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1a74cc58e00ef7513700c73f42590378ae" kindref="member">Uint</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>3;<sp/>}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1a15a3dc9167a9b9751c817c9bd38bea14" kindref="member">Int64</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>4;<sp/>}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1a0e1db7c10d8df0a63792c691ed71940c" kindref="member">Uint64</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>5;<sp/><sp/>}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1a29ef623aec0c2b98400d50f10c5ff763" kindref="member">Double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>6;<sp/>}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1adc7320d825cf5c19d5f46665f9a441cb" kindref="member">RawNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>7;<sp/>}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1ad159da42d9eed13e9f678836b8d1d4de" kindref="member">String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>8;<sp/>}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1a1e3cd36f3ea0fb5999a5a383c9d29fb6" kindref="member">StartObject</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>9;<sp/>}</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1a48838488aa9401a89315b888f6270b4f" kindref="member">Key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>10;<sp/>}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1aca78117d320472299f6000f08cc1e273" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>11;<sp/>}</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1af9457e947db1e62a03ad7726fa63aa72" kindref="member">StartArray</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>12;<sp/>}</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_terminate_handler_1a76dee113fa0dd03ebbb71c585db2fc0d" kindref="member">EndArray</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>!=<sp/>13;<sp/>}</highlight></codeline>
<codeline lineno="1758"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_TERMINATION(e,<sp/>json)\</highlight></codeline>
<codeline lineno="1761"><highlight class="preprocessor">{\</highlight></codeline>
<codeline lineno="1762"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Reader<sp/>reader;\</highlight></codeline>
<codeline lineno="1763"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>TerminateHandler&lt;e&gt;<sp/>h;\</highlight></codeline>
<codeline lineno="1764"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>StringStream<sp/>is(json);\</highlight></codeline>
<codeline lineno="1765"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.Parse(is,<sp/>h));\</highlight></codeline>
<codeline lineno="1766"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>EXPECT_EQ(kParseErrorTermination,<sp/>reader.GetParseErrorCode());\</highlight></codeline>
<codeline lineno="1767"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseTerminationByHandler)<sp/>{</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(0,<sp/></highlight><highlight class="stringliteral">&quot;[null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;[true&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;[false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;[-1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;[1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;[-1234567890123456789&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(5,<sp/></highlight><highlight class="stringliteral">&quot;[1234567890123456789&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(6,<sp/></highlight><highlight class="stringliteral">&quot;[0.5]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RawNumber()<sp/>is<sp/>never<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(8,<sp/></highlight><highlight class="stringliteral">&quot;[\&quot;a\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(9,<sp/></highlight><highlight class="stringliteral">&quot;[{&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(10,<sp/></highlight><highlight class="stringliteral">&quot;[{\&quot;a\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(11,<sp/></highlight><highlight class="stringliteral">&quot;[{}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(11,<sp/></highlight><highlight class="stringliteral">&quot;[{\&quot;a\&quot;:1}&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>non-empty<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(12,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;:[&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(13,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;:[]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a59abe708b636f5305e064d40eca97f6e" kindref="member">TEST_TERMINATION</ref>(13,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;a\&quot;:[1]&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>non-empty<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseComments)<sp/>{</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;//<sp/>Here<sp/>is<sp/>a<sp/>one-line<sp/>comment.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{//<sp/>And<sp/>here&apos;s<sp/>another<sp/>one\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>/*And<sp/>here&apos;s<sp/>an<sp/>in-line<sp/>one.*/\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>\&quot;t\&quot;<sp/>:/*<sp/>And<sp/>one<sp/>with<sp/>&apos;*&apos;<sp/>symbol*/true<sp/>,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/*<sp/>A<sp/>multiline<sp/>comment\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>goes<sp/>here*/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>\&quot;f\&quot;<sp/>:<sp/>false,<sp/>\&quot;n\&quot;:<sp/>null,<sp/>\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;}/*And<sp/>the<sp/>last<sp/>one<sp/>to<sp/>be<sp/>sure<sp/>*/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a245d1b6af730f47f0e7bd27078f5e8c1" kindref="member">kParseCommentsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(20u,<sp/>h.<ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseEmptyInlineComment)<sp/>{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{/**/\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;,<sp/>\&quot;t\&quot;<sp/>:<sp/>true,<sp/>\&quot;f\&quot;<sp/>:<sp/>false,<sp/>\&quot;n\&quot;:<sp/>null,<sp/>\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3]<sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a245d1b6af730f47f0e7bd27078f5e8c1" kindref="member">kParseCommentsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(20u,<sp/>h.<ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseEmptyOnelineComment)<sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{//\n\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;,<sp/>\&quot;t\&quot;<sp/>:<sp/>true,<sp/>\&quot;f\&quot;<sp/>:<sp/>false,<sp/>\&quot;n\&quot;:<sp/>null,<sp/>\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3]<sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a245d1b6af730f47f0e7bd27078f5e8c1" kindref="member">kParseCommentsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(20u,<sp/>h.<ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseMultipleCommentsInARow)<sp/>{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{/*<sp/>first<sp/>comment<sp/>*//*<sp/>second<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/*<sp/>third<sp/>*/<sp/>/*fourth*///<sp/>last<sp/>one\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;,<sp/>\&quot;t\&quot;<sp/>:<sp/>true,<sp/>\&quot;f\&quot;<sp/>:<sp/>false,<sp/>\&quot;n\&quot;:<sp/>null,<sp/>\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3]<sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a245d1b6af730f47f0e7bd27078f5e8c1" kindref="member">kParseCommentsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(20u,<sp/>h.<ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>InlineCommentsAreDisabledByDefault)<sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{/*<sp/>Inline<sp/>comment.<sp/>*/\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;,<sp/>\&quot;t\&quot;<sp/>:<sp/>true,<sp/>\&quot;f\&quot;<sp/>:<sp/>false,<sp/>\&quot;n\&quot;:<sp/>null,<sp/>\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3]<sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9104b0946d648e9467cb7a967401ec80" kindref="member">kParseDefaultFlags</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{\&quot;hello\&quot;<sp/>:<sp/>/*<sp/>Multiline<sp/>comment<sp/>starts<sp/>here\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>continues<sp/>here\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>ends<sp/>here<sp/>*/\&quot;world\&quot;,<sp/>\&quot;t\&quot;<sp/>:true<sp/>,<sp/>\&quot;f\&quot;<sp/>:<sp/>false,<sp/>\&quot;n\&quot;:<sp/>null,<sp/>\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3]<sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9104b0946d648e9467cb7a967401ec80" kindref="member">kParseDefaultFlags</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>OnelineCommentsAreDisabledByDefault)<sp/>{</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{//<sp/>One-line<sp/>comment\n\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;,<sp/>\&quot;t\&quot;<sp/>:<sp/>true<sp/>,<sp/>\&quot;f\&quot;<sp/>:<sp/>false,<sp/>\&quot;n\&quot;:<sp/>null,<sp/>\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3]<sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9104b0946d648e9467cb7a967401ec80" kindref="member">kParseDefaultFlags</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>EofAfterOneLineComment)<sp/>{</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;<sp/>//<sp/>EOF<sp/>is<sp/>here<sp/>--&gt;\0<sp/>\n}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a245d1b6af730f47f0e7bd27078f5e8c1" kindref="member">kParseCommentsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a34f70d7ed2fa121954f5fc5b5113d05f" kindref="member">kParseErrorObjectMissCommaOrCurlyBracket</ref>,<sp/>reader.<ref refid="class_generic_reader_1a937bf90919f50e1c370b312cee5833e8" kindref="member">GetParseErrorCode</ref>());</highlight></codeline>
<codeline lineno="1880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>IncompleteMultilineComment)<sp/>{</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;<sp/>/*<sp/>EOF<sp/>is<sp/>here<sp/>--&gt;\0<sp/>*/}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a245d1b6af730f47f0e7bd27078f5e8c1" kindref="member">kParseCommentsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a2bec6b26bddd3e093a37fc0d6399e0be" kindref="member">kParseErrorUnspecificSyntaxError</ref>,<sp/>reader.<ref refid="class_generic_reader_1a937bf90919f50e1c370b312cee5833e8" kindref="member">GetParseErrorCode</ref>());</highlight></codeline>
<codeline lineno="1890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>IncompleteMultilineComment2)<sp/>{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;<sp/>/*<sp/>*\0<sp/>*/}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a245d1b6af730f47f0e7bd27078f5e8c1" kindref="member">kParseCommentsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a2bec6b26bddd3e093a37fc0d6399e0be" kindref="member">kParseErrorUnspecificSyntaxError</ref>,<sp/>reader.<ref refid="class_generic_reader_1a937bf90919f50e1c370b312cee5833e8" kindref="member">GetParseErrorCode</ref>());</highlight></codeline>
<codeline lineno="1900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>UnrecognizedComment)<sp/>{</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;<sp/>/!<sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a245d1b6af730f47f0e7bd27078f5e8c1" kindref="member">kParseCommentsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a2bec6b26bddd3e093a37fc0d6399e0be" kindref="member">kParseErrorUnspecificSyntaxError</ref>,<sp/>reader.<ref refid="class_generic_reader_1a937bf90919f50e1c370b312cee5833e8" kindref="member">GetParseErrorCode</ref>());</highlight></codeline>
<codeline lineno="1910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912" refid="struct_numbers_as_strings_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_numbers_as_strings_handler" kindref="compound">NumbersAsStringsHandler</ref><sp/>{</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1abc67332704aecdcf790a175495b4e1e9" kindref="member">Null</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1a7f7f6f590df33f5dd9edf190b540c168" kindref="member">Bool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1a6fc24b36f8dc4b3d3ea6a4c749346adf" kindref="member">Int</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1a569e35ff2e7b916e6b1a15841d46c4ab" kindref="member">Uint</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1a61b9b0439a0f8e1223da05375917e3f1" kindref="member">Int64</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1a26ddde617205e2b14d35c931aef6f473" kindref="member">Uint64</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/>}</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1a79accf729fb1908ffcf1f319a1b03cbf" kindref="member">Double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;str&apos;<sp/>is<sp/>not<sp/>null-terminated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1aa91a356419ff152adf31bba8a6da01e9" kindref="member">RawNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(str<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="struct_numbers_as_strings_handler_1a95c64eb9ecdfabd262da4eec1cafccdb" kindref="member">expected_len_</ref><sp/>==<sp/>length);</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(strncmp(str,<sp/><ref refid="struct_numbers_as_strings_handler_1a81885665a346dd1a1092a537f8bf7651" kindref="member">expected_</ref>,<sp/>length)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1a6698e744b13545580d45c40faff80756" kindref="member">String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1a55febf6fc0b6b6ab3ee45d67e26a09a4" kindref="member">StartObject</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1adeef028191097d2cb435b4c5803e4b1d" kindref="member">Key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1a7b7e36388ceace04238c04183c5595b0" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1af4ca432f065da6c1a7320249e0698f3a" kindref="member">StartArray</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1ae2c4419992239392c2181a5f668e65fa" kindref="member">EndArray</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler_1a9db94313e085cf0daf928fd1af4f0e80" kindref="member">NumbersAsStringsHandler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expected)</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_numbers_as_strings_handler_1a81885665a346dd1a1092a537f8bf7651" kindref="member">expected_</ref>(expected)</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_numbers_as_strings_handler_1a95c64eb9ecdfabd262da4eec1cafccdb" kindref="member">expected_len_</ref>(strlen(expected))<sp/>{}</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_numbers_as_strings_handler_1a81885665a346dd1a1092a537f8bf7651" kindref="member">expected_</ref>;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_1a95c64eb9ecdfabd262da4eec1cafccdb" kindref="member">expected_len_</ref>;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>NumbersAsStrings)<sp/>{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;pi\&quot;:<sp/>3.1416<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler" kindref="compound">NumbersAsStringsHandler</ref><sp/>h(</highlight><highlight class="stringliteral">&quot;3.1416&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/><ref refid="unittest_8h_1a0b8e1bafb97ad4a272c5cc4469a13687" kindref="member">StrDup</ref>(</highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;pi\&quot;:<sp/>3.1416<sp/>}<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">InsituStringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler" kindref="compound">NumbersAsStringsHandler</ref><sp/>h(</highlight><highlight class="stringliteral">&quot;3.1416&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref>|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(json);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;gigabyte\&quot;:<sp/>1.0e9<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler" kindref="compound">NumbersAsStringsHandler</ref><sp/>h(</highlight><highlight class="stringliteral">&quot;1.0e9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/><ref refid="unittest_8h_1a0b8e1bafb97ad4a272c5cc4469a13687" kindref="member">StrDup</ref>(</highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;gigabyte\&quot;:<sp/>1.0e9<sp/>}<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">InsituStringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler" kindref="compound">NumbersAsStringsHandler</ref><sp/>h(</highlight><highlight class="stringliteral">&quot;1.0e9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref>|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(json);</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;pi\&quot;:<sp/>314.159e-2<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler" kindref="compound">NumbersAsStringsHandler</ref><sp/>h(</highlight><highlight class="stringliteral">&quot;314.159e-2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/><ref refid="unittest_8h_1a0b8e1bafb97ad4a272c5cc4469a13687" kindref="member">StrDup</ref>(</highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;gigabyte\&quot;:<sp/>314.159e-2<sp/>}<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">InsituStringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler" kindref="compound">NumbersAsStringsHandler</ref><sp/>h(</highlight><highlight class="stringliteral">&quot;314.159e-2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref>|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(json);</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;negative\&quot;:<sp/>-1.54321<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler" kindref="compound">NumbersAsStringsHandler</ref><sp/>h(</highlight><highlight class="stringliteral">&quot;-1.54321&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/><ref refid="unittest_8h_1a0b8e1bafb97ad4a272c5cc4469a13687" kindref="member">StrDup</ref>(</highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;negative\&quot;:<sp/>-1.54321<sp/>}<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">InsituStringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler" kindref="compound">NumbersAsStringsHandler</ref><sp/>h(</highlight><highlight class="stringliteral">&quot;-1.54321&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref>|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(json);</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;pi\&quot;:<sp/>314.159e-2<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss(json);</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_stream_wrapper" kindref="compound">IStreamWrapper</ref><sp/>s(ss);</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler" kindref="compound">NumbersAsStringsHandler</ref><sp/>h(</highlight><highlight class="stringliteral">&quot;314.159e-2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>n1e319[321];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;1&apos;<sp/>followed<sp/>by<sp/>319<sp/>&apos;0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1e319[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>320;<sp/>i++)</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1e319[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1e319[320]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(n1e319);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler" kindref="compound">NumbersAsStringsHandler</ref><sp/>h(n1e319);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024" refid="struct_numbers_as_strings_handler_w_char__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_numbers_as_strings_handler_w_char__t" kindref="compound">NumbersAsStringsHandlerWChar_t</ref><sp/>{</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a44b5b17ea91f6c7a8a057a91b849f625" kindref="member">Null</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a65bb3878570448b51743ebc258f72044" kindref="member">Bool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a8c0781383ef3c234148601a71c797ac9" kindref="member">Int</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1aa75fe3a66dea42364777a3e1fc228a3c" kindref="member">Uint</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1ad52e496014ff1f9aa82e819fa065a80a" kindref="member">Int64</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a15d2b164babc2e9c8af240de7ca58a91" kindref="member">Uint64</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a02c4b79e3a75c14c7da5785a1b637e0a" kindref="member">Double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;str&apos;<sp/>is<sp/>not<sp/>null-terminated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a2b2b621c46fdc4e6a88aaa9de1b07815" kindref="member">RawNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(str<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="struct_numbers_as_strings_handler_w_char__t_1ab2d791b46e7ebf2e689a11c8cdb477d3" kindref="member">expected_len_</ref><sp/>==<sp/>length);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(wcsncmp(str,<sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a5011a5c9ab95f4d288e00f8527773f0b" kindref="member">expected_</ref>,<sp/>length)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a55531be91bae03d42d3c4be0f1f31925" kindref="member">String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a9e1d26a88824e6bc24fa0585a36ce26b" kindref="member">StartObject</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1ab1aacfdd534c09029b4598c03929eac1" kindref="member">Key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a02f07336260a347a510734ef18fb8f65" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a6708ba5a125c95afd92bd3c82b12791e" kindref="member">StartArray</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a5a5b28436f9b7f08dda3bffbc5f0e24c" kindref="member">EndArray</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a4de83014f6f2455cb736f90c8f13b6ce" kindref="member">NumbersAsStringsHandlerWChar_t</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>expected)</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a5011a5c9ab95f4d288e00f8527773f0b" kindref="member">expected_</ref>(expected)</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1ab2d791b46e7ebf2e689a11c8cdb477d3" kindref="member">expected_len_</ref>(wcslen(expected))<sp/>{}</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1a5011a5c9ab95f4d288e00f8527773f0b" kindref="member">expected_</ref>;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t_1ab2d791b46e7ebf2e689a11c8cdb477d3" kindref="member">expected_len_</ref>;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>NumbersAsStringsWChar_t)<sp/>{</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/>L</highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;pi\&quot;:<sp/>3.1416<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;UTF16&lt;&gt;</ref><sp/>&gt;<sp/>s(json);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t" kindref="compound">NumbersAsStringsHandlerWChar_t</ref><sp/>h(L</highlight><highlight class="stringliteral">&quot;3.1416&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;UTF16&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref><sp/>&gt;<sp/>reader;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/><ref refid="unittest_8h_1a0b8e1bafb97ad4a272c5cc4469a13687" kindref="member">StrDup</ref>(L</highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;pi\&quot;:<sp/>3.1416<sp/>}<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">GenericInsituStringStream&lt;UTF16&lt;&gt;</ref><sp/>&gt;<sp/>s(json);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t" kindref="compound">NumbersAsStringsHandlerWChar_t</ref><sp/>h(L</highlight><highlight class="stringliteral">&quot;3.1416&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;UTF16&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref><sp/>&gt;<sp/>reader;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref><sp/>|<sp/><ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/>free(json);</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/>L</highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;gigabyte\&quot;:<sp/>1.0e9<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;UTF16&lt;&gt;</ref><sp/>&gt;<sp/>s(json);</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t" kindref="compound">NumbersAsStringsHandlerWChar_t</ref><sp/>h(L</highlight><highlight class="stringliteral">&quot;1.0e9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;UTF16&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref><sp/>&gt;<sp/>reader;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/><ref refid="unittest_8h_1a0b8e1bafb97ad4a272c5cc4469a13687" kindref="member">StrDup</ref>(L</highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;gigabyte\&quot;:<sp/>1.0e9<sp/>}<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">GenericInsituStringStream&lt;UTF16&lt;&gt;</ref><sp/>&gt;<sp/>s(json);</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t" kindref="compound">NumbersAsStringsHandlerWChar_t</ref><sp/>h(L</highlight><highlight class="stringliteral">&quot;1.0e9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;UTF16&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref><sp/>&gt;<sp/>reader;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref><sp/>|<sp/><ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>free(json);</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/>L</highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;pi\&quot;:<sp/>314.159e-2<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;UTF16&lt;&gt;</ref><sp/>&gt;<sp/>s(json);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t" kindref="compound">NumbersAsStringsHandlerWChar_t</ref><sp/>h(L</highlight><highlight class="stringliteral">&quot;314.159e-2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;UTF16&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref><sp/>&gt;<sp/>reader;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/><ref refid="unittest_8h_1a0b8e1bafb97ad4a272c5cc4469a13687" kindref="member">StrDup</ref>(L</highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;gigabyte\&quot;:<sp/>314.159e-2<sp/>}<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">GenericInsituStringStream&lt;UTF16&lt;&gt;</ref><sp/>&gt;<sp/>s(json);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t" kindref="compound">NumbersAsStringsHandlerWChar_t</ref><sp/>h(L</highlight><highlight class="stringliteral">&quot;314.159e-2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;UTF16&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref><sp/>&gt;<sp/>reader;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref><sp/>|<sp/><ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/>free(json);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/>L</highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;negative\&quot;:<sp/>-1.54321<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;UTF16&lt;&gt;</ref><sp/>&gt;<sp/>s(json);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t" kindref="compound">NumbersAsStringsHandlerWChar_t</ref><sp/>h(L</highlight><highlight class="stringliteral">&quot;-1.54321&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;UTF16&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref><sp/>&gt;<sp/>reader;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/><ref refid="unittest_8h_1a0b8e1bafb97ad4a272c5cc4469a13687" kindref="member">StrDup</ref>(L</highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;negative\&quot;:<sp/>-1.54321<sp/>}<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">GenericInsituStringStream&lt;UTF16&lt;&gt;</ref><sp/>&gt;<sp/>s(json);</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t" kindref="compound">NumbersAsStringsHandlerWChar_t</ref><sp/>h(L</highlight><highlight class="stringliteral">&quot;-1.54321&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;UTF16&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref><sp/>&gt;<sp/>reader;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref><sp/>|<sp/><ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/>free(json);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/>L</highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;pi\&quot;:<sp/>314.159e-2<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/>std::wstringstream<sp/>ss(json);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_w_i_stream_wrapper" kindref="compound">WIStreamWrapper</ref><sp/>s(ss);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t" kindref="compound">NumbersAsStringsHandlerWChar_t</ref><sp/>h(L</highlight><highlight class="stringliteral">&quot;314.159e-2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;UTF16&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref><sp/>&gt;<sp/>reader;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>n1e319[321];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;1&apos;<sp/>followed<sp/>by<sp/>319<sp/>&apos;0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>n1e319[0]<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>320;<sp/>i++)</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n1e319[i]<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/>n1e319[320]<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;UTF16&lt;&gt;</ref><sp/>&gt;<sp/>s(n1e319);</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_numbers_as_strings_handler_w_char__t" kindref="compound">NumbersAsStringsHandlerWChar_t</ref><sp/>h(n1e319);</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;UTF16&lt;&gt;</ref>,<sp/><ref refid="struct_u_t_f16" kindref="compound">UTF16&lt;&gt;</ref><sp/>&gt;<sp/>reader;</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450aa951ab03a51b32b60164436bc280cf01" kindref="member">kParseNumbersAsStringsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>extraFlags&gt;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="readertest_8cpp_1a53b9204ec8bf882697790d11e728f81f" kindref="member">TestTrailingCommas</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(</highlight><highlight class="stringliteral">&quot;[1,2,3,]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_array_handler" kindref="compound">ParseArrayHandler&lt;3&gt;</ref><sp/>h;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;extraFlags|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a953d6381de950e25c8c97ad54f52370a" kindref="member">kParseTrailingCommasFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(5u,<sp/>h.<ref refid="struct_parse_array_handler_1a468c68c967c196a63f584c6b62df3371" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;,<sp/>\&quot;t\&quot;<sp/>:<sp/>true<sp/>,<sp/>\&quot;f\&quot;<sp/>:<sp/>false,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;n\&quot;:<sp/>null,<sp/>\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3],}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;extraFlags|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a953d6381de950e25c8c97ad54f52370a" kindref="member">kParseTrailingCommasFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(20u,<sp/>h.<ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whitespace<sp/>around<sp/>trailing<sp/>commas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;,<sp/>\&quot;t\&quot;<sp/>:<sp/>true<sp/>,<sp/>\&quot;f\&quot;<sp/>:<sp/>false,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;n\&quot;:<sp/>null,<sp/>\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3\n,\n]\n,\n}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;extraFlags|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a953d6381de950e25c8c97ad54f52370a" kindref="member">kParseTrailingCommasFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(20u,<sp/>h.<ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>comments<sp/>around<sp/>trailing<sp/>commas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;,<sp/>\&quot;t\&quot;<sp/>:<sp/>true<sp/>,<sp/>\&quot;f\&quot;<sp/>:<sp/>false,<sp/>\&quot;n\&quot;:<sp/>null,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3/*test*/,/*test*/]/*test*/,/*test*/}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;extraFlags|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a953d6381de950e25c8c97ad54f52370a" kindref="member">kParseTrailingCommasFlag</ref>|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a245d1b6af730f47f0e7bd27078f5e8c1" kindref="member">kParseCommentsFlag</ref>&gt;(s,<sp/>h));</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(20u,<sp/>h.<ref refid="struct_parse_object_handler_1a2b51ff99b508c5e60f0abe15b47f6a49" kindref="member">step_</ref>);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>TrailingCommas)<sp/>{</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/>TestTrailingCommas&lt;kParseNoFlags&gt;();</highlight></codeline>
<codeline lineno="2178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>TrailingCommasIterative)<sp/>{</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>TestTrailingCommas&lt;kParseIterativeFlag&gt;();</highlight></codeline>
<codeline lineno="2182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>extraFlags&gt;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="readertest_8cpp_1a655f124d90808a045e7fb01f27c56c7b" kindref="member">TestMultipleTrailingCommaErrors</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>a<sp/>single<sp/>trailing<sp/>comma<sp/>is<sp/>allowed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(</highlight><highlight class="stringliteral">&quot;[1,2,3,,]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_array_handler" kindref="compound">ParseArrayHandler&lt;3&gt;</ref><sp/>h;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;extraFlags|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a953d6381de950e25c8c97ad54f52370a" kindref="member">kParseTrailingCommasFlag</ref>&gt;(s,<sp/>h);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/>r.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>());</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(7u,<sp/>r.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>());</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;,<sp/>\&quot;t\&quot;<sp/>:<sp/>true<sp/>,<sp/>\&quot;f\&quot;<sp/>:<sp/>false,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;n\&quot;:<sp/>null,<sp/>\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3,],,}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;extraFlags|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a953d6381de950e25c8c97ad54f52370a" kindref="member">kParseTrailingCommasFlag</ref>&gt;(s,<sp/>h);</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/>r.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>());</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(95u,<sp/>r.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>());</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>MultipleTrailingCommaErrors)<sp/>{</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/>TestMultipleTrailingCommaErrors&lt;kParseNoFlags&gt;();</highlight></codeline>
<codeline lineno="2211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>MultipleTrailingCommaErrorsIterative)<sp/>{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/>TestMultipleTrailingCommaErrors&lt;kParseIterativeFlag&gt;();</highlight></codeline>
<codeline lineno="2215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>extraFlags&gt;</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="readertest_8cpp_1a32605d0e16ee73d21ab6009f266e3593" kindref="member">TestEmptyExceptForCommaErrors</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>allowed<sp/>even<sp/>with<sp/>trailing<sp/>commas<sp/>enabled;<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trailing<sp/>comma<sp/>must<sp/>follow<sp/>a<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(</highlight><highlight class="stringliteral">&quot;[,]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_array_handler" kindref="compound">ParseArrayHandler&lt;3&gt;</ref><sp/>h;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;extraFlags|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a953d6381de950e25c8c97ad54f52370a" kindref="member">kParseTrailingCommasFlag</ref>&gt;(s,<sp/>h);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/>r.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>());</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>r.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>());</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(</highlight><highlight class="stringliteral">&quot;{,}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_object_handler" kindref="compound">ParseObjectHandler</ref><sp/>h;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;extraFlags|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a953d6381de950e25c8c97ad54f52370a" kindref="member">kParseTrailingCommasFlag</ref>&gt;(s,<sp/>h);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ae3142fbadf2c4cdfd0c7200d7b6b8ed3" kindref="member">kParseErrorObjectMissName</ref>,<sp/>r.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>());</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>r.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>());</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>EmptyExceptForCommaErrors)<sp/>{</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/>TestEmptyExceptForCommaErrors&lt;kParseNoFlags&gt;();</highlight></codeline>
<codeline lineno="2243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>EmptyExceptForCommaErrorsIterative)<sp/>{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/>TestEmptyExceptForCommaErrors&lt;kParseIterativeFlag&gt;();</highlight></codeline>
<codeline lineno="2247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>extraFlags&gt;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="readertest_8cpp_1aee91bf3d9cd695a8cbe30cecb97e8351" kindref="member">TestTrailingCommaHandlerTermination</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_handler_terminate_at_end_array" kindref="compound">HandlerTerminateAtEndArray</ref><sp/>h;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(</highlight><highlight class="stringliteral">&quot;[1,2,3,]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;extraFlags|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a953d6381de950e25c8c97ad54f52370a" kindref="member">kParseTrailingCommasFlag</ref>&gt;(s,<sp/>h);</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a6fed2d9a15f88540a1ba785f0de2cbe6" kindref="member">kParseErrorTermination</ref>,<sp/>r.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>());</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(7u,<sp/>r.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>());</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_handler_terminate_at_end_object" kindref="compound">HandlerTerminateAtEndObject</ref><sp/>h;</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(</highlight><highlight class="stringliteral">&quot;{\&quot;t\&quot;:<sp/>true,<sp/>\&quot;f\&quot;:<sp/>false,}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;extraFlags|<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a953d6381de950e25c8c97ad54f52370a" kindref="member">kParseTrailingCommasFlag</ref>&gt;(s,<sp/>h);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a6fed2d9a15f88540a1ba785f0de2cbe6" kindref="member">kParseErrorTermination</ref>,<sp/>r.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>());</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(23u,<sp/>r.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>());</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>TrailingCommaHandlerTermination)<sp/>{</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/>TestTrailingCommaHandlerTermination&lt;kParseNoFlags&gt;();</highlight></codeline>
<codeline lineno="2273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>TrailingCommaHandlerTerminationIterative)<sp/>{</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/>TestTrailingCommaHandlerTermination&lt;kParseIterativeFlag&gt;();</highlight></codeline>
<codeline lineno="2277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>ParseNanAndInfinity)<sp/>{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_NAN_INF(str,<sp/>x)<sp/>\</highlight></codeline>
<codeline lineno="2281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="2282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="2283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StringStream<sp/>s(str);<sp/>\</highlight></codeline>
<codeline lineno="2284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParseDoubleHandler<sp/>h;<sp/>\</highlight></codeline>
<codeline lineno="2285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reader<sp/>reader;<sp/>\</highlight></codeline>
<codeline lineno="2286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(kParseErrorNone,<sp/>reader.Parse&lt;kParseNanAndInfFlag&gt;(s,<sp/>h).Code());<sp/>\</highlight></codeline>
<codeline lineno="2287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>h.step_);<sp/>\</highlight></codeline>
<codeline lineno="2288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::Double<sp/>e(x),<sp/>a(h.actual_);<sp/>\</highlight></codeline>
<codeline lineno="2289"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(e.IsNan(),<sp/>a.IsNan());<sp/>\</highlight></codeline>
<codeline lineno="2290"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(e.IsInf(),<sp/>a.IsInf());<sp/>\</highlight></codeline>
<codeline lineno="2291"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!e.IsNan())<sp/>\</highlight></codeline>
<codeline lineno="2292"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(e.Sign(),<sp/>a.Sign());<sp/>\</highlight></codeline>
<codeline lineno="2293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="2294"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="2295"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>json<sp/>=<sp/>&quot;{<sp/>\&quot;naninfdouble\&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>str<sp/>&quot;<sp/>}<sp/>&quot;;<sp/>\</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StringStream<sp/>s(json);<sp/>\</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumbersAsStringsHandler<sp/>h(str);<sp/>\</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reader<sp/>reader;<sp/>\</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.Parse&lt;kParseNumbersAsStringsFlag|kParseNanAndInfFlag&gt;(s,<sp/>h));<sp/>\</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char*<sp/>json<sp/>=<sp/>StrDup(&quot;{<sp/>\&quot;naninfdouble\&quot;:<sp/>&quot;<sp/>str<sp/>&quot;<sp/>}<sp/>&quot;);<sp/>\</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsituStringStream<sp/>s(json);<sp/>\</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumbersAsStringsHandler<sp/>h(str);<sp/>\</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reader<sp/>reader;<sp/>\</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.Parse&lt;kParseInsituFlag|kParseNumbersAsStringsFlag|kParseNanAndInfFlag&gt;(s,<sp/>h));<sp/>\</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(json);<sp/>\</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_NAN_INF_ERROR(errorCode,<sp/>str,<sp/>errorOffset)<sp/>\</highlight></codeline>
<codeline lineno="2311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="2312"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>streamPos<sp/>=<sp/>errorOffset;<sp/>\</highlight></codeline>
<codeline lineno="2313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>buffer[1001];<sp/>\</highlight></codeline>
<codeline lineno="2314"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(buffer,<sp/>str,<sp/>1000);<sp/>\</highlight></codeline>
<codeline lineno="2315"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsituStringStream<sp/>s(buffer);<sp/>\</highlight></codeline>
<codeline lineno="2316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseReaderHandler&lt;&gt;<sp/>h;<sp/>\</highlight></codeline>
<codeline lineno="2317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reader<sp/>reader;<sp/>\</highlight></codeline>
<codeline lineno="2318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.Parse&lt;kParseNanAndInfFlag&gt;(s,<sp/>h));<sp/>\</highlight></codeline>
<codeline lineno="2319"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(errorCode,<sp/>reader.GetParseErrorCode());\</highlight></codeline>
<codeline lineno="2320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(errorOffset,<sp/>reader.GetErrorOffset());\</highlight></codeline>
<codeline lineno="2321"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(streamPos,<sp/>s.Tell());\</highlight></codeline>
<codeline lineno="2322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nan<sp/>=<sp/>std::numeric_limits&lt;double&gt;::quiet_NaN();</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inf<sp/>=<sp/>std::numeric_limits&lt;double&gt;::infinity();</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0cb67eee4e9c25329656c6c6359073d7" kindref="member">TEST_NAN_INF</ref>(</highlight><highlight class="stringliteral">&quot;NaN&quot;</highlight><highlight class="normal">,<sp/>nan);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0cb67eee4e9c25329656c6c6359073d7" kindref="member">TEST_NAN_INF</ref>(</highlight><highlight class="stringliteral">&quot;-NaN&quot;</highlight><highlight class="normal">,<sp/>nan);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0cb67eee4e9c25329656c6c6359073d7" kindref="member">TEST_NAN_INF</ref>(</highlight><highlight class="stringliteral">&quot;Inf&quot;</highlight><highlight class="normal">,<sp/>inf);</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0cb67eee4e9c25329656c6c6359073d7" kindref="member">TEST_NAN_INF</ref>(</highlight><highlight class="stringliteral">&quot;Infinity&quot;</highlight><highlight class="normal">,<sp/>inf);</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0cb67eee4e9c25329656c6c6359073d7" kindref="member">TEST_NAN_INF</ref>(</highlight><highlight class="stringliteral">&quot;-Inf&quot;</highlight><highlight class="normal">,<sp/>-inf);</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a0cb67eee4e9c25329656c6c6359073d7" kindref="member">TEST_NAN_INF</ref>(</highlight><highlight class="stringliteral">&quot;-Infinity&quot;</highlight><highlight class="normal">,<sp/>-inf);</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a49931364fff3592ba2dcb37ac90d3b10" kindref="member">TEST_NAN_INF_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;NInf&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a49931364fff3592ba2dcb37ac90d3b10" kindref="member">TEST_NAN_INF_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;NaInf&quot;</highlight><highlight class="normal">,<sp/>2u);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a49931364fff3592ba2dcb37ac90d3b10" kindref="member">TEST_NAN_INF_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;INan&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a49931364fff3592ba2dcb37ac90d3b10" kindref="member">TEST_NAN_INF_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;InNan&quot;</highlight><highlight class="normal">,<sp/>2u);</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a49931364fff3592ba2dcb37ac90d3b10" kindref="member">TEST_NAN_INF_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;nan&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a49931364fff3592ba2dcb37ac90d3b10" kindref="member">TEST_NAN_INF_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-nan&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a49931364fff3592ba2dcb37ac90d3b10" kindref="member">TEST_NAN_INF_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;NAN&quot;</highlight><highlight class="normal">,<sp/>1u);</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readertest_8cpp_1a49931364fff3592ba2dcb37ac90d3b10" kindref="member">TEST_NAN_INF_ERROR</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a20a50e257aab726699ab02192db72ba9" kindref="member">kParseErrorValueInvalid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-Infinty&quot;</highlight><highlight class="normal">,<sp/>6u);</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TEST_NAN_INF_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TEST_NAN_INF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><ref refid="readertest_8cpp_1acd0e3395c882a9ffffd0cd3e541f737e" kindref="member">TEST</ref>(<ref refid="class_generic_reader" kindref="compound">Reader</ref>,<sp/>EscapedApostrophe)<sp/>{</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>json[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{<sp/>\&quot;foo\&quot;:<sp/>\&quot;bar\\&apos;buzz\&quot;<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler&lt;&gt;</ref><sp/>h;</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a1af603dc5f65bb815316589e782bc71a" kindref="member">kParseNoFlags</ref>&gt;(s,<sp/>h);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7a98bb3f3b1e12fdb7f278b9fa4029306f" kindref="member">kParseErrorStringEscapeInvalid</ref>,<sp/>r.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>());</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(14u,<sp/>r.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>());</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>s(json);</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>r<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a7593d429928f1a8224c5793928d4db3e" kindref="member">kParseEscapedApostropheFlag</ref>&gt;(s,<sp/>h);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE(reader.<ref refid="class_generic_reader_1ac417441794477ea747b63adb6d3653a9" kindref="member">HasParseError</ref>());</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga8d4b32dfc45840bca189ade2bbcb6ba7ac0856bac4945cbd1d09e9502fd8f852f" kindref="member">kParseErrorNone</ref>,<sp/>r.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>());</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(0u,<sp/>r.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>());</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal">RAPIDJSON_DIAG_POP</highlight></codeline>
    </programlisting>
    <location file="src/rapidjson/test/unittest/readertest.cpp"/>
  </compounddef>
</doxygen>
