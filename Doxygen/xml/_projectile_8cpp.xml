<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_projectile_8cpp" kind="file" language="C++">
    <compoundname>Projectile.cpp</compoundname>
    <includes refid="_projectile_8h" local="yes">Projectile.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/entities/projectiles/Projectile.cpp</label>
        <link refid="_projectile_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Projectile.h</label>
        <link refid="_projectile_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SFML/Graphics.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_projectile_8h" kindref="compound">Projectile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="class_projectile_1a3f19ab91fddb8211bac7e1196b0f15c0" kindref="member">Projectile::Projectile</ref>(sf::Vector2f<sp/>pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>movingRight)<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_projectile_1acdf51147e7efc2a15af8bca73b3243be" kindref="member">setPosition</ref>(pos.x,<sp/>pos.y);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_projectile_1a57cd904f69bfb6291ac3fb9807e7ba32" kindref="member">_bMovingRight</ref><sp/>=<sp/>movingRight;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_projectile_1ae13dbe19f644c0f60751e75f5edcbc2a" kindref="member">_hitbox</ref>.setSize({16,16});</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_projectile_1a76008c00d23d28ef400a863bd0b56257" kindref="member">Projectile::initTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/>sf::IntRect<sp/>textureRect)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_projectile_1a1220dfd08fe74bb7ab09e8008d1cf70d" kindref="member">_texture</ref>.loadFromFile(path);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_projectile_1af96e1c6bd505495166db6c59f5301656" kindref="member">_sprite</ref>.setTexture(<ref refid="class_projectile_1a1220dfd08fe74bb7ab09e8008d1cf70d" kindref="member">_texture</ref>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_projectile_1af96e1c6bd505495166db6c59f5301656" kindref="member">_sprite</ref>.setTextureRect(textureRect);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_projectile_1af96e1c6bd505495166db6c59f5301656" kindref="member">_sprite</ref>.setScale(3.0f,<sp/>3.0f);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_projectile_1a44595d2283e231188003bef859f98eb9" kindref="member">Projectile::render</ref>(sf::RenderTarget<sp/>&amp;window)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>window.draw(<ref refid="class_projectile_1af96e1c6bd505495166db6c59f5301656" kindref="member">_sprite</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_projectile_1a5bc646de87829b911d6817a6478c353e" kindref="member">Projectile::update</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaTime)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_projectile_1af96e1c6bd505495166db6c59f5301656" kindref="member">_sprite</ref>.setPosition(<ref refid="class_projectile_1a88ed5be04ec9eddeb83deb201607368c" kindref="member">getPosition</ref>());</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">sf::Vector2f<sp/><ref refid="class_projectile_1a88ed5be04ec9eddeb83deb201607368c" kindref="member">Projectile::getPosition</ref>()<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_projectile_1ae13dbe19f644c0f60751e75f5edcbc2a" kindref="member">_hitbox</ref>.getPosition();</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_projectile_1acdf51147e7efc2a15af8bca73b3243be" kindref="member">Projectile::setPosition</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_projectile_1ae13dbe19f644c0f60751e75f5edcbc2a" kindref="member">_hitbox</ref>.setPosition(x,y);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_projectile_1a429879cf9406d612f95183e9428f104b" kindref="member">Projectile::isColliding</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::RectangleShape<sp/>&amp;recShape)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_projectile_1ae13dbe19f644c0f60751e75f5edcbc2a" kindref="member">_hitbox</ref>.getGlobalBounds().intersects(recShape.getGlobalBounds());</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/entities/projectiles/Projectile.cpp"/>
  </compounddef>
</doxygen>
