<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_schema" kind="class" language="C++" prot="public">
    <compoundname>Schema</compoundname>
    <basecompoundref prot="public" virt="non-virtual">PerfTest</basecompoundref>
    <innerclass refid="struct_schema_1_1_test_suite" prot="protected">Schema::TestSuite</innerclass>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="class_schema_1a4930e5a0527f1f0ec2a7877910e1e6d1" prot="protected" static="no">
        <type>std::vector&lt; <ref refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" kindref="member">Document</ref> * &gt;</type>
        <definition>typedef std::vector&lt;Document*&gt; Schema::DocumentList</definition>
        <argsstring></argsstring>
        <name>DocumentList</name>
        <qualifiedname>Schema::DocumentList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/perftest/schematest.cpp" line="181" column="25" bodyfile="src/rapidjson/test/perftest/schematest.cpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_schema_1a9583b3ab120dbf8273d2229c7d8fbce6" prot="protected" static="no">
        <type>std::vector&lt; <ref refid="struct_schema_1_1_test_suite" kindref="compound">TestSuite</ref> * &gt;</type>
        <definition>typedef std::vector&lt;TestSuite* &gt; Schema::TestSuiteList</definition>
        <argsstring></argsstring>
        <name>TestSuiteList</name>
        <qualifiedname>Schema::TestSuiteList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/perftest/schematest.cpp" line="194" column="25" bodyfile="src/rapidjson/test/perftest/schematest.cpp" bodystart="194" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_schema_1a9ba0b56a14f8f5f072fdf65ede13594f" prot="protected" static="no" mutable="no">
        <type><ref refid="class_schema_1a9583b3ab120dbf8273d2229c7d8fbce6" kindref="member">TestSuiteList</ref></type>
        <definition>TestSuiteList Schema::testSuites</definition>
        <argsstring></argsstring>
        <name>testSuites</name>
        <qualifiedname>Schema::testSuites</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/perftest/schematest.cpp" line="195" column="19" bodyfile="src/rapidjson/test/perftest/schematest.cpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_schema_1a2e4edc9da4da173a47617320abba7f0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Schema::Schema</definition>
        <argsstring>()</argsstring>
        <name>Schema</name>
        <qualifiedname>Schema::Schema</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/perftest/schematest.cpp" line="54" column="5" bodyfile="src/rapidjson/test/perftest/schematest.cpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_schema_1a30f124d0ae285a4769582acc298ea65b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Schema::SetUp</definition>
        <argsstring>()</argsstring>
        <name>SetUp</name>
        <qualifiedname>Schema::SetUp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/perftest/schematest.cpp" line="56" column="18" bodyfile="src/rapidjson/test/perftest/schematest.cpp" bodystart="56" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_schema_1acfd8fa13b78876ca7f4c256dfc4d00f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Schema::TearDown</definition>
        <argsstring>()</argsstring>
        <name>TearDown</name>
        <qualifiedname>Schema::TearDown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/perftest/schematest.cpp" line="131" column="18" bodyfile="src/rapidjson/test/perftest/schematest.cpp" bodystart="131" bodyend="136"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_schema_1a3da0be84c5165aaa0ed2561e1129d8b0" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Schema::IsExcludeTestSuite</definition>
        <argsstring>(const std::string &amp;description)</argsstring>
        <name>IsExcludeTestSuite</name>
        <qualifiedname>Schema::IsExcludeTestSuite</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/perftest/schematest.cpp" line="140" column="17" bodyfile="src/rapidjson/test/perftest/schematest.cpp" bodystart="140" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_schema_1a640fbcd361bc0215bfdfecd49264326c" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Schema::IsExcludeTest</definition>
        <argsstring>(const std::string &amp;description)</argsstring>
        <name>IsExcludeTest</name>
        <qualifiedname>Schema::IsExcludeTest</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/perftest/schematest.cpp" line="161" column="17" bodyfile="src/rapidjson/test/perftest/schematest.cpp" bodystart="161" bodyend="175"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_schema_1a7b09ca677f6992e15b15bb01154e9c9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Schema::Schema</definition>
        <argsstring>(const Schema &amp;)</argsstring>
        <name>Schema</name>
        <qualifiedname>Schema::Schema</qualifiedname>
        <param>
          <type>const <ref refid="class_schema" kindref="compound">Schema</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/perftest/schematest.cpp" line="177" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_schema_1ae364f0e75becce2bb4d0e791f9888863" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_schema" kindref="compound">Schema</ref> &amp;</type>
        <definition>Schema &amp; Schema::operator=</definition>
        <argsstring>(const Schema &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>Schema::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_schema" kindref="compound">Schema</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/perftest/schematest.cpp" line="178" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>PerfTest</label>
      </node>
      <node id="1">
        <label>Schema</label>
        <link refid="class_schema"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>PerfTest</label>
      </node>
      <node id="1">
        <label>Schema</label>
        <link refid="class_schema"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/rapidjson/test/perftest/schematest.cpp" line="52" column="1" bodyfile="src/rapidjson/test/perftest/schematest.cpp" bodystart="52" bodyend="196"/>
    <listofallmembers>
      <member refid="class_schema_1a4930e5a0527f1f0ec2a7877910e1e6d1" prot="protected" virt="non-virtual"><scope>Schema</scope><name>DocumentList</name></member>
      <member refid="class_schema_1a640fbcd361bc0215bfdfecd49264326c" prot="private" virt="non-virtual"><scope>Schema</scope><name>IsExcludeTest</name></member>
      <member refid="class_schema_1a3da0be84c5165aaa0ed2561e1129d8b0" prot="private" virt="non-virtual"><scope>Schema</scope><name>IsExcludeTestSuite</name></member>
      <member refid="class_schema_1ae364f0e75becce2bb4d0e791f9888863" prot="private" virt="non-virtual"><scope>Schema</scope><name>operator=</name></member>
      <member refid="class_schema_1a2e4edc9da4da173a47617320abba7f0f" prot="public" virt="non-virtual"><scope>Schema</scope><name>Schema</name></member>
      <member refid="class_schema_1a7b09ca677f6992e15b15bb01154e9c9f" prot="private" virt="non-virtual"><scope>Schema</scope><name>Schema</name></member>
      <member refid="class_schema_1a30f124d0ae285a4769582acc298ea65b" prot="public" virt="virtual"><scope>Schema</scope><name>SetUp</name></member>
      <member refid="class_schema_1acfd8fa13b78876ca7f4c256dfc4d00f7" prot="public" virt="virtual"><scope>Schema</scope><name>TearDown</name></member>
      <member refid="class_schema_1a9583b3ab120dbf8273d2229c7d8fbce6" prot="protected" virt="non-virtual"><scope>Schema</scope><name>TestSuiteList</name></member>
      <member refid="class_schema_1a9ba0b56a14f8f5f072fdf65ede13594f" prot="protected" virt="non-virtual"><scope>Schema</scope><name>testSuites</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
