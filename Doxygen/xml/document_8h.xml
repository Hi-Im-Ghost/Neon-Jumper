<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="document_8h" kind="file" language="C++">
    <compoundname>document.h</compoundname>
    <includes refid="reader_8h" local="yes">reader.h</includes>
    <includes refid="meta_8h" local="yes">internal/meta.h</includes>
    <includes refid="strfunc_8h" local="yes">internal/strfunc.h</includes>
    <includes refid="memorystream_8h" local="yes">memorystream.h</includes>
    <includes refid="encodedstream_8h" local="yes">encodedstream.h</includes>
    <includes local="no">new</includes>
    <includes local="no">limits</includes>
    <includes local="no">iterator</includes>
    <includedby refid="_layer_8h" local="yes">src/Layer.h</includedby>
    <includedby refid="_map_8h" local="yes">src/Map.h</includedby>
    <includedby refid="_tile_set_8cpp" local="yes">src/TileSet.cpp</includedby>
    <includedby refid="_tile_set_8h" local="yes">src/TileSet.h</includedby>
    <includedby refid="_tile_set_map_8h" local="yes">src/TileSetMap.h</includedby>
    <includedby refid="archiver_8cpp" local="yes">src/rapidjson/example/archiver/archiver.cpp</includedby>
    <includedby refid="filterkeydom_8cpp" local="yes">src/rapidjson/example/filterkeydom/filterkeydom.cpp</includedby>
    <includedby refid="lookaheadparser_8cpp" local="yes">src/rapidjson/example/lookaheadparser/lookaheadparser.cpp</includedby>
    <includedby refid="simpledom_8cpp" local="yes">src/rapidjson/example/simpledom/simpledom.cpp</includedby>
    <includedby refid="sortkeys_8cpp" local="yes">src/rapidjson/example/sortkeys/sortkeys.cpp</includedby>
    <includedby refid="traverseaspointer_8cpp" local="yes">src/rapidjson/example/traverseaspointer.cpp</includedby>
    <includedby refid="tutorial_8cpp" local="yes">src/rapidjson/example/tutorial/tutorial.cpp</includedby>
    <includedby refid="pointer_8h" local="yes">src/rapidjson/include/rapidjson/pointer.h</includedby>
    <includedby refid="schema_8h" local="yes">src/rapidjson/include/rapidjson/schema.h</includedby>
    <includedby refid="rapidjsontest_8cpp" local="yes">src/rapidjson/test/perftest/rapidjsontest.cpp</includedby>
    <includedby refid="cursorstreamwrappertest_8cpp" local="yes">src/rapidjson/test/unittest/cursorstreamwrappertest.cpp</includedby>
    <includedby refid="documenttest_8cpp" local="yes">src/rapidjson/test/unittest/documenttest.cpp</includedby>
    <includedby refid="fwdtest_8cpp" local="yes">src/rapidjson/test/unittest/fwdtest.cpp</includedby>
    <includedby refid="istreamwrappertest_8cpp" local="yes">src/rapidjson/test/unittest/istreamwrappertest.cpp</includedby>
    <includedby refid="jsoncheckertest_8cpp" local="yes">src/rapidjson/test/unittest/jsoncheckertest.cpp</includedby>
    <includedby refid="namespacetest_8cpp" local="yes">src/rapidjson/test/unittest/namespacetest.cpp</includedby>
    <includedby refid="ostreamwrappertest_8cpp" local="yes">src/rapidjson/test/unittest/ostreamwrappertest.cpp</includedby>
    <includedby refid="unittest_2platformtest_8cpp" local="yes">src/rapidjson/test/unittest/platformtest.cpp</includedby>
    <includedby refid="uritest_8cpp" local="yes">src/rapidjson/test/unittest/uritest.cpp</includedby>
    <includedby refid="valuetest_8cpp" local="yes">src/rapidjson/test/unittest/valuetest.cpp</includedby>
    <includedby refid="writertest_8cpp" local="yes">src/rapidjson/test/unittest/writertest.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/rapidjson/include/rapidjson/document.h</label>
        <link refid="document_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>encodedstream.h</label>
        <link refid="encodedstream_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>encodings.h</label>
        <link refid="encodings_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>biginteger.h</label>
        <link refid="biginteger_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>internal/clzll.h</label>
        <link refid="clzll_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>diyfp.h</label>
        <link refid="diyfp_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ieee754.h</label>
        <link refid="ieee754_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>internal/meta.h</label>
        <link refid="meta_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>pow10.h</label>
        <link refid="pow10_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>internal/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>internal/strfunc.h</label>
        <link refid="strfunc_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>internal/strtod.h</label>
        <link refid="strtod_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>swap.h</label>
        <link refid="swap_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>memorystream.h</label>
        <link refid="memorystream_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stream.h</label>
        <link refid="stream_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cassert</label>
      </node>
      <node id="24">
        <label>climits</label>
      </node>
      <node id="17">
        <label>cstddef</label>
      </node>
      <node id="5">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>cstring</label>
      </node>
      <node id="27">
        <label>cwchar</label>
      </node>
      <node id="29">
        <label>iterator</label>
      </node>
      <node id="22">
        <label>limits</label>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
      <node id="28">
        <label>new</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/Layer.cpp</label>
        <link refid="_layer_8cpp"/>
      </node>
      <node id="2">
        <label>src/Layer.h</label>
        <link refid="_layer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/LoadMap.cpp</label>
        <link refid="_load_map_8cpp"/>
      </node>
      <node id="5">
        <label>src/LoadMap.h</label>
        <link refid="_load_map_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/Map.cpp</label>
        <link refid="_map_8cpp"/>
      </node>
      <node id="4">
        <label>src/Map.h</label>
        <link refid="_map_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/TileMap.cpp</label>
        <link refid="_tile_map_8cpp"/>
      </node>
      <node id="15">
        <label>src/TileMap.h</label>
        <link refid="_tile_map_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/TileSet.cpp</label>
        <link refid="_tile_set_8cpp"/>
      </node>
      <node id="18">
        <label>src/TileSet.h</label>
        <link refid="_tile_set_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/TileSetMap.cpp</label>
        <link refid="_tile_set_map_8cpp"/>
      </node>
      <node id="19">
        <label>src/TileSetMap.h</label>
        <link refid="_tile_set_map_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="21">
        <label>src/rapidjson/example/archiver/archiver.cpp</label>
        <link refid="archiver_8cpp"/>
      </node>
      <node id="22">
        <label>src/rapidjson/example/filterkeydom/filterkeydom.cpp</label>
        <link refid="filterkeydom_8cpp"/>
      </node>
      <node id="23">
        <label>src/rapidjson/example/lookaheadparser/lookaheadparser.cpp</label>
        <link refid="lookaheadparser_8cpp"/>
      </node>
      <node id="30">
        <label>src/rapidjson/example/schemavalidator/schemavalidator.cpp</label>
        <link refid="schemavalidator_8cpp"/>
      </node>
      <node id="24">
        <label>src/rapidjson/example/simpledom/simpledom.cpp</label>
        <link refid="simpledom_8cpp"/>
      </node>
      <node id="25">
        <label>src/rapidjson/example/sortkeys/sortkeys.cpp</label>
        <link refid="sortkeys_8cpp"/>
      </node>
      <node id="26">
        <label>src/rapidjson/example/traverseaspointer.cpp</label>
        <link refid="traverseaspointer_8cpp"/>
      </node>
      <node id="27">
        <label>src/rapidjson/example/tutorial/tutorial.cpp</label>
        <link refid="tutorial_8cpp"/>
      </node>
      <node id="1">
        <label>src/rapidjson/include/rapidjson/document.h</label>
        <link refid="document_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/rapidjson/include/rapidjson/pointer.h</label>
        <link refid="pointer_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>src/rapidjson/include/rapidjson/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>src/rapidjson/test/perftest/rapidjsontest.cpp</label>
        <link refid="rapidjsontest_8cpp"/>
      </node>
      <node id="31">
        <label>src/rapidjson/test/perftest/schematest.cpp</label>
        <link refid="perftest_2schematest_8cpp"/>
      </node>
      <node id="36">
        <label>src/rapidjson/test/unittest/cursorstreamwrappertest.cpp</label>
        <link refid="cursorstreamwrappertest_8cpp"/>
      </node>
      <node id="37">
        <label>src/rapidjson/test/unittest/documenttest.cpp</label>
        <link refid="documenttest_8cpp"/>
      </node>
      <node id="32">
        <label>src/rapidjson/test/unittest/fwdtest.cpp</label>
        <link refid="fwdtest_8cpp"/>
      </node>
      <node id="38">
        <label>src/rapidjson/test/unittest/istreamwrappertest.cpp</label>
        <link refid="istreamwrappertest_8cpp"/>
      </node>
      <node id="39">
        <label>src/rapidjson/test/unittest/jsoncheckertest.cpp</label>
        <link refid="jsoncheckertest_8cpp"/>
      </node>
      <node id="40">
        <label>src/rapidjson/test/unittest/namespacetest.cpp</label>
        <link refid="namespacetest_8cpp"/>
      </node>
      <node id="41">
        <label>src/rapidjson/test/unittest/ostreamwrappertest.cpp</label>
        <link refid="ostreamwrappertest_8cpp"/>
      </node>
      <node id="42">
        <label>src/rapidjson/test/unittest/platformtest.cpp</label>
        <link refid="unittest_2platformtest_8cpp"/>
      </node>
      <node id="34">
        <label>src/rapidjson/test/unittest/pointertest.cpp</label>
        <link refid="pointertest_8cpp"/>
      </node>
      <node id="33">
        <label>src/rapidjson/test/unittest/schematest.cpp</label>
        <link refid="unittest_2schematest_8cpp"/>
      </node>
      <node id="43">
        <label>src/rapidjson/test/unittest/uritest.cpp</label>
        <link refid="uritest_8cpp"/>
      </node>
      <node id="44">
        <label>src/rapidjson/test/unittest/valuetest.cpp</label>
        <link refid="valuetest_8cpp"/>
      </node>
      <node id="45">
        <label>src/rapidjson/test/unittest/writertest.cpp</label>
        <link refid="writertest_8cpp"/>
      </node>
      <node id="9">
        <label>src/states/LevelOneState.cpp</label>
        <link refid="_level_one_state_8cpp"/>
      </node>
      <node id="8">
        <label>src/states/LevelOneState.h</label>
        <link refid="_level_one_state_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/states/LevelTwoState.cpp</label>
        <link refid="_level_two_state_8cpp"/>
      </node>
      <node id="12">
        <label>src/states/LevelTwoState.h</label>
        <link refid="_level_two_state_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/states/MainMenuState.cpp</label>
        <link refid="_main_menu_state_8cpp"/>
      </node>
      <node id="10">
        <label>src/states/MainMenuState.h</label>
        <link refid="_main_menu_state_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_generic_member" prot="public">GenericMember</innerclass>
    <innerclass refid="class_generic_member_iterator" prot="public">GenericMemberIterator</innerclass>
    <innerclass refid="struct_generic_string_ref" prot="public">GenericStringRef</innerclass>
    <innerclass refid="structinternal_1_1_is_generic_value_impl" prot="public">internal::IsGenericValueImpl</innerclass>
    <innerclass refid="structinternal_1_1_is_generic_value_impl_3_01_t_00_01typename_01_void_3_01typename_01_t_1_1_enco3a51e9d8b4986f001b39e1e8edecb66a" prot="public">internal::IsGenericValueImpl&lt; T, typename Void&lt; typename T::EncodingType &gt;::Type, typename Void&lt; typename T::AllocatorType &gt;::Type &gt;</innerclass>
    <innerclass refid="structinternal_1_1_is_generic_value" prot="public">internal::IsGenericValue</innerclass>
    <innerclass refid="structinternal_1_1_type_helper" prot="public">internal::TypeHelper</innerclass>
    <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4" prot="public">internal::TypeHelper&lt; ValueType, bool &gt;</innerclass>
    <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4" prot="public">internal::TypeHelper&lt; ValueType, int &gt;</innerclass>
    <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4" prot="public">internal::TypeHelper&lt; ValueType, unsigned &gt;</innerclass>
    <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4" prot="public">internal::TypeHelper&lt; ValueType, int64_t &gt;</innerclass>
    <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4" prot="public">internal::TypeHelper&lt; ValueType, uint64_t &gt;</innerclass>
    <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4" prot="public">internal::TypeHelper&lt; ValueType, double &gt;</innerclass>
    <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4" prot="public">internal::TypeHelper&lt; ValueType, float &gt;</innerclass>
    <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4" prot="public">internal::TypeHelper&lt; ValueType, const typename ValueType::Ch * &gt;</innerclass>
    <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4" prot="public">internal::TypeHelper&lt; ValueType, typename ValueType::Array &gt;</innerclass>
    <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_array_01_4" prot="public">internal::TypeHelper&lt; ValueType, typename ValueType::ConstArray &gt;</innerclass>
    <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4" prot="public">internal::TypeHelper&lt; ValueType, typename ValueType::Object &gt;</innerclass>
    <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_object_01_4" prot="public">internal::TypeHelper&lt; ValueType, typename ValueType::ConstObject &gt;</innerclass>
    <innerclass refid="class_generic_value" prot="public">GenericValue</innerclass>
    <innerclass refid="struct_generic_value_1_1_flag" prot="public">GenericValue::Flag</innerclass>
    <innerclass refid="struct_generic_value_1_1_string" prot="public">GenericValue::String</innerclass>
    <innerclass refid="struct_generic_value_1_1_short_string" prot="public">GenericValue::ShortString</innerclass>
    <innerclass refid="union_generic_value_1_1_number" prot="public">GenericValue::Number</innerclass>
    <innerclass refid="struct_generic_value_1_1_number_1_1_i" prot="public">GenericValue::Number::I</innerclass>
    <innerclass refid="struct_generic_value_1_1_number_1_1_u" prot="public">GenericValue::Number::U</innerclass>
    <innerclass refid="struct_generic_value_1_1_object_data" prot="public">GenericValue::ObjectData</innerclass>
    <innerclass refid="struct_generic_value_1_1_array_data" prot="public">GenericValue::ArrayData</innerclass>
    <innerclass refid="union_generic_value_1_1_data" prot="public">GenericValue::Data</innerclass>
    <innerclass refid="class_generic_document" prot="public">GenericDocument</innerclass>
    <innerclass refid="struct_generic_document_1_1_clear_stack_on_exit" prot="private">GenericDocument::ClearStackOnExit</innerclass>
    <innerclass refid="class_generic_array" prot="public">GenericArray</innerclass>
    <innerclass refid="class_generic_object" prot="public">GenericObject</innerclass>
    <innernamespace refid="namespaceinternal">internal</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga04a88f0b2db9091006eb7fc6deb6077b" prot="public" static="no">
        <name>RAPIDJSON_DEFAULT_ALLOCATOR</name>
        <initializer><ref refid="class_memory_pool_allocator" kindref="compound">MemoryPoolAllocator</ref>&lt;<ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>&gt;</initializer>
        <briefdescription>
<para>Allows to choose default allocator. </para>
        </briefdescription>
        <detaileddescription>
<para>User can define this to use <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref> or <ref refid="class_memory_pool_allocator" kindref="compound">MemoryPoolAllocator</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="78" column="9" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga1178cffff7c596922a5ed3fda30c5520" prot="public" static="no">
        <name>RAPIDJSON_DEFAULT_STACK_ALLOCATOR</name>
        <initializer><ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref></initializer>
        <briefdescription>
<para>Allows to choose default stack allocator for Document. </para>
        </briefdescription>
        <detaileddescription>
<para>User can define this to use <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref> or <ref refid="class_memory_pool_allocator" kindref="compound">MemoryPoolAllocator</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="88" column="9" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5c88aa612939b592d15d3fc4bdf54272" prot="public" static="no">
        <name>RAPIDJSON_VALUE_DEFAULT_OBJECT_CAPACITY</name>
        <initializer>16</initializer>
        <briefdescription>
<para>User defined kDefaultObjectCapacity value. </para>
        </briefdescription>
        <detaileddescription>
<para>User can define this as any natural number. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="99" column="9" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga10ba0ee06d0ac2803d0f2290d46b19f7" prot="public" static="no">
        <name>RAPIDJSON_VALUE_DEFAULT_ARRAY_CAPACITY</name>
        <initializer>16</initializer>
        <briefdescription>
<para>User defined kDefaultArrayCapacity value. </para>
        </briefdescription>
        <detaileddescription>
<para>User can define this as any natural number. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="110" column="9" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" prot="public" static="no">
        <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt; &gt;</type>
        <definition>typedef GenericValue&lt;UTF8&lt;&gt; &gt; Value</definition>
        <argsstring></argsstring>
        <name>Value</name>
        <briefdescription>
<para><ref refid="class_generic_value" kindref="compound">GenericValue</ref> with <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref> encoding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2470" column="22" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" prot="public" static="no">
        <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&lt; <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt; &gt;</type>
        <definition>typedef GenericDocument&lt;UTF8&lt;&gt; &gt; Document</definition>
        <argsstring></argsstring>
        <name>Document</name>
        <briefdescription>
<para><ref refid="class_generic_document" kindref="compound">GenericDocument</ref> with <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref> encoding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2873" column="25" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2873" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CharType</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&lt; CharType &gt;</type>
        <definition>GenericStringRef&lt; CharType &gt; StringRef</definition>
        <argsstring>(const CharType *str)</argsstring>
        <name>StringRef</name>
        <param>
          <type>const CharType *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Mark a character pointer as constant string. </para>
        </briefdescription>
        <detaileddescription>
<para>Mark a plain character pointer as a &quot;string literal&quot;. This function can be used to avoid copying a character string to be referenced as a value in a JSON <ref refid="class_generic_value" kindref="compound">GenericValue</ref> object, if the string&apos;s lifetime is known to be valid long enough. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CharType</parametername>
</parameternamelist>
<parameterdescription>
<para>Character type of the string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant string, lifetime assumed to be longer than the use of the string in e.g. a <ref refid="class_generic_value" kindref="compound">GenericValue</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref> string reference object</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_generic_value_1abb2887958974fef1b2b5c8e32cc72ddb" kindref="member">GenericValue::GenericValue(StringRefType)</ref>, <ref refid="class_generic_value_1a2b7837d3adb6c0ad184269826ea78e97" kindref="member">GenericValue::operator=(StringRefType)</ref>, GenericValue::SetString(StringRefType), GenericValue::PushBack(StringRefType, Allocator&amp;), GenericValue::AddMember </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="454" column="25" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="454" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="document_8h_1a578c51ab574a50a9c760b9da7c7562f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CharType</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&lt; CharType &gt;</type>
        <definition>GenericStringRef&lt; CharType &gt; StringRef</definition>
        <argsstring>(const CharType *str, size_t length)</argsstring>
        <name>StringRef</name>
        <param>
          <type>const CharType *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Mark a character pointer as constant string. </para>
        </briefdescription>
        <detaileddescription>
<para>Mark a plain character pointer as a &quot;string literal&quot;. This function can be used to avoid copying a character string to be referenced as a value in a JSON <ref refid="class_generic_value" kindref="compound">GenericValue</ref> object, if the string&apos;s lifetime is known to be valid long enough.</para>
<para>This version has better performance with supplied length, and also supports string containing null characters.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CharType</parametername>
</parameternamelist>
<parameterdescription>
<para>character type of the string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant string, lifetime assumed to be longer than the use of the string in e.g. a <ref refid="class_generic_value" kindref="compound">GenericValue</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of source string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref> string reference object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="474" column="25" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="474" bodyend="476"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://opensource.org/licenses/MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_DOCUMENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_DOCUMENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reader_8h" kindref="compound">reader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="meta_8h" kindref="compound">internal/meta.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strfunc_8h" kindref="compound">internal/strfunc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memorystream_8h" kindref="compound">memorystream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="encodedstream_8h" kindref="compound">encodedstream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;new&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>placement<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cpp_lib_three_way_comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;compare&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">RAPIDJSON_DIAG_OFF(padded)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">RAPIDJSON_DIAG_OFF(</highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">-</highlight><highlight class="keyword">enum</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">RAPIDJSON_DIAG_OFF(c++98-compat)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">RAPIDJSON_DIAG_OFF(4127)<sp/></highlight><highlight class="comment">//<sp/>conditional<sp/>expression<sp/>is<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">RAPIDJSON_DIAG_OFF(4244)<sp/></highlight><highlight class="comment">//<sp/>conversion<sp/>from<sp/>kXxxFlags<sp/>to<sp/>&apos;uint16_t&apos;,<sp/>possible<sp/>loss<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">RAPIDJSON_DIAG_OFF(effc++)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GetObject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>see<sp/>https://github.com/Tencent/rapidjson/issues/1448</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>former<sp/>included<sp/>windows.h<sp/>might<sp/>have<sp/>defined<sp/>a<sp/>macro<sp/>called<sp/>GetObject,<sp/>which<sp/>affects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GetObject<sp/>defined<sp/>here.<sp/>This<sp/>ensures<sp/>the<sp/>macro<sp/>does<sp/>not<sp/>get<sp/>applied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>push_macro(&quot;GetObject&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_WINDOWS_GETOBJECT_WORKAROUND_APPLIED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>GetObject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_NOMEMBERITERATORCLASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>std::random_access_iterator_tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_USE_MEMBERSMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>std::multimap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc" kindref="member">RAPIDJSON_NAMESPACE_BEGIN</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declaration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StackAllocator&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_DEFAULT_ALLOCATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga04a88f0b2db9091006eb7fc6deb6077b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_DEFAULT_ALLOCATOR<sp/>MemoryPoolAllocator&lt;CrtAllocator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_DEFAULT_STACK_ALLOCATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga1178cffff7c596922a5ed3fda30c5520" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_DEFAULT_STACK_ALLOCATOR<sp/>CrtAllocator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_VALUE_DEFAULT_OBJECT_CAPACITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>objects<sp/>that<sp/>rapidjson::Value<sp/>allocates<sp/>memory<sp/>for<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5c88aa612939b592d15d3fc4bdf54272" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_VALUE_DEFAULT_OBJECT_CAPACITY<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_VALUE_DEFAULT_ARRAY_CAPACITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>array<sp/>elements<sp/>that<sp/>rapidjson::Value<sp/>allocates<sp/>memory<sp/>for<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga10ba0ee06d0ac2803d0f2290d46b19f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_VALUE_DEFAULT_ARRAY_CAPACITY<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;<sp/></highlight></codeline>
<codeline lineno="120" refid="class_generic_member" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_member" kindref="compound">GenericMember</ref><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122" refid="class_generic_member_1a7124f7ccd67421533d33139938604fac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, Allocator&gt;</ref><sp/><ref refid="class_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123" refid="class_generic_member_1aad3cfa4f9e8b9018068c8bc865723083" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, Allocator&gt;</ref><sp/><ref refid="class_generic_member_1aad3cfa4f9e8b9018068c8bc865723083" kindref="member">value</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_1ab9c79af91543b05cc88af0f930e7556e" kindref="member">GenericMember</ref>(<ref refid="class_generic_member" kindref="compound">GenericMember</ref>&amp;&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>(std::move(rhs.name)),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member_1aad3cfa4f9e8b9018068c8bc865723083" kindref="member">value</ref>(std::move(rhs.value))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member" kindref="compound">GenericMember</ref>&amp;<sp/><ref refid="class_generic_member_1ad7b635007819683babe224004a54396a" kindref="member">operator=</ref>(<ref refid="class_generic_member" kindref="compound">GenericMember</ref>&amp;&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_member" kindref="compound">GenericMember</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rhs);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="class_generic_member_1ad7b635007819683babe224004a54396a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member" kindref="compound">GenericMember</ref>&amp;<sp/><ref refid="class_generic_member_1ad7b635007819683babe224004a54396a" kindref="member">operator=</ref>(<ref refid="class_generic_member" kindref="compound">GenericMember</ref>&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5dc14176a9e71ace282404b0bcda57a1" kindref="member">RAPIDJSON_LIKELY</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs))<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref><sp/>=<sp/>rhs.name;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member_1aad3cfa4f9e8b9018068c8bc865723083" kindref="member">value</ref><sp/>=<sp/>rhs.value;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap()<sp/>for<sp/>std::sort()<sp/>and<sp/>other<sp/>potential<sp/>use<sp/>in<sp/>STL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="class_generic_member_1af72094da5f8967de3fab3d2c34bc71cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_1af72094da5f8967de3fab3d2c34bc71cc" kindref="member">swap</ref>(<ref refid="class_generic_member" kindref="compound">GenericMember</ref>&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/><ref refid="class_generic_member" kindref="compound">GenericMember</ref>&amp;<sp/>b)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.name.Swap(b.name);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.value.Swap(b.value);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="158" refid="class_generic_member_1ab9c79af91543b05cc88af0f930e7556e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_1ab9c79af91543b05cc88af0f930e7556e" kindref="member">GenericMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_member" kindref="compound">GenericMember</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="comment">//<sp/>GenericMemberIterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_NOMEMBERITERATORCLASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Const,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="186" refid="class_generic_member_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt;<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>,<ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&gt;;</highlight></codeline>
<codeline lineno="189" refid="class_generic_member_iterator_1aa375aeb1ffac85cddc3a72a6c24ec6e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="class_generic_member_iterator_1ac0d50d12ba074e68837964244668c66b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member" kindref="compound">GenericMember&lt;Encoding,Allocator&gt;</ref><sp/><ref refid="class_generic_member_iterator_1ac0d50d12ba074e68837964244668c66b" kindref="member">PlainType</ref>;</highlight></codeline>
<codeline lineno="192" refid="class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">internal::MaybeAddConst&lt;Const,PlainType&gt;::Type</ref><sp/><ref refid="class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584" kindref="member">ValueType</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="196" refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref><sp/><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref>;</highlight></codeline>
<codeline lineno="198" refid="class_generic_member_iterator_1ae5be27a73dce0be58ee2776db896d591" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;true,Encoding,Allocator&gt;</ref><sp/><sp/><ref refid="class_generic_member_iterator_1ae5be27a73dce0be58ee2776db896d591" kindref="member">ConstIterator</ref>;</highlight></codeline>
<codeline lineno="200" refid="class_generic_member_iterator_1abc26eb06f2962765b11dcd06ce84ac02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;false,Encoding,Allocator&gt;</ref><sp/><ref refid="class_generic_member_iterator_1abc26eb06f2962765b11dcd06ce84ac02" kindref="member">NonConstIterator</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_generic_member_iterator_1a79326e02032d06d80e09ded797501553" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584" kindref="member">ValueType</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1a79326e02032d06d80e09ded797501553" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="205" refid="class_generic_member_iterator_1a7c3623bc81b06495fd3128398487e99e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584" kindref="member">ValueType</ref><sp/>*<sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1a7c3623bc81b06495fd3128398487e99e" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="206" refid="class_generic_member_iterator_1a182876d698903331bd0b11db6d1beeca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584" kindref="member">ValueType</ref><sp/>&amp;<sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1a182876d698903331bd0b11db6d1beeca" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="207" refid="class_generic_member_iterator_1ae60bbcbaec51d36eef299996543872e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::ptrdiff_t<sp/><ref refid="class_generic_member_iterator_1ae60bbcbaec51d36eef299996543872e6" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="208" refid="class_generic_member_iterator_1a36cd90aef13c0cce916929f63fdb5c86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::random_access_iterator_tag<sp/><ref refid="class_generic_member_iterator_1a36cd90aef13c0cce916929f63fdb5c86" kindref="member">iterator_category</ref>;</highlight></codeline>
<codeline lineno="210"></codeline>
<codeline lineno="212" refid="class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a7c3623bc81b06495fd3128398487e99e" kindref="member">pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29" kindref="member">Pointer</ref>;</highlight></codeline>
<codeline lineno="214" refid="class_generic_member_iterator_1a8042a85a9e233d65de5b6c66d9a1109a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a182876d698903331bd0b11db6d1beeca" kindref="member">reference</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1a8042a85a9e233d65de5b6c66d9a1109a" kindref="member">Reference</ref>;</highlight></codeline>
<codeline lineno="216" refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1ae60bbcbaec51d36eef299996543872e6" kindref="member">difference_type</ref><sp/><ref refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" kindref="member">DifferenceType</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="class_generic_member_iterator_1a2708717d497a0aadacdf75900de4c5b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1a2708717d497a0aadacdf75900de4c5b4" kindref="member">GenericMemberIterator</ref>()<sp/>:<sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="class_generic_member_iterator_1a2697fd327a90654b0bf91c988e43f95e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1a2697fd327a90654b0bf91c988e43f95e" kindref="member">GenericMemberIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">NonConstIterator</ref><sp/>&amp;<sp/>it)<sp/>:<sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>(it.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="241" refid="class_generic_member_iterator_1a3106e0e66d8a692d9ff9f91b99421302" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref>&amp;<sp/><ref refid="class_generic_member_iterator_1a3106e0e66d8a692d9ff9f91b99421302" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">NonConstIterator</ref><sp/>&amp;<sp/>it)<sp/>{<sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref><sp/>=<sp/>it.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"></codeline>
<codeline lineno="245" refid="class_generic_member_iterator_1a37bbba2bf6f56aee43ccf3caf5ac51d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref>&amp;<sp/><ref refid="class_generic_member_iterator_1a37bbba2bf6f56aee43ccf3caf5ac51d0" kindref="member">operator++</ref>(){<sp/>++<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="246" refid="class_generic_member_iterator_1ae413025561a25dbb7c95b93ff387cc55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref>&amp;<sp/><ref refid="class_generic_member_iterator_1ae413025561a25dbb7c95b93ff387cc55" kindref="member">operator--</ref>(){<sp/>--<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="247" refid="class_generic_member_iterator_1a83c8be6d960213ce32d68a880a8d9089" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref><sp/><sp/><ref refid="class_generic_member_iterator_1a83c8be6d960213ce32d68a880a8d9089" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">){<sp/><ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref><sp/>old(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>++<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;<sp/>}</highlight></codeline>
<codeline lineno="248" refid="class_generic_member_iterator_1a4606c8baec5ea2b5139a503f7caa5444" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref><sp/><sp/><ref refid="class_generic_member_iterator_1a4606c8baec5ea2b5139a503f7caa5444" kindref="member">operator--</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">){<sp/><ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref><sp/>old(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>--<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;<sp/>}</highlight></codeline>
<codeline lineno="250"></codeline>
<codeline lineno="252"></codeline>
<codeline lineno="253" refid="class_generic_member_iterator_1a472098839cec785b43a005a23d7a284b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref><sp/><ref refid="class_generic_member_iterator_1a472098839cec785b43a005a23d7a284b" kindref="member">operator+</ref>(<ref refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" kindref="member">DifferenceType</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref>(<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>+n);<sp/>}</highlight></codeline>
<codeline lineno="254" refid="class_generic_member_iterator_1a343099509473934b40b9a4264c472721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref><sp/><ref refid="class_generic_member_iterator_1a343099509473934b40b9a4264c472721" kindref="member">operator-</ref>(<ref refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" kindref="member">DifferenceType</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref>(<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>-n);<sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="class_generic_member_iterator_1a6b86a449909e8611c449f428809eb237" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref>&amp;<sp/><ref refid="class_generic_member_iterator_1a6b86a449909e8611c449f428809eb237" kindref="member">operator+=</ref>(<ref refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" kindref="member">DifferenceType</ref><sp/>n)<sp/>{<sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>+=n;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="257" refid="class_generic_member_iterator_1aa3f9472c44eb8e0c040d24935bfa8e82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref>&amp;<sp/><ref refid="class_generic_member_iterator_1aa3f9472c44eb8e0c040d24935bfa8e82" kindref="member">operator-=</ref>(<ref refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" kindref="member">DifferenceType</ref><sp/>n)<sp/>{<sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>-=n;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="259"></codeline>
<codeline lineno="261"></codeline>
<codeline lineno="262" refid="class_generic_member_iterator_1a79ec0aac9cd098fddd656b3ce55d0c0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Const_&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a79ec0aac9cd098fddd656b3ce55d0c0a" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</ref>&amp;<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref><sp/>==<sp/>that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="263" refid="class_generic_member_iterator_1ad1d518be7ace72462fc77cd4c6f250e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Const_&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1ad1d518be7ace72462fc77cd4c6f250e2" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</ref>&amp;<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref><sp/>!=<sp/>that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="264" refid="class_generic_member_iterator_1a1d6b406f68ff02515fdc3e0385057a12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Const_&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a1d6b406f68ff02515fdc3e0385057a12" kindref="member">operator&lt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</ref>&amp;<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref><sp/>&lt;=<sp/>that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="265" refid="class_generic_member_iterator_1ab6d9e8fce04a598f10453b3f722c78ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Const_&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1ab6d9e8fce04a598f10453b3f722c78ac" kindref="member">operator&gt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</ref>&amp;<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref><sp/>&gt;=<sp/>that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="266" refid="class_generic_member_iterator_1aaadf9036c5d4563cf00019ba840dd09a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Const_&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1aaadf9036c5d4563cf00019ba840dd09a" kindref="member">operator&lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</ref>&amp;<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref><sp/>&lt;<sp/>that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="267" refid="class_generic_member_iterator_1a1b2faefeb0d9bbc04bd02d69d25828f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Const_&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a1b2faefeb0d9bbc04bd02d69d25828f5" kindref="member">operator&gt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</ref>&amp;<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref><sp/>&gt;<sp/>that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cpp_lib_three_way_comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Const_&gt;<sp/>std::strong_ordering<sp/>operator&lt;=&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</ref>&amp;<sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr_<sp/>&lt;=&gt;<sp/>that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="275"></codeline>
<codeline lineno="276" refid="class_generic_member_iterator_1a56ad403f7e7a35d6060931685d6cbbe8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1a8042a85a9e233d65de5b6c66d9a1109a" kindref="member">Reference</ref><sp/><ref refid="class_generic_member_iterator_1a56ad403f7e7a35d6060931685d6cbbe8" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="277" refid="class_generic_member_iterator_1abc95a8e52653a8baa2927b03239f4be9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29" kindref="member">Pointer</ref><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1abc95a8e52653a8baa2927b03239f4be9" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="278" refid="class_generic_member_iterator_1a41b59f1bd367a98ee5d1138cc81e98a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1a8042a85a9e233d65de5b6c66d9a1109a" kindref="member">Reference</ref><sp/><ref refid="class_generic_member_iterator_1a41b59f1bd367a98ee5d1138cc81e98a7" kindref="member">operator[]</ref>(<ref refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" kindref="member">DifferenceType</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>[n];<sp/>}</highlight></codeline>
<codeline lineno="280"></codeline>
<codeline lineno="282" refid="class_generic_member_iterator_1ae119ae8ed78dbd980f83d367f59a3c94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" kindref="member">DifferenceType</ref><sp/><ref refid="class_generic_member_iterator_1ae119ae8ed78dbd980f83d367f59a3c94" kindref="member">operator-</ref>(<ref refid="class_generic_member_iterator" kindref="compound">ConstIterator</ref><sp/>that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>-that.<ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="286" refid="class_generic_member_iterator_1a76c372cd90c8abff942ab054c4992c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator_1a76c372cd90c8abff942ab054c4992c74" kindref="member">GenericMemberIterator</ref>(<ref refid="class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29" kindref="member">Pointer</ref><sp/>p)<sp/>:<sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>(p)<sp/>{}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29" kindref="member">Pointer</ref><sp/><ref refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" kindref="member">ptr_</ref>;<sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal">};</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">//<sp/>RAPIDJSON_NOMEMBERITERATORCLASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class-based<sp/>member<sp/>iterator<sp/>implementation<sp/>disabled,<sp/>use<sp/>plain<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Const,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt;false,<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>,<ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member" kindref="compound">GenericMember&lt;Encoding,Allocator&gt;</ref>*<sp/><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">};</highlight></codeline>
<codeline lineno="306"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt;true,<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>,<ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_member" kindref="compound">GenericMember&lt;Encoding,Allocator&gt;</ref>*<sp/><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">};</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RAPIDJSON_NOMEMBERITERATORCLASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="comment">//<sp/>GenericStringRef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CharType&gt;</highlight></codeline>
<codeline lineno="346" refid="struct_generic_string_ref" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref><sp/>{</highlight></codeline>
<codeline lineno="347" refid="struct_generic_string_ref_1a16908c3fce41be380061330c14ba2140" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CharType<sp/><ref refid="struct_generic_string_ref_1a16908c3fce41be380061330c14ba2140" kindref="member">Ch</ref>;<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor">#ifndef<sp/>__clang__<sp/></highlight><highlight class="comment">//<sp/>-Wdocumentation</highlight></codeline>
<codeline lineno="373"><highlight class="comment"></highlight><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;SizeType<sp/>N&gt;</highlight></codeline>
<codeline lineno="375" refid="struct_generic_string_ref_1aae0c070f914d2486a560150a927c22dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_ref_1aae0c070f914d2486a560150a927c22dc" kindref="member">GenericStringRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharType<sp/>(&amp;str)[N])<sp/>RAPIDJSON_NOEXCEPT</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be" kindref="member">s</ref>(str),<sp/><ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>(N-1)<sp/>{}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor">#ifndef<sp/>__clang__<sp/></highlight><highlight class="comment">//<sp/>-Wdocumentation</highlight></codeline>
<codeline lineno="398"><highlight class="comment"></highlight><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="399" refid="struct_generic_string_ref_1a9e80d81d5ad49cf0fb4128ace8c548d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref_1a9e80d81d5ad49cf0fb4128ace8c548d9" kindref="member">GenericStringRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharType*<sp/>str)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be" kindref="member">s</ref>(str),<sp/><ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>(<ref refid="struct_generic_string_ref_1af51482556048c13920f5564a48e8ad7d" kindref="member">NotNullStrLen</ref>(str))<sp/>{}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor">#ifndef<sp/>__clang__<sp/></highlight><highlight class="comment">//<sp/>-Wdocumentation</highlight></codeline>
<codeline lineno="410"><highlight class="comment"></highlight><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="411" refid="struct_generic_string_ref_1a8b2c6a7fdc4da1e7055f7fdcf0ac517f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_ref_1a8b2c6a7fdc4da1e7055f7fdcf0ac517f" kindref="member">GenericStringRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharType*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be" kindref="member">s</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5dc14176a9e71ace282404b0bcda57a1" kindref="member">RAPIDJSON_LIKELY</ref>(str)<sp/>?<sp/>str<sp/>:<sp/><ref refid="struct_generic_string_ref_1aeb7a469eea3ca2a9fd9fcb2e33df4a6c" kindref="member">emptyString</ref>),<sp/><ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>(len)<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(str<sp/>!=<sp/>0<sp/>||<sp/>len<sp/>==<sp/>0u);<sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="struct_generic_string_ref_1ab049693082c0b8f5066c00212e780aec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_ref_1ab049693082c0b8f5066c00212e780aec" kindref="member">GenericStringRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&amp;<sp/>rhs)<sp/>:<sp/><ref refid="struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be" kindref="member">s</ref>(rhs.<ref refid="struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be" kindref="member">s</ref>),<sp/><ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>(rhs.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="struct_generic_string_ref_1a4e652ee3a398d0eb8ece1835d15274d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref_1a16908c3fce41be380061330c14ba2140" kindref="member">Ch</ref><sp/>*()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be" kindref="member">s</ref>;<sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref_1a16908c3fce41be380061330c14ba2140" kindref="member">Ch</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be" kindref="member">s</ref>;<sp/></highlight></codeline>
<codeline lineno="420" refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>;<sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="423" refid="struct_generic_string_ref_1af51482556048c13920f5564a48e8ad7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_string_ref_1af51482556048c13920f5564a48e8ad7d" kindref="member">NotNullStrLen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharType*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(str<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceinternal_1a86326fb0c9d7c7ea8edd7deedbb2b26e" kindref="member">internal::StrLen</ref>(str);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="struct_generic_string_ref_1aeb7a469eea3ca2a9fd9fcb2e33df4a6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref_1a16908c3fce41be380061330c14ba2140" kindref="member">Ch</ref><sp/><ref refid="struct_generic_string_ref_1aeb7a469eea3ca2a9fd9fcb2e33df4a6c" kindref="member">emptyString</ref>[];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;SizeType<sp/>N&gt;</highlight></codeline>
<codeline lineno="433" refid="struct_generic_string_ref_1ac0d64ff2d8a84b4f5a4b4dc687f49301" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_ref_1ac0d64ff2d8a84b4f5a4b4dc687f49301" kindref="member">GenericStringRef</ref>(CharType<sp/>(&amp;str)[N])<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>delete<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435" refid="struct_generic_string_ref_1a0c001d5723bd8b3fc9cb6a253a94f011" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&amp;<sp/><ref refid="struct_generic_string_ref_1a0c001d5723bd8b3fc9cb6a253a94f011" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&amp;<sp/>rhs)<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>delete<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">};</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CharType&gt;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharType<sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;::emptyString</ref>[]<sp/>=<sp/>{<sp/>CharType()<sp/>};</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CharType&gt;</highlight></codeline>
<codeline lineno="454" refid="struct_generic_string_ref_1aa6b9fd9f6aa49405a574c362ba9af6b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref><sp/><ref refid="struct_generic_string_ref_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharType*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref>(str);</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CharType&gt;</highlight></codeline>
<codeline lineno="474" refid="struct_generic_string_ref_1a578c51ab574a50a9c760b9da7c7562f2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref><sp/><ref refid="struct_generic_string_ref_1a578c51ab574a50a9c760b9da7c7562f2" kindref="member">StringRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CharType*<sp/>str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref>(str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>(length));</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CharType&gt;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref><sp/><ref refid="struct_generic_string_ref_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;CharType&gt;&amp;<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref>(str.data(),<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>(str.size()));</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="comment">//<sp/>GenericValue<sp/>type<sp/>traits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceinternal" kindref="compound">internal</ref><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="502" refid="structinternal_1_1_is_generic_value_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_is_generic_value_impl" kindref="compound">IsGenericValueImpl</ref><sp/>:<sp/>FalseType<sp/>{};</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//<sp/>select<sp/>candidates<sp/>according<sp/>to<sp/>nested<sp/>encoding<sp/>and<sp/>allocator<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="structinternal_1_1_is_generic_value_impl_3_01_t_00_01typename_01_void_3_01typename_01_t_1_1_enco3a51e9d8b4986f001b39e1e8edecb66a" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_is_generic_value_impl" kindref="compound">IsGenericValueImpl</ref>&lt;<ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref>,<sp/>typename<sp/>Void&lt;typename<sp/><ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref>::EncodingType&gt;<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>,<sp/>typename<sp/>Void&lt;typename<sp/>T::AllocatorType&gt;<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>&gt;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>IsBaseOf&lt;GenericValue&lt;typename<sp/>T::EncodingType,<sp/>typename<sp/>T::AllocatorType&gt;,<sp/>T&gt;<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref><sp/>{};</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//<sp/>helper<sp/>to<sp/>match<sp/>arbitrary<sp/>GenericValue<sp/>instantiations,<sp/>including<sp/>derived<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="structinternal_1_1_is_generic_value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_is_generic_value" kindref="compound">IsGenericValue</ref><sp/>:<sp/><ref refid="structinternal_1_1_is_generic_value_impl" kindref="compound">IsGenericValueImpl</ref>&lt;T&gt;<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref><sp/>{};</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="comment">//<sp/>TypeHelper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceinternal" kindref="compound">internal</ref><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="519" refid="structinternal_1_1_type_helper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref><sp/>{};</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight></codeline>
<codeline lineno="522" refid="structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref>&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/>bool&gt;<sp/>{</highlight></codeline>
<codeline lineno="523" refid="structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4_1aa73fb8b4ed649706f7f9165401f89c27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4_1aa73fb8b4ed649706f7f9165401f89c27" kindref="member">Is</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsBool();<sp/>}</highlight></codeline>
<codeline lineno="524" refid="structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4_1aed612b233e5985d049248b414fb0034a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4_1aed612b233e5985d049248b414fb0034a" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetBool();<sp/>}</highlight></codeline>
<codeline lineno="525" refid="structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4_1ae6fc9b4f8dfe33efbf1c5e36faf0091a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4_1ae6fc9b4f8dfe33efbf1c5e36faf0091a" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetBool(data);<sp/>}</highlight></codeline>
<codeline lineno="526" refid="structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4_1ada1da2523b0b3867c9500b0209b7d9ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4_1ada1da2523b0b3867c9500b0209b7d9ab" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetBool(data);<sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal">};</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight></codeline>
<codeline lineno="530" refid="structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref>&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/>int&gt;<sp/>{</highlight></codeline>
<codeline lineno="531" refid="structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4_1aa17ef940501aac12fd7934ef979c607e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4_1aa17ef940501aac12fd7934ef979c607e" kindref="member">Is</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsInt();<sp/>}</highlight></codeline>
<codeline lineno="532" refid="structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4_1a98c331ac026873b9ad4ba68e7bf28446" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4_1a98c331ac026873b9ad4ba68e7bf28446" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetInt();<sp/>}</highlight></codeline>
<codeline lineno="533" refid="structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4_1a495199b499e09537c9e1b487ce6d8c14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4_1a495199b499e09537c9e1b487ce6d8c14" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetInt(data);<sp/>}</highlight></codeline>
<codeline lineno="534" refid="structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4_1a1a3e9791ca16e4d57075c7ad03322d66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4_1a1a3e9791ca16e4d57075c7ad03322d66" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetInt(data);<sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal">};</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight></codeline>
<codeline lineno="538" refid="structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref>&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/>unsigned&gt;<sp/>{</highlight></codeline>
<codeline lineno="539" refid="structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4_1ad1c1cb931ed166508d17e866d410c99b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4_1ad1c1cb931ed166508d17e866d410c99b" kindref="member">Is</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsUint();<sp/>}</highlight></codeline>
<codeline lineno="540" refid="structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4_1a2f91befe1e9e914e7431b84c0d89f572" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4_1a2f91befe1e9e914e7431b84c0d89f572" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetUint();<sp/>}</highlight></codeline>
<codeline lineno="541" refid="structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4_1a1a5ea12a9024c3d9d76f0ffafa6bf01b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4_1a1a5ea12a9024c3d9d76f0ffafa6bf01b" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetUint(data);<sp/>}</highlight></codeline>
<codeline lineno="542" refid="structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4_1ae93fad1ee06ff8ce142708e31a2ce694" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4_1ae93fad1ee06ff8ce142708e31a2ce694" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetUint(data);<sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal">};</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><ref refid="rapidjson_8h_1af95188da1d8eb6d4b148fe9ce71cd7c4" kindref="member">RAPIDJSON_STATIC_ASSERT</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TypeHelper&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/>long&gt;<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Is(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsInt();<sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetInt();<sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>Set(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetInt(data);<sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>Set(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetInt(data);<sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal">};</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><ref refid="rapidjson_8h_1af95188da1d8eb6d4b148fe9ce71cd7c4" kindref="member">RAPIDJSON_STATIC_ASSERT</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TypeHelper&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/>unsigned<sp/>long&gt;<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Is(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsUint();<sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetUint();<sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>Set(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetUint(data);<sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>Set(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetUint(data);<sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal">};</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight></codeline>
<codeline lineno="566" refid="structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref>&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="567" refid="structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4_1a43c171bfbe873941a1b2be698a95de74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4_1a43c171bfbe873941a1b2be698a95de74" kindref="member">Is</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsInt64();<sp/>}</highlight></codeline>
<codeline lineno="568" refid="structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4_1abe3368c8817cafe420a8b3f7d6ec1759" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4_1abe3368c8817cafe420a8b3f7d6ec1759" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetInt64();<sp/>}</highlight></codeline>
<codeline lineno="569" refid="structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4_1a2c2c32f0e02abc21191161e966e88152" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4_1a2c2c32f0e02abc21191161e966e88152" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetInt64(data);<sp/>}</highlight></codeline>
<codeline lineno="570" refid="structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4_1a009129e705c4a342d19696ea3bef5416" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4_1a009129e705c4a342d19696ea3bef5416" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetInt64(data);<sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal">};</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight></codeline>
<codeline lineno="574" refid="structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref>&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="575" refid="structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4_1a4916651732ed27fa944c96a32cec5b88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4_1a4916651732ed27fa944c96a32cec5b88" kindref="member">Is</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsUint64();<sp/>}</highlight></codeline>
<codeline lineno="576" refid="structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4_1a1b1b2e4fe3c38fb37701284c6571ee92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4_1a1b1b2e4fe3c38fb37701284c6571ee92" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetUint64();<sp/>}</highlight></codeline>
<codeline lineno="577" refid="structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4_1ae7dd2b4d800b7021a60dedc665be8ae4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4_1ae7dd2b4d800b7021a60dedc665be8ae4" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetUint64(data);<sp/>}</highlight></codeline>
<codeline lineno="578" refid="structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4_1a85ba4f6efcd460739e8fbad1fa804220" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4_1a85ba4f6efcd460739e8fbad1fa804220" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetUint64(data);<sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal">};</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight></codeline>
<codeline lineno="582" refid="structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref>&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/>double&gt;<sp/>{</highlight></codeline>
<codeline lineno="583" refid="structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4_1a6c265a3202beb9bd85ecc7896a8ab9dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4_1a6c265a3202beb9bd85ecc7896a8ab9dd" kindref="member">Is</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsDouble();<sp/>}</highlight></codeline>
<codeline lineno="584" refid="structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4_1ac55a96d2abd1dd6718a6cb3d6690aa38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4_1ac55a96d2abd1dd6718a6cb3d6690aa38" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetDouble();<sp/>}</highlight></codeline>
<codeline lineno="585" refid="structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4_1abb797ba373c4f7c72e6ef2500c4dff92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4_1abb797ba373c4f7c72e6ef2500c4dff92" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetDouble(data);<sp/>}</highlight></codeline>
<codeline lineno="586" refid="structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4_1a277ba130e18b0cddf9184416c43040cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4_1a277ba130e18b0cddf9184416c43040cb" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetDouble(data);<sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal">};</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight></codeline>
<codeline lineno="590" refid="structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref>&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/>float&gt;<sp/>{</highlight></codeline>
<codeline lineno="591" refid="structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4_1a1108488a02868bb91c3c14f4598bbebc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4_1a1108488a02868bb91c3c14f4598bbebc" kindref="member">Is</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsFloat();<sp/>}</highlight></codeline>
<codeline lineno="592" refid="structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4_1aa681e0d25878a7a770b0be82322b435a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4_1aa681e0d25878a7a770b0be82322b435a" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetFloat();<sp/>}</highlight></codeline>
<codeline lineno="593" refid="structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4_1a420b674d6ad24b3509f430d11b74628f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4_1a420b674d6ad24b3509f430d11b74628f" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetFloat(data);<sp/>}</highlight></codeline>
<codeline lineno="594" refid="structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4_1aee052cf34bcbdf52f67abde6b52bc5ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4_1aee052cf34bcbdf52f67abde6b52bc5ac" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetFloat(data);<sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal">};</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight></codeline>
<codeline lineno="598" refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref>&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/>const<sp/>typename<sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>::Ch*&gt;<sp/>{</highlight></codeline>
<codeline lineno="599" refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a61b7fd9c92eab60394fdff466251c399" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">ValueType::Ch</ref>*<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a61b7fd9c92eab60394fdff466251c399" kindref="member">StringType</ref>;</highlight></codeline>
<codeline lineno="600" refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a9543f180b6ac2b923486f1b69d5356ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a9543f180b6ac2b923486f1b69d5356ea" kindref="member">Is</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsString();<sp/>}</highlight></codeline>
<codeline lineno="601" refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a11f8ddfbc91f1d890d63cc67e3f1abb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a61b7fd9c92eab60394fdff466251c399" kindref="member">StringType</ref><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a11f8ddfbc91f1d890d63cc67e3f1abb6" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetString();<sp/>}</highlight></codeline>
<codeline lineno="602" refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a1d427205cf9eb8257027964ab306bd3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a1d427205cf9eb8257027964ab306bd3b" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a61b7fd9c92eab60394fdff466251c399" kindref="member">StringType</ref><sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetString(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">ValueType::StringRefType</ref>(data));<sp/>}</highlight></codeline>
<codeline lineno="603" refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a4b6fb32ec2d59846cbc5049b4d283111" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a4b6fb32ec2d59846cbc5049b4d283111" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a61b7fd9c92eab60394fdff466251c399" kindref="member">StringType</ref><sp/>data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref>&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetString(data,<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);<sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal">};</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TypeHelper&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/>std::basic_string&lt;typename<sp/>ValueType::Ch&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::basic_string&lt;typename<sp/>ValueType::Ch&gt;<sp/>StringType;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Is(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsString();<sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>StringType<sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StringType(v.GetString(),<sp/>v.GetStringLength());<sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>Set(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StringType&amp;<sp/>data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref>&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.SetString(data,<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);<sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal">};</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight></codeline>
<codeline lineno="617" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref>&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/>typename<sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>::Array&gt;<sp/>{</highlight></codeline>
<codeline lineno="618" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a8f384dc96b6104e85b956ec5f7386434" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_array" kindref="compound">ValueType::Array</ref><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a8f384dc96b6104e85b956ec5f7386434" kindref="member">ArrayType</ref>;</highlight></codeline>
<codeline lineno="619" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a2a052fc0139112075f8bade42964273d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a2a052fc0139112075f8bade42964273d" kindref="member">Is</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsArray();<sp/>}</highlight></codeline>
<codeline lineno="620" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a0e6bd47ab5da0387bf419cdf644035ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_array" kindref="compound">ArrayType</ref><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a0e6bd47ab5da0387bf419cdf644035ab" kindref="member">Get</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetArray();<sp/>}</highlight></codeline>
<codeline lineno="621" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a45abc702bb54f4516cbbe9728b9a1547" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a45abc702bb54f4516cbbe9728b9a1547" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/><ref refid="class_generic_array" kindref="compound">ArrayType</ref><sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>data;<sp/>}</highlight></codeline>
<codeline lineno="622" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a652b4873a0cbe228b7ee060970ccd3e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a652b4873a0cbe228b7ee060970ccd3e0" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/><ref refid="class_generic_array" kindref="compound">ArrayType</ref><sp/>data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>data;<sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal">};</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight></codeline>
<codeline lineno="626" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_array_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref>&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/>typename<sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>::ConstArray&gt;<sp/>{</highlight></codeline>
<codeline lineno="627" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_array_01_4_1a88c3a7bbff09fdd44ce6980f8122ba05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_array" kindref="compound">ValueType::ConstArray</ref><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_array_01_4_1a88c3a7bbff09fdd44ce6980f8122ba05" kindref="member">ArrayType</ref>;</highlight></codeline>
<codeline lineno="628" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_array_01_4_1a259497292f89c58789b1e947249dd299" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_array_01_4_1a259497292f89c58789b1e947249dd299" kindref="member">Is</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsArray();<sp/>}</highlight></codeline>
<codeline lineno="629" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_array_01_4_1a247811db25d6f25cc63175e03d847b8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_array" kindref="compound">ArrayType</ref><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_array_01_4_1a247811db25d6f25cc63175e03d847b8b" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetArray();<sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal">};</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight></codeline>
<codeline lineno="633" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref>&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/>typename<sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>::Object&gt;<sp/>{</highlight></codeline>
<codeline lineno="634" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1ac5d59bffe76792786fd5f1ba4da94dd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_object" kindref="compound">ValueType::Object</ref><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1ac5d59bffe76792786fd5f1ba4da94dd9" kindref="member">ObjectType</ref>;</highlight></codeline>
<codeline lineno="635" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1a6c8bcb7479d2c4c96ae6dcaac808e227" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1a6c8bcb7479d2c4c96ae6dcaac808e227" kindref="member">Is</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsObject();<sp/>}</highlight></codeline>
<codeline lineno="636" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1ae1debd6b9c125d4206e43a74ddbd0795" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_object" kindref="compound">ObjectType</ref><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1ae1debd6b9c125d4206e43a74ddbd0795" kindref="member">Get</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetObject();<sp/>}</highlight></codeline>
<codeline lineno="637" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1a0b875752c65f9f2df3a351c1e818d9e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1a0b875752c65f9f2df3a351c1e818d9e4" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/><ref refid="class_generic_object" kindref="compound">ObjectType</ref><sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>data;<sp/>}</highlight></codeline>
<codeline lineno="638" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1aff688acbadc1888b8886a4d9b0753864" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1aff688acbadc1888b8886a4d9b0753864" kindref="member">Set</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/><ref refid="class_generic_object" kindref="compound">ObjectType</ref><sp/>data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>data;<sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal">};</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight></codeline>
<codeline lineno="642" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_object_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref>&lt;<ref refid="class_generic_value" kindref="compound">ValueType</ref>,<sp/>typename<sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>::ConstObject&gt;<sp/>{</highlight></codeline>
<codeline lineno="643" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_object_01_4_1a986df6ac09ceb6cc9ba9fd4d73e90495" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_object" kindref="compound">ValueType::ConstObject</ref><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_object_01_4_1a986df6ac09ceb6cc9ba9fd4d73e90495" kindref="member">ObjectType</ref>;</highlight></codeline>
<codeline lineno="644" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_object_01_4_1a843e707732c55f2178d399a0af13605a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_object_01_4_1a843e707732c55f2178d399a0af13605a" kindref="member">Is</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.IsObject();<sp/>}</highlight></codeline>
<codeline lineno="645" refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_object_01_4_1ae6a797157c9b3d15ca4a32c48ea4bc73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_object" kindref="compound">ObjectType</ref><sp/><ref refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_object_01_4_1ae6a797157c9b3d15ca4a32c48ea4bc73" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.GetObject();<sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal">};</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_array" kindref="compound">GenericArray</ref>;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_object" kindref="compound">GenericObject</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="comment">//<sp/>GenericValue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/>RAPIDJSON_DEFAULT_ALLOCATOR<sp/>&gt;</highlight></codeline>
<codeline lineno="668" refid="class_generic_value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="671" refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member" kindref="compound">GenericMember&lt;Encoding, Allocator&gt;</ref><sp/><ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>;</highlight></codeline>
<codeline lineno="672" refid="class_generic_value_1a28c2cb8d04d12566c1af37597a46d209" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref><sp/><ref refid="class_generic_value_1a28c2cb8d04d12566c1af37597a46d209" kindref="member">EncodingType</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="673" refid="class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref><sp/><ref refid="class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1" kindref="member">AllocatorType</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="674" refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch<sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="675" refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;Ch&gt;</ref><sp/><ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="676" refid="class_generic_value_1a349b8faae61edc42b4289726820be439" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;false,Encoding,Allocator&gt;::Iterator</ref><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="677" refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;true,Encoding,Allocator&gt;::Iterator</ref><sp/><ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="678" refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/><ref refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" kindref="member">ValueIterator</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="679" refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/><ref refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" kindref="member">ConstValueIterator</ref>;<sp/></highlight></codeline>
<codeline lineno="680" refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, Allocator&gt;</ref><sp/><ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="681" refid="class_generic_value_1a149e12992b8f6064c865a4cf55981b89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_array" kindref="compound">GenericArray&lt;false, ValueType&gt;</ref><sp/><ref refid="class_generic_value_1a149e12992b8f6064c865a4cf55981b89" kindref="member">Array</ref>;</highlight></codeline>
<codeline lineno="682" refid="class_generic_value_1a8f1d2728de56600b5f3df596e2a8a181" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_array" kindref="compound">GenericArray&lt;true, ValueType&gt;</ref><sp/><ref refid="class_generic_value_1a8f1d2728de56600b5f3df596e2a8a181" kindref="member">ConstArray</ref>;</highlight></codeline>
<codeline lineno="683" refid="class_generic_value_1aee3606d69d411ce0d98f29639585989b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_object" kindref="compound">GenericObject&lt;false, ValueType&gt;</ref><sp/><ref refid="class_generic_value_1aee3606d69d411ce0d98f29639585989b" kindref="member">Object</ref>;</highlight></codeline>
<codeline lineno="684" refid="class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_object" kindref="compound">GenericObject&lt;true, ValueType&gt;</ref><sp/><ref refid="class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e" kindref="member">ConstObject</ref>;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"></codeline>
<codeline lineno="688"></codeline>
<codeline lineno="690" refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>()<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d" kindref="member">kNullFlag</ref>;<sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>(rhs.data_)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.data_.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d" kindref="member">kNullFlag</ref>;<sp/></highlight><highlight class="comment">//<sp/>give<sp/>up<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="701" refid="class_generic_value_1ac5bfd54b6bdea215716df69c501d5cf3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ac5bfd54b6bdea215716df69c501d5cf3" kindref="member">GenericValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StackAllocator&gt;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(<ref refid="class_generic_document" kindref="compound">GenericDocument&lt;Encoding,Allocator,StackAllocator&gt;</ref>&amp;&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StackAllocator&gt;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90" kindref="member">operator=</ref>(<ref refid="class_generic_document" kindref="compound">GenericDocument&lt;Encoding,Allocator,StackAllocator&gt;</ref>&amp;&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="class_generic_value_1a83c8f84b8e61f2f40414b703b75aea61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a83c8f84b8e61f2f40414b703b75aea61" kindref="member">GenericValue</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref><sp/>type)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/>defaultFlags[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d" kindref="member">kNullFlag</ref>,<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca66d3877b074bb1a0455a6f6d3f7f91a3" kindref="member">kFalseFlag</ref>,<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca75dbcdbacc82f9379c602f0b6c41cf07" kindref="member">kTrueFlag</ref>,<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c" kindref="member">kObjectFlag</ref>,<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47" kindref="member">kArrayFlag</ref>,<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caca24fa09485fa10b17071509a985ff01" kindref="member">kShortStringFlag</ref>,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cab7805b1908fd181afc8d70fe07b17e18" kindref="member">kNumberAnyFlag</ref></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga2b2a0d9143aa4fb31205a85b34c43952" kindref="member">RAPIDJSON_NOEXCEPT_ASSERT</ref>(type<sp/>&gt;=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7aa09befbfb4f2e1409f237817979d8087" kindref="member">kNullType</ref><sp/>&amp;&amp;<sp/>type<sp/>&lt;=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/>defaultFlags[type];</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>ShortString<sp/>to<sp/>store<sp/>empty<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref>)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c" kindref="member">ss</ref>.<ref refid="struct_generic_value_1_1_short_string_1adbfe8461e0cb0ccb2cb3825489e743c2" kindref="member">SetLength</ref>(0);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="742" refid="class_generic_value_1a76c68b72723a06045776dbd425f9e8b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a76c68b72723a06045776dbd425f9e8b6" kindref="member">GenericValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,SourceAllocator&gt;</ref>&amp;<sp/>rhs,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copyConstStrings<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(rhs.GetType())<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>:</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a17e90627a90a4e97e8425e0ca4a22cbb" kindref="member">DoCopyMembers</ref>(rhs,<sp/>allocator,<sp/>copyConstStrings);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>:<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count<sp/>=<sp/>rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>le<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator.Malloc(count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>)));</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,SourceAllocator&gt;</ref>*<sp/>re<sp/>=<sp/>rhs.<ref refid="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" kindref="member">GetElementsPointer</ref>();</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;le[i])<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(re[i],<sp/>allocator,<sp/>copyConstStrings);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47" kindref="member">kArrayFlag</ref>;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref><sp/>=<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5" kindref="member">capacity</ref><sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a1ccc6e15fa49f0c30eab8e8f7f9418f2" kindref="member">SetElementsPointer</ref>(le);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref>:</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>==<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca5d26a84f26833eafd0028c0102a388a9" kindref="member">kConstStringFlag</ref><sp/>&amp;&amp;<sp/>!copyConstStrings)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/>rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref><sp/><sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" kindref="member">SetStringRaw</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(rhs.GetString(),<sp/>rhs.GetStringLength()),<sp/>allocator);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/>rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref><sp/><sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_DOXYGEN_RUNNING<sp/></highlight><highlight class="comment">//<sp/>hide<sp/>SFINAE<sp/>from<sp/>Doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="781" refid="class_generic_value_1a0f6a0394bfffaedde88e433b2265194c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a0f6a0394bfffaedde88e433b2265194c" kindref="member">GenericValue</ref>(<ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref><sp/>b,<sp/>RAPIDJSON_ENABLEIF((internal::IsSame&lt;bool,<sp/>T&gt;)))<sp/>RAPIDJSON_NOEXCEPT<sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>#472</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/>RAPIDJSON_NOEXCEPT</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>safe-guard<sp/>against<sp/>failing<sp/>SFINAE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1af95188da1d8eb6d4b148fe9ce71cd7c4" kindref="member">RAPIDJSON_STATIC_ASSERT</ref>((<ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">internal::IsSame&lt;bool,T&gt;::Value</ref>));</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/>b<sp/>?<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca75dbcdbacc82f9379c602f0b6c41cf07" kindref="member">kTrueFlag</ref><sp/>:<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca66d3877b074bb1a0455a6f6d3f7f91a3" kindref="member">kFalseFlag</ref>;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="792" refid="class_generic_value_1aafc754ade38421c179f5c8933ecbaf45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aafc754ade38421c179f5c8933ecbaf45" kindref="member">GenericValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b" kindref="member">i64</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/>(i<sp/>&gt;=<sp/>0)<sp/>?<sp/>(<ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cacfe8b720220d0a2e378683367386cbaf" kindref="member">kNumberIntFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce" kindref="member">kUintFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94" kindref="member">kUint64Flag</ref>)<sp/>:<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cacfe8b720220d0a2e378683367386cbaf" kindref="member">kNumberIntFlag</ref>;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="798" refid="class_generic_value_1a972bff6c56ac3d04622ff7fad8d98331" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a972bff6c56ac3d04622ff7fad8d98331" kindref="member">GenericValue</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>u)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430" kindref="member">u64</ref><sp/>=<sp/>u;<sp/></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/>(u<sp/>&amp;<sp/>0x80000000)<sp/>?<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae8c6c6286edf9c309e77af0ea0cf039c" kindref="member">kNumberUintFlag</ref><sp/>:<sp/>(<ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae8c6c6286edf9c309e77af0ea0cf039c" kindref="member">kNumberUintFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb" kindref="member">kIntFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="804" refid="class_generic_value_1a964b69f1d2596f75ded5421b6db01a14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a964b69f1d2596f75ded5421b6db01a14" kindref="member">GenericValue</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i64)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b" kindref="member">i64</ref><sp/>=<sp/>i64;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cad117eb41bb8015a76aadf6149bbd8ce5" kindref="member">kNumberInt64Flag</ref>;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i64<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>|=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caaa1ee6a546d4db67f4bdef41d1f54f02" kindref="member">kNumberUint64Flag</ref>;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i64)<sp/>&amp;<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x00000000)))</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>|=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce" kindref="member">kUintFlag</ref>;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i64)<sp/>&amp;<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x80000000)))</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>|=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb" kindref="member">kIntFlag</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i64<sp/>&gt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x80000000)))</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>|=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb" kindref="member">kIntFlag</ref>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="819" refid="class_generic_value_1ad04805a57f5050c8e04be469ba64d6f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ad04805a57f5050c8e04be469ba64d6f3" kindref="member">GenericValue</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>u64)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430" kindref="member">u64</ref><sp/>=<sp/>u64;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caaa1ee6a546d4db67f4bdef41d1f54f02" kindref="member">kNumberUint64Flag</ref>;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(u64<sp/>&amp;<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0x80000000,<sp/>0x00000000)))</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>|=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(u64<sp/>&amp;<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x00000000)))</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>|=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce" kindref="member">kUintFlag</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(u64<sp/>&amp;<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x80000000)))</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>|=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb" kindref="member">kIntFlag</ref>;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="831" refid="class_generic_value_1a267d05b7e98c3507908eaf085fe41155" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a267d05b7e98c3507908eaf085fe41155" kindref="member">GenericValue</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a7ca3ad492fff303586d241eb0d17c242" kindref="member">d</ref><sp/>=<sp/>d;<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca29bc91c155577923abd8f19aa050058b" kindref="member">kNumberDoubleFlag</ref>;<sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="834" refid="class_generic_value_1acad11ab781251634a3c079aa64a6d283" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1acad11ab781251634a3c079aa64a6d283" kindref="member">GenericValue</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a7ca3ad492fff303586d241eb0d17c242" kindref="member">d</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(f);<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca29bc91c155577923abd8f19aa050058b" kindref="member">kNumberDoubleFlag</ref>;<sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="837" refid="class_generic_value_1a4d9af98141360cd801daab4ed1ca2c91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a4d9af98141360cd801daab4ed1ca2c91" kindref="member">GenericValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>s,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{<sp/><ref refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" kindref="member">SetStringRaw</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s,<sp/>length));<sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="840" refid="class_generic_value_1abb2887958974fef1b2b5c8e32cc72ddb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1abb2887958974fef1b2b5c8e32cc72ddb" kindref="member">GenericValue</ref>(<ref refid="struct_generic_string_ref" kindref="compound">StringRefType</ref><sp/>s)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{<sp/><ref refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" kindref="member">SetStringRaw</ref>(s);<sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="843" refid="class_generic_value_1a9ec2c7cda8c8845acfa3565c6b1b4e10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a9ec2c7cda8c8845acfa3565c6b1b4e10" kindref="member">GenericValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>s,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{<sp/><ref refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" kindref="member">SetStringRaw</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s,<sp/>length),<sp/>allocator);<sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="846" refid="class_generic_value_1a9b72b2e3347d4cd77b16c3b45e8decf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a9b72b2e3347d4cd77b16c3b45e8decf1" kindref="member">GenericValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*s,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{<sp/><ref refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" kindref="member">SetStringRaw</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s),<sp/>allocator);<sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>s,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>()<sp/>{<sp/><ref refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" kindref="member">SetStringRaw</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s),<sp/>allocator);<sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="861" refid="class_generic_value_1a953052ef91e54aabe9bdb9f9eaebf6cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a953052ef91e54aabe9bdb9f9eaebf6cc" kindref="member">GenericValue</ref>(<ref refid="class_generic_array" kindref="compound">Array</ref><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.value_.data_)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.value_.data_<sp/>=<sp/><ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref>();</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.value_.data_.f.flags<sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47" kindref="member">kArrayFlag</ref>;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="872" refid="class_generic_value_1a9c294e56f4ab940f845f7c171b183483" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a9c294e56f4ab940f845f7c171b183483" kindref="member">GenericValue</ref>(<ref refid="class_generic_object" kindref="compound">Object</ref><sp/>o)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>(o.value_.data_)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.value_.data_<sp/>=<sp/><ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref>();</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.value_.data_.f.flags<sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c" kindref="member">kObjectFlag</ref>;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="880" refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>RAPIDJSON_USE_MEMBERSMAP,<sp/>the<sp/>maps<sp/>need<sp/>to<sp/>be<sp/>destroyed<sp/>to<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>their<sp/>Allocator<sp/>if<sp/>it&apos;s<sp/>refcounted<sp/>(e.g.<sp/>MemoryPoolAllocator).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Allocator::kNeedFree<sp/>||<sp/>(<ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga87dc65109882910388121e1dba15038b" kindref="member">RAPIDJSON_USE_MEMBERSMAP</ref>+0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_is_ref_counted" kindref="compound">internal::IsRefCounted&lt;Allocator&gt;::Value</ref>))<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref>)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47" kindref="member">kArrayFlag</ref>:</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>e<sp/>=<sp/><ref refid="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" kindref="member">GetElementsPointer</ref>();</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>v<sp/>=<sp/>e;<sp/>v<sp/>!=<sp/>e<sp/>+<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref>;<sp/>++v)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Allocator::kNeedFree)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Shortcut<sp/>by<sp/>Allocator&apos;s<sp/>trait</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">Allocator::Free</ref>(e);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c" kindref="member">kObjectFlag</ref>:</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aab3a51f8207a44ad87a1f8b0bbf53fe9" kindref="member">DoFreeMembers</ref>();</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10c83f7f191dce81bb0273adc0d838de" kindref="member">kCopyStringFlag</ref>:</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Allocator::kNeedFree)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Shortcut<sp/>by<sp/>Allocator&apos;s<sp/>trait</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">Allocator::Free</ref>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1af182f2ccbcd962d2a28f92407622e9a9" kindref="member">GetStringPointer</ref>()));</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>nothing<sp/>for<sp/>other<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"></codeline>
<codeline lineno="916"></codeline>
<codeline lineno="917"></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="921" refid="class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90" kindref="member">operator=</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5dc14176a9e71ace282404b0bcda57a1" kindref="member">RAPIDJSON_LIKELY</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs))<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>destroy<sp/>&quot;this&quot;<sp/>before<sp/>assigning<sp/>&quot;rhs&quot;,<sp/>otherwise<sp/>&quot;rhs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>be<sp/>used<sp/>after<sp/>free<sp/>if<sp/>it&apos;s<sp/>an<sp/>sub-Value<sp/>of<sp/>&quot;this&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hence<sp/>the<sp/>temporary<sp/>danse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>temp;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">RawAssign</ref>(rhs);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">RawAssign</ref>(temp);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90" kindref="member">operator=</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>rhs.Move();</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="946" refid="class_generic_value_1a2b7837d3adb6c0ad184269826ea78e97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="class_generic_value_1a2b7837d3adb6c0ad184269826ea78e97" kindref="member">operator=</ref>(<ref refid="struct_generic_string_ref" kindref="compound">StringRefType</ref><sp/>str)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>s(str);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="964" refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::IsPointer&lt;T&gt;),<sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90" kindref="member">operator=</ref>(<ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref><sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>v(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>CopyFrom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>rhs,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copyConstStrings<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>!=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;rhs));</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(rhs,<sp/>allocator,<sp/>copyConstStrings);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="namespaceinternal_1a72b2c71d36273b9691487f58c671ce04" kindref="member">Swap</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>other)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>temp;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">RawAssign</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">RawAssign</ref>(other);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.RawAssign(temp);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>b)<sp/>RAPIDJSON_NOEXCEPT<sp/>{<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.Swap(b);<sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>Move()<sp/>RAPIDJSON_NOEXCEPT<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1016"></codeline>
<codeline lineno="1018"></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref><sp/>RhsType;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetType()<sp/>!=<sp/>rhs.GetType())</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(GetType())<sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>:<sp/></highlight><highlight class="comment">//<sp/>Warning:<sp/>O(n^2)<sp/>inner-loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref><sp/>!=<sp/>rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref><sp/>lhsMemberItr<sp/>=<sp/>MemberBegin();<sp/>lhsMemberItr<sp/>!=<sp/>MemberEnd();<sp/>++lhsMemberItr)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RhsType::ConstMemberIterator<sp/>rhsMemberItr<sp/>=<sp/>rhs.FindMember(lhsMemberItr-&gt;name);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhsMemberItr<sp/>==<sp/>rhs.MemberEnd()<sp/>||<sp/>lhsMemberItr-&gt;value<sp/>!=<sp/>rhsMemberItr-&gt;value)</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>:</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref><sp/>!=<sp/>rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[i]<sp/>!=<sp/>rhs[i])</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref>:</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ad4d088dc601d99fea9d16300a7ec7ee1" kindref="member">StringEqual</ref>(rhs);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>:</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsDouble()<sp/>||<sp/>rhs.IsDouble())<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>GetDouble();<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>convert<sp/>from<sp/>integer<sp/>to<sp/>double.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>rhs.GetDouble();<sp/></highlight><highlight class="comment">//<sp/>Ditto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&gt;=<sp/>b<sp/>&amp;&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&lt;=<sp/>b;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>-Wfloat-equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430" kindref="member">u64</ref><sp/>==<sp/>rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430" kindref="member">u64</ref>;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(rhs));<sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(rhs));<sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,<ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref><sp/>&gt;),<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">))<sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(rhs);<sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((<ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref>),<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">))<sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__cpp_lib_three_way_comparison</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((<ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref>),<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">))<sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rhs<sp/>==<sp/>lhs;<sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((<ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref>),<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">))<sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(rhs<sp/>==<sp/>lhs);<sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref><sp/>GetType()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca793e0bc40e0abe1ed8bcb3e6fbba65c2" kindref="member">kTypeMask</ref>);<sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsNull()</highlight><highlight class="keyword"><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>==<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d" kindref="member">kNullFlag</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsFalse()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>==<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca66d3877b074bb1a0455a6f6d3f7f91a3" kindref="member">kFalseFlag</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsTrue()</highlight><highlight class="keyword"><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>==<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca75dbcdbacc82f9379c602f0b6c41cf07" kindref="member">kTrueFlag</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsBool()</highlight><highlight class="keyword"><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac48966386b231124da7c3fb870e237ee" kindref="member">kBoolFlag</ref>)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsObject()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>==<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c" kindref="member">kObjectFlag</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsArray()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>==<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47" kindref="member">kArrayFlag</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsNumber()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref>)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInt()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb" kindref="member">kIntFlag</ref>)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsUint()</highlight><highlight class="keyword"><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce" kindref="member">kUintFlag</ref>)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInt64()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref>)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsUint64()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94" kindref="member">kUint64Flag</ref>)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsDouble()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c" kindref="member">kDoubleFlag</ref>)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsString()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf3bf3661275a38c86addba900c52dccb" kindref="member">kStringFlag</ref>)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>whether<sp/>a<sp/>number<sp/>can<sp/>be<sp/>losslessly<sp/>converted<sp/>to<sp/>a<sp/>double.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsLosslessDouble()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsNumber())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsUint64())<sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>u<sp/>=<sp/>GetUint64();</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(u);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d<sp/>&gt;=<sp/>0.0)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(d<sp/>&lt;<sp/>static_cast&lt;double&gt;((std::numeric_limits&lt;uint64_t&gt;::max)()))</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(u<sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d));</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsInt64())<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i<sp/>=<sp/>GetInt64();</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d<sp/>&gt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((std::numeric_limits&lt;int64_t&gt;::min)()))</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(d<sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((std::numeric_limits&lt;int64_t&gt;::max)()))</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(i<sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d));</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>double,<sp/>int,<sp/>uint<sp/>are<sp/>always<sp/>lossless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>whether<sp/>a<sp/>number<sp/>is<sp/>a<sp/>float<sp/>(possible<sp/>lossy).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsFloat()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c" kindref="member">kDoubleFlag</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>GetDouble();</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d<sp/>&gt;=<sp/>-3.4028234e38<sp/>&amp;&amp;<sp/>d<sp/>&lt;=<sp/>3.4028234e38;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>whether<sp/>a<sp/>number<sp/>can<sp/>be<sp/>losslessly<sp/>converted<sp/>to<sp/>a<sp/>float.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsLosslessFloat()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsNumber())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>GetDouble();</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(-(std::numeric_limits&lt;float&gt;::max)())</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((std::numeric_limits&lt;float&gt;::max)()))</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>));</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&gt;=<sp/>b<sp/>&amp;&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&lt;=<sp/>b;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>-Wfloat-equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"></codeline>
<codeline lineno="1167"></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetNull()<sp/>{<sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"></codeline>
<codeline lineno="1174"></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetBool()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsBool());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>==<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca75dbcdbacc82f9379c602f0b6c41cf07" kindref="member">kTrueFlag</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetBool(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(b);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"></codeline>
<codeline lineno="1184"></codeline>
<codeline lineno="1185"></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetObject()<sp/>{<sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>MemberCount()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>MemberCapacity()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b" kindref="member">capacity</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ObjectEmpty()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref><sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::NotExpr&lt;internal::IsSame&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">internal::RemoveConst&lt;T&gt;::Type</ref>,<sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>&gt;<sp/>&gt;),(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))<sp/>operator[](<ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref>*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>n(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[n];</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::NotExpr&lt;internal::IsSame&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">internal::RemoveConst&lt;T&gt;::Type</ref>,<sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>&gt;<sp/>&gt;),(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))<sp/>operator[](<ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref>*<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this)[name];<sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref><sp/>member<sp/>=<sp/>FindMember(name);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(member<sp/>!=<sp/>MemberEnd())</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>member-&gt;value;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>above<sp/>note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>generate<sp/>-Wexit-time-destructors<sp/>in<sp/>clang</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>GenericValue<sp/>NullValue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>NullValue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>static<sp/>buffer<sp/>and<sp/>placement-new<sp/>to<sp/>prevent<sp/>destruction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>)];</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(buffer)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>();</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this)[name];<sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[<ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name))];<sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[<ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name))];<sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref><sp/>MemberBegin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref>(<ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>());<sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref><sp/>MemberEnd()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref>(<ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>()<sp/>+<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>);<sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref><sp/>MemberBegin()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref>(<ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>());<sp/>}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref><sp/>MemberEnd()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref>(<ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>()<sp/>+<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>);<sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>MemberReserve(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>newCapacity,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref><sp/>&amp;allocator)<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a37e400c98968dec21293861983db9b06" kindref="member">DoReserveMembers</ref>(newCapacity,<sp/>allocator);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FindMember(name)<sp/>!=<sp/>MemberEnd();<sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FindMember(name)<sp/>!=<sp/>MemberEnd();<sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FindMember(name)<sp/>!=<sp/>MemberEnd();<sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref><sp/>FindMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>n(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FindMember(n);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref><sp/>FindMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).FindMember(name);<sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref><sp/>FindMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(name.IsString());</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a62e070232ca1bab936de08b8dbf41a5d" kindref="member">DoFindMember</ref>(name);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;<sp/><ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref><sp/>FindMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).FindMember(name);<sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref><sp/>FindMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FindMember(<ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name)));<sp/>}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref><sp/>FindMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FindMember(<ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name)));<sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(name.IsString());</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a741c527ec9552ec0a7dce92f7b22d1c6" kindref="member">DoAddMember</ref>(name,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,<sp/><ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref><sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>v(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/>v,<sp/>allocator);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,<sp/>std::basic_string&lt;Ch&gt;&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>v(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/>v,<sp/>allocator);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,<sp/><ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref><sp/>&gt;),<sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,<sp/><ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref><sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>v(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/>v,<sp/>allocator);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref><sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>n(name);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(n,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref><sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>n(name);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(n,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref><sp/>name,<sp/><ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref><sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>v(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(name,<sp/>v,<sp/>allocator);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,<sp/><ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref><sp/>&gt;),<sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>AddMember(<ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref><sp/>name,<sp/><ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref><sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>n(name);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AddMember(n,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RemoveAllMembers()<sp/>{</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a4e2fbcde9054e87b591f79e6202a80d6" kindref="member">DoClearMembers</ref>();</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RemoveMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>n(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RemoveMember(n);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RemoveMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RemoveMember(<ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name)));<sp/>}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RemoveMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref><sp/>m<sp/>=<sp/>FindMember(name);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>!=<sp/>MemberEnd())<sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveMember(m);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref><sp/>RemoveMember(<ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(m<sp/>&gt;=<sp/>MemberBegin()<sp/>&amp;&amp;<sp/>m<sp/>&lt;<sp/>MemberEnd());</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a6db9c0ed0d2417d00b135195e3546f50" kindref="member">DoRemoveMember</ref>(m);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref><sp/>EraseMember(<ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref><sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EraseMember(pos,<sp/>pos<sp/>+1);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref><sp/>EraseMember(<ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref><sp/>first,<sp/><ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref><sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(first<sp/>&gt;=<sp/>MemberBegin());</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(first<sp/>&lt;=<sp/>last);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(last<sp/>&lt;=<sp/>MemberEnd());</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a786fc0f1116ef209216884b13f814158" kindref="member">DoEraseMembers</ref>(first,<sp/>last);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EraseMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>n(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EraseMember(n);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EraseMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EraseMember(<ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name)));<sp/>}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EraseMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref><sp/>m<sp/>=<sp/>FindMember(name);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>!=<sp/>MemberEnd())<sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EraseMember(m);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aee3606d69d411ce0d98f29639585989b" kindref="member">Object</ref><sp/>GetObject()<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aee3606d69d411ce0d98f29639585989b" kindref="member">Object</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aee3606d69d411ce0d98f29639585989b" kindref="member">Object</ref><sp/>GetObj()<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aee3606d69d411ce0d98f29639585989b" kindref="member">Object</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e" kindref="member">ConstObject</ref><sp/>GetObject()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e" kindref="member">ConstObject</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e" kindref="member">ConstObject</ref><sp/>GetObj()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e" kindref="member">ConstObject</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"></codeline>
<codeline lineno="1621"></codeline>
<codeline lineno="1622"></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetArray()<sp/>{<sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>Size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>Capacity()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5" kindref="member">capacity</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Empty()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref><sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clear()<sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>e<sp/>=<sp/><ref refid="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" kindref="member">GetElementsPointer</ref>();</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>v<sp/>=<sp/>e;<sp/>v<sp/>!=<sp/>e<sp/>+<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref>;<sp/>++v)</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" kindref="member">GetElementsPointer</ref>()[index];</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this)[index];<sp/>}</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" kindref="member">ValueIterator</ref><sp/>Begin()<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" kindref="member">GetElementsPointer</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" kindref="member">ValueIterator</ref><sp/>End()<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" kindref="member">GetElementsPointer</ref>()<sp/>+<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" kindref="member">ConstValueIterator</ref><sp/>Begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).Begin();<sp/>}</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" kindref="member">ConstValueIterator</ref><sp/>End()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).End();<sp/>}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>Reserve(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>newCapacity,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref><sp/>&amp;allocator)<sp/>{</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newCapacity<sp/>&gt;<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5" kindref="member">capacity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a1ccc6e15fa49f0c30eab8e8f7f9418f2" kindref="member">SetElementsPointer</ref>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator.Realloc(<ref refid="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" kindref="member">GetElementsPointer</ref>(),<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5" kindref="member">capacity</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>),<sp/>newCapacity<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>))));</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5" kindref="member">capacity</ref><sp/>=<sp/>newCapacity;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>PushBack(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref><sp/>&gt;=<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5" kindref="member">capacity</ref>)</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reserve(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5" kindref="member">capacity</ref><sp/>==<sp/>0<sp/>?<sp/><ref refid="class_generic_value_1a188f57bdb1923c1fefe74baa995871a3" kindref="member">kDefaultArrayCapacity</ref><sp/>:<sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5" kindref="member">capacity</ref><sp/>+<sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5" kindref="member">capacity</ref><sp/>+<sp/>1)<sp/>/<sp/>2),<sp/>allocator);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" kindref="member">GetElementsPointer</ref>()[<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref>++].<ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">RawAssign</ref>(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>PushBack(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PushBack(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>PushBack(<ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref><sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*this).template<sp/>PushBack&lt;StringRefType&gt;(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,<sp/><ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref><sp/>&gt;),<sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>PushBack(<ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref><sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref><sp/>v(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PushBack(v,<sp/>allocator);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>PopBack()<sp/>{</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(!Empty());</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" kindref="member">GetElementsPointer</ref>()[--<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref>].<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" kindref="member">ValueIterator</ref><sp/>Erase(<ref refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" kindref="member">ConstValueIterator</ref><sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Erase(pos,<sp/>pos<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" kindref="member">ValueIterator</ref><sp/>Erase(<ref refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" kindref="member">ConstValueIterator</ref><sp/>first,<sp/><ref refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" kindref="member">ConstValueIterator</ref><sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" kindref="member">GetElementsPointer</ref>()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(first<sp/>&gt;=<sp/>Begin());</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(first<sp/>&lt;=<sp/>last);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(last<sp/>&lt;=<sp/>End());</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" kindref="member">ValueIterator</ref><sp/>pos<sp/>=<sp/>Begin()<sp/>+<sp/>(first<sp/>-<sp/>Begin());</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" kindref="member">ValueIterator</ref><sp/>itr<sp/>=<sp/>pos;<sp/>itr<sp/>!=<sp/>last;<sp/>++itr)</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memmove(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pos),<sp/>last,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(End()<sp/>-<sp/>last)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>));</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref><sp/>-=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(last<sp/>-<sp/>first);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a149e12992b8f6064c865a4cf55981b89" kindref="member">Array</ref><sp/>GetArray()<sp/>{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a149e12992b8f6064c865a4cf55981b89" kindref="member">Array</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a8f1d2728de56600b5f3df596e2a8a181" kindref="member">ConstArray</ref><sp/>GetArray()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a8f1d2728de56600b5f3df596e2a8a181" kindref="member">ConstArray</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"></codeline>
<codeline lineno="1800"></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetInt()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb" kindref="member">kIntFlag</ref>);<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a0593fffc72a240979606668179e94436" kindref="member">i</ref>.<ref refid="struct_generic_value_1_1_number_1_1_i_1ae0b250dc448d284cf9019f3932bfc380" kindref="member">i</ref>;<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>GetUint()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce" kindref="member">kUintFlag</ref>);<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a3b5f0986718c830b88d641491248131d" kindref="member">u</ref>.<ref refid="struct_generic_value_1_1_number_1_1_u_1a175e3a2bd43e6880791eb7c950d2f147" kindref="member">u</ref>;<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>GetInt64()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref>);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b" kindref="member">i64</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>GetUint64()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94" kindref="member">kUint64Flag</ref>);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430" kindref="member">u64</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetDouble()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsNumber());</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c" kindref="member">kDoubleFlag</ref>)<sp/>!=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a7ca3ad492fff303586d241eb0d17c242" kindref="member">d</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exact<sp/>type,<sp/>no<sp/>conversion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb" kindref="member">kIntFlag</ref>)<sp/>!=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a0593fffc72a240979606668179e94436" kindref="member">i</ref>.<ref refid="struct_generic_value_1_1_number_1_1_i_1ae0b250dc448d284cf9019f3932bfc380" kindref="member">i</ref>;<sp/></highlight><highlight class="comment">//<sp/>int<sp/>-&gt;<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce" kindref="member">kUintFlag</ref>)<sp/>!=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a3b5f0986718c830b88d641491248131d" kindref="member">u</ref>.<ref refid="struct_generic_value_1_1_number_1_1_u_1a175e3a2bd43e6880791eb7c950d2f147" kindref="member">u</ref>;<sp/></highlight><highlight class="comment">//<sp/>unsigned<sp/>-&gt;<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref>)<sp/>!=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b" kindref="member">i64</ref>);<sp/></highlight><highlight class="comment">//<sp/>int64_t<sp/>-&gt;<sp/>double<sp/>(may<sp/>lose<sp/>precision)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>((<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94" kindref="member">kUint64Flag</ref>)<sp/>!=<sp/>0);<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430" kindref="member">u64</ref>);<sp/></highlight><highlight class="comment">//<sp/>uint64_t<sp/>-&gt;<sp/>double<sp/>(may<sp/>lose<sp/>precision)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetFloat()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(GetDouble());</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetInt(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(i);<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetUint(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>u)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(u);<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetInt64(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i64)<sp/><sp/><sp/><sp/><sp/>{<sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(i64);<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetUint64(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>u64)<sp/><sp/><sp/>{<sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(u64);<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetDouble(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(d);<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetFloat(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(f));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"></codeline>
<codeline lineno="1836"></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/><ref refid="schemavalidator_8cpp_1a6d90bf6105415d941d0ee014f2aa79c0" kindref="member">GetString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsString());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a28f6eb49f5d6d5a56d0bea696b89961d" kindref="member">DataString</ref>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>);<sp/>}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>GetStringLength()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsString());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a1373c36e6bdffc6ed79143f47c1024ee" kindref="member">DataStringLength</ref>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>);<sp/>}</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>s,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SetString(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s,<sp/>length));<sp/>}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(<ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref><sp/>s)<sp/>{<sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();<sp/><ref refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" kindref="member">SetStringRaw</ref>(s);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>s,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SetString(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s,<sp/>length),<sp/>allocator);<sp/>}</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>s,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SetString(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s),<sp/>allocator);<sp/>}</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(<ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref><sp/>s,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{<sp/>this-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">~GenericValue</ref>();<sp/><ref refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" kindref="member">SetStringRaw</ref>(s,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>s,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SetString(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s),<sp/>allocator);<sp/>}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"></codeline>
<codeline lineno="1902"></codeline>
<codeline lineno="1903"></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Is()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper" kindref="compound">internal::TypeHelper&lt;ValueType, T&gt;::Is</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref><sp/>Get()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper" kindref="compound">internal::TypeHelper&lt;ValueType, T&gt;::Get</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref><sp/>Get()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper" kindref="compound">internal::TypeHelper&lt;ValueType, T&gt;::Get</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>Set(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref>&amp;<sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper" kindref="compound">internal::TypeHelper&lt;ValueType, T&gt;::Set</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>data);<sp/>}</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>Set(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref>&amp;<sp/>data,<sp/><ref refid="class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1" kindref="member">AllocatorType</ref>&amp;<sp/>allocator)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_type_helper" kindref="compound">internal::TypeHelper&lt;ValueType, T&gt;::Set</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>data,<sp/>allocator);<sp/>}</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Handler&gt;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Accept(<ref refid="classrapidjson_1_1_handler" kindref="compound">Handler</ref>&amp;<sp/>handler)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(GetType())<sp/>{</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7aa09befbfb4f2e1409f237817979d8087" kindref="member">kNullType</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Null();</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a062b8296274a258acf0e142868684c54" kindref="member">kFalseType</ref>:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Bool(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a209434e5edd66630011ca19d710d7cd6" kindref="member">kTrueType</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Bool(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>:</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5" kindref="member">RAPIDJSON_UNLIKELY</ref>(!handler.StartObject()))</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref><sp/>m<sp/>=<sp/>MemberBegin();<sp/>m<sp/>!=<sp/>MemberEnd();<sp/>++m)<sp/>{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(m-&gt;name.IsString());<sp/></highlight><highlight class="comment">//<sp/>User<sp/>may<sp/>change<sp/>the<sp/>type<sp/>of<sp/>name<sp/>by<sp/>MemberIterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5" kindref="member">RAPIDJSON_UNLIKELY</ref>(!handler.Key(m-&gt;name.GetString(),<sp/>m-&gt;name.GetStringLength(),<sp/>(m-&gt;name.data_.f.flags<sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10ef921aef1773bc1f88796bf1828f92" kindref="member">kCopyFlag</ref>)<sp/>!=<sp/>0)))</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5" kindref="member">RAPIDJSON_UNLIKELY</ref>(!m-&gt;value.Accept(handler)))</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.EndObject(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>:</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5" kindref="member">RAPIDJSON_UNLIKELY</ref>(!handler.StartArray()))</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" kindref="member">ConstValueIterator</ref><sp/>v<sp/>=<sp/>Begin();<sp/>v<sp/>!=<sp/>End();<sp/>++v)</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5" kindref="member">RAPIDJSON_UNLIKELY</ref>(!v-&gt;Accept(handler)))</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.EndArray(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref>:</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.String(<ref refid="schemavalidator_8cpp_1a6d90bf6105415d941d0ee014f2aa79c0" kindref="member">GetString</ref>(),<sp/>GetStringLength(),<sp/>(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10ef921aef1773bc1f88796bf1828f92" kindref="member">kCopyFlag</ref>)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(GetType()<sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsDouble())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Double(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a7ca3ad492fff303586d241eb0d17c242" kindref="member">d</ref>);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsInt())<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Int(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a0593fffc72a240979606668179e94436" kindref="member">i</ref>.<ref refid="struct_generic_value_1_1_number_1_1_i_1ae0b250dc448d284cf9019f3932bfc380" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsUint())<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Uint(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a3b5f0986718c830b88d641491248131d" kindref="member">u</ref>.<ref refid="struct_generic_value_1_1_number_1_1_u_1a175e3a2bd43e6880791eb7c950d2f147" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsInt64())<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Int64(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b" kindref="member">i64</ref>);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.Uint64(<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>.<ref refid="union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430" kindref="member">u64</ref>);</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;</highlight></codeline>
<codeline lineno="1974" refid="class_generic_value_1ab05bc9e52e201a2867ea5bac141ee1ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1977" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac48966386b231124da7c3fb870e237ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac48966386b231124da7c3fb870e237ee" kindref="member">kBoolFlag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0008,</highlight></codeline>
<codeline lineno="1978" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0010,</highlight></codeline>
<codeline lineno="1979" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb" kindref="member">kIntFlag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0020,</highlight></codeline>
<codeline lineno="1980" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce" kindref="member">kUintFlag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0040,</highlight></codeline>
<codeline lineno="1981" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0080,</highlight></codeline>
<codeline lineno="1982" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94" kindref="member">kUint64Flag</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0100,</highlight></codeline>
<codeline lineno="1983" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c" kindref="member">kDoubleFlag</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0200,</highlight></codeline>
<codeline lineno="1984" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf3bf3661275a38c86addba900c52dccb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf3bf3661275a38c86addba900c52dccb" kindref="member">kStringFlag</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0400,</highlight></codeline>
<codeline lineno="1985" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10ef921aef1773bc1f88796bf1828f92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10ef921aef1773bc1f88796bf1828f92" kindref="member">kCopyFlag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0800,</highlight></codeline>
<codeline lineno="1986" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae58a76d504c6a67566aebfa4a6bd2e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae58a76d504c6a67566aebfa4a6bd2e55" kindref="member">kInlineStrFlag</ref><sp/><sp/>=<sp/>0x1000,</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>flags<sp/>of<sp/>different<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1989" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d" kindref="member">kNullFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7aa09befbfb4f2e1409f237817979d8087" kindref="member">kNullType</ref>,</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>casts<sp/>are<sp/>added<sp/>to<sp/>suppress<sp/>the<sp/>warning<sp/>on<sp/>MSVC<sp/>about<sp/>bitwise<sp/>operations<sp/>between<sp/>enums<sp/>of<sp/>different<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca75dbcdbacc82f9379c602f0b6c41cf07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca75dbcdbacc82f9379c602f0b6c41cf07" kindref="member">kTrueFlag</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a209434e5edd66630011ca19d710d7cd6" kindref="member">kTrueType</ref>)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac48966386b231124da7c3fb870e237ee" kindref="member">kBoolFlag</ref>),</highlight></codeline>
<codeline lineno="1992" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca66d3877b074bb1a0455a6f6d3f7f91a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca66d3877b074bb1a0455a6f6d3f7f91a3" kindref="member">kFalseFlag</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a062b8296274a258acf0e142868684c54" kindref="member">kFalseType</ref>)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac48966386b231124da7c3fb870e237ee" kindref="member">kBoolFlag</ref>),</highlight></codeline>
<codeline lineno="1993" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cacfe8b720220d0a2e378683367386cbaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cacfe8b720220d0a2e378683367386cbaf" kindref="member">kNumberIntFlag</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb" kindref="member">kIntFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref>),</highlight></codeline>
<codeline lineno="1994" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae8c6c6286edf9c309e77af0ea0cf039c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae8c6c6286edf9c309e77af0ea0cf039c" kindref="member">kNumberUintFlag</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce" kindref="member">kUintFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94" kindref="member">kUint64Flag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref>),</highlight></codeline>
<codeline lineno="1995" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cad117eb41bb8015a76aadf6149bbd8ce5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cad117eb41bb8015a76aadf6149bbd8ce5" kindref="member">kNumberInt64Flag</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref>),</highlight></codeline>
<codeline lineno="1996" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caaa1ee6a546d4db67f4bdef41d1f54f02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caaa1ee6a546d4db67f4bdef41d1f54f02" kindref="member">kNumberUint64Flag</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94" kindref="member">kUint64Flag</ref>),</highlight></codeline>
<codeline lineno="1997" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca29bc91c155577923abd8f19aa050058b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca29bc91c155577923abd8f19aa050058b" kindref="member">kNumberDoubleFlag</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c" kindref="member">kDoubleFlag</ref>),</highlight></codeline>
<codeline lineno="1998" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cab7805b1908fd181afc8d70fe07b17e18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cab7805b1908fd181afc8d70fe07b17e18" kindref="member">kNumberAnyFlag</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79" kindref="member">kNumberFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb" kindref="member">kIntFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a" kindref="member">kInt64Flag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce" kindref="member">kUintFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94" kindref="member">kUint64Flag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c" kindref="member">kDoubleFlag</ref>),</highlight></codeline>
<codeline lineno="1999" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca5d26a84f26833eafd0028c0102a388a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca5d26a84f26833eafd0028c0102a388a9" kindref="member">kConstStringFlag</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref>)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf3bf3661275a38c86addba900c52dccb" kindref="member">kStringFlag</ref>),</highlight></codeline>
<codeline lineno="2000" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10c83f7f191dce81bb0273adc0d838de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10c83f7f191dce81bb0273adc0d838de" kindref="member">kCopyStringFlag</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref>)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf3bf3661275a38c86addba900c52dccb" kindref="member">kStringFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10ef921aef1773bc1f88796bf1828f92" kindref="member">kCopyFlag</ref>),</highlight></codeline>
<codeline lineno="2001" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caca24fa09485fa10b17071509a985ff01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caca24fa09485fa10b17071509a985ff01" kindref="member">kShortStringFlag</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref>)<sp/>|<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf3bf3661275a38c86addba900c52dccb" kindref="member">kStringFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10ef921aef1773bc1f88796bf1828f92" kindref="member">kCopyFlag</ref><sp/>|<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae58a76d504c6a67566aebfa4a6bd2e55" kindref="member">kInlineStrFlag</ref>),</highlight></codeline>
<codeline lineno="2002" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c" kindref="member">kObjectFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>,</highlight></codeline>
<codeline lineno="2003" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47" kindref="member">kArrayFlag</ref><sp/>=<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>,</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca793e0bc40e0abe1ed8bcb3e6fbba65c2" kindref="member">kTypeMask</ref><sp/>=<sp/>0x07</highlight></codeline>
<codeline lineno="2006" refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca793e0bc40e0abe1ed8bcb3e6fbba65c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008" refid="class_generic_value_1a188f57bdb1923c1fefe74baa995871a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="class_generic_value_1a188f57bdb1923c1fefe74baa995871a3" kindref="member">kDefaultArrayCapacity</ref><sp/>=<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga10ba0ee06d0ac2803d0f2290d46b19f7" kindref="member">RAPIDJSON_VALUE_DEFAULT_ARRAY_CAPACITY</ref>;</highlight></codeline>
<codeline lineno="2009" refid="class_generic_value_1a284d018914629aed9a4bd97fe2dc5899" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="class_generic_value_1a284d018914629aed9a4bd97fe2dc5899" kindref="member">kDefaultObjectCapacity</ref><sp/>=<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5c88aa612939b592d15d3fc4bdf54272" kindref="member">RAPIDJSON_VALUE_DEFAULT_OBJECT_CAPACITY</ref>;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011" refid="struct_generic_value_1_1_flag" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_flag" kindref="compound">Flag</ref><sp/>{</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_48BITPOINTER_OPTIMIZATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_flag_1aced7ede2056a797fb80817d45634e3ea" kindref="member">payload</ref>[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>*<sp/>2<sp/>+<sp/>6];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>x<sp/>SizeType<sp/>+<sp/>lower<sp/>48-bit<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>RAPIDJSON_64BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_flag_1aced7ede2056a797fb80817d45634e3ea" kindref="member">payload</ref>[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>*<sp/>2<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>+<sp/>6];<sp/></highlight><highlight class="comment">//<sp/>6<sp/>padding<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017" refid="struct_generic_value_1_1_flag_1aced7ede2056a797fb80817d45634e3ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_flag_1aced7ede2056a797fb80817d45634e3ea" kindref="member">payload</ref>[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>*<sp/>2<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>+<sp/>2];<sp/></highlight><highlight class="comment">//<sp/>2<sp/>padding<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019" refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/><ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022" refid="struct_generic_value_1_1_string" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_string" kindref="compound">String</ref><sp/>{</highlight></codeline>
<codeline lineno="2023" refid="struct_generic_value_1_1_string_1ad6ffab0e093aa8db6e415812ff6443bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_value_1_1_string_1ad6ffab0e093aa8db6e415812ff6443bf" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="2024" refid="struct_generic_value_1_1_string_1a73631052aeb72fbabb6eaab0175f858e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_value_1_1_string_1a73631052aeb72fbabb6eaab0175f858e" kindref="member">hashcode</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="2025" refid="struct_generic_value_1_1_string_1a4eebc5acf3f93ab833efd82abf3ba84d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/><ref refid="struct_generic_value_1_1_string_1a4eebc5acf3f93ab833efd82abf3ba84d" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>12<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>64-bit<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implementation<sp/>detail:<sp/>ShortString<sp/>can<sp/>represent<sp/>zero-terminated<sp/>strings<sp/>up<sp/>to<sp/>MaxSize<sp/>chars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(excluding<sp/>the<sp/>terminating<sp/>zero)<sp/>and<sp/>store<sp/>a<sp/>value<sp/>to<sp/>determine<sp/>the<sp/>length<sp/>of<sp/>the<sp/>contained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>string<sp/>in<sp/>the<sp/>last<sp/>character<sp/>str[LenPos]<sp/>by<sp/>storing<sp/>&quot;MaxSize<sp/>-<sp/>length&quot;<sp/>there.<sp/>If<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>store<sp/>has<sp/>the<sp/>maximal<sp/>length<sp/>of<sp/>MaxSize<sp/>then<sp/>str[LenPos]<sp/>will<sp/>be<sp/>0<sp/>and<sp/>therefore<sp/>act<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>string<sp/>terminator<sp/>as<sp/>well.<sp/>For<sp/>getting<sp/>the<sp/>string<sp/>length<sp/>back<sp/>from<sp/>that<sp/>value<sp/>just<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;MaxSize<sp/>-<sp/>str[LenPos]&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>allows<sp/>to<sp/>store<sp/>13-chars<sp/>strings<sp/>in<sp/>32-bit<sp/>mode,<sp/>21-chars<sp/>strings<sp/>in<sp/>64-bit<sp/>mode,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>13-chars<sp/>strings<sp/>for<sp/>RAPIDJSON_48BITPOINTER_OPTIMIZATION=1<sp/>inline<sp/>(for<sp/>`UTF8`-encoded<sp/>strings).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036" refid="struct_generic_value_1_1_short_string" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_short_string" kindref="compound">ShortString</ref><sp/>{</highlight></codeline>
<codeline lineno="2037" refid="struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360ac4ec681af40f3f6cfe7dcf6500637364" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a6b29cffcea816906d271656a958bc0c7" kindref="member">MaxChars</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_flag" kindref="compound">Flag</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0)-&gt;payload)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>),<sp/><ref refid="struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a991735d2e27155ccabe1c657653044ba" kindref="member">MaxSize</ref><sp/>=<sp/><ref refid="struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a6b29cffcea816906d271656a958bc0c7" kindref="member">MaxChars</ref><sp/>-<sp/>1,<sp/><ref refid="struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360ac4ec681af40f3f6cfe7dcf6500637364" kindref="member">LenPos</ref><sp/>=<sp/><ref refid="struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a991735d2e27155ccabe1c657653044ba" kindref="member">MaxSize</ref><sp/>};</highlight></codeline>
<codeline lineno="2038" refid="struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref><sp/><ref refid="struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b" kindref="member">str</ref>[<ref refid="struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a6b29cffcea816906d271656a958bc0c7" kindref="member">MaxChars</ref>];</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040" refid="struct_generic_value_1_1_short_string_1a73e40f625c1abbd84f95ac7fff8365f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_short_string_1a73e40f625c1abbd84f95ac7fff8365f7" kindref="member">Usable</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a991735d2e27155ccabe1c657653044ba" kindref="member">MaxSize</ref><sp/>&gt;=<sp/>len);<sp/>}</highlight></codeline>
<codeline lineno="2041" refid="struct_generic_value_1_1_short_string_1adbfe8461e0cb0ccb2cb3825489e743c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_short_string_1adbfe8461e0cb0ccb2cb3825489e743c2" kindref="member">SetLength</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len)<sp/>{<sp/><ref refid="struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b" kindref="member">str</ref>[<ref refid="struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360ac4ec681af40f3f6cfe7dcf6500637364" kindref="member">LenPos</ref>]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a991735d2e27155ccabe1c657653044ba" kindref="member">MaxSize</ref><sp/>-<sp/><sp/>len);<sp/>}</highlight></codeline>
<codeline lineno="2042" refid="struct_generic_value_1_1_short_string_1a4aa295331ab0d019fd64f8f5d57d450b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_value_1_1_short_string_1a4aa295331ab0d019fd64f8f5d57d450b" kindref="member">GetLength</ref>()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a991735d2e27155ccabe1c657653044ba" kindref="member">MaxSize</ref><sp/>-<sp/><sp/><ref refid="struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b" kindref="member">str</ref>[<ref refid="struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360ac4ec681af40f3f6cfe7dcf6500637364" kindref="member">LenPos</ref>]);<sp/>}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>most<sp/>as<sp/>many<sp/>bytes<sp/>as<sp/>&quot;String&quot;<sp/>above<sp/>=&gt;<sp/>12<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>64-bit<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>using<sp/>proper<sp/>binary<sp/>layout,<sp/>retrieval<sp/>of<sp/>different<sp/>integer<sp/>types<sp/>do<sp/>not<sp/>need<sp/>conversions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2046" refid="union_generic_value_1_1_number" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_generic_value_1_1_number" kindref="compound">Number</ref><sp/>{</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_ENDIAN<sp/>==<sp/>RAPIDJSON_LITTLEENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048" refid="struct_generic_value_1_1_number_1_1_i" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_number_1_1_i" kindref="compound">I</ref><sp/>{</highlight></codeline>
<codeline lineno="2049" refid="struct_generic_value_1_1_number_1_1_i_1ae0b250dc448d284cf9019f3932bfc380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_number_1_1_i_1ae0b250dc448d284cf9019f3932bfc380" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2050" refid="struct_generic_value_1_1_number_1_1_i_1aefc064997f30c9c0b2bdce187d1d4cce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_number_1_1_i_1aefc064997f30c9c0b2bdce187d1d4cce" kindref="member">padding</ref>[4];</highlight></codeline>
<codeline lineno="2051" refid="union_generic_value_1_1_number_1a0593fffc72a240979606668179e94436" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<ref refid="union_generic_value_1_1_number_1a0593fffc72a240979606668179e94436" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2052" refid="struct_generic_value_1_1_number_1_1_u" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_number_1_1_u" kindref="compound">U</ref><sp/>{</highlight></codeline>
<codeline lineno="2053" refid="struct_generic_value_1_1_number_1_1_u_1a175e3a2bd43e6880791eb7c950d2f147" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_number_1_1_u_1a175e3a2bd43e6880791eb7c950d2f147" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="2054" refid="struct_generic_value_1_1_number_1_1_u_1a9341f65c1645f24fd001a1ebf58d3c5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_number_1_1_u_1a9341f65c1645f24fd001a1ebf58d3c5b" kindref="member">padding2</ref>[4];</highlight></codeline>
<codeline lineno="2055" refid="union_generic_value_1_1_number_1a3b5f0986718c830b88d641491248131d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<ref refid="union_generic_value_1_1_number_1a3b5f0986718c830b88d641491248131d" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">I<sp/>{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_number_1_1_i_1aefc064997f30c9c0b2bdce187d1d4cce" kindref="member">padding</ref>[4];</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_number_1_1_i_1ae0b250dc448d284cf9019f3932bfc380" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<ref refid="union_generic_value_1_1_number_1a0593fffc72a240979606668179e94436" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">U<sp/>{</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_number_1_1_u_1a9341f65c1645f24fd001a1ebf58d3c5b" kindref="member">padding2</ref>[4];</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_generic_value_1_1_number_1_1_u_1a175e3a2bd43e6880791eb7c950d2f147" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<ref refid="union_generic_value_1_1_number_1a3b5f0986718c830b88d641491248131d" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066" refid="union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/><ref refid="union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b" kindref="member">i64</ref>;</highlight></codeline>
<codeline lineno="2067" refid="union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/><ref refid="union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430" kindref="member">u64</ref>;</highlight></codeline>
<codeline lineno="2068" refid="union_generic_value_1_1_number_1a7ca3ad492fff303586d241eb0d17c242" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="union_generic_value_1_1_number_1a7ca3ad492fff303586d241eb0d17c242" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>8<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2071" refid="struct_generic_value_1_1_object_data" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_object_data" kindref="compound">ObjectData</ref><sp/>{</highlight></codeline>
<codeline lineno="2072" refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="2073" refid="struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="2074" refid="struct_generic_value_1_1_object_data_1a108be865f16e4c028f2354b1474a1ec8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member" kindref="compound">Member</ref>*<sp/><ref refid="struct_generic_value_1_1_object_data_1a108be865f16e4c028f2354b1474a1ec8" kindref="member">members</ref>;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>12<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>64-bit<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077" refid="struct_generic_value_1_1_array_data" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_value_1_1_array_data" kindref="compound">ArrayData</ref><sp/>{</highlight></codeline>
<codeline lineno="2078" refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="2079" refid="struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="2080" refid="struct_generic_value_1_1_array_data_1a86df976cb6f65924aca20eb9bd35553e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/><ref refid="struct_generic_value_1_1_array_data_1a86df976cb6f65924aca20eb9bd35553e" kindref="member">elements</ref>;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>12<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>64-bit<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083" refid="union_generic_value_1_1_data" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref><sp/>{</highlight></codeline>
<codeline lineno="2084" refid="union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_string" kindref="compound">String</ref><sp/><ref refid="union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="2085" refid="union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_short_string" kindref="compound">ShortString</ref><sp/><ref refid="union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c" kindref="member">ss</ref>;</highlight></codeline>
<codeline lineno="2086" refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_generic_value_1_1_number" kindref="compound">Number</ref><sp/><ref refid="union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="2087" refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_object_data" kindref="compound">ObjectData</ref><sp/><ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="2088" refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_array_data" kindref="compound">ArrayData</ref><sp/><ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="2089" refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_flag" kindref="compound">Flag</ref><sp/><ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>16<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>24<sp/>bytes<sp/>in<sp/>64-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>64-bit<sp/>with<sp/>RAPIDJSON_48BITPOINTER_OPTIMIZATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight></codeline>
<codeline lineno="2092" refid="class_generic_value_1a28f6eb49f5d6d5a56d0bea696b89961d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>RAPIDJSON_FORCEINLINE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/><ref refid="class_generic_value_1a28f6eb49f5d6d5a56d0bea696b89961d" kindref="member">DataString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref>&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae58a76d504c6a67566aebfa4a6bd2e55" kindref="member">kInlineStrFlag</ref>)<sp/>?<sp/>data.<ref refid="union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c" kindref="member">ss</ref>.<ref refid="struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b" kindref="member">str</ref><sp/>:<sp/><ref refid="rapidjson_8h_1ab67ad54afdd78883907fd1ecd007573a" kindref="member">RAPIDJSON_GETPOINTER</ref>(<ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>,<sp/>data.<ref refid="union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b" kindref="member">s</ref>.<ref refid="struct_generic_value_1_1_string_1a4eebc5acf3f93ab833efd82abf3ba84d" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2095" refid="class_generic_value_1a1373c36e6bdffc6ed79143f47c1024ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>RAPIDJSON_FORCEINLINE<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="class_generic_value_1a1373c36e6bdffc6ed79143f47c1024ee" kindref="member">DataStringLength</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref>&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(data.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae58a76d504c6a67566aebfa4a6bd2e55" kindref="member">kInlineStrFlag</ref>)<sp/>?<sp/>data.<ref refid="union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c" kindref="member">ss</ref>.<ref refid="struct_generic_value_1_1_short_string_1a4aa295331ab0d019fd64f8f5d57d450b" kindref="member">GetLength</ref>()<sp/>:<sp/>data.<ref refid="union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b" kindref="member">s</ref>.<ref refid="struct_generic_value_1_1_string_1ad6ffab0e093aa8db6e415812ff6443bf" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight></codeline>
<codeline lineno="2099" refid="class_generic_value_1af182f2ccbcd962d2a28f92407622e9a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/><ref refid="class_generic_value_1af182f2ccbcd962d2a28f92407622e9a9" kindref="member">GetStringPointer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1ab67ad54afdd78883907fd1ecd007573a" kindref="member">RAPIDJSON_GETPOINTER</ref>(<ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>,<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b" kindref="member">s</ref>.<ref refid="struct_generic_value_1_1_string_1a4eebc5acf3f93ab833efd82abf3ba84d" kindref="member">str</ref>);<sp/>}</highlight></codeline>
<codeline lineno="2100" refid="class_generic_value_1ab3e8833927fb1454585e8692200dbb93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/><ref refid="class_generic_value_1ab3e8833927fb1454585e8692200dbb93" kindref="member">SetStringPointer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>str)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a113598c4750b3aab4de2782ff1865ed4" kindref="member">RAPIDJSON_SETPOINTER</ref>(<ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>,<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b" kindref="member">s</ref>.<ref refid="struct_generic_value_1_1_string_1a4eebc5acf3f93ab833efd82abf3ba84d" kindref="member">str</ref>,<sp/>str);<sp/>}</highlight></codeline>
<codeline lineno="2101" refid="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/><ref refid="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" kindref="member">GetElementsPointer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1ab67ad54afdd78883907fd1ecd007573a" kindref="member">RAPIDJSON_GETPOINTER</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>,<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a86df976cb6f65924aca20eb9bd35553e" kindref="member">elements</ref>);<sp/>}</highlight></codeline>
<codeline lineno="2102" refid="class_generic_value_1a1ccc6e15fa49f0c30eab8e8f7f9418f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/><ref refid="class_generic_value_1a1ccc6e15fa49f0c30eab8e8f7f9418f2" kindref="member">SetElementsPointer</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>elements)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a113598c4750b3aab4de2782ff1865ed4" kindref="member">RAPIDJSON_SETPOINTER</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>,<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a86df976cb6f65924aca20eb9bd35553e" kindref="member">elements</ref>,<sp/>elements);<sp/>}</highlight></codeline>
<codeline lineno="2103" refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/><ref refid="class_generic_member" kindref="compound">Member</ref>*<sp/><ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1ab67ad54afdd78883907fd1ecd007573a" kindref="member">RAPIDJSON_GETPOINTER</ref>(<ref refid="class_generic_member" kindref="compound">Member</ref>,<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a108be865f16e4c028f2354b1474a1ec8" kindref="member">members</ref>);<sp/>}</highlight></codeline>
<codeline lineno="2104" refid="class_generic_value_1a634a87972649943604153708ca9aefb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/><ref refid="class_generic_member" kindref="compound">Member</ref>*<sp/><ref refid="class_generic_value_1a634a87972649943604153708ca9aefb7" kindref="member">SetMembersPointer</ref>(<ref refid="class_generic_member" kindref="compound">Member</ref>*<sp/>members)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a113598c4750b3aab4de2782ff1865ed4" kindref="member">RAPIDJSON_SETPOINTER</ref>(<ref refid="class_generic_member" kindref="compound">Member</ref>,<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a108be865f16e4c028f2354b1474a1ec8" kindref="member">members</ref>,<sp/>members);<sp/>}</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_USE_MEMBERSMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MapTraits<sp/>{</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Less<sp/>{</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Data&amp;<sp/>s1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Data&amp;<sp/>s2)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>n1<sp/>=<sp/><ref refid="class_generic_value_1a1373c36e6bdffc6ed79143f47c1024ee" kindref="member">DataStringLength</ref>(s1),<sp/>n2<sp/>=<sp/><ref refid="class_generic_value_1a1373c36e6bdffc6ed79143f47c1024ee" kindref="member">DataStringLength</ref>(s2);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/>std::memcmp(<ref refid="class_generic_value_1a28f6eb49f5d6d5a56d0bea696b89961d" kindref="member">DataString</ref>(s1),<sp/><ref refid="class_generic_value_1a28f6eb49f5d6d5a56d0bea696b89961d" kindref="member">DataString</ref>(s2),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>)<sp/>*<sp/>(n1<sp/>&lt;<sp/>n2<sp/>?<sp/>n1<sp/>:<sp/>n2));</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cmp<sp/>&lt;<sp/>0<sp/>||<sp/>(cmp<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>n1<sp/>&lt;<sp/>n2);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;const<sp/>Data,<sp/>SizeType&gt;<sp/>Pair;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::multimap&lt;Data,<sp/>SizeType,<sp/>Less,<sp/>StdAllocator&lt;Pair,<sp/>Allocator&gt;<sp/>&gt;<sp/><ref refid="class_map" kindref="compound">Map</ref>;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Map::iterator<sp/>Iterator;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MapTraits::Map<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_map" kindref="compound">Map</ref>;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MapTraits::Less<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapLess;</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MapTraits::Pair<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapPair;</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MapTraits::Iterator<sp/><sp/><sp/><sp/>MapIterator;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Layout<sp/>of<sp/>the<sp/>members&apos;<sp/>map/array,<sp/>re(al)located<sp/>according<sp/>to<sp/>the<sp/>needed<sp/>capacity:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{Map*}&lt;&gt;{capacity}&lt;&gt;{Member[capacity]}&lt;&gt;{MapIterator[capacity]}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(where<sp/>&lt;&gt;<sp/>stands<sp/>for<sp/>the<sp/>RAPIDJSON_ALIGN-ment,<sp/>if<sp/>needed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>RAPIDJSON_FORCEINLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>GetMapLayoutSize(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>capacity)<sp/>{</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242" kindref="member">RAPIDJSON_ALIGN</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_map" kindref="compound">Map</ref>*))<sp/>+</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242" kindref="member">RAPIDJSON_ALIGN</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>))<sp/>+</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242" kindref="member">RAPIDJSON_ALIGN</ref>(capacity<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>))<sp/>+</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capacity<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MapIterator);</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>RAPIDJSON_FORCEINLINE<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>&amp;GetMapCapacity(<ref refid="class_map" kindref="compound">Map</ref>*<sp/>&amp;map)<sp/>{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a31b85deecb45924320becd11d3ee16ce" kindref="member">uintptr_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;map)<sp/>+</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242" kindref="member">RAPIDJSON_ALIGN</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_map" kindref="compound">Map</ref>*)));</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>RAPIDJSON_FORCEINLINE<sp/><ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>*<sp/>GetMapMembers(<ref refid="class_map" kindref="compound">Map</ref>*<sp/>&amp;map)<sp/>{</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a31b85deecb45924320becd11d3ee16ce" kindref="member">uintptr_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;map)<sp/>+</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242" kindref="member">RAPIDJSON_ALIGN</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_map" kindref="compound">Map</ref>*))<sp/>+</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242" kindref="member">RAPIDJSON_ALIGN</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)));</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>RAPIDJSON_FORCEINLINE<sp/>MapIterator*<sp/>GetMapIterators(<ref refid="class_map" kindref="compound">Map</ref>*<sp/>&amp;map)<sp/>{</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">MapIterator*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a31b85deecb45924320becd11d3ee16ce" kindref="member">uintptr_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;map)<sp/>+</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242" kindref="member">RAPIDJSON_ALIGN</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_map" kindref="compound">Map</ref>*))<sp/>+</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242" kindref="member">RAPIDJSON_ALIGN</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>))<sp/>+</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242" kindref="member">RAPIDJSON_ALIGN</ref>(GetMapCapacity(map)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>)));</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>RAPIDJSON_FORCEINLINE<sp/><ref refid="class_map" kindref="compound">Map</ref>*<sp/>&amp;GetMap(<ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>*<sp/>members)<sp/>{</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(members<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="class_map" kindref="compound">Map</ref>**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a31b85deecb45924320becd11d3ee16ce" kindref="member">uintptr_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(members)<sp/>-</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242" kindref="member">RAPIDJSON_ALIGN</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>))<sp/>-</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242" kindref="member">RAPIDJSON_ALIGN</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_map" kindref="compound">Map</ref>*)));</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>compilers&apos;<sp/>debug<sp/>mechanisms<sp/>want<sp/>all<sp/>iterators<sp/>to<sp/>be<sp/>destroyed,<sp/>for<sp/>their<sp/>accounting..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/>MapIterator<sp/>DropMapIterator(MapIterator&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapIterator<sp/>ret<sp/>=<sp/>std::move(rhs);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapIterator<sp/>ret<sp/>=<sp/>rhs;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.~MapIterator();</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_map" kindref="compound">Map</ref>*<sp/>&amp;DoReallocMap(<ref refid="class_map" kindref="compound">Map</ref>**<sp/>oldMap,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>newCapacity,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_map" kindref="compound">Map</ref><sp/>**newMap<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_map" kindref="compound">Map</ref>**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator.Malloc(GetMapLayoutSize(newCapacity)));</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetMapCapacity(*newMap)<sp/>=<sp/>newCapacity;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!oldMap)<sp/>{</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*newMap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(allocator.Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_map" kindref="compound">Map</ref>)))<sp/><ref refid="class_map" kindref="compound">Map</ref>(MapLess(),<sp/>allocator);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*newMap<sp/>=<sp/>*oldMap;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>(*oldMap)-&gt;size();</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(GetMapMembers(*newMap)),</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(GetMapMembers(*oldMap)),</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>));</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapIterator<sp/>*oldIt<sp/>=<sp/>GetMapIterators(*oldMap),</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*newIt<sp/>=<sp/>GetMapIterators(*newMap);</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count--)<sp/>{</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;newIt[count])<sp/>MapIterator(DropMapIterator(oldIt[count]));</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">Allocator::Free</ref>(oldMap);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*newMap;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/><ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>*<sp/><ref refid="class_generic_value_1ae0d58cf0ac7a4d1aca47f8a18ba8cdfd" kindref="member">DoAllocMembers</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>capacity,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMapMembers(DoReallocMap(0,<sp/>capacity,<sp/>allocator));</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a37e400c98968dec21293861983db9b06" kindref="member">DoReserveMembers</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>newCapacity,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjectData&amp;<sp/>o<sp/>=<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newCapacity<sp/>&gt;<sp/>o.capacity)<sp/>{</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>*<sp/>oldMembers<sp/>=<sp/><ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>();</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_map" kindref="compound">Map</ref><sp/>**oldMap<sp/>=<sp/>oldMembers<sp/>?<sp/>&amp;GetMap(oldMembers)<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*&amp;newMap<sp/>=<sp/>DoReallocMap(oldMap,<sp/>newCapacity,<sp/>allocator);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a113598c4750b3aab4de2782ff1865ed4" kindref="member">RAPIDJSON_SETPOINTER</ref>(<ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>,<sp/>o.members,<sp/>GetMapMembers(newMap));</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.capacity<sp/>=<sp/>newCapacity;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref><sp/><ref refid="class_generic_value_1a62e070232ca1bab936de08b8dbf41a5d" kindref="member">DoFindMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>*<sp/>members<sp/>=<sp/><ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_map" kindref="compound">Map</ref>*<sp/>&amp;map<sp/>=<sp/>GetMap(members);</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapIterator<sp/>mit<sp/>=<sp/>map-&gt;find(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">Data&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(name.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>));</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mit<sp/>!=<sp/>map-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref>(&amp;members[mit-&gt;second]);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MemberEnd();</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a4e2fbcde9054e87b591f79e6202a80d6" kindref="member">DoClearMembers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>*<sp/>members<sp/>=<sp/><ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_map" kindref="compound">Map</ref>*<sp/>&amp;map<sp/>=<sp/>GetMap(members);</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapIterator*<sp/>mit<sp/>=<sp/>GetMapIterators(map);</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map-&gt;erase(DropMapIterator(mit[i]));</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>members[i].~Member();</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aab3a51f8207a44ad87a1f8b0bbf53fe9" kindref="member">DoFreeMembers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>*<sp/>members<sp/>=<sp/><ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetMap(members)-&gt;~Map();</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>members[i].~Member();</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Allocator::kNeedFree)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Shortcut<sp/>by<sp/>Allocator&apos;s<sp/>trait</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_map" kindref="compound">Map</ref>**<sp/>map<sp/>=<sp/>&amp;GetMap(members);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">Allocator::Free</ref>(*map);</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">Allocator::Free</ref>(map);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">//<sp/>!RAPIDJSON_USE_MEMBERSMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253" refid="class_generic_value_1ae0d58cf0ac7a4d1aca47f8a18ba8cdfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/><ref refid="class_generic_member" kindref="compound">Member</ref>*<sp/><ref refid="class_generic_value_1ae0d58cf0ac7a4d1aca47f8a18ba8cdfd" kindref="member">DoAllocMembers</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>capacity,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Malloc&lt;Member&gt;(allocator,<sp/>capacity);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257" refid="class_generic_value_1a37e400c98968dec21293861983db9b06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a37e400c98968dec21293861983db9b06" kindref="member">DoReserveMembers</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>newCapacity,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_object_data" kindref="compound">ObjectData</ref>&amp;<sp/>o<sp/>=<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newCapacity<sp/>&gt;<sp/>o.<ref refid="struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b" kindref="member">capacity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member" kindref="compound">Member</ref>*<sp/>newMembers<sp/>=<sp/>Realloc&lt;Member&gt;(allocator,<sp/><ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>(),<sp/>o.<ref refid="struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b" kindref="member">capacity</ref>,<sp/>newCapacity);</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a113598c4750b3aab4de2782ff1865ed4" kindref="member">RAPIDJSON_SETPOINTER</ref>(<ref refid="class_generic_member" kindref="compound">Member</ref>,<sp/>o.<ref refid="struct_generic_value_1_1_object_data_1a108be865f16e4c028f2354b1474a1ec8" kindref="member">members</ref>,<sp/>newMembers);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.<ref refid="struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b" kindref="member">capacity</ref><sp/>=<sp/>newCapacity;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="2267" refid="class_generic_value_1a62e070232ca1bab936de08b8dbf41a5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/><ref refid="class_generic_value_1a62e070232ca1bab936de08b8dbf41a5d" kindref="member">DoFindMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/>member<sp/>=<sp/>MemberBegin();</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>member<sp/>!=<sp/>MemberEnd();<sp/>++member)</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.<ref refid="class_generic_value_1ad4d088dc601d99fea9d16300a7ec7ee1" kindref="member">StringEqual</ref>(member-&gt;name))</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>member;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight></codeline>
<codeline lineno="2275" refid="class_generic_value_1a4e2fbcde9054e87b591f79e6202a80d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a4e2fbcde9054e87b591f79e6202a80d6" kindref="member">DoClearMembers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/>m<sp/>=<sp/>MemberBegin();<sp/>m<sp/>!=<sp/>MemberEnd();<sp/>++m)</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;~Member();</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281" refid="class_generic_value_1aab3a51f8207a44ad87a1f8b0bbf53fe9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1aab3a51f8207a44ad87a1f8b0bbf53fe9" kindref="member">DoFreeMembers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/>m<sp/>=<sp/>MemberBegin();<sp/>m<sp/>!=<sp/>MemberEnd();<sp/>++m)</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;~Member();</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">Allocator::Free</ref>(<ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>());</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!RAPIDJSON_USE_MEMBERSMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight></codeline>
<codeline lineno="2289" refid="class_generic_value_1a741c527ec9552ec0a7dce92f7b22d1c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a741c527ec9552ec0a7dce92f7b22d1c6" kindref="member">DoAddMember</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_object_data" kindref="compound">ObjectData</ref>&amp;<sp/>o<sp/>=<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref><sp/>&gt;=<sp/>o.<ref refid="struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b" kindref="member">capacity</ref>)</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a37e400c98968dec21293861983db9b06" kindref="member">DoReserveMembers</ref>(o.<ref refid="struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b" kindref="member">capacity</ref><sp/>?<sp/>(o.<ref refid="struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b" kindref="member">capacity</ref><sp/>+<sp/>(o.<ref refid="struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b" kindref="member">capacity</ref><sp/>+<sp/>1)<sp/>/<sp/>2)<sp/>:<sp/><ref refid="class_generic_value_1a284d018914629aed9a4bd97fe2dc5899" kindref="member">kDefaultObjectCapacity</ref>,<sp/>allocator);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member" kindref="compound">Member</ref>*<sp/>members<sp/>=<sp/><ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>();</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member" kindref="compound">Member</ref>*<sp/>m<sp/>=<sp/>members<sp/>+<sp/>o.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="class_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>.RawAssign(name);</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="class_generic_member_1aad3cfa4f9e8b9018068c8bc865723083" kindref="member">value</ref>.RawAssign(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_USE_MEMBERSMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_map" kindref="compound">Map</ref>*<sp/>&amp;map<sp/>=<sp/>GetMap(members);</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapIterator*<sp/>mit<sp/>=<sp/>GetMapIterators(map);</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;mit[o.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>])<sp/>MapIterator(map-&gt;insert(MapPair(m-&gt;<ref refid="class_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>.data_,<sp/>o.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>)));</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++o.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight></codeline>
<codeline lineno="2305" refid="class_generic_value_1a6db9c0ed0d2417d00b135195e3546f50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/><ref refid="class_generic_value_1a6db9c0ed0d2417d00b135195e3546f50" kindref="member">DoRemoveMember</ref>(<ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_object_data" kindref="compound">ObjectData</ref>&amp;<sp/>o<sp/>=<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member" kindref="compound">Member</ref>*<sp/>members<sp/>=<sp/><ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>();</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_USE_MEMBERSMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_map" kindref="compound">Map</ref>*<sp/>&amp;map<sp/>=<sp/>GetMap(members);</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapIterator*<sp/>mit<sp/>=<sp/>GetMapIterators(map);</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>mpos<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;*m<sp/>-<sp/>members);</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map-&gt;erase(DropMapIterator(mit[mpos]));</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/>last(members<sp/>+<sp/>(o.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref><sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref><sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>m<sp/>!=<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_USE_MEMBERSMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;mit[mpos])<sp/>MapIterator(DropMapIterator(mit[&amp;*last<sp/>-<sp/>members]));</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mit[mpos]-&gt;second<sp/>=<sp/>mpos;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*m<sp/>=<sp/>*last;<sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>last<sp/>one<sp/>to<sp/>this<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;~Member();<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>one<sp/>left,<sp/>just<sp/>destroy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--o.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight></codeline>
<codeline lineno="2329" refid="class_generic_value_1a786fc0f1116ef209216884b13f814158" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/><ref refid="class_generic_value_1a786fc0f1116ef209216884b13f814158" kindref="member">DoEraseMembers</ref>(<ref refid="class_generic_member_iterator" kindref="compound">ConstMemberIterator</ref><sp/>first,<sp/><ref refid="class_generic_member_iterator" kindref="compound">ConstMemberIterator</ref><sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_value_1_1_object_data" kindref="compound">ObjectData</ref>&amp;<sp/>o<sp/>=<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/>beg<sp/>=<sp/>MemberBegin(),</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>beg<sp/>+<sp/>(first<sp/>-<sp/>beg),</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>MemberEnd();</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_USE_MEMBERSMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_map" kindref="compound">Map</ref>*<sp/>&amp;map<sp/>=<sp/>GetMap(<ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>());</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapIterator*<sp/>mit<sp/>=<sp/>GetMapIterators(map);</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/>itr<sp/>=<sp/>pos;<sp/>itr<sp/>!=<sp/>last;<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_USE_MEMBERSMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map-&gt;erase(DropMapIterator(mit[itr<sp/>-<sp/>beg]));</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr-&gt;~Member();</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_USE_MEMBERSMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>!=<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>remaining<sp/>members/iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/>next<sp/>=<sp/>pos<sp/>+<sp/>(last<sp/>-<sp/>first);</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/>itr<sp/>=<sp/>pos;<sp/>next<sp/>!=<sp/>end;<sp/>++itr,<sp/>++next)<sp/>{</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;*itr),<sp/>&amp;*next,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_member" kindref="compound">Member</ref>));</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>mpos<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(itr<sp/>-<sp/>beg);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;mit[mpos])<sp/>MapIterator(DropMapIterator(mit[next<sp/>-<sp/>beg]));</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mit[mpos]-&gt;second<sp/>=<sp/>mpos;</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memmove(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;*pos),<sp/>&amp;*last,</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(end<sp/>-<sp/>last)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_member" kindref="compound">Member</ref>));</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref><sp/>-=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(last<sp/>-<sp/>first);</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="2364" refid="class_generic_value_1a17e90627a90a4e97e8425e0ca4a22cbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a17e90627a90a4e97e8425e0ca4a22cbb" kindref="member">DoCopyMembers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,SourceAllocator&gt;</ref>&amp;<sp/>rhs,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copyConstStrings)<sp/>{</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(rhs.GetType()<sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>);</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c" kindref="member">kObjectFlag</ref>;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count<sp/>=<sp/>rhs.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member" kindref="compound">Member</ref>*<sp/>lm<sp/>=<sp/><ref refid="class_generic_value_1ae0d58cf0ac7a4d1aca47f8a18ba8cdfd" kindref="member">DoAllocMembers</ref>(count,<sp/>allocator);</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_member" kindref="compound">GenericValue&lt;Encoding,SourceAllocator&gt;::Member</ref>*<sp/>rm<sp/>=<sp/>rhs.<ref refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" kindref="member">GetMembersPointer</ref>();</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_USE_MEMBERSMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_map" kindref="compound">Map</ref>*<sp/>&amp;map<sp/>=<sp/>GetMap(lm);</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapIterator*<sp/>mit<sp/>=<sp/>GetMapIterators(map);</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;lm[i].<ref refid="class_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(rm[i].name,<sp/>allocator,<sp/>copyConstStrings);</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;lm[i].<ref refid="class_generic_member_1aad3cfa4f9e8b9018068c8bc865723083" kindref="member">value</ref>)<sp/><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">GenericValue</ref>(rm[i].<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator,<sp/>copyConstStrings);</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_USE_MEMBERSMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;mit[i])<sp/>MapIterator(map-&gt;insert(MapPair(lm[i].name.data_,<sp/>i)));</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref><sp/>=<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b" kindref="member">capacity</ref><sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a634a87972649943604153708ca9aefb7" kindref="member">SetMembersPointer</ref>(lm);</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>this<sp/>value<sp/>as<sp/>array<sp/>with<sp/>initial<sp/>data,<sp/>without<sp/>calling<sp/>destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2387" refid="class_generic_value_1a8f5f309065479de40a16cf28a340da65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a8f5f309065479de40a16cf28a340da65" kindref="member">SetArrayRaw</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>values,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47" kindref="member">kArrayFlag</ref>;</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count)<sp/>{</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>e<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator.Malloc(count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>)));</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a1ccc6e15fa49f0c30eab8e8f7f9418f2" kindref="member">SetElementsPointer</ref>(e);</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e),<sp/>values,<sp/>count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>));</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a1ccc6e15fa49f0c30eab8e8f7f9418f2" kindref="member">SetElementsPointer</ref>(0);</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2" kindref="member">size</ref><sp/>=<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48" kindref="member">a</ref>.<ref refid="struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5" kindref="member">capacity</ref><sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400" refid="class_generic_value_1a26c8ec7d68858df1038506df7fcff22d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a26c8ec7d68858df1038506df7fcff22d" kindref="member">SetObjectRaw</ref>(<ref refid="class_generic_member" kindref="compound">Member</ref>*<sp/>members,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c" kindref="member">kObjectFlag</ref>;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count)<sp/>{</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member" kindref="compound">Member</ref>*<sp/>m<sp/>=<sp/><ref refid="class_generic_value_1ae0d58cf0ac7a4d1aca47f8a18ba8cdfd" kindref="member">DoAllocMembers</ref>(count,<sp/>allocator);</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a634a87972649943604153708ca9aefb7" kindref="member">SetMembersPointer</ref>(m);</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m),<sp/>members,<sp/>count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_member" kindref="compound">Member</ref>));</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_USE_MEMBERSMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_map" kindref="compound">Map</ref>*<sp/>&amp;map<sp/>=<sp/>GetMap(m);</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapIterator*<sp/>mit<sp/>=<sp/>GetMapIterators(map);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;mit[i])<sp/>MapIterator(map-&gt;insert(MapPair(m[i].name.<ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>,<sp/>i)));</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1a634a87972649943604153708ca9aefb7" kindref="member">SetMembersPointer</ref>(0);</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5" kindref="member">size</ref><sp/>=<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11" kindref="member">o</ref>.<ref refid="struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b" kindref="member">capacity</ref><sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420" refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" kindref="member">SetStringRaw</ref>(<ref refid="struct_generic_string_ref" kindref="compound">StringRefType</ref><sp/>s)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca5d26a84f26833eafd0028c0102a388a9" kindref="member">kConstStringFlag</ref>;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ab3e8833927fb1454585e8692200dbb93" kindref="member">SetStringPointer</ref>(s);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b" kindref="member">s</ref>.<ref refid="struct_generic_value_1_1_string_1ad6ffab0e093aa8db6e415812ff6443bf" kindref="member">length</ref><sp/>=<sp/>s.length;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight></codeline>
<codeline lineno="2427" refid="class_generic_value_1ad3d91db36dfdbfc1af40a79aae07723c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ad3d91db36dfdbfc1af40a79aae07723c" kindref="member">SetStringRaw</ref>(<ref refid="struct_generic_string_ref" kindref="compound">StringRefType</ref><sp/>s,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/>allocator)<sp/>{</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/>str<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_generic_value_1_1_short_string_1a73e40f625c1abbd84f95ac7fff8365f7" kindref="member">ShortString::Usable</ref>(s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caca24fa09485fa10b17071509a985ff01" kindref="member">kShortStringFlag</ref>;</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c" kindref="member">ss</ref>.<ref refid="struct_generic_value_1_1_short_string_1adbfe8461e0cb0ccb2cb3825489e743c2" kindref="member">SetLength</ref>(s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c" kindref="member">ss</ref>.<ref refid="struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10c83f7f191dce81bb0273adc0d838de" kindref="member">kCopyStringFlag</ref>;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>.<ref refid="union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b" kindref="member">s</ref>.<ref refid="struct_generic_value_1_1_string_1ad6ffab0e093aa8db6e415812ff6443bf" kindref="member">length</ref><sp/>=<sp/>s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator.Malloc((s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref><sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>)));</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ab3e8833927fb1454585e8692200dbb93" kindref="member">SetStringPointer</ref>(str);</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(str,<sp/>s,<sp/>s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>));</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str[s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight></codeline>
<codeline lineno="2444" refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">RawAssign</ref>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref><sp/>=<sp/>rhs.data_;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data_.f.flags<sp/>=<sp/>rhs.data_.f.flags;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.data_.<ref refid="union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab" kindref="member">f</ref>.<ref refid="struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d" kindref="member">flags</ref><sp/>=<sp/><ref refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d" kindref="member">kNullFlag</ref>;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;</highlight></codeline>
<codeline lineno="2451" refid="class_generic_value_1ad4d088dc601d99fea9d16300a7ec7ee1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ad4d088dc601d99fea9d16300a7ec7ee1" kindref="member">StringEqual</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, SourceAllocator&gt;</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(IsString());</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(rhs.IsString());</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len1<sp/>=<sp/>GetStringLength();</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len2<sp/>=<sp/>rhs.GetStringLength();</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(len1<sp/>!=<sp/>len2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str1<sp/>=<sp/><ref refid="schemavalidator_8cpp_1a6d90bf6105415d941d0ee014f2aa79c0" kindref="member">GetString</ref>();</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str2<sp/>=<sp/>rhs.GetString();</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(str1<sp/>==<sp/>str2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>fast<sp/>path<sp/>for<sp/>constant<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(std::memcmp(str1,<sp/>str2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>)<sp/>*<sp/>len1)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight></codeline>
<codeline lineno="2466" refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref><sp/><ref refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="2467"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470" refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;UTF8&lt;&gt;</ref><sp/>&gt;<sp/><ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">Value</ref>;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="comment">//<sp/>GenericDocument<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/>RAPIDJSON_DEFAULT_ALLOCATOR,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StackAllocator<sp/>=<sp/>RAPIDJSON_DEFAULT_STACK_ALLOCATOR<sp/>&gt;</highlight></codeline>
<codeline lineno="2484" refid="class_generic_document" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_document" kindref="compound">GenericDocument</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt;Encoding,<sp/>Allocator&gt;<sp/>{</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2486" refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch<sp/><ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2487" refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, Allocator&gt;</ref><sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2488" refid="class_generic_document_1a35155b912da66ced38d22e2551364c57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref><sp/><ref refid="class_generic_document_1a35155b912da66ced38d22e2551364c57" kindref="member">AllocatorType</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight></codeline>
<codeline lineno="2497" refid="class_generic_document_1a3da21e72ec8f26b9da77d86cc1d41cdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a3da21e72ec8f26b9da77d86cc1d41cdd" kindref="member">GenericDocument</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref><sp/>type,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>*<sp/>allocator<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stackCapacity<sp/>=<sp/><ref refid="class_generic_document_1a90d452abe8940d8a9c9634d1c49d8f49" kindref="member">kDefaultStackCapacity</ref>,<sp/>StackAllocator*<sp/>stackAllocator<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt;<ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&gt;(type),<sp/><sp/><ref refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" kindref="member">allocator_</ref>(allocator),<sp/><ref refid="class_generic_document_1ada153f6865201106b3a753861c870266" kindref="member">ownAllocator_</ref>(0),<sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>(stackAllocator,<sp/>stackCapacity),<sp/><ref refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" kindref="member">parseResult_</ref>()</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" kindref="member">allocator_</ref>)</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ada153f6865201106b3a753861c870266" kindref="member">ownAllocator_</ref><sp/>=<sp/><ref refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" kindref="member">allocator_</ref><sp/>=<sp/><ref refid="rapidjson_8h_1abdc7cd7902748ffe6626d71c59a73c3b" kindref="member">RAPIDJSON_NEW</ref>(<ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>)();</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight></codeline>
<codeline lineno="2510" refid="class_generic_document_1a6b1c313ad538cafc4d23d4bd5f97178c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1a6b1c313ad538cafc4d23d4bd5f97178c" kindref="member">GenericDocument</ref>(<ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>*<sp/>allocator<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stackCapacity<sp/>=<sp/><ref refid="class_generic_document_1a90d452abe8940d8a9c9634d1c49d8f49" kindref="member">kDefaultStackCapacity</ref>,<sp/>StackAllocator*<sp/>stackAllocator<sp/>=<sp/>0)<sp/>:<sp/></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" kindref="member">allocator_</ref>(allocator),<sp/><ref refid="class_generic_document_1ada153f6865201106b3a753861c870266" kindref="member">ownAllocator_</ref>(0),<sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>(stackAllocator,<sp/>stackCapacity),<sp/><ref refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" kindref="member">parseResult_</ref>()</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" kindref="member">allocator_</ref>)</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ada153f6865201106b3a753861c870266" kindref="member">ownAllocator_</ref><sp/>=<sp/><ref refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" kindref="member">allocator_</ref><sp/>=<sp/><ref refid="rapidjson_8h_1abdc7cd7902748ffe6626d71c59a73c3b" kindref="member">RAPIDJSON_NEW</ref>(<ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>)();</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ab05bc9e52e201a2867ea5bac141ee1ae" kindref="member">GenericDocument</ref>(<ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>(std::forward&lt;ValueType&gt;(rhs)),<sp/></highlight><highlight class="comment">//<sp/>explicit<sp/>cast<sp/>to<sp/>avoid<sp/>prohibited<sp/>move<sp/>from<sp/>Document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" kindref="member">allocator_</ref>(rhs.allocator_),</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ada153f6865201106b3a753861c870266" kindref="member">ownAllocator_</ref>(rhs.ownAllocator_),</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>(std::move(rhs.stack_)),</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" kindref="member">parseResult_</ref>(rhs.parseResult_)</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.allocator_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.ownAllocator_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.parseResult_<sp/>=<sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref>();</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight></codeline>
<codeline lineno="2532" refid="class_generic_document_1aa9f980909298a4de32f66526484820bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1aa9f980909298a4de32f66526484820bf" kindref="member">~GenericDocument</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>::ValueType<sp/>before<sp/>ownAllocator<sp/>is<sp/>destroyed,<sp/>~ValueType()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>runs<sp/>last<sp/>and<sp/>may<sp/>access<sp/>its<sp/>elements<sp/>or<sp/>members<sp/>which<sp/>would<sp/>be<sp/>freed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>an<sp/>allocator<sp/>like<sp/>MemoryPoolAllocator<sp/>(CrtAllocator<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>its<sp/>data<sp/>when<sp/>destroyed,<sp/>but<sp/>MemoryPoolAllocator<sp/>does).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ada153f6865201106b3a753861c870266" kindref="member">ownAllocator_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType::SetNull();</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ad72f36087f5129ad4b5321cf8418c923" kindref="member">Destroy</ref>();</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a78dfa0732175b3d721d97fdcf8ad66a6" kindref="member">operator=</ref>(<ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>cast<sp/>to<sp/>ValueType<sp/>is<sp/>necessary<sp/>here,<sp/>because<sp/>otherwise<sp/>it<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attempt<sp/>to<sp/>call<sp/>GenericValue&apos;s<sp/>templated<sp/>assignment<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90" kindref="member">ValueType::operator=</ref>(std::forward&lt;ValueType&gt;(rhs));</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calling<sp/>the<sp/>destructor<sp/>here<sp/>would<sp/>prematurely<sp/>call<sp/>stack_&apos;s<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ad72f36087f5129ad4b5321cf8418c923" kindref="member">Destroy</ref>();</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" kindref="member">allocator_</ref><sp/>=<sp/>rhs.allocator_;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ada153f6865201106b3a753861c870266" kindref="member">ownAllocator_</ref><sp/>=<sp/>rhs.ownAllocator_;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref><sp/>=<sp/>std::move(rhs.stack_);</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" kindref="member">parseResult_</ref><sp/>=<sp/>rhs.parseResult_;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.allocator_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.ownAllocator_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.parseResult_<sp/>=<sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref>();</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight></codeline>
<codeline lineno="2573" refid="class_generic_document_1a1c3ab2d23fcced40fced7409b9d4a1d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a1c3ab2d23fcced40fced7409b9d4a1d2" kindref="member">Swap</ref>(<ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a72b2c71d36273b9691487f58c671ce04" kindref="member">ValueType::Swap</ref>(rhs);</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.<ref refid="classinternal_1_1_stack_1a5e601199a21d84b1ac612f558be0f2c3" kindref="member">Swap</ref>(rhs.stack_);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a72b2c71d36273b9691487f58c671ce04" kindref="member">internal::Swap</ref>(<ref refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" kindref="member">allocator_</ref>,<sp/>rhs.allocator_);</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a72b2c71d36273b9691487f58c671ce04" kindref="member">internal::Swap</ref>(<ref refid="class_generic_document_1ada153f6865201106b3a753861c870266" kindref="member">ownAllocator_</ref>,<sp/>rhs.ownAllocator_);</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a72b2c71d36273b9691487f58c671ce04" kindref="member">internal::Swap</ref>(<ref refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" kindref="member">parseResult_</ref>,<sp/>rhs.parseResult_);</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>Swap<sp/>with<sp/>ValueType.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Refer<sp/>to<sp/>Effective<sp/>C++<sp/>3rd<sp/>Edition/Item<sp/>33:<sp/>Avoid<sp/>hiding<sp/>inherited<sp/>names.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceinternal_1a72b2c71d36273b9691487f58c671ce04" kindref="member">ValueType::Swap</ref>;</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598" refid="class_generic_document_1a0d63efcc43758ac3aed77e868233369d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a0d63efcc43758ac3aed77e868233369d" kindref="member">swap</ref>(<ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>b)<sp/>RAPIDJSON_NOEXCEPT<sp/>{<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.Swap(b);<sp/>}</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Generator&gt;</highlight></codeline>
<codeline lineno="2606" refid="class_generic_document_1ac30b4e8887974060b695be20c3ceb02c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1ac30b4e8887974060b695be20c3ceb02c" kindref="member">Populate</ref>(Generator&amp;<sp/>g)<sp/>{</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit" kindref="compound">ClearStackOnExit</ref><sp/>scope(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.<ref refid="classinternal_1_1_stack_1ac484468a2791bd3e9ba609bd1600ab48" kindref="member">GetSize</ref>()<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value" kindref="compound">ValueType</ref>));<sp/></highlight><highlight class="comment">//<sp/>Got<sp/>one<sp/>and<sp/>only<sp/>one<sp/>root<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90" kindref="member">ValueType::operator=</ref>(*<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Pop&lt;ValueType&gt;(1));</highlight><highlight class="comment">//<sp/>Move<sp/>value<sp/>from<sp/>stack<sp/>to<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceEncoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream&gt;</highlight></codeline>
<codeline lineno="2626" refid="class_generic_document_1a7bc1827a7ab04de4789fe46237f0e921" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a7bc1827a7ab04de4789fe46237f0e921" kindref="member">ParseStream</ref>(InputStream&amp;<sp/>is)<sp/>{</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;SourceEncoding, Encoding, StackAllocator&gt;</ref><sp/>reader(</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.<ref refid="classinternal_1_1_stack_1a657ae4d477b25d4e0045aee0efd809c3" kindref="member">HasAllocator</ref>()<sp/>?<sp/>&amp;<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.<ref refid="classinternal_1_1_stack_1aa6f933acc7ecd92a2b567db5fa8cd43a" kindref="member">GetAllocator</ref>()<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit" kindref="compound">ClearStackOnExit</ref><sp/>scope(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" kindref="member">parseResult_</ref><sp/>=<sp/>reader.template<sp/>Parse&lt;parseFlags&gt;(is,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" kindref="member">parseResult_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.<ref refid="classinternal_1_1_stack_1ac484468a2791bd3e9ba609bd1600ab48" kindref="member">GetSize</ref>()<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_value" kindref="compound">ValueType</ref>));<sp/></highlight><highlight class="comment">//<sp/>Got<sp/>one<sp/>and<sp/>only<sp/>one<sp/>root<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90" kindref="member">ValueType::operator=</ref>(*<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Pop&lt;ValueType&gt;(1));</highlight><highlight class="comment">//<sp/>Move<sp/>value<sp/>from<sp/>stack<sp/>to<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream&gt;</highlight></codeline>
<codeline lineno="2645" refid="class_generic_document_1a54d96ce0902d2afe033faebfd2863bbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a54d96ce0902d2afe033faebfd2863bbc" kindref="member">ParseStream</ref>(InputStream&amp;<sp/>is)<sp/>{</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseStream&lt;parseFlags,<sp/>Encoding,<sp/>InputStream&gt;(is);</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"></highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream&gt;</highlight></codeline>
<codeline lineno="2655" refid="class_generic_document_1a78f0a1448172e3e998778662e2beb0e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a78f0a1448172e3e998778662e2beb0e3" kindref="member">ParseStream</ref>(InputStream&amp;<sp/>is)<sp/>{</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseStream&lt;kParseDefaultFlags,<sp/>Encoding,<sp/>InputStream&gt;(is);</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2659"></codeline>
<codeline lineno="2662"></codeline>
<codeline lineno="2664"><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags&gt;</highlight></codeline>
<codeline lineno="2669" refid="class_generic_document_1a13f68b1896a24eea4cdbc03a3916225f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a13f68b1896a24eea4cdbc03a3916225f" kindref="member">ParseInsitu</ref>(<ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref>*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_insitu_string_stream" kindref="compound">GenericInsituStringStream&lt;Encoding&gt;</ref><sp/>s(str);</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseStream&lt;parseFlags<sp/>|<sp/>kParseInsituFlag&gt;(s);</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight></codeline>
<codeline lineno="2678" refid="class_generic_document_1a9bd648666f9c538e272bc980aff1b807" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a9bd648666f9c538e272bc980aff1b807" kindref="member">ParseInsitu</ref>(<ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref>*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseInsitu&lt;kParseDefaultFlags&gt;(str);</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2682"></codeline>
<codeline lineno="2685"></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceEncoding&gt;</highlight></codeline>
<codeline lineno="2692" refid="class_generic_document_1a901db1678f99a1b550003eed75bc380a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a901db1678f99a1b550003eed75bc380a" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceEncoding::Ch*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(!(parseFlags<sp/>&amp;<sp/><ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref>));</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;SourceEncoding&gt;</ref><sp/>s(str);</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseStream&lt;parseFlags,<sp/>SourceEncoding&gt;(s);</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags&gt;</highlight></codeline>
<codeline lineno="2703" refid="class_generic_document_1a3c3977dcf15fafe17d57f6784e0ce2b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a3c3977dcf15fafe17d57f6784e0ce2b5" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref>*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Parse&lt;parseFlags,<sp/>Encoding&gt;(str);</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight></codeline>
<codeline lineno="2710" refid="class_generic_document_1afc8eb27bf748df642d27f5767ae4eaab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1afc8eb27bf748df642d27f5767ae4eaab" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref>*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Parse&lt;kParseDefaultFlags&gt;(str);</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceEncoding&gt;</highlight></codeline>
<codeline lineno="2715" refid="class_generic_document_1ae9f7f4eeb5950d342e71bdca6437ff27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1ae9f7f4eeb5950d342e71bdca6437ff27" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceEncoding::Ch*<sp/>str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(!(parseFlags<sp/>&amp;<sp/><ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01" kindref="member">kParseInsituFlag</ref>));</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_memory_stream" kindref="compound">MemoryStream</ref><sp/>ms(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(str),<sp/>length<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceEncoding::Ch));</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_encoded_input_stream" kindref="compound">EncodedInputStream&lt;SourceEncoding, MemoryStream&gt;</ref><sp/>is(ms);</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParseStream&lt;parseFlags,<sp/>SourceEncoding&gt;(is);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags&gt;</highlight></codeline>
<codeline lineno="2724" refid="class_generic_document_1a40ca30aefee5016888756cac60dec261" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a40ca30aefee5016888756cac60dec261" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Parse&lt;parseFlags,<sp/>Encoding&gt;(str,<sp/>length);</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2728" refid="class_generic_document_1a7b436b2c997ffaa7d965e6ecec2f7ae4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a7b436b2c997ffaa7d965e6ecec2f7ae4" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Parse&lt;kParseDefaultFlags&gt;(str,<sp/>length);</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceEncoding&gt;</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a901db1678f99a1b550003eed75bc380a" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;typename<sp/>SourceEncoding::Ch&gt;&amp;<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>c_str()<sp/>is<sp/>constant<sp/>complexity<sp/>according<sp/>to<sp/>standard.<sp/>Should<sp/>be<sp/>faster<sp/>than<sp/>Parse(const<sp/>char*,<sp/>size_t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Parse&lt;parseFlags,<sp/>SourceEncoding&gt;(str.c_str());</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags&gt;</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a901db1678f99a1b550003eed75bc380a" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Parse&lt;parseFlags,<sp/>Encoding&gt;(str.c_str());</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a901db1678f99a1b550003eed75bc380a" kindref="member">Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Parse&lt;kParseDefaultFlags&gt;(str);</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RAPIDJSON_HAS_STDSTRING<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"></codeline>
<codeline lineno="2753"></codeline>
<codeline lineno="2755" refid="class_generic_document_1a510a0588db4eb372f5d81bc3646578fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a510a0588db4eb372f5d81bc3646578fb" kindref="member">HasParseError</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" kindref="member">parseResult_</ref>.<ref refid="struct_parse_result_1adfe0ef5b994e82f8aa9ebf0b30c924b1" kindref="member">IsError</ref>();<sp/>}</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"></highlight></codeline>
<codeline lineno="2758" refid="class_generic_document_1a9400a5bd3169cc6ed545e681ccc06070" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7" kindref="member">ParseErrorCode</ref><sp/><ref refid="class_generic_document_1a9400a5bd3169cc6ed545e681ccc06070" kindref="member">GetParseError</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" kindref="member">parseResult_</ref>.<ref refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" kindref="member">Code</ref>();<sp/>}</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"></highlight></codeline>
<codeline lineno="2761" refid="class_generic_document_1ae1ef7ca99ced428e9300c68e5142afdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1ae1ef7ca99ced428e9300c68e5142afdb" kindref="member">GetErrorOffset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" kindref="member">parseResult_</ref>.<ref refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" kindref="member">Offset</ref>();<sp/>}</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="preprocessor">#ifndef<sp/>__clang<sp/></highlight><highlight class="comment">//<sp/>-Wdocumentation</highlight></codeline>
<codeline lineno="2774"><highlight class="comment"></highlight><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="2775" refid="class_generic_document_1af9bb8eade3eae0c039161378e8d2923a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" kindref="member">parseResult_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="2777"></codeline>
<codeline lineno="2779" refid="class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>&amp;<sp/><ref refid="class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6" kindref="member">GetAllocator</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" kindref="member">allocator_</ref>);</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" kindref="member">allocator_</ref>;</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"></highlight></codeline>
<codeline lineno="2785" refid="class_generic_document_1a9e2e543c326b8b981d4f2c3d6793d15b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a9e2e543c326b8b981d4f2c3d6793d15b" kindref="member">GetStackCapacity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.<ref refid="classinternal_1_1_stack_1a67d5d7ee9424d3dd46cf9d001b6cdc6b" kindref="member">GetCapacity</ref>();<sp/>}</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>stack<sp/>on<sp/>any<sp/>exit<sp/>from<sp/>ParseStream,<sp/>e.g.<sp/>due<sp/>to<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2789" refid="struct_generic_document_1_1_clear_stack_on_exit" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_generic_document_1_1_clear_stack_on_exit" kindref="compound">ClearStackOnExit</ref><sp/>{</highlight></codeline>
<codeline lineno="2790" refid="struct_generic_document_1_1_clear_stack_on_exit_1a99ba88d8b8ae15ccf5c979fff80c713a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit_1a99ba88d8b8ae15ccf5c979fff80c713a" kindref="member">ClearStackOnExit</ref>(<ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>d)<sp/>:<sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit_1a56c2e82730f07911288b42640b029dc3" kindref="member">d_</ref>(d)<sp/>{}</highlight></codeline>
<codeline lineno="2791" refid="struct_generic_document_1_1_clear_stack_on_exit_1aa51248f341ec130a29e4f8c3705c9312" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit_1aa51248f341ec130a29e4f8c3705c9312" kindref="member">~ClearStackOnExit</ref>()<sp/>{<sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit_1a56c2e82730f07911288b42640b029dc3" kindref="member">d_</ref>.<ref refid="class_generic_document_1aa6f040219ed1d4cdd48f7ed9353942a4" kindref="member">ClearStack</ref>();<sp/>}</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2793" refid="struct_generic_document_1_1_clear_stack_on_exit_1ae009d5d42300fb5790227d24b4b38921" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit_1ae009d5d42300fb5790227d24b4b38921" kindref="member">ClearStackOnExit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit" kindref="compound">ClearStackOnExit</ref>&amp;);</highlight></codeline>
<codeline lineno="2794" refid="struct_generic_document_1_1_clear_stack_on_exit_1a1247a0671a8108906ae005ad9f0bc026" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit" kindref="compound">ClearStackOnExit</ref>&amp;<sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit_1a1247a0671a8108906ae005ad9f0bc026" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit" kindref="compound">ClearStackOnExit</ref>&amp;);</highlight></codeline>
<codeline lineno="2795" refid="struct_generic_document_1_1_clear_stack_on_exit_1a56c2e82730f07911288b42640b029dc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="struct_generic_document_1_1_clear_stack_on_exit_1a56c2e82730f07911288b42640b029dc3" kindref="member">d_</ref>;</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>callers<sp/>of<sp/>the<sp/>following<sp/>private<sp/>Handler<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>template<sp/>&lt;typename,typename,typename&gt;<sp/>friend<sp/>class<sp/>GenericReader;<sp/>//<sp/>for<sp/>parsing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2800" refid="class_generic_document_1a899449e1a645b5e377af059fb61113d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>deep<sp/>copying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implementation<sp/>of<sp/>Handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804" refid="class_generic_document_1a87dc7f66b2b92660b8a43546733f9df2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a87dc7f66b2b92660b8a43546733f9df2" kindref="member">Null</ref>()<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2805" refid="class_generic_document_1a4c44780642518dd34bd241a1ea0ceaf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a4c44780642518dd34bd241a1ea0ceaf1" kindref="member">Bool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>(b);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2806" refid="class_generic_document_1a8cc986266becaa268474c607489745c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a8cc986266becaa268474c607489745c7" kindref="member">Int</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>(i);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2807" refid="class_generic_document_1a530dd899a04a00ba74f52507b488d2c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a530dd899a04a00ba74f52507b488d2c1" kindref="member">Uint</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>(i);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2808" refid="class_generic_document_1a934b1b7a7ed89917615a5410db77a942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a934b1b7a7ed89917615a5410db77a942" kindref="member">Int64</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>(i);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2809" refid="class_generic_document_1a50ac3451a1afd0ce248dcc023d5e09e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a50ac3451a1afd0ce248dcc023d5e09e8" kindref="member">Uint64</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>i)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>(i);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2810" refid="class_generic_document_1a934bf7a5d1ff062ab079756d842e4f6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a934bf7a5d1ff062ab079756d842e4f6b" kindref="member">Double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>(d);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight></codeline>
<codeline lineno="2812" refid="class_generic_document_1af703994dec5af6ef049a24b5243aceab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1af703994dec5af6ef049a24b5243aceab" kindref="member">RawNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)<sp/>{<sp/></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy)<sp/></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>(str,<sp/>length,<sp/><ref refid="class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6" kindref="member">GetAllocator</ref>());</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>(str,<sp/>length);</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight></codeline>
<codeline lineno="2820" refid="class_generic_document_1ad319fcc9e13606b6795424b9374a7398" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1ad319fcc9e13606b6795424b9374a7398" kindref="member">String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)<sp/>{<sp/></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy)<sp/></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>(str,<sp/>length,<sp/><ref refid="class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6" kindref="member">GetAllocator</ref>());</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>(str,<sp/>length);</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"></highlight></codeline>
<codeline lineno="2828" refid="class_generic_document_1abb1417fde52cc34cb340e3b50a3295da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1abb1417fde52cc34cb340e3b50a3295da" kindref="member">StartObject</ref>()<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2830" refid="class_generic_document_1a600d0950baabbcab11197cacb1459c7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a600d0950baabbcab11197cacb1459c7a" kindref="member">Key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1ad319fcc9e13606b6795424b9374a7398" kindref="member">String</ref>(str,<sp/>length,<sp/>copy);<sp/>}</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"></highlight></codeline>
<codeline lineno="2832" refid="class_generic_document_1a42f2df68f9c9d8b88a15b609716867d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a42f2df68f9c9d8b88a15b609716867d9" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>memberCount)<sp/>{</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_member" kindref="compound">ValueType::Member</ref>*<sp/>members<sp/>=<sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Pop&lt;typename<sp/>ValueType::Member&gt;(memberCount);</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Top&lt;ValueType&gt;()-&gt;SetObjectRaw(members,<sp/>memberCount,<sp/><ref refid="class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6" kindref="member">GetAllocator</ref>());</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight></codeline>
<codeline lineno="2838" refid="class_generic_document_1ae12c513c61745ae731a47b1ca33db063" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1ae12c513c61745ae731a47b1ca33db063" kindref="member">StartArray</ref>()<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Push&lt;ValueType&gt;())<sp/><ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2840" refid="class_generic_document_1a14097c833bed1a9c7be064ea619c887f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a14097c833bed1a9c7be064ea619c887f" kindref="member">EndArray</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>elementCount)<sp/>{</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>*<sp/>elements<sp/>=<sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Pop&lt;ValueType&gt;(elementCount);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Top&lt;ValueType&gt;()-&gt;SetArrayRaw(elements,<sp/>elementCount,<sp/><ref refid="class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6" kindref="member">GetAllocator</ref>());</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2848" refid="class_generic_document_1a58dd6c300949aeb9627de7f9e34796db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1a58dd6c300949aeb9627de7f9e34796db" kindref="member">GenericDocument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;);</highlight></codeline>
<codeline lineno="2850" refid="class_generic_document_1a78dfa0732175b3d721d97fdcf8ad66a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/><ref refid="class_generic_document_1a78dfa0732175b3d721d97fdcf8ad66a6" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;);</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"></highlight></codeline>
<codeline lineno="2852" refid="class_generic_document_1aa6f040219ed1d4cdd48f7ed9353942a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1aa6f040219ed1d4cdd48f7ed9353942a4" kindref="member">ClearStack</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Allocator::kNeedFree)</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.<ref refid="classinternal_1_1_stack_1ac484468a2791bd3e9ba609bd1600ab48" kindref="member">GetSize</ref>()<sp/>&gt;<sp/>0)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>assumes<sp/>all<sp/>elements<sp/>in<sp/>stack<sp/>array<sp/>are<sp/>GenericValue<sp/>(Member<sp/>is<sp/>actually<sp/>2<sp/>GenericValue<sp/>objects)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.template<sp/>Pop&lt;ValueType&gt;(1))-&gt;~<ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">ValueType</ref>();</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.<ref refid="classinternal_1_1_stack_1a02da31665a372738e81ded2f7b7d598e" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>.<ref refid="classinternal_1_1_stack_1a3852b8494d69c91f6a238a51572e591e" kindref="member">ShrinkToFit</ref>();</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"></highlight></codeline>
<codeline lineno="2861" refid="class_generic_document_1ad72f36087f5129ad4b5321cf8418c923" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1ad72f36087f5129ad4b5321cf8418c923" kindref="member">Destroy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a52c941c3fdd646527cdcd42aa846a28a" kindref="member">RAPIDJSON_DELETE</ref>(<ref refid="class_generic_document_1ada153f6865201106b3a753861c870266" kindref="member">ownAllocator_</ref>);</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"></highlight></codeline>
<codeline lineno="2865" refid="class_generic_document_1a90d452abe8940d8a9c9634d1c49d8f49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_generic_document_1a90d452abe8940d8a9c9634d1c49d8f49" kindref="member">kDefaultStackCapacity</ref><sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="2866" refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>*<sp/><ref refid="class_generic_document_1a9b5f15fc75c8035612c37f796548e87a" kindref="member">allocator_</ref>;</highlight></codeline>
<codeline lineno="2867" refid="class_generic_document_1ada153f6865201106b3a753861c870266" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>*<sp/><ref refid="class_generic_document_1ada153f6865201106b3a753861c870266" kindref="member">ownAllocator_</ref>;</highlight></codeline>
<codeline lineno="2868" refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;StackAllocator&gt;</ref><sp/><ref refid="class_generic_document_1ad2169359326bdf8a7180338fec77e77f" kindref="member">stack_</ref>;</highlight></codeline>
<codeline lineno="2869" refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/><ref refid="class_generic_document_1a499058f1c615928337d96cfaf374373e" kindref="member">parseResult_</ref>;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"></highlight></codeline>
<codeline lineno="2873" refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_document" kindref="compound">GenericDocument&lt;UTF8&lt;&gt;</ref><sp/>&gt;<sp/><ref refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" kindref="member">Document</ref>;</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"></highlight></codeline>
<codeline lineno="2877"><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Const,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueT&gt;</highlight></codeline>
<codeline lineno="2882" refid="class_generic_array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_array" kindref="compound">GenericArray</ref><sp/>{</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2884" refid="class_generic_array_1a84f0b14518bc5cc44b4ff76a7d5ef81b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_array" kindref="compound">GenericArray&lt;true, ValueT&gt;</ref><sp/><ref refid="class_generic_array_1a84f0b14518bc5cc44b4ff76a7d5ef81b" kindref="member">ConstArray</ref>;</highlight></codeline>
<codeline lineno="2885" refid="class_generic_array_1a6683902e86c051c2319e873537dca7b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_array" kindref="compound">GenericArray&lt;false, ValueT&gt;</ref><sp/><ref refid="class_generic_array_1a6683902e86c051c2319e873537dca7b1" kindref="member">Array</ref>;</highlight></codeline>
<codeline lineno="2886" refid="class_generic_array_1aecea8be3dca6799bc523f4bffd221839" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ValueT<sp/><ref refid="class_generic_array_1aecea8be3dca6799bc523f4bffd221839" kindref="member">PlainType</ref>;</highlight></codeline>
<codeline lineno="2887" refid="class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">internal::MaybeAddConst&lt;Const,PlainType&gt;::Type</ref><sp/><ref refid="class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed" kindref="member">ValueType</ref>;</highlight></codeline>
<codeline lineno="2888" refid="class_generic_array_1afc6ad62c3f00531fa378db266182704a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed" kindref="member">ValueType</ref>*<sp/><ref refid="class_generic_array_1afc6ad62c3f00531fa378db266182704a" kindref="member">ValueIterator</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>may<sp/>be<sp/>const<sp/>or<sp/>non-const<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889" refid="class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueT*<sp/><ref refid="class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68" kindref="member">ConstValueIterator</ref>;</highlight></codeline>
<codeline lineno="2890" refid="class_generic_array_1af9cdc12de03c742b9c33dfc172756b97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref><sp/><ref refid="class_generic_array_1af9cdc12de03c742b9c33dfc172756b97" kindref="member">AllocatorType</ref>;</highlight></codeline>
<codeline lineno="2891" refid="class_generic_array_1a8dcb9e2a2e103ce1051c16a7486465b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">ValueType::StringRefType</ref><sp/><ref refid="class_generic_array_1a8dcb9e2a2e103ce1051c16a7486465b9" kindref="member">StringRefType</ref>;</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="2894" refid="class_generic_array_1a899449e1a645b5e377af059fb61113d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"></highlight></codeline>
<codeline lineno="2896" refid="class_generic_array_1aa589d897a194b349d5053391a6f1491d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array_1aa589d897a194b349d5053391a6f1491d" kindref="member">GenericArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_array" kindref="compound">GenericArray</ref>&amp;<sp/>rhs)<sp/>:<sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>(rhs.<ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="2897" refid="class_generic_array_1a7ddfd0ec5e4f34697863e7651be1067f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array" kindref="compound">GenericArray</ref>&amp;<sp/><ref refid="class_generic_array_1a7ddfd0ec5e4f34697863e7651be1067f" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_array" kindref="compound">GenericArray</ref>&amp;<sp/>rhs)<sp/>{<sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref><sp/>=<sp/>rhs.<ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2898" refid="class_generic_array_1a9c6b8f44efa60f720155f968b662e99e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array_1a9c6b8f44efa60f720155f968b662e99e" kindref="member">~GenericArray</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"></highlight></codeline>
<codeline lineno="2900" refid="class_generic_array_1a28693c9c06b9e0445df7a5d9c4e8bb18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed" kindref="member">ValueType</ref>&amp;()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="2901" refid="class_generic_array_1a62d5b7f423edc2141cd4524c7dfd138b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="class_generic_array_1a62d5b7f423edc2141cd4524c7dfd138b" kindref="member">Size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.Size();<sp/>}</highlight></codeline>
<codeline lineno="2902" refid="class_generic_array_1ab385434ab7a99de7a0a17e5ee7e09d7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="class_generic_array_1ab385434ab7a99de7a0a17e5ee7e09d7f" kindref="member">Capacity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.Capacity();<sp/>}</highlight></codeline>
<codeline lineno="2903" refid="class_generic_array_1af09e3aaeaeeb5fd825d79cc6663dfcf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1af09e3aaeaeeb5fd825d79cc6663dfcf5" kindref="member">Empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.Empty();<sp/>}</highlight></codeline>
<codeline lineno="2904" refid="class_generic_array_1a5e6c158ff76ab8a8ed568fa486e63c80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1a5e6c158ff76ab8a8ed568fa486e63c80" kindref="member">Clear</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.Clear();<sp/>}</highlight></codeline>
<codeline lineno="2905" refid="class_generic_array_1afb2a9d136405df4d2306fec9909ba23e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed" kindref="member">ValueType</ref>&amp;<sp/><ref refid="class_generic_array_1afb2a9d136405df4d2306fec9909ba23e" kindref="member">operator[]</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>[index];<sp/>}</highlight></codeline>
<codeline lineno="2906" refid="class_generic_array_1a3efaa020b29ceed9c1a03465676a32a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array_1afc6ad62c3f00531fa378db266182704a" kindref="member">ValueIterator</ref><sp/><ref refid="class_generic_array_1a3efaa020b29ceed9c1a03465676a32a7" kindref="member">Begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.Begin();<sp/>}</highlight></codeline>
<codeline lineno="2907" refid="class_generic_array_1a396f83d328f4879225106ea14b1dca84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array_1afc6ad62c3f00531fa378db266182704a" kindref="member">ValueIterator</ref><sp/><ref refid="class_generic_array_1a396f83d328f4879225106ea14b1dca84" kindref="member">End</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.End();<sp/>}</highlight></codeline>
<codeline lineno="2908" refid="class_generic_array_1a7c74901e8e2174fe4661f4848995f355" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array" kindref="compound">GenericArray</ref><sp/><ref refid="class_generic_array_1a7c74901e8e2174fe4661f4848995f355" kindref="member">Reserve</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>newCapacity,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">AllocatorType</ref><sp/>&amp;allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.Reserve(newCapacity,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2909" refid="class_generic_array_1a2ed88f0630c044bad695a127a866c348" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array" kindref="compound">GenericArray</ref><sp/><ref refid="class_generic_array_1a2ed88f0630c044bad695a127a866c348" kindref="member">PushBack</ref>(<ref refid="class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed" kindref="member">ValueType</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.PushBack(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array" kindref="compound">GenericArray</ref><sp/><ref refid="class_generic_array_1a2ed88f0630c044bad695a127a866c348" kindref="member">PushBack</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="class_generic_array_1af9cdc12de03c742b9c33dfc172756b97" kindref="member">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.PushBack(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2913" refid="class_generic_array_1ae599de6aee1167648085672b79dd6bcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array" kindref="compound">GenericArray</ref><sp/><ref refid="class_generic_array_1ae599de6aee1167648085672b79dd6bcc" kindref="member">PushBack</ref>(<ref refid="struct_generic_string_ref" kindref="compound">StringRefType</ref><sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.PushBack(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2914" refid="class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="class_generic_array_1a12adff0c1e11aa3be6f4160015a65df0" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,<sp/><ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref><sp/>&gt;),<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_array" kindref="compound">GenericArray</ref>&amp;))<sp/><ref refid="class_generic_array_1a2ed88f0630c044bad695a127a866c348" kindref="member">PushBack</ref>(<ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref><sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.PushBack(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2915" refid="class_generic_array_1afd1c75a82d2fc4366cde18256962edf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array" kindref="compound">GenericArray</ref><sp/><ref refid="class_generic_array_1afd1c75a82d2fc4366cde18256962edf6" kindref="member">PopBack</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.PopBack();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2916" refid="class_generic_array_1aefa57a363accf2ade867583771f8a54b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array_1afc6ad62c3f00531fa378db266182704a" kindref="member">ValueIterator</ref><sp/><ref refid="class_generic_array_1aefa57a363accf2ade867583771f8a54b" kindref="member">Erase</ref>(<ref refid="class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68" kindref="member">ConstValueIterator</ref><sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.Erase(pos);<sp/>}</highlight></codeline>
<codeline lineno="2917" refid="class_generic_array_1ac1be0c701ad3aaf0570a8a1ffc715fd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array_1afc6ad62c3f00531fa378db266182704a" kindref="member">ValueIterator</ref><sp/><ref refid="class_generic_array_1ac1be0c701ad3aaf0570a8a1ffc715fd5" kindref="member">Erase</ref>(<ref refid="class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68" kindref="member">ConstValueIterator</ref><sp/>first,<sp/><ref refid="class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68" kindref="member">ConstValueIterator</ref><sp/>last)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.Erase(first,<sp/>last);<sp/>}</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RANGE_FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array_1afc6ad62c3f00531fa378db266182704a" kindref="member">ValueIterator</ref><sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.Begin();<sp/>}</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array_1afc6ad62c3f00531fa378db266182704a" kindref="member">ValueIterator</ref><sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>.End();<sp/>}</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2923"><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2925" refid="class_generic_array_1ab657142e2eb04a6be8e69d51c84c067a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array_1ab657142e2eb04a6be8e69d51c84c067a" kindref="member">GenericArray</ref>();</highlight></codeline>
<codeline lineno="2926" refid="class_generic_array_1aefb32b089262f573804bea9faa9c6a22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array_1aefb32b089262f573804bea9faa9c6a22" kindref="member">GenericArray</ref>(<ref refid="class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed" kindref="member">ValueType</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>)<sp/>:<sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="2927" refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed" kindref="member">ValueType</ref>&amp;<sp/><ref refid="class_generic_array_1afac7de0d842f341d32a36919fd17cad5" kindref="member">value_</ref>;</highlight></codeline>
<codeline lineno="2928"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Const,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueT&gt;</highlight></codeline>
<codeline lineno="2936" refid="class_generic_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_object" kindref="compound">GenericObject</ref><sp/>{</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2938" refid="class_generic_object_1aeee588f9a85e88cac89b7c4dfb6b0bd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_object" kindref="compound">GenericObject&lt;true, ValueT&gt;</ref><sp/><ref refid="class_generic_object_1aeee588f9a85e88cac89b7c4dfb6b0bd3" kindref="member">ConstObject</ref>;</highlight></codeline>
<codeline lineno="2939" refid="class_generic_object_1ae8f5673d0cf8e7ebfd2d4f6ab27b632d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_object" kindref="compound">GenericObject&lt;false, ValueT&gt;</ref><sp/><ref refid="class_generic_object_1ae8f5673d0cf8e7ebfd2d4f6ab27b632d" kindref="member">Object</ref>;</highlight></codeline>
<codeline lineno="2940" refid="class_generic_object_1a4c25f4a5f696745c418b91ad9f577f12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ValueT<sp/><ref refid="class_generic_object_1a4c25f4a5f696745c418b91ad9f577f12" kindref="member">PlainType</ref>;</highlight></codeline>
<codeline lineno="2941" refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">internal::MaybeAddConst&lt;Const,PlainType&gt;::Type</ref><sp/><ref refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" kindref="member">ValueType</ref>;</highlight></codeline>
<codeline lineno="2942" refid="class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;Const, typename ValueT::EncodingType, typename ValueT::AllocatorType&gt;</ref><sp/><ref refid="class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6" kindref="member">MemberIterator</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>may<sp/>be<sp/>const<sp/>or<sp/>non-const<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2943" refid="class_generic_object_1af16706c0ad32b957c56e7d0541628cd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;true, typename ValueT::EncodingType, typename ValueT::AllocatorType&gt;</ref><sp/><ref refid="class_generic_object_1af16706c0ad32b957c56e7d0541628cd5" kindref="member">ConstMemberIterator</ref>;</highlight></codeline>
<codeline lineno="2944" refid="class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">ValueType::AllocatorType</ref><sp/><ref refid="class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9" kindref="member">AllocatorType</ref>;</highlight></codeline>
<codeline lineno="2945" refid="class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">ValueType::StringRefType</ref><sp/><ref refid="class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59" kindref="member">StringRefType</ref>;</highlight></codeline>
<codeline lineno="2946" refid="class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_encoding" kindref="compound">ValueType::EncodingType</ref><sp/><ref refid="class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef" kindref="member">EncodingType</ref>;</highlight></codeline>
<codeline lineno="2947" refid="class_generic_object_1ac6747e5baa13e15bcea1658b5624647a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">ValueType::Ch</ref><sp/><ref refid="class_generic_object_1ac6747e5baa13e15bcea1658b5624647a" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="2950" refid="class_generic_object_1a899449e1a645b5e377af059fb61113d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight></codeline>
<codeline lineno="2952" refid="class_generic_object_1a10173c42d0e8a71ca0e3ae75d800887a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object_1a10173c42d0e8a71ca0e3ae75d800887a" kindref="member">GenericObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_object" kindref="compound">GenericObject</ref>&amp;<sp/>rhs)<sp/>:<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>(rhs.<ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="2953" refid="class_generic_object_1a995b0e01b59efd7e268f837b8127e0bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object" kindref="compound">GenericObject</ref>&amp;<sp/><ref refid="class_generic_object_1a995b0e01b59efd7e268f837b8127e0bc" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_object" kindref="compound">GenericObject</ref>&amp;<sp/>rhs)<sp/>{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref><sp/>=<sp/>rhs.<ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2954" refid="class_generic_object_1a8ac79abb76ac4d2c647681a37fc4ab46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object_1a8ac79abb76ac4d2c647681a37fc4ab46" kindref="member">~GenericObject</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"></highlight></codeline>
<codeline lineno="2956" refid="class_generic_object_1a2948af90e01df17989cd844d6197eb18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" kindref="member">ValueType</ref>&amp;()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="2957" refid="class_generic_object_1a15326564c82f2b545811f753534563e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="class_generic_object_1a15326564c82f2b545811f753534563e4" kindref="member">MemberCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.MemberCount();<sp/>}</highlight></codeline>
<codeline lineno="2958" refid="class_generic_object_1a0389754cbdb435d732bad6edf4f8cdb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="class_generic_object_1a0389754cbdb435d732bad6edf4f8cdb2" kindref="member">MemberCapacity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.MemberCapacity();<sp/>}</highlight></codeline>
<codeline lineno="2959" refid="class_generic_object_1a9cc10bfeeb6a5eb95ba1ae587b6e6ad8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a9cc10bfeeb6a5eb95ba1ae587b6e6ad8" kindref="member">ObjectEmpty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.ObjectEmpty();<sp/>}</highlight></codeline>
<codeline lineno="2960" refid="class_generic_object_1a2bd0d4a75b18ae78c8a1e1051e8ec9ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" kindref="member">ValueType</ref>&amp;<sp/><ref refid="class_generic_object_1a2bd0d4a75b18ae78c8a1e1051e8ec9ac" kindref="member">operator[]</ref>(<ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref>*<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>[name];<sp/>}</highlight></codeline>
<codeline lineno="2961" refid="class_generic_object_1a21c677e997d4dfe4e0692cdb75067428" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;<sp/><ref refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" kindref="member">ValueType</ref>&amp;<sp/><ref refid="class_generic_object_1a21c677e997d4dfe4e0692cdb75067428" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType, SourceAllocator&gt;</ref>&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>[name];<sp/>}</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="class_generic_object_1a2bd0d4a75b18ae78c8a1e1051e8ec9ac" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>[name];<sp/>}</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2965" refid="class_generic_object_1af1e80a8a521f05530f9b6a448242ff2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/><ref refid="class_generic_object_1af1e80a8a521f05530f9b6a448242ff2d" kindref="member">MemberBegin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.MemberBegin();<sp/>}</highlight></codeline>
<codeline lineno="2966" refid="class_generic_object_1a75873786614f67796bfb190008e004dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/><ref refid="class_generic_object_1a75873786614f67796bfb190008e004dc" kindref="member">MemberEnd</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.MemberEnd();<sp/>}</highlight></codeline>
<codeline lineno="2967" refid="class_generic_object_1af750abd40d05136da98705899b4575c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object" kindref="compound">GenericObject</ref><sp/><ref refid="class_generic_object_1af750abd40d05136da98705899b4575c2" kindref="member">MemberReserve</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>newCapacity,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">AllocatorType</ref><sp/>&amp;allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.MemberReserve(newCapacity,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2968" refid="class_generic_object_1a996d775e52cc7c5cf2aa308cf5a2b2cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a996d775e52cc7c5cf2aa308cf5a2b2cf" kindref="member">HasMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1ac6747e5baa13e15bcea1658b5624647a" kindref="member">Ch</ref>*<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.HasMember(name);<sp/>}</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a996d775e52cc7c5cf2aa308cf5a2b2cf" kindref="member">HasMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.HasMember(name);<sp/>}</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2972" refid="class_generic_object_1a0b63666ca05c86f9d719350f2302a3f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a0b63666ca05c86f9d719350f2302a3f7" kindref="member">HasMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType, SourceAllocator&gt;</ref>&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.HasMember(name);<sp/>}</highlight></codeline>
<codeline lineno="2973" refid="class_generic_object_1a979890ccb3b116af19f9e3e77d3d286f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/><ref refid="class_generic_object_1a979890ccb3b116af19f9e3e77d3d286f" kindref="member">FindMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1ac6747e5baa13e15bcea1658b5624647a" kindref="member">Ch</ref>*<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.FindMember(name);<sp/>}</highlight></codeline>
<codeline lineno="2974" refid="class_generic_object_1a12a4fbbf2219d6bb43c3d61923830ab4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;<sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/><ref refid="class_generic_object_1a12a4fbbf2219d6bb43c3d61923830ab4" kindref="member">FindMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType, SourceAllocator&gt;</ref>&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.FindMember(name);<sp/>}</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6" kindref="member">MemberIterator</ref><sp/><ref refid="class_generic_object_1a979890ccb3b116af19f9e3e77d3d286f" kindref="member">FindMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.FindMember(name);<sp/>}</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2978" refid="class_generic_object_1a3668524c8566c46cbae97d938064f5fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object" kindref="compound">GenericObject</ref><sp/><ref refid="class_generic_object_1a3668524c8566c46cbae97d938064f5fa" kindref="member">AddMember</ref>(<ref refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" kindref="member">ValueType</ref>&amp;<sp/>name,<sp/><ref refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" kindref="member">ValueType</ref>&amp;<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.AddMember(name,<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2979" refid="class_generic_object_1ae871adc8c906a72878b7cf5df279ed1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object" kindref="compound">GenericObject</ref><sp/><ref refid="class_generic_object_1ae871adc8c906a72878b7cf5df279ed1f" kindref="member">AddMember</ref>(<ref refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" kindref="member">ValueType</ref>&amp;<sp/>name,<sp/><ref refid="struct_generic_string_ref" kindref="compound">StringRefType</ref><sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.AddMember(name,<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object" kindref="compound">GenericObject</ref><sp/><ref refid="class_generic_object_1a3668524c8566c46cbae97d938064f5fa" kindref="member">AddMember</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>name,<sp/>std::basic_string&lt;Ch&gt;&amp;<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/><ref refid="class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9" kindref="member">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.AddMember(name,<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2983" refid="class_generic_object_1af70c9646b5e422306c33e98b3d8783a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="class_generic_object_1a98ebcec632c41442d89cd8634b7ecc47" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,<sp/><ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref><sp/>&gt;),<sp/>(<ref refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" kindref="member">ValueType</ref>&amp;))<sp/><ref refid="class_generic_object_1a3668524c8566c46cbae97d938064f5fa" kindref="member">AddMember</ref>(<ref refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" kindref="member">ValueType</ref>&amp;<sp/>name,<sp/><ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref><sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.AddMember(name,<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object" kindref="compound">GenericObject</ref><sp/><ref refid="class_generic_object_1a3668524c8566c46cbae97d938064f5fa" kindref="member">AddMember</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;&amp;<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;&amp;<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/><ref refid="class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9" kindref="member">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.AddMember(name,<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object" kindref="compound">GenericObject</ref><sp/><ref refid="class_generic_object_1a3668524c8566c46cbae97d938064f5fa" kindref="member">AddMember</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;&amp;<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/><ref refid="class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9" kindref="member">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.AddMember(name,<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object" kindref="compound">GenericObject</ref><sp/><ref refid="class_generic_object_1a3668524c8566c46cbae97d938064f5fa" kindref="member">AddMember</ref>(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;&amp;<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/><ref refid="class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9" kindref="member">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.AddMember(name,<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object" kindref="compound">GenericObject</ref><sp/><ref refid="class_generic_object_1a3668524c8566c46cbae97d938064f5fa" kindref="member">AddMember</ref>(<ref refid="class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59" kindref="member">StringRefType</ref><sp/>name,<sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;&amp;<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/><ref refid="class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9" kindref="member">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.AddMember(name,<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2990" refid="class_generic_object_1a011a0dd06baf841e3f6e21a3c95db3c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object" kindref="compound">GenericObject</ref><sp/><ref refid="class_generic_object_1a011a0dd06baf841e3f6e21a3c95db3c1" kindref="member">AddMember</ref>(<ref refid="struct_generic_string_ref" kindref="compound">StringRefType</ref><sp/>name,<sp/><ref refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" kindref="member">ValueType</ref>&amp;<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.AddMember(name,<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2991" refid="class_generic_object_1a3af43681aea03c4313d689bcbf5e3363" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object" kindref="compound">GenericObject</ref><sp/><ref refid="class_generic_object_1a3af43681aea03c4313d689bcbf5e3363" kindref="member">AddMember</ref>(<ref refid="struct_generic_string_ref" kindref="compound">StringRefType</ref><sp/>name,<sp/><ref refid="struct_generic_string_ref" kindref="compound">StringRefType</ref><sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.AddMember(name,<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2992" refid="class_generic_object_1af361a4b677882964789201fc605541d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="class_generic_object_1af361a4b677882964789201fc605541d0" kindref="member">RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,<sp/><ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref><sp/>&gt;),<sp/>(<ref refid="class_generic_object" kindref="compound">GenericObject</ref>))<sp/><ref refid="class_generic_object_1a3668524c8566c46cbae97d938064f5fa" kindref="member">AddMember</ref>(<ref refid="struct_generic_string_ref" kindref="compound">StringRefType</ref><sp/>name,<sp/><ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref><sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">AllocatorType</ref>&amp;<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.AddMember(name,<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>,<sp/>allocator);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2993" refid="class_generic_object_1a129ce3843a6658e620a7f740d9f44ee1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a129ce3843a6658e620a7f740d9f44ee1" kindref="member">RemoveAllMembers</ref>()<sp/>{<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.RemoveAllMembers();<sp/>}</highlight></codeline>
<codeline lineno="2994" refid="class_generic_object_1aebeda9c2cac6afd56dda55caaf2c4a0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1aebeda9c2cac6afd56dda55caaf2c4a0c" kindref="member">RemoveMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1ac6747e5baa13e15bcea1658b5624647a" kindref="member">Ch</ref>*<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.RemoveMember(name);<sp/>}</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1aebeda9c2cac6afd56dda55caaf2c4a0c" kindref="member">RemoveMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.RemoveMember(name);<sp/>}</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2998" refid="class_generic_object_1a8e29dc07b992e71e35dd93a57f95842c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a8e29dc07b992e71e35dd93a57f95842c" kindref="member">RemoveMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType, SourceAllocator&gt;</ref>&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.RemoveMember(name);<sp/>}</highlight></codeline>
<codeline lineno="2999" refid="class_generic_object_1a006f76a33dada85c9d13e069cc43623d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/><ref refid="class_generic_object_1a006f76a33dada85c9d13e069cc43623d" kindref="member">RemoveMember</ref>(<ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/>m)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.RemoveMember(m);<sp/>}</highlight></codeline>
<codeline lineno="3000" refid="class_generic_object_1a29ad0490a4a088d57df7a9884f979a82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/><ref refid="class_generic_object_1a29ad0490a4a088d57df7a9884f979a82" kindref="member">EraseMember</ref>(<ref refid="class_generic_member_iterator" kindref="compound">ConstMemberIterator</ref><sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.EraseMember(pos);<sp/>}</highlight></codeline>
<codeline lineno="3001" refid="class_generic_object_1a67f85d2da462287dead8e35f2ac974b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">MemberIterator</ref><sp/><ref refid="class_generic_object_1a67f85d2da462287dead8e35f2ac974b5" kindref="member">EraseMember</ref>(<ref refid="class_generic_member_iterator" kindref="compound">ConstMemberIterator</ref><sp/>first,<sp/><ref refid="class_generic_member_iterator" kindref="compound">ConstMemberIterator</ref><sp/>last)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.EraseMember(first,<sp/>last);<sp/>}</highlight></codeline>
<codeline lineno="3002" refid="class_generic_object_1af0d31a8547051624449494a339b20107" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1af0d31a8547051624449494a339b20107" kindref="member">EraseMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1ac6747e5baa13e15bcea1658b5624647a" kindref="member">Ch</ref>*<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.EraseMember(name);<sp/>}</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a29ad0490a4a088d57df7a9884f979a82" kindref="member">EraseMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a29ad0490a4a088d57df7a9884f979a82" kindref="member">EraseMember</ref>(<ref refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" kindref="member">ValueType</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name)));<sp/>}</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3006" refid="class_generic_object_1a4cd6f90444f20cc9d5577747d3968da4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceAllocator&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a4cd6f90444f20cc9d5577747d3968da4" kindref="member">EraseMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType, SourceAllocator&gt;</ref>&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.EraseMember(name);<sp/>}</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"></highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RANGE_FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6" kindref="member">MemberIterator</ref><sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.MemberBegin();<sp/>}</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6" kindref="member">MemberIterator</ref><sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>.MemberEnd();<sp/>}</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3014" refid="class_generic_object_1a4bd854dbe7168cf81541fad6fd9d9f12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object_1a4bd854dbe7168cf81541fad6fd9d9f12" kindref="member">GenericObject</ref>();</highlight></codeline>
<codeline lineno="3015" refid="class_generic_object_1a56600535a7936f35f53973e358cd4731" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object_1a56600535a7936f35f53973e358cd4731" kindref="member">GenericObject</ref>(<ref refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" kindref="member">ValueType</ref>&amp;<sp/><ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>)<sp/>:<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>(<ref refid="class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f" kindref="member">value</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="3016" refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1" kindref="member">ValueType</ref>&amp;<sp/><ref refid="class_generic_object_1a2578a62ca4786f6fb056400138623473" kindref="member">value_</ref>;</highlight></codeline>
<codeline lineno="3017"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"></highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1" kindref="member">RAPIDJSON_NAMESPACE_END</ref></highlight></codeline>
<codeline lineno="3020"><highlight class="normal">RAPIDJSON_DIAG_POP</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>RAPIDJSON_WINDOWS_GETOBJECT_WORKAROUND_APPLIED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3023"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pop_macro(&quot;GetObject&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>RAPIDJSON_WINDOWS_GETOBJECT_WORKAROUND_APPLIED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3026"><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RAPIDJSON_DOCUMENT_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/rapidjson/include/rapidjson/document.h"/>
  </compounddef>
</doxygen>
