<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g" kind="group">
    <compoundname>RAPIDJSON_CONFIG</compoundname>
    <title>RapidJSON configuration</title>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga860570d04d489be08b9835d2ec58bac5" prot="public" static="no">
        <name>RAPIDJSON_ALLOCATOR_DEFAULT_CHUNK_CAPACITY</name>
        <initializer>(64 * 1024)</initializer>
        <briefdescription>
<para>User-defined kDefaultChunkCapacity definition. </para>
        </briefdescription>
        <detaileddescription>
<para>User can define this as any <computeroutput>size</computeroutput> that is a power of 2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/allocators.h" line="71" column="9" bodyfile="src/rapidjson/include/rapidjson/allocators.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga04a88f0b2db9091006eb7fc6deb6077b" prot="public" static="no">
        <name>RAPIDJSON_DEFAULT_ALLOCATOR</name>
        <initializer><ref refid="class_memory_pool_allocator" kindref="compound">MemoryPoolAllocator</ref>&lt;<ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>&gt;</initializer>
        <briefdescription>
<para>Allows to choose default allocator. </para>
        </briefdescription>
        <detaileddescription>
<para>User can define this to use <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref> or <ref refid="class_memory_pool_allocator" kindref="compound">MemoryPoolAllocator</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="78" column="9" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga1178cffff7c596922a5ed3fda30c5520" prot="public" static="no">
        <name>RAPIDJSON_DEFAULT_STACK_ALLOCATOR</name>
        <initializer><ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref></initializer>
        <briefdescription>
<para>Allows to choose default stack allocator for Document. </para>
        </briefdescription>
        <detaileddescription>
<para>User can define this to use <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref> or <ref refid="class_memory_pool_allocator" kindref="compound">MemoryPoolAllocator</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="88" column="9" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5c88aa612939b592d15d3fc4bdf54272" prot="public" static="no">
        <name>RAPIDJSON_VALUE_DEFAULT_OBJECT_CAPACITY</name>
        <initializer>16</initializer>
        <briefdescription>
<para>User defined kDefaultObjectCapacity value. </para>
        </briefdescription>
        <detaileddescription>
<para>User can define this as any natural number. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="99" column="9" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga10ba0ee06d0ac2803d0f2290d46b19f7" prot="public" static="no">
        <name>RAPIDJSON_VALUE_DEFAULT_ARRAY_CAPACITY</name>
        <initializer>16</initializer>
        <briefdescription>
<para>User defined kDefaultArrayCapacity value. </para>
        </briefdescription>
        <detaileddescription>
<para>User can define this as any natural number. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="110" column="9" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf1ff1685be6cbebb5d4b2ab997776f45" prot="public" static="no">
        <name>RAPIDJSON_MAJOR_VERSION</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Major version of RapidJSON in integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="75" column="9" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf9125105c593a636a79f1c2d96835376" prot="public" static="no">
        <name>RAPIDJSON_MINOR_VERSION</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Minor version of RapidJSON in integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="76" column="9" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf967d31be43666ce7f53756d73bd1cdf" prot="public" static="no">
        <name>RAPIDJSON_PATCH_VERSION</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Patch version of RapidJSON in integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="77" column="9" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad283cfde97d9a32b7d8e8107b11f70a6" prot="public" static="no">
        <name>RAPIDJSON_VERSION_STRING</name>
        <initializer>    RAPIDJSON_STRINGIFY(<ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf967d31be43666ce7f53756d73bd1cdf" kindref="member">RAPIDJSON_MAJOR_VERSION.RAPIDJSON_MINOR_VERSION.RAPIDJSON_PATCH_VERSION</ref>)</initializer>
        <briefdescription>
<para>Version of RapidJSON in &quot;&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;&quot; string format. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="78" column="9" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga743a79d3af927391fe3eb5c979136899" prot="public" static="no">
        <name>RAPIDJSON_NAMESPACE</name>
        <initializer>rapidjson</initializer>
        <briefdescription>
<para>provide custom rapidjson namespace </para>
        </briefdescription>
        <detaileddescription>
<para>In order to avoid symbol clashes and/or &quot;One Definition Rule&quot; errors between multiple inclusions of (different versions of) RapidJSON in a single binary, users can customize the name of the main RapidJSON namespace.</para>
<para>In case of a single nesting level, defining <computeroutput>RAPIDJSON_NAMESPACE</computeroutput> to a custom name (e.g. <computeroutput>MyRapidJSON</computeroutput>) is sufficient. If multiple levels are needed, both <ref refid="namespacetest_8cpp_1ad3806c8251fdc7da9618b7e922674ffc" kindref="member">RAPIDJSON_NAMESPACE_BEGIN</ref> and <ref refid="namespacetest_8cpp_1af18f052a98b9f5df5448d39484b743c1" kindref="member">RAPIDJSON_NAMESPACE_END</ref> need to be defined as well:</para>
<para><programlisting><codeline><highlight class="normal">//<sp/>in<sp/>some<sp/>.cpp<sp/>file</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>RAPIDJSON_NAMESPACE<sp/>my::rapidjson</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>RAPIDJSON_NAMESPACE_BEGIN<sp/>namespace<sp/>my<sp/>{<sp/>namespace<sp/>rapidjson<sp/>{</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>RAPIDJSON_NAMESPACE_END<sp/><sp/><sp/>}<sp/>}</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;rapidjson/...&quot;</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><ref refid="namespacerapidjson" kindref="compound">rapidjson</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="118" column="9" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc" prot="public" static="no">
        <name>RAPIDJSON_NAMESPACE_BEGIN</name>
        <initializer>namespace <ref refid="simdtest_8cpp_1a743a79d3af927391fe3eb5c979136899" kindref="member">RAPIDJSON_NAMESPACE</ref> {</initializer>
        <briefdescription>
<para>provide custom rapidjson namespace (opening expression) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga743a79d3af927391fe3eb5c979136899" kindref="member">RAPIDJSON_NAMESPACE</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="121" column="9" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1" prot="public" static="no">
        <name>RAPIDJSON_NAMESPACE_END</name>
        <initializer>}</initializer>
        <briefdescription>
<para>provide custom rapidjson namespace (closing expression) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga743a79d3af927391fe3eb5c979136899" kindref="member">RAPIDJSON_NAMESPACE</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="124" column="9" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga2f2eef0ee4477f3fe5874703a66e997f" prot="public" static="no">
        <name>RAPIDJSON_HAS_STDSTRING</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Enable RapidJSON support for <computeroutput>std::string</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>By defining this preprocessor symbol to <computeroutput>1</computeroutput>, several convenience functions for using rapidjson::GenericValue with <computeroutput>std::string</computeroutput> are enabled, especially for construction and comparison. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="147" column="10"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga87dc65109882910388121e1dba15038b" prot="public" static="no">
        <name>RAPIDJSON_USE_MEMBERSMAP</name>
        <briefdescription>
<para>Enable RapidJSON support for object members handling in a <computeroutput>std::multimap</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>By defining this preprocessor symbol to <computeroutput>1</computeroutput>, rapidjson::GenericValue object members are stored in a <computeroutput>std::multimap</computeroutput> for faster lookup and deletion times, a trade off with a slightly slower insertion time and a small object allocat(or)ed memory overhead. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="180" column="9" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242" prot="public" static="no">
        <name>RAPIDJSON_ALIGN</name>
        <param><defname>x</defname></param>
        <initializer>(((x) + static_cast&lt;size_t&gt;(7u)) &amp; ~static_cast&lt;size_t&gt;(7u))</initializer>
        <briefdescription>
<para>Data alignment of the machine. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to align</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Some machines require strict data alignment. The default is 8 bytes. User can customize by defining the RAPIDJSON_ALIGN function macro. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="307" column="9" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga93fb983f78208d12c822376e1ea6d185" prot="public" static="no">
        <name>RAPIDJSON_48BITPOINTER_OPTIMIZATION</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Use only lower 48-bit address for some pointers. </para>
        </briefdescription>
        <detaileddescription>
<para>This optimization uses the fact that current X86-64 architecture only implement lower 48-bit virtual address. The higher 16-bit can be used for storing other data. <computeroutput><ref refid="class_generic_value" kindref="compound">GenericValue</ref></computeroutput> uses this optimization to reduce its size form 24 bytes to 16 bytes in 64-bit architecture. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="338" column="10" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" prot="public" static="no">
        <name>RAPIDJSON_ASSERT</name>
        <param><defname>x</defname></param>
        <initializer>assert(x)</initializer>
        <briefdescription>
<para>Assertion. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, rapidjson uses C <computeroutput>assert()</computeroutput> for internal assertions. User can override it by defining <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT(x)</ref> macro.</para>
<para><simplesect kind="note"><para>Parsing errors are handled and can be customized by the <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s" kindref="compound">RapidJSON error handling</ref> APIs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="437" column="10" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5dc14176a9e71ace282404b0bcda57a1" prot="public" static="no">
        <name>RAPIDJSON_LIKELY</name>
        <param><defname>x</defname></param>
        <initializer>(x)</initializer>
        <briefdescription>
<para>Compiler branching hint for expression with high probability to be true. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean expression likely to be true. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="494" column="10" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5" prot="public" static="no">
        <name>RAPIDJSON_UNLIKELY</name>
        <param><defname>x</defname></param>
        <initializer>(x)</initializer>
        <briefdescription>
<para>Compiler branching hint for expression with low probability to be true. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean expression unlikely to be true. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="507" column="10" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga2b2a0d9143aa4fb31205a85b34c43952" prot="public" static="no">
        <name>RAPIDJSON_NOEXCEPT_ASSERT</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="unittest_8h_1abeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(x)</initializer>
        <briefdescription>
<para>Assertion (in non-throwing contexts). </para>
        </briefdescription>
        <detaileddescription>
<para>Some functions provide a <computeroutput>noexcept</computeroutput> guarantee, if the compiler supports it. In these cases, the <ref refid="unittest_8h_1abeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref> macro cannot be overridden to throw an exception. This macro adds a separate customization point for such cases.</para>
<para>Defaults to C <computeroutput>assert()</computeroutput> (as <ref refid="unittest_8h_1abeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>), if <computeroutput>noexcept</computeroutput> is supported, and to <ref refid="unittest_8h_1abeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref> otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/rapidjson.h" line="687" column="10" bodyfile="src/rapidjson/include/rapidjson/rapidjson.h" bodystart="687" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga8d06f2d50592811d2890b45243b8adcc" prot="public" static="no">
        <name>RAPIDJSON_VALIDATE_DEFAULT_FLAGS</name>
        <initializer><ref refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942a6479c4dbb9ae91ad95b4e6876a96cfa4" kindref="member">kValidateNoFlags</ref></initializer>
        <briefdescription>
<para>User-defined kValidateDefaultFlags definition. </para>
        </briefdescription>
        <detaileddescription>
<para>User can define this as any <computeroutput>ValidateFlag</computeroutput> combinations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="136" column="9" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Configuration macros for library features. </para>
    </briefdescription>
    <detaileddescription>
<para>Some RapidJSON features are configurable to adapt the library to a wide variety of platforms, environments and usage scenarios. Most of the features can be configured in terms of overridden or predefined preprocessor macros at compile-time.</para>
<para>Some additional customization is available in the <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s" kindref="compound">RapidJSON error handling</ref> APIs.</para>
<para><simplesect kind="note"><para>These macros should be given on the compiler command-line (where applicable) to avoid inconsistent values when compiling different translation units of a single application. </para>
</simplesect>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
