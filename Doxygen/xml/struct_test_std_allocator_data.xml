<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="struct_test_std_allocator_data" kind="struct" language="C++" prot="public">
    <compoundname>TestStdAllocatorData</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_test_std_allocator_data_1a0142c005119a187e590994ae89dd99f4" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* TestStdAllocatorData::constructions_</definition>
        <argsstring></argsstring>
        <name>constructions_</name>
        <qualifiedname>TestStdAllocatorData::constructions_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/allocatorstest.cpp" line="82" column="9" bodyfile="src/rapidjson/test/unittest/allocatorstest.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_std_allocator_data_1a2237665a3ce4293564ba070eaabc9d7b" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int * TestStdAllocatorData::destructions_</definition>
        <argsstring></argsstring>
        <name>destructions_</name>
        <qualifiedname>TestStdAllocatorData::destructions_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/allocatorstest.cpp" line="83" column="9" bodyfile="src/rapidjson/test/unittest/allocatorstest.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_test_std_allocator_data_1a3031e2fc4064ab47fde18f810253defa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TestStdAllocatorData::TestStdAllocatorData</definition>
        <argsstring>(int &amp;constructions, int &amp;destructions)</argsstring>
        <name>TestStdAllocatorData</name>
        <qualifiedname>TestStdAllocatorData::TestStdAllocatorData</qualifiedname>
        <param>
          <type>int &amp;</type>
          <declname>constructions</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>destructions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/allocatorstest.cpp" line="56" column="5" bodyfile="src/rapidjson/test/unittest/allocatorstest.cpp" bodystart="56" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_std_allocator_data_1a2a07bb571eb8fa06c4748dde26875f7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TestStdAllocatorData::TestStdAllocatorData</definition>
        <argsstring>(const TestStdAllocatorData &amp;rhs)</argsstring>
        <name>TestStdAllocatorData</name>
        <qualifiedname>TestStdAllocatorData::TestStdAllocatorData</qualifiedname>
        <param>
          <type>const <ref refid="struct_test_std_allocator_data" kindref="compound">TestStdAllocatorData</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/allocatorstest.cpp" line="62" column="5" bodyfile="src/rapidjson/test/unittest/allocatorstest.cpp" bodystart="62" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_std_allocator_data_1a75a8b1c6aa1df7dbf7daaed76d5f3eb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_test_std_allocator_data" kindref="compound">TestStdAllocatorData</ref> &amp;</type>
        <definition>TestStdAllocatorData &amp; TestStdAllocatorData::operator=</definition>
        <argsstring>(const TestStdAllocatorData &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>TestStdAllocatorData::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_test_std_allocator_data" kindref="compound">TestStdAllocatorData</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/allocatorstest.cpp" line="68" column="26" bodyfile="src/rapidjson/test/unittest/allocatorstest.cpp" bodystart="68" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="struct_test_std_allocator_data_1aad03e78b38d8225c2df2535bedc0cc80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TestStdAllocatorData::~TestStdAllocatorData</definition>
        <argsstring>()</argsstring>
        <name>~TestStdAllocatorData</name>
        <qualifiedname>TestStdAllocatorData::~TestStdAllocatorData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/allocatorstest.cpp" line="76" column="5" bodyfile="src/rapidjson/test/unittest/allocatorstest.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_test_std_allocator_data_1a1456b004396068aef236b37361da2210" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestStdAllocatorData::TestStdAllocatorData</definition>
        <argsstring>()</argsstring>
        <name>TestStdAllocatorData</name>
        <qualifiedname>TestStdAllocatorData::TestStdAllocatorData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/allocatorstest.cpp" line="81" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/rapidjson/test/unittest/allocatorstest.cpp" line="55" column="1" bodyfile="src/rapidjson/test/unittest/allocatorstest.cpp" bodystart="55" bodyend="84"/>
    <listofallmembers>
      <member refid="struct_test_std_allocator_data_1a0142c005119a187e590994ae89dd99f4" prot="private" virt="non-virtual"><scope>TestStdAllocatorData</scope><name>constructions_</name></member>
      <member refid="struct_test_std_allocator_data_1a2237665a3ce4293564ba070eaabc9d7b" prot="private" virt="non-virtual"><scope>TestStdAllocatorData</scope><name>destructions_</name></member>
      <member refid="struct_test_std_allocator_data_1a75a8b1c6aa1df7dbf7daaed76d5f3eb4" prot="public" virt="non-virtual"><scope>TestStdAllocatorData</scope><name>operator=</name></member>
      <member refid="struct_test_std_allocator_data_1a3031e2fc4064ab47fde18f810253defa" prot="public" virt="non-virtual"><scope>TestStdAllocatorData</scope><name>TestStdAllocatorData</name></member>
      <member refid="struct_test_std_allocator_data_1a2a07bb571eb8fa06c4748dde26875f7d" prot="public" virt="non-virtual"><scope>TestStdAllocatorData</scope><name>TestStdAllocatorData</name></member>
      <member refid="struct_test_std_allocator_data_1a1456b004396068aef236b37361da2210" prot="private" virt="non-virtual"><scope>TestStdAllocatorData</scope><name>TestStdAllocatorData</name></member>
      <member refid="struct_test_std_allocator_data_1aad03e78b38d8225c2df2535bedc0cc80" prot="public" virt="non-virtual"><scope>TestStdAllocatorData</scope><name>~TestStdAllocatorData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
