<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="simplepullreader_8cpp" kind="file" language="C++">
    <compoundname>simplepullreader.cpp</compoundname>
    <includes refid="reader_8h" local="yes">rapidjson/reader.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <incdepgraph>
      <node id="1">
        <label>src/rapidjson/example/simplepullreader/simplepullreader.cpp</label>
        <link refid="simplepullreader_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>encodedstream.h</label>
        <link refid="encodedstream_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>encodings.h</label>
        <link refid="encodings_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>biginteger.h</label>
        <link refid="biginteger_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>internal/clzll.h</label>
        <link refid="clzll_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>diyfp.h</label>
        <link refid="diyfp_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ieee754.h</label>
        <link refid="ieee754_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>internal/meta.h</label>
        <link refid="meta_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>pow10.h</label>
        <link refid="pow10_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>internal/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>internal/strtod.h</label>
        <link refid="strtod_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>swap.h</label>
        <link refid="swap_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>memorystream.h</label>
        <link refid="memorystream_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>rapidjson/reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stream.h</label>
        <link refid="stream_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cassert</label>
      </node>
      <node id="24">
        <label>climits</label>
      </node>
      <node id="17">
        <label>cstddef</label>
      </node>
      <node id="5">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>cstring</label>
      </node>
      <node id="26">
        <label>iostream</label>
      </node>
      <node id="22">
        <label>limits</label>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
      <node id="27">
        <label>sstream</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_my_handler" prot="public">MyHandler</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="simplepullreader_8cpp_1a43b8f2b628e0f7f9342371359889a778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string stringify</definition>
        <argsstring>(T x)</argsstring>
        <name>stringify</name>
        <param>
          <type><ref refid="writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/simplepullreader/simplepullreader.cpp" line="9" column="25" bodyfile="src/rapidjson/example/simplepullreader/simplepullreader.cpp" bodystart="9" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="simplepullreader_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/simplepullreader/simplepullreader.cpp" line="40" column="5" bodyfile="src/rapidjson/example/simplepullreader/simplepullreader.cpp" bodystart="40" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reader_8h" kindref="compound">rapidjson/reader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerapidjson" kindref="compound">rapidjson</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>can<sp/>require<sp/>C++11,<sp/>you<sp/>could<sp/>use<sp/>std::to_string<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>std::string<sp/><ref refid="simplepullreader_8cpp_1a43b8f2b628e0f7f9342371359889a778" kindref="member">stringify</ref>(<ref refid="prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf" kindref="member">T</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>x;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="struct_my_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_my_handler" kindref="compound">MyHandler</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_my_handler_1ae759f5e534afb5cb99a4fefb3d04f2d4" kindref="member">MyHandler</ref>()<sp/>:<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref>(),<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1a73b14891ee0ab44fc336b3e2044e3153" kindref="member">Null</ref>()<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Null&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref>.clear();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1a29eeca8918d0966a0551adb23c8a2b15" kindref="member">Bool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Bool:&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref><sp/>=<sp/>b?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1aa7cda8307f15dd8f4a09947e527d56cf" kindref="member">Int</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Int:&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref><sp/>=<sp/><ref refid="simplepullreader_8cpp_1a43b8f2b628e0f7f9342371359889a778" kindref="member">stringify</ref>(i);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1a469684e51df996bab87e0c22c0ea64fd" kindref="member">Uint</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>u)<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Uint:&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref><sp/>=<sp/><ref refid="simplepullreader_8cpp_1a43b8f2b628e0f7f9342371359889a778" kindref="member">stringify</ref>(u);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1a5676446b090d3c71386aec6a39dbb188" kindref="member">Int64</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i)<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Int64:&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref><sp/>=<sp/><ref refid="simplepullreader_8cpp_1a43b8f2b628e0f7f9342371359889a778" kindref="member">stringify</ref>(i);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1a87b2d8341b4e3a38d405a89fe0d848ad" kindref="member">Uint64</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>u)<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Uint64:&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref><sp/>=<sp/><ref refid="simplepullreader_8cpp_1a43b8f2b628e0f7f9342371359889a778" kindref="member">stringify</ref>(u);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1a5ff39ea10f682eab1943480b020c6f5a" kindref="member">Double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Double:&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref><sp/>=<sp/><ref refid="simplepullreader_8cpp_1a43b8f2b628e0f7f9342371359889a778" kindref="member">stringify</ref>(d);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1a4e16a5a38de99a5d3b54992f3fbe2452" kindref="member">RawNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Number:&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref><sp/>=<sp/>std::string(str,<sp/>length);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1a5f46e8498869668d70e23453126a7b12" kindref="member">String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;String:&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref><sp/>=<sp/>std::string(str,<sp/>length);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1afc0da4321f0a06e3cd351e573c435ffe" kindref="member">StartObject</ref>()<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;StartObject&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref>.clear();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1afca1a3a16289baf03128fa7d63081526" kindref="member">Key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Key:&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref><sp/>=<sp/>std::string(str,<sp/>length);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1a3eb4011dcba95939e5f08e71c1596395" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>memberCount)<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EndObject:&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref><sp/>=<sp/><ref refid="simplepullreader_8cpp_1a43b8f2b628e0f7f9342371359889a778" kindref="member">stringify</ref>(memberCount);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1a1e794a6439658520bda0de14f661fc50" kindref="member">StartArray</ref>()<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;StartArray&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref>.clear();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler_1a8654e16efc52d41397ce1a9af98bcb80" kindref="member">EndArray</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>elementCount)<sp/>{<sp/><ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EndArray:&quot;</highlight><highlight class="normal">;<sp/><ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref><sp/>=<sp/><ref refid="simplepullreader_8cpp_1a43b8f2b628e0f7f9342371359889a778" kindref="member">stringify</ref>(elementCount);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_my_handler_1ae759f5e534afb5cb99a4fefb3d04f2d4" kindref="member">MyHandler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler" kindref="compound">MyHandler</ref>&amp;<sp/>noCopyConstruction);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_my_handler" kindref="compound">MyHandler</ref>&amp;<sp/><ref refid="struct_my_handler_1af8b7601c8128c3c196bbbd1030701188" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_my_handler" kindref="compound">MyHandler</ref>&amp;<sp/>noAssignment);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="simplepullreader_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetest_8cpp_1a04e873a45a18dab42dc9a0eba4f3deee" kindref="member">json</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{<sp/>\&quot;hello\&quot;<sp/>:<sp/>\&quot;world\&quot;,<sp/>\&quot;t\&quot;<sp/>:<sp/>true<sp/>,<sp/>\&quot;f\&quot;<sp/>:<sp/>false,<sp/>\&quot;n\&quot;:<sp/>null,<sp/>\&quot;i\&quot;:123,<sp/>\&quot;pi\&quot;:<sp/>3.1416,<sp/>\&quot;a\&quot;:[1,<sp/>2,<sp/>3,<sp/>4]<sp/>}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_my_handler" kindref="compound">MyHandler</ref><sp/>handler;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>ss(<ref refid="namespacetest_8cpp_1a04e873a45a18dab42dc9a0eba4f3deee" kindref="member">json</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a7de472eda2ad9de13cfd8c1de74f1754" kindref="member">IterativeParseInit</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!reader.<ref refid="class_generic_reader_1aa1e9e1eef614fde971550ed2f955151d" kindref="member">IterativeParseComplete</ref>())<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader.<ref refid="class_generic_reader_1a257891331e0c259903e7066fb4cebf92" kindref="member">IterativeParseNext</ref>&lt;<ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a9104b0946d648e9467cb7a967401ec80" kindref="member">kParseDefaultFlags</ref>&gt;(ss,<sp/>handler);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>handler.<ref refid="struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971" kindref="member">type</ref><sp/>&lt;&lt;<sp/>handler.<ref refid="struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc" kindref="member">data</ref><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/rapidjson/example/simplepullreader/simplepullreader.cpp"/>
  </compounddef>
</doxygen>
