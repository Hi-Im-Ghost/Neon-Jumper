<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="stringbuffertest_8cpp" kind="file" language="C++">
    <compoundname>stringbuffertest.cpp</compoundname>
    <includes refid="unittest_8h" local="yes">unittest.h</includes>
    <includes refid="stringbuffer_8h" local="yes">rapidjson/stringbuffer.h</includes>
    <includes refid="writer_8h" local="yes">rapidjson/writer.h</includes>
    <incdepgraph>
      <node id="13">
        <label>../allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>encodings.h</label>
        <link refid="encodings_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>internal/clzll.h</label>
        <link refid="clzll_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>diyfp.h</label>
        <link refid="diyfp_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>internal/dtoa.h</label>
        <link refid="dtoa_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ieee754.h</label>
        <link refid="ieee754_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>itoa.h</label>
        <link refid="itoa_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>internal/meta.h</label>
        <link refid="meta_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>internal/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>internal/strfunc.h</label>
        <link refid="strfunc_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>swap.h</label>
        <link refid="swap_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stream.h</label>
        <link refid="stream_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>rapidjson/stringbuffer.h</label>
        <link refid="stringbuffer_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>rapidjson/writer.h</label>
        <link refid="writer_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/rapidjson/test/unittest/stringbuffertest.cpp</label>
        <link refid="stringbuffertest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>unittest.h</label>
        <link refid="unittest_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cassert</label>
      </node>
      <node id="17">
        <label>cstddef</label>
      </node>
      <node id="8">
        <label>cstdlib</label>
      </node>
      <node id="9">
        <label>cstring</label>
      </node>
      <node id="21">
        <label>cwchar</label>
      </node>
      <node id="3">
        <label>gtest/gtest.h</label>
      </node>
      <node id="25">
        <label>limits</label>
      </node>
      <node id="15">
        <label>memory</label>
      </node>
      <node id="27">
        <label>new</label>
      </node>
      <node id="4">
        <label>stdexcept</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="stringbuffertest_8cpp_1a6f92b34ed62474587cb34b64162d5878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(StringBuffer, InitialSize)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" kindref="member">StringBuffer</ref></type>
        </param>
        <param>
          <type>InitialSize</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/stringbuffertest.cpp" line="26" column="1" bodyfile="src/rapidjson/test/unittest/stringbuffertest.cpp" bodystart="26" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="stringbuffertest_8cpp_1a35396fd51e755e78dcd41d821fec4818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(StringBuffer, Put)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" kindref="member">StringBuffer</ref></type>
        </param>
        <param>
          <type>Put</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/stringbuffertest.cpp" line="33" column="1" bodyfile="src/rapidjson/test/unittest/stringbuffertest.cpp" bodystart="33" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="stringbuffertest_8cpp_1a7655c9b98a62e2c2baf27f414edea796" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(StringBuffer, PutN_Issue672)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" kindref="member">StringBuffer</ref></type>
        </param>
        <param>
          <type>PutN_Issue672</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/stringbuffertest.cpp" line="42" column="1" bodyfile="src/rapidjson/test/unittest/stringbuffertest.cpp" bodystart="42" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="stringbuffertest_8cpp_1a58e114f4cdf292eb2d79fd07d8075624" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(StringBuffer, Clear)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" kindref="member">StringBuffer</ref></type>
        </param>
        <param>
          <type>Clear</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/stringbuffertest.cpp" line="51" column="1" bodyfile="src/rapidjson/test/unittest/stringbuffertest.cpp" bodystart="51" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="stringbuffertest_8cpp_1a2a076022dd05a90d4537ba48032212c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(StringBuffer, Push)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" kindref="member">StringBuffer</ref></type>
        </param>
        <param>
          <type>Push</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/stringbuffertest.cpp" line="63" column="1" bodyfile="src/rapidjson/test/unittest/stringbuffertest.cpp" bodystart="63" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="stringbuffertest_8cpp_1a01d80f83d15918d8b15eb382abe0ba29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(StringBuffer, Pop)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" kindref="member">StringBuffer</ref></type>
        </param>
        <param>
          <type>Pop</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/stringbuffertest.cpp" line="75" column="1" bodyfile="src/rapidjson/test/unittest/stringbuffertest.cpp" bodystart="75" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="stringbuffertest_8cpp_1aff5a30dd9e07bc4095de5ff9304c0323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(StringBuffer, GetLength_Issue744)</argsstring>
        <name>TEST</name>
        <param>
          <type><ref refid="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" kindref="member">StringBuffer</ref></type>
        </param>
        <param>
          <type>GetLength_Issue744</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/stringbuffertest.cpp" line="89" column="1" bodyfile="src/rapidjson/test/unittest/stringbuffertest.cpp" bodystart="89" bodyend="96"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://opensource.org/licenses/MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unittest_8h" kindref="compound">unittest.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stringbuffer_8h" kindref="compound">rapidjson/stringbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="writer_8h" kindref="compound">rapidjson/writer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight></codeline>
<codeline lineno="21"><highlight class="normal">RAPIDJSON_DIAG_OFF(c++98-compat)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerapidjson" kindref="compound">rapidjson</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="stringbuffertest_8cpp_1a6f92b34ed62474587cb34b64162d5878" kindref="member">TEST</ref>(<ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref>,<sp/>InitialSize)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref><sp/>buffer;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0u,<sp/>buffer.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0u,<sp/>buffer.<ref refid="class_generic_string_buffer_1ad324b8154be3354dda3aa4a0a7361499" kindref="member">GetLength</ref>());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>buffer.<ref refid="class_generic_string_buffer_1a42079865bab1deb930c6cff7d491c719" kindref="member">GetString</ref>());</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="stringbuffertest_8cpp_1a6f92b34ed62474587cb34b64162d5878" kindref="member">TEST</ref>(<ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref>,<sp/>Put)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref><sp/>buffer;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>buffer.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>buffer.<ref refid="class_generic_string_buffer_1ad324b8154be3354dda3aa4a0a7361499" kindref="member">GetLength</ref>());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/>buffer.<ref refid="class_generic_string_buffer_1a42079865bab1deb930c6cff7d491c719" kindref="member">GetString</ref>());</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="stringbuffertest_8cpp_1a6f92b34ed62474587cb34b64162d5878" kindref="member">TEST</ref>(<ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref>,<sp/>PutN_Issue672)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer&lt;UTF8&lt;&gt;</ref>,<sp/><ref refid="class_memory_pool_allocator" kindref="compound">MemoryPoolAllocator&lt;&gt;</ref><sp/>&gt;<sp/>buffer;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0u,<sp/>buffer.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0u,<sp/>buffer.<ref refid="class_generic_string_buffer_1ad324b8154be3354dda3aa4a0a7361499" kindref="member">GetLength</ref>());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="filewritestream_8h_1a5c9b0f0e6249be2acf7f3505c295c132" kindref="member">rapidjson::PutN</ref>(buffer,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>buffer.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/>buffer.<ref refid="class_generic_string_buffer_1ad324b8154be3354dda3aa4a0a7361499" kindref="member">GetLength</ref>());</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="stringbuffertest_8cpp_1a6f92b34ed62474587cb34b64162d5878" kindref="member">TEST</ref>(<ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref>,<sp/>Clear)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref><sp/>buffer;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a42f15c959046d899cb74c3120a6995f9" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0u,<sp/>buffer.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0u,<sp/>buffer.<ref refid="class_generic_string_buffer_1ad324b8154be3354dda3aa4a0a7361499" kindref="member">GetLength</ref>());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>buffer.<ref refid="class_generic_string_buffer_1a42079865bab1deb930c6cff7d491c719" kindref="member">GetString</ref>());</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="stringbuffertest_8cpp_1a6f92b34ed62474587cb34b64162d5878" kindref="member">TEST</ref>(<ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref>,<sp/>Push)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref><sp/>buffer;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a80af78c43da93126a940a40d1889278a" kindref="member">Push</ref>(5);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(5u,<sp/>buffer.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(5u,<sp/>buffer.<ref refid="class_generic_string_buffer_1ad324b8154be3354dda3aa4a0a7361499" kindref="member">GetLength</ref>());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Causes<sp/>sudden<sp/>expansion<sp/>to<sp/>make<sp/>the<sp/>stack&apos;s<sp/>capacity<sp/>equal<sp/>to<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a80af78c43da93126a940a40d1889278a" kindref="member">Push</ref>(65536u);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(5u<sp/>+<sp/>65536u,<sp/>buffer.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="stringbuffertest_8cpp_1a6f92b34ed62474587cb34b64162d5878" kindref="member">TEST</ref>(<ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref>,<sp/>Pop)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref><sp/>buffer;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a0038e53ba03c271bc4cbbac403ec4de4" kindref="member">Pop</ref>(3);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(2u,<sp/>buffer.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(2u,<sp/>buffer.<ref refid="class_generic_string_buffer_1ad324b8154be3354dda3aa4a0a7361499" kindref="member">GetLength</ref>());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;AB&quot;</highlight><highlight class="normal">,<sp/>buffer.<ref refid="class_generic_string_buffer_1a42079865bab1deb930c6cff7d491c719" kindref="member">GetString</ref>());</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="stringbuffertest_8cpp_1a6f92b34ed62474587cb34b64162d5878" kindref="member">TEST</ref>(<ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref>,<sp/>GetLength_Issue744)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer&lt;UTF16&lt;wchar_t&gt;</ref><sp/>&gt;<sp/>buffer;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(3u<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">),<sp/>buffer.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(3u,<sp/>buffer.<ref refid="class_generic_string_buffer_1ad324b8154be3354dda3aa4a0a7361499" kindref="member">GetLength</ref>());</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/></highlight><highlight class="comment">//<sp/>Many<sp/>old<sp/>compiler<sp/>does<sp/>not<sp/>support<sp/>these.<sp/>Turn<sp/>it<sp/>off<sp/>temporaily.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="stringbuffertest_8cpp_1a6f92b34ed62474587cb34b64162d5878" kindref="member">TEST</ref>(<ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref>,<sp/><ref refid="struct_traits" kindref="compound">Traits</ref>)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_constructible&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_default_constructible&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_copy_constructible&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_move_constructible&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_nothrow_constructible&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_nothrow_default_constructible&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_MSC_VER)<sp/>||<sp/>_MSC_VER<sp/>&gt;=<sp/>1800</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_nothrow_copy_constructible&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_nothrow_move_constructible&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_assignable&lt;StringBuffer,StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_copy_assignable&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_move_assignable&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_MSC_VER)<sp/>||<sp/>_MSC_VER<sp/>&gt;=<sp/>1800</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_nothrow_assignable&lt;StringBuffer, StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_nothrow_copy_assignable&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(!<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_nothrow_move_assignable&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_destructible&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">std::is_nothrow_destructible&lt;StringBuffer&gt;::value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="stringbuffertest_8cpp_1a6f92b34ed62474587cb34b64162d5878" kindref="member">TEST</ref>(<ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref>,<sp/>MoveConstructor)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref><sp/>x;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>x.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>x.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>x.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>x.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(4u,<sp/>x.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(4u,<sp/>x.<ref refid="class_generic_string_buffer_1ad324b8154be3354dda3aa4a0a7361499" kindref="member">GetLength</ref>());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;ABCD&quot;</highlight><highlight class="normal">,<sp/>x.<ref refid="class_generic_string_buffer_1a42079865bab1deb930c6cff7d491c719" kindref="member">GetString</ref>());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>StringBuffer<sp/>y(x);<sp/>//<sp/>does<sp/>not<sp/>compile<sp/>(!is_copy_constructible)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref><sp/>y(std::move(x));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0u,<sp/>x.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0u,<sp/>x.<ref refid="class_generic_string_buffer_1ad324b8154be3354dda3aa4a0a7361499" kindref="member">GetLength</ref>());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(4u,<sp/>y.GetSize());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(4u,<sp/>y.GetLength());</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;ABCD&quot;</highlight><highlight class="normal">,<sp/>y.GetString());</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>StringBuffer<sp/>z<sp/>=<sp/>y;<sp/>//<sp/>does<sp/>not<sp/>compile<sp/>(!is_copy_assignable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref><sp/>z<sp/>=<sp/>std::move(y);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0u,<sp/>y.GetSize());</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0u,<sp/>y.GetLength());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(4u,<sp/>z.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(4u,<sp/>z.<ref refid="class_generic_string_buffer_1ad324b8154be3354dda3aa4a0a7361499" kindref="member">GetLength</ref>());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;ABCD&quot;</highlight><highlight class="normal">,<sp/>z.<ref refid="class_generic_string_buffer_1a42079865bab1deb930c6cff7d491c719" kindref="member">GetString</ref>());</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="stringbuffertest_8cpp_1a6f92b34ed62474587cb34b64162d5878" kindref="member">TEST</ref>(<ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref>,<sp/>MoveAssignment)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref><sp/>x;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>x.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>x.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>x.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>x.<ref refid="class_generic_string_buffer_1a8be5c8fadccacdcf40e20220f38e0afa" kindref="member">Put</ref>(</highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(4u,<sp/>x.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(4u,<sp/>x.<ref refid="class_generic_string_buffer_1ad324b8154be3354dda3aa4a0a7361499" kindref="member">GetLength</ref>());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;ABCD&quot;</highlight><highlight class="normal">,<sp/>x.<ref refid="class_generic_string_buffer_1a42079865bab1deb930c6cff7d491c719" kindref="member">GetString</ref>());</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref><sp/>y;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>=<sp/>x;<sp/>//<sp/>does<sp/>not<sp/>compile<sp/>(!is_copy_assignable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>std::move(x);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0u,<sp/>x.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(4u,<sp/>y.<ref refid="class_generic_string_buffer_1ad324b8154be3354dda3aa4a0a7361499" kindref="member">GetLength</ref>());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_STREQ(</highlight><highlight class="stringliteral">&quot;ABCD&quot;</highlight><highlight class="normal">,<sp/>y.<ref refid="class_generic_string_buffer_1a42079865bab1deb930c6cff7d491c719" kindref="member">GetString</ref>());</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">RAPIDJSON_DIAG_POP</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/rapidjson/test/unittest/stringbuffertest.cpp"/>
  </compounddef>
</doxygen>
