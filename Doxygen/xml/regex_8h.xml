<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="regex_8h" kind="file" language="C++">
    <compoundname>regex.h</compoundname>
    <includes refid="allocators_8h" local="yes">../allocators.h</includes>
    <includes refid="stream_8h" local="yes">../stream.h</includes>
    <includes refid="stack_8h" local="yes">stack.h</includes>
    <includedby refid="schema_8h" local="yes">src/rapidjson/include/rapidjson/schema.h</includedby>
    <includedby refid="regextest_8cpp" local="yes">src/rapidjson/test/unittest/regextest.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>../allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>encodings.h</label>
        <link refid="encodings_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>internal/meta.h</label>
        <link refid="meta_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/rapidjson/include/rapidjson/internal/regex.h</label>
        <link refid="regex_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>swap.h</label>
        <link refid="swap_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../stream.h</label>
        <link refid="stream_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cassert</label>
      </node>
      <node id="13">
        <label>cstddef</label>
      </node>
      <node id="4">
        <label>cstdlib</label>
      </node>
      <node id="5">
        <label>cstring</label>
      </node>
      <node id="8">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/rapidjson/example/schemavalidator/schemavalidator.cpp</label>
        <link refid="schemavalidator_8cpp"/>
      </node>
      <node id="1">
        <label>src/rapidjson/include/rapidjson/internal/regex.h</label>
        <link refid="regex_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/rapidjson/include/rapidjson/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/rapidjson/test/perftest/schematest.cpp</label>
        <link refid="perftest_2schematest_8cpp"/>
      </node>
      <node id="5">
        <label>src/rapidjson/test/unittest/fwdtest.cpp</label>
        <link refid="fwdtest_8cpp"/>
      </node>
      <node id="7">
        <label>src/rapidjson/test/unittest/regextest.cpp</label>
        <link refid="regextest_8cpp"/>
      </node>
      <node id="6">
        <label>src/rapidjson/test/unittest/schematest.cpp</label>
        <link refid="unittest_2schematest_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classinternal_1_1_decoded_stream" prot="public">internal::DecodedStream</innerclass>
    <innerclass refid="classinternal_1_1_generic_regex" prot="public">internal::GenericRegex</innerclass>
    <innerclass refid="structinternal_1_1_generic_regex_1_1_range" prot="private">internal::GenericRegex::Range</innerclass>
    <innerclass refid="structinternal_1_1_generic_regex_1_1_state" prot="private">internal::GenericRegex::State</innerclass>
    <innerclass refid="structinternal_1_1_generic_regex_1_1_frag" prot="private">internal::GenericRegex::Frag</innerclass>
    <innerclass refid="classinternal_1_1_generic_regex_search" prot="public">internal::GenericRegexSearch</innerclass>
    <innernamespace refid="namespaceinternal">internal</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="regex_8h_1add4f406439cd2c04f128814e72ae9064" prot="public" static="no">
        <name>RAPIDJSON_REGEX_VERBOSE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="37" column="9" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://opensource.org/licenses/MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_INTERNAL_REGEX_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_INTERNAL_REGEX_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../allocators.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../stream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stack_8h" kindref="compound">stack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight></codeline>
<codeline lineno="24"><highlight class="normal">RAPIDJSON_DIAG_OFF(padded)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">RAPIDJSON_DIAG_OFF(</highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">-</highlight><highlight class="keyword">enum</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight></codeline>
<codeline lineno="28"><highlight class="normal">RAPIDJSON_DIAG_OFF(4512)<sp/></highlight><highlight class="comment">//<sp/>assignment<sp/>operator<sp/>could<sp/>not<sp/>be<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight></codeline>
<codeline lineno="33"><highlight class="normal">RAPIDJSON_DIAG_OFF(effc++)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_REGEX_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="regex_8h_1add4f406439cd2c04f128814e72ae9064" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_REGEX_VERBOSE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc" kindref="member">RAPIDJSON_NAMESPACE_BEGIN</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceinternal" kindref="compound">internal</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="comment">//<sp/>DecodedStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceStream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding&gt;</highlight></codeline>
<codeline lineno="47" refid="classinternal_1_1_decoded_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classinternal_1_1_decoded_stream" kindref="compound">DecodedStream</ref><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49" refid="classinternal_1_1_decoded_stream_1a45cf40c4e515be8aaa8cd020eaa67595" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_decoded_stream_1a45cf40c4e515be8aaa8cd020eaa67595" kindref="member">DecodedStream</ref>(SourceStream&amp;<sp/>ss)<sp/>:<sp/><ref refid="classinternal_1_1_decoded_stream_1ac87f823c7c950f13145dc3c151dcf714" kindref="member">ss_</ref>(ss),<sp/><ref refid="classinternal_1_1_decoded_stream_1ab2d66695cea627ac0b2a53a5ff8d5526" kindref="member">codepoint_</ref>()<sp/>{<sp/><ref refid="classinternal_1_1_decoded_stream_1aec6be1692e1f283c1dde407cce1bb873" kindref="member">Decode</ref>();<sp/>}</highlight></codeline>
<codeline lineno="50" refid="classinternal_1_1_decoded_stream_1ac78f2cbc03ae0d79a0fcfe6d56589d70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_decoded_stream_1ac78f2cbc03ae0d79a0fcfe6d56589d70" kindref="member">Peek</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_decoded_stream_1ab2d66695cea627ac0b2a53a5ff8d5526" kindref="member">codepoint_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="51" refid="classinternal_1_1_decoded_stream_1a62b45969ce169bef1da0600490329857" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_decoded_stream_1a62b45969ce169bef1da0600490329857" kindref="member">Take</ref>()<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>c<sp/>=<sp/><ref refid="classinternal_1_1_decoded_stream_1ab2d66695cea627ac0b2a53a5ff8d5526" kindref="member">codepoint_</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c)<sp/></highlight><highlight class="comment">//<sp/>No<sp/>further<sp/>decoding<sp/>when<sp/>&apos;\0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_decoded_stream_1aec6be1692e1f283c1dde407cce1bb873" kindref="member">Decode</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classinternal_1_1_decoded_stream_1aec6be1692e1f283c1dde407cce1bb873" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_decoded_stream_1aec6be1692e1f283c1dde407cce1bb873" kindref="member">Decode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Encoding::Decode(<ref refid="classinternal_1_1_decoded_stream_1ac87f823c7c950f13145dc3c151dcf714" kindref="member">ss_</ref>,<sp/>&amp;<ref refid="classinternal_1_1_decoded_stream_1ab2d66695cea627ac0b2a53a5ff8d5526" kindref="member">codepoint_</ref>))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_decoded_stream_1ab2d66695cea627ac0b2a53a5ff8d5526" kindref="member">codepoint_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classinternal_1_1_decoded_stream_1ac87f823c7c950f13145dc3c151dcf714" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SourceStream&amp;<sp/><ref refid="classinternal_1_1_decoded_stream_1ac87f823c7c950f13145dc3c151dcf714" kindref="member">ss_</ref>;</highlight></codeline>
<codeline lineno="65" refid="classinternal_1_1_decoded_stream_1ab2d66695cea627ac0b2a53a5ff8d5526" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_decoded_stream_1ab2d66695cea627ac0b2a53a5ff8d5526" kindref="member">codepoint_</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="comment">//<sp/>GenericRegex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref><sp/>=<sp/>~SizeType(0);<sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="namespaceinternal_1afc9153a9f72e57e5184d5c54562fa8f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="namespaceinternal_1afc9153a9f72e57e5184d5c54562fa8f7" kindref="member">kRegexInvalidRange</ref><sp/>=<sp/>~SizeType(0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classinternal_1_1_generic_regex_search" kindref="compound">GenericRegexSearch</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/>CrtAllocator&gt;</highlight></codeline>
<codeline lineno="110" refid="classinternal_1_1_generic_regex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classinternal_1_1_generic_regex" kindref="compound">GenericRegex</ref><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112" refid="classinternal_1_1_generic_regex_1a8d0eb2f6a71868b2a8f03382b7836d30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref><sp/><ref refid="classinternal_1_1_generic_regex_1a8d0eb2f6a71868b2a8f03382b7836d30" kindref="member">EncodingType</ref>;</highlight></codeline>
<codeline lineno="113" refid="classinternal_1_1_generic_regex_1a44e1a86ec27e1c5628a7d91c8c3daace" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch<sp/><ref refid="classinternal_1_1_generic_regex_1a44e1a86ec27e1c5628a7d91c8c3daace" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="114" refid="classinternal_1_1_generic_regex_1a919008cc046ab9f1c09609f1fc143986" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classinternal_1_1_generic_regex_search" kindref="compound">GenericRegexSearch</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classinternal_1_1_generic_regex_1a35c3a49bc4545a991ab039858227df0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a35c3a49bc4545a991ab039858227df0f" kindref="member">GenericRegex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a44e1a86ec27e1c5628a7d91c8c3daace" kindref="member">Ch</ref>*<sp/><ref refid="pointer_8h_1adb82dfe18535e9a30aa97d275f82bd55" kindref="member">source</ref>,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>*<sp/>allocator<sp/>=<sp/>0)<sp/>:<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a63f4d8c4e3d61fcd9f1489347708ded8" kindref="member">ownAllocator_</ref>(allocator<sp/>?<sp/>0<sp/>:<sp/><ref refid="rapidjson_8h_1abdc7cd7902748ffe6626d71c59a73c3b" kindref="member">RAPIDJSON_NEW</ref>(<ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>)()),<sp/><ref refid="classinternal_1_1_generic_regex_1a2fb2543ae1c5ec68f891745fa69af0e3" kindref="member">allocator_</ref>(allocator<sp/>?<sp/>allocator<sp/>:<sp/><ref refid="classinternal_1_1_generic_regex_1a63f4d8c4e3d61fcd9f1489347708ded8" kindref="member">ownAllocator_</ref>),<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a5391b182b60bb8967dd0a6d99db9c9f0" kindref="member">states_</ref>(<ref refid="classinternal_1_1_generic_regex_1a2fb2543ae1c5ec68f891745fa69af0e3" kindref="member">allocator_</ref>,<sp/>256),<sp/><ref refid="classinternal_1_1_generic_regex_1af94c64023502147345303d70ff594140" kindref="member">ranges_</ref>(<ref refid="classinternal_1_1_generic_regex_1a2fb2543ae1c5ec68f891745fa69af0e3" kindref="member">allocator_</ref>,<sp/>256),<sp/><ref refid="classinternal_1_1_generic_regex_1a2af8c29234a2229b509fdf60cf265201" kindref="member">root_</ref>(<ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>),<sp/><ref refid="classinternal_1_1_generic_regex_1af47146f067e491bb9cb23b13a88a26db" kindref="member">stateCount_</ref>(),<sp/><ref refid="classinternal_1_1_generic_regex_1ad65c6144b7dc5b0441ef20dc4ef81619" kindref="member">rangeCount_</ref>(),<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1ac99b045cc5250649ea3708bee95a56e8" kindref="member">anchorBegin_</ref>(),<sp/><ref refid="classinternal_1_1_generic_regex_1adbd19f8921ece1563d02e74f479d2e13" kindref="member">anchorEnd_</ref>()</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;Encoding&gt;</ref><sp/>ss(<ref refid="pointer_8h_1adb82dfe18535e9a30aa97d275f82bd55" kindref="member">source</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_decoded_stream" kindref="compound">DecodedStream&lt;GenericStringStream&lt;Encoding&gt;</ref>,<sp/><ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>&gt;<sp/>ds(ss);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a038af33f370a14f987fb79d78f0d1c75" kindref="member">Parse</ref>(ds);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classinternal_1_1_generic_regex_1a6a4956c0391bccbf8580b2e047d5bc35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a6a4956c0391bccbf8580b2e047d5bc35" kindref="member">~GenericRegex</ref>()</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a52c941c3fdd646527cdcd42aa846a28a" kindref="member">RAPIDJSON_DELETE</ref>(<ref refid="classinternal_1_1_generic_regex_1a63f4d8c4e3d61fcd9f1489347708ded8" kindref="member">ownAllocator_</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classinternal_1_1_generic_regex_1a34ddb18fa3a2c70203d0fb740443c2a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a34ddb18fa3a2c70203d0fb740443c2a8" kindref="member">IsValid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a2af8c29234a2229b509fdf60cf265201" kindref="member">root_</ref><sp/>!=<sp/><ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="136" refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673" kindref="member">Operator</ref><sp/>{</highlight></codeline>
<codeline lineno="137" refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ad4577594ddb5fee3be7138b0759c35b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ad4577594ddb5fee3be7138b0759c35b3" kindref="member">kZeroOrOne</ref>,</highlight></codeline>
<codeline lineno="138" refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673aa4482f5484f4db6675095aaec3286e4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673aa4482f5484f4db6675095aaec3286e4f" kindref="member">kZeroOrMore</ref>,</highlight></codeline>
<codeline lineno="139" refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a5640dadf6c1cff543463686f2f2903e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a5640dadf6c1cff543463686f2f2903e3" kindref="member">kOneOrMore</ref>,</highlight></codeline>
<codeline lineno="140" refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a989378c9dfab87e3faf7b5e7db8885a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a989378c9dfab87e3faf7b5e7db8885a2" kindref="member">kConcatenation</ref>,</highlight></codeline>
<codeline lineno="141" refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a6c251a26f84dc6bc21717ef5fe8504d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a6c251a26f84dc6bc21717ef5fe8504d4" kindref="member">kAlternation</ref>,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ae2f7e4cfde06337266fa1ac3a8b47d54" kindref="member">kLeftParenthesis</ref></highlight></codeline>
<codeline lineno="143" refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ae2f7e4cfde06337266fa1ac3a8b47d54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classinternal_1_1_generic_regex_1a1f3b72c56d5eab221ba46a473ff611dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a1f3b72c56d5eab221ba46a473ff611dd" kindref="member">kAnyCharacterClass</ref><sp/>=<sp/>0xFFFFFFFF;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146" refid="classinternal_1_1_generic_regex_1aec665a90fdb2372dbc18a6ca0971e886" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1aec665a90fdb2372dbc18a6ca0971e886" kindref="member">kRangeCharacterClass</ref><sp/>=<sp/>0xFFFFFFFE;</highlight></codeline>
<codeline lineno="147" refid="classinternal_1_1_generic_regex_1ae435570506343e24811e588614f6842b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1ae435570506343e24811e588614f6842b" kindref="member">kRangeNegationFlag</ref><sp/>=<sp/>0x80000000;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="structinternal_1_1_generic_regex_1_1_range" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_generic_regex_1_1_range" kindref="compound">Range</ref><sp/>{</highlight></codeline>
<codeline lineno="150" refid="structinternal_1_1_generic_regex_1_1_range_1a7b407235cac7d4245b984c970c8b2026" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_generic_regex_1_1_range_1a7b407235cac7d4245b984c970c8b2026" kindref="member">start</ref>;<sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="structinternal_1_1_generic_regex_1_1_range_1a48a003fe4bf27591ec30595c968953f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_generic_regex_1_1_range_1a48a003fe4bf27591ec30595c968953f2" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="152" refid="structinternal_1_1_generic_regex_1_1_range_1abaff4592e1947f5368339ebfa7ad9f7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="structinternal_1_1_generic_regex_1_1_range_1abaff4592e1947f5368339ebfa7ad9f7f" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="structinternal_1_1_generic_regex_1_1_state" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_generic_regex_1_1_state" kindref="compound">State</ref><sp/>{</highlight></codeline>
<codeline lineno="156" refid="structinternal_1_1_generic_regex_1_1_state_1a2db0ecd5296137b4e27a8bdb9b9b3a36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="structinternal_1_1_generic_regex_1_1_state_1a2db0ecd5296137b4e27a8bdb9b9b3a36" kindref="member">out</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157" refid="structinternal_1_1_generic_regex_1_1_state_1a018baa62233a52e87df7dac21dcfefc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="structinternal_1_1_generic_regex_1_1_state_1a018baa62233a52e87df7dac21dcfefc7" kindref="member">out1</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158" refid="structinternal_1_1_generic_regex_1_1_state_1a4f994da3eb09d3d86ad7dbfec4dd5c1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="structinternal_1_1_generic_regex_1_1_state_1a4f994da3eb09d3d86ad7dbfec4dd5c1c" kindref="member">rangeStart</ref>;</highlight></codeline>
<codeline lineno="159" refid="structinternal_1_1_generic_regex_1_1_state_1ab085a481f7a18c4a70d4cc534a72a23e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_generic_regex_1_1_state_1ab085a481f7a18c4a70d4cc534a72a23e" kindref="member">codepoint</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="structinternal_1_1_generic_regex_1_1_frag" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref><sp/>{</highlight></codeline>
<codeline lineno="163" refid="structinternal_1_1_generic_regex_1_1_frag_1a377c8d806013ce14ff941be9427e80ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag_1a377c8d806013ce14ff941be9427e80ff" kindref="member">Frag</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>s,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>o,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>m)<sp/>:<sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag_1adec8170ccdf14bfc3138a4df0b2e4abd" kindref="member">start</ref>(s),<sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag_1a48b23d866d56328e05c187de2d7443d2" kindref="member">out</ref>(o),<sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag_1a8007c1e6c879d1fe3eec2327fed0c664" kindref="member">minIndex</ref>(m)<sp/>{}</highlight></codeline>
<codeline lineno="164" refid="structinternal_1_1_generic_regex_1_1_frag_1adec8170ccdf14bfc3138a4df0b2e4abd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag_1adec8170ccdf14bfc3138a4df0b2e4abd" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="165" refid="structinternal_1_1_generic_regex_1_1_frag_1a48b23d866d56328e05c187de2d7443d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag_1a48b23d866d56328e05c187de2d7443d2" kindref="member">out</ref>;<sp/></highlight></codeline>
<codeline lineno="166" refid="structinternal_1_1_generic_regex_1_1_frag_1a8007c1e6c879d1fe3eec2327fed0c664" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag_1a8007c1e6c879d1fe3eec2327fed0c664" kindref="member">minIndex</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classinternal_1_1_generic_regex_1aea17c79a5d4d17a3b21ef86dda9fa0e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_state" kindref="compound">State</ref>&amp;<sp/><ref refid="classinternal_1_1_generic_regex_1aea17c79a5d4d17a3b21ef86dda9fa0e3" kindref="member">GetState</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="classinternal_1_1_generic_regex_1af47146f067e491bb9cb23b13a88a26db" kindref="member">stateCount_</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a5391b182b60bb8967dd0a6d99db9c9f0" kindref="member">states_</ref>.template<sp/>Bottom&lt;State&gt;()[index];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classinternal_1_1_generic_regex_1ada0efa1a7089e9d58376e3fc2821a234" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_generic_regex_1_1_state" kindref="compound">State</ref>&amp;<sp/><ref refid="classinternal_1_1_generic_regex_1ada0efa1a7089e9d58376e3fc2821a234" kindref="member">GetState</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="classinternal_1_1_generic_regex_1af47146f067e491bb9cb23b13a88a26db" kindref="member">stateCount_</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a5391b182b60bb8967dd0a6d99db9c9f0" kindref="member">states_</ref>.template<sp/>Bottom&lt;State&gt;()[index];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classinternal_1_1_generic_regex_1a7e05e1219867fdbe83cb4e1f6d4aed91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_range" kindref="compound">Range</ref>&amp;<sp/><ref refid="classinternal_1_1_generic_regex_1a7e05e1219867fdbe83cb4e1f6d4aed91" kindref="member">GetRange</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="classinternal_1_1_generic_regex_1ad65c6144b7dc5b0441ef20dc4ef81619" kindref="member">rangeCount_</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1af94c64023502147345303d70ff594140" kindref="member">ranges_</ref>.template<sp/>Bottom&lt;Range&gt;()[index];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classinternal_1_1_generic_regex_1a7725f5a459796b58736b6cddcd19e335" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_generic_regex_1_1_range" kindref="compound">Range</ref>&amp;<sp/><ref refid="classinternal_1_1_generic_regex_1a7725f5a459796b58736b6cddcd19e335" kindref="member">GetRange</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="classinternal_1_1_generic_regex_1ad65c6144b7dc5b0441ef20dc4ef81619" kindref="member">rangeCount_</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1af94c64023502147345303d70ff594140" kindref="member">ranges_</ref>.template<sp/>Bottom&lt;Range&gt;()[index];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream&gt;</highlight></codeline>
<codeline lineno="190" refid="classinternal_1_1_generic_regex_1a038af33f370a14f987fb79d78f0d1c75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a038af33f370a14f987fb79d78f0d1c75" kindref="member">Parse</ref>(<ref refid="classinternal_1_1_decoded_stream" kindref="compound">DecodedStream&lt;InputStream, Encoding&gt;</ref>&amp;<sp/>ds)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref><sp/>operandStack(<ref refid="classinternal_1_1_generic_regex_1a2fb2543ae1c5ec68f891745fa69af0e3" kindref="member">allocator_</ref>,<sp/>256);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Frag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref><sp/>operatorStack(<ref refid="classinternal_1_1_generic_regex_1a2fb2543ae1c5ec68f891745fa69af0e3" kindref="member">allocator_</ref>,<sp/>256);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref><sp/>atomCountStack(<ref refid="classinternal_1_1_generic_regex_1a2fb2543ae1c5ec68f891745fa69af0e3" kindref="member">allocator_</ref>,<sp/>256);<sp/><sp/></highlight><highlight class="comment">//<sp/>unsigned<sp/>(Atom<sp/>per<sp/>parenthesis)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*atomCountStack.template<sp/>Push&lt;unsigned&gt;()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>codepoint;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ds.<ref refid="classinternal_1_1_decoded_stream_1ac78f2cbc03ae0d79a0fcfe6d56589d70" kindref="member">Peek</ref>()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(codepoint<sp/>=<sp/>ds.<ref refid="classinternal_1_1_decoded_stream_1a62b45969ce169bef1da0600490329857" kindref="member">Take</ref>())<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1ac99b045cc5250649ea3708bee95a56e8" kindref="member">anchorBegin_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;$&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1adbd19f8921ece1563d02e74f479d2e13" kindref="member">anchorEnd_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!operatorStack.<ref refid="classinternal_1_1_stack_1a2b8bda380e33838a99e3c73ff9785f03" kindref="member">Empty</ref>()<sp/>&amp;&amp;<sp/>*operatorStack.template<sp/>Top&lt;Operator&gt;()<sp/>&lt;<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a6c251a26f84dc6bc21717ef5fe8504d4" kindref="member">kAlternation</ref>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(operandStack,<sp/>*operatorStack.template<sp/>Pop&lt;Operator&gt;(1)))</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operatorStack.template<sp/>Push&lt;Operator&gt;()<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a6c251a26f84dc6bc21717ef5fe8504d4" kindref="member">kAlternation</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*atomCountStack.template<sp/>Top&lt;unsigned&gt;()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operatorStack.template<sp/>Push&lt;Operator&gt;()<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ae2f7e4cfde06337266fa1ac3a8b47d54" kindref="member">kLeftParenthesis</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*atomCountStack.template<sp/>Push&lt;unsigned&gt;()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!operatorStack.<ref refid="classinternal_1_1_stack_1a2b8bda380e33838a99e3c73ff9785f03" kindref="member">Empty</ref>()<sp/>&amp;&amp;<sp/>*operatorStack.template<sp/>Top&lt;Operator&gt;()<sp/>!=<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ae2f7e4cfde06337266fa1ac3a8b47d54" kindref="member">kLeftParenthesis</ref>)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(operandStack,<sp/>*operatorStack.template<sp/>Pop&lt;Operator&gt;(1)))</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operatorStack.<ref refid="classinternal_1_1_stack_1a2b8bda380e33838a99e3c73ff9785f03" kindref="member">Empty</ref>())</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operatorStack.template<sp/>Pop&lt;Operator&gt;(1);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atomCountStack.template<sp/>Pop&lt;unsigned&gt;(1);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a3b6d21989c3e41e33f6d2a7897ffdd6b" kindref="member">ImplicitConcatenation</ref>(atomCountStack,<sp/>operatorStack);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(operandStack,<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ad4577594ddb5fee3be7138b0759c35b3" kindref="member">kZeroOrOne</ref>))</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(operandStack,<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673aa4482f5484f4db6675095aaec3286e4f" kindref="member">kZeroOrMore</ref>))</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(operandStack,<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a5640dadf6c1cff543463686f2f2903e3" kindref="member">kOneOrMore</ref>))</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n,<sp/>m;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classinternal_1_1_generic_regex_1a16d0bf927741c666f46eed1c66f04150" kindref="member">ParseUnsigned</ref>(ds,<sp/>&amp;n))</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ds.<ref refid="classinternal_1_1_decoded_stream_1ac78f2cbc03ae0d79a0fcfe6d56589d70" kindref="member">Peek</ref>()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds.<ref refid="classinternal_1_1_decoded_stream_1a62b45969ce169bef1da0600490329857" kindref="member">Take</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ds.<ref refid="classinternal_1_1_decoded_stream_1ac78f2cbc03ae0d79a0fcfe6d56589d70" kindref="member">Peek</ref>()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1a12955d17d702f2fa9cf39421666c3ff3" kindref="member">kInfinityQuantifier</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classinternal_1_1_generic_regex_1a16d0bf927741c666f46eed1c66f04150" kindref="member">ParseUnsigned</ref>(ds,<sp/>&amp;m)<sp/>||<sp/>m<sp/>&lt;<sp/>n)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classinternal_1_1_generic_regex_1a71f934ac6c4b2b4f63b0c5fc68797933" kindref="member">EvalQuantifier</ref>(operandStack,<sp/>n,<sp/>m)<sp/>||<sp/>ds.<ref refid="classinternal_1_1_decoded_stream_1ac78f2cbc03ae0d79a0fcfe6d56589d70" kindref="member">Peek</ref>()<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds.<ref refid="classinternal_1_1_decoded_stream_1a62b45969ce169bef1da0600490329857" kindref="member">Take</ref>();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a1a3ea65f584e0dba5815a1232f9a770e" kindref="member">PushOperand</ref>(operandStack,<sp/><ref refid="classinternal_1_1_generic_regex_1a1f3b72c56d5eab221ba46a473ff611dd" kindref="member">kAnyCharacterClass</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a3b6d21989c3e41e33f6d2a7897ffdd6b" kindref="member">ImplicitConcatenation</ref>(atomCountStack,<sp/>operatorStack);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>range;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classinternal_1_1_generic_regex_1aa7336514ba21536ec90aaf2188581c1e" kindref="member">ParseRange</ref>(ds,<sp/>&amp;range))</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>s<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1ad57a48991e61750ef7426c48b1d3e51b" kindref="member">NewState</ref>(<ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>,<sp/><ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>,<sp/><ref refid="classinternal_1_1_generic_regex_1aec665a90fdb2372dbc18a6ca0971e886" kindref="member">kRangeCharacterClass</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1aea17c79a5d4d17a3b21ef86dda9fa0e3" kindref="member">GetState</ref>(s).<ref refid="structinternal_1_1_generic_regex_1_1_state_1a4f994da3eb09d3d86ad7dbfec4dd5c1c" kindref="member">rangeStart</ref><sp/>=<sp/>range;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operandStack.template<sp/>Push&lt;Frag&gt;()<sp/>=<sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>(s,<sp/>s,<sp/>s);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a3b6d21989c3e41e33f6d2a7897ffdd6b" kindref="member">ImplicitConcatenation</ref>(atomCountStack,<sp/>operatorStack);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>Escape<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classinternal_1_1_generic_regex_1ae46593a63a93b8bc34d044800777b72d" kindref="member">CharacterEscape</ref>(ds,<sp/>&amp;codepoint))</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Unsupported<sp/>escape<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through<sp/>to<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RAPIDJSON_DELIBERATE_FALLTHROUGH;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>Pattern<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a1a3ea65f584e0dba5815a1232f9a770e" kindref="member">PushOperand</ref>(operandStack,<sp/>codepoint);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a3b6d21989c3e41e33f6d2a7897ffdd6b" kindref="member">ImplicitConcatenation</ref>(atomCountStack,<sp/>operatorStack);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!operatorStack.<ref refid="classinternal_1_1_stack_1a2b8bda380e33838a99e3c73ff9785f03" kindref="member">Empty</ref>())</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(operandStack,<sp/>*operatorStack.template<sp/>Pop&lt;Operator&gt;(1)))</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Link<sp/>the<sp/>operand<sp/>to<sp/>matching<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operandStack.<ref refid="classinternal_1_1_stack_1ac484468a2791bd3e9ba609bd1600ab48" kindref="member">GetSize</ref>()<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>))<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>*<sp/>e<sp/>=<sp/>operandStack.template<sp/>Pop&lt;Frag&gt;(1);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a90c5c230de4794560971c48e15861f8e" kindref="member">Patch</ref>(e-&gt;<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a48b23d866d56328e05c187de2d7443d2" kindref="member">out</ref>,<sp/><ref refid="classinternal_1_1_generic_regex_1ad57a48991e61750ef7426c48b1d3e51b" kindref="member">NewState</ref>(<ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>,<sp/><ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a2af8c29234a2229b509fdf60cf265201" kindref="member">root_</ref><sp/>=<sp/>e-&gt;<ref refid="structinternal_1_1_generic_regex_1_1_frag_1adec8170ccdf14bfc3138a4df0b2e4abd" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_REGEX_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;root:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classinternal_1_1_generic_regex_1a2af8c29234a2229b509fdf60cf265201" kindref="member">root_</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classinternal_1_1_generic_regex_1af47146f067e491bb9cb23b13a88a26db" kindref="member">stateCount_</ref><sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_state" kindref="compound">State</ref>&amp;<sp/>s<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1aea17c79a5d4d17a3b21ef86dda9fa0e3" kindref="member">GetState</ref>(i);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;[%2d]<sp/>out:<sp/>%2d<sp/>out1:<sp/>%2d<sp/>c:<sp/>&apos;%c&apos;\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>s.<ref refid="structinternal_1_1_generic_regex_1_1_state_1a2db0ecd5296137b4e27a8bdb9b9b3a36" kindref="member">out</ref>,<sp/>s.<ref refid="structinternal_1_1_generic_regex_1_1_state_1a018baa62233a52e87df7dac21dcfefc7" kindref="member">out1</ref>,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)s.<ref refid="structinternal_1_1_generic_regex_1_1_state_1ab085a481f7a18c4a70d4cc534a72a23e" kindref="member">codepoint</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="classinternal_1_1_generic_regex_1ad57a48991e61750ef7426c48b1d3e51b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="classinternal_1_1_generic_regex_1ad57a48991e61750ef7426c48b1d3e51b" kindref="member">NewState</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>out,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>out1,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>codepoint)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_state" kindref="compound">State</ref>*<sp/>s<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1a5391b182b60bb8967dd0a6d99db9c9f0" kindref="member">states_</ref>.template<sp/>Push&lt;State&gt;();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structinternal_1_1_generic_regex_1_1_state_1a2db0ecd5296137b4e27a8bdb9b9b3a36" kindref="member">out</ref><sp/>=<sp/>out;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structinternal_1_1_generic_regex_1_1_state_1a018baa62233a52e87df7dac21dcfefc7" kindref="member">out1</ref><sp/>=<sp/>out1;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structinternal_1_1_generic_regex_1_1_state_1ab085a481f7a18c4a70d4cc534a72a23e" kindref="member">codepoint</ref><sp/>=<sp/>codepoint;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structinternal_1_1_generic_regex_1_1_state_1a4f994da3eb09d3d86ad7dbfec4dd5c1c" kindref="member">rangeStart</ref><sp/>=<sp/><ref refid="namespaceinternal_1afc9153a9f72e57e5184d5c54562fa8f7" kindref="member">kRegexInvalidRange</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1af47146f067e491bb9cb23b13a88a26db" kindref="member">stateCount_</ref>++;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="classinternal_1_1_generic_regex_1a1a3ea65f584e0dba5815a1232f9a770e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a1a3ea65f584e0dba5815a1232f9a770e" kindref="member">PushOperand</ref>(<ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref>&amp;<sp/>operandStack,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>codepoint)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>s<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1ad57a48991e61750ef7426c48b1d3e51b" kindref="member">NewState</ref>(<ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>,<sp/><ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>,<sp/>codepoint);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operandStack.template<sp/>Push&lt;Frag&gt;()<sp/>=<sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>(s,<sp/>s,<sp/>s);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="classinternal_1_1_generic_regex_1a3b6d21989c3e41e33f6d2a7897ffdd6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a3b6d21989c3e41e33f6d2a7897ffdd6b" kindref="member">ImplicitConcatenation</ref>(<ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref>&amp;<sp/>atomCountStack,<sp/><ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref>&amp;<sp/>operatorStack)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*atomCountStack.template<sp/>Top&lt;unsigned&gt;())</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operatorStack.template<sp/>Push&lt;Operator&gt;()<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a989378c9dfab87e3faf7b5e7db8885a2" kindref="member">kConcatenation</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*atomCountStack.template<sp/>Top&lt;unsigned&gt;())++;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="classinternal_1_1_generic_regex_1a96b270e845e58787b624604531598517" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="classinternal_1_1_generic_regex_1a96b270e845e58787b624604531598517" kindref="member">Append</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>l1,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>l2)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>old<sp/>=<sp/>l1;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classinternal_1_1_generic_regex_1aea17c79a5d4d17a3b21ef86dda9fa0e3" kindref="member">GetState</ref>(l1).out<sp/>!=<sp/><ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l1<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1aea17c79a5d4d17a3b21ef86dda9fa0e3" kindref="member">GetState</ref>(l1).<ref refid="structinternal_1_1_generic_regex_1_1_state_1a2db0ecd5296137b4e27a8bdb9b9b3a36" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1aea17c79a5d4d17a3b21ef86dda9fa0e3" kindref="member">GetState</ref>(l1).<ref refid="structinternal_1_1_generic_regex_1_1_state_1a2db0ecd5296137b4e27a8bdb9b9b3a36" kindref="member">out</ref><sp/>=<sp/>l2;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="classinternal_1_1_generic_regex_1a90c5c230de4794560971c48e15861f8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a90c5c230de4794560971c48e15861f8e" kindref="member">Patch</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>l,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>next;<sp/>l<sp/>!=<sp/><ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>;<sp/>l<sp/>=<sp/>next)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1aea17c79a5d4d17a3b21ef86dda9fa0e3" kindref="member">GetState</ref>(l).<ref refid="structinternal_1_1_generic_regex_1_1_state_1a2db0ecd5296137b4e27a8bdb9b9b3a36" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1aea17c79a5d4d17a3b21ef86dda9fa0e3" kindref="member">GetState</ref>(l).<ref refid="structinternal_1_1_generic_regex_1_1_state_1a2db0ecd5296137b4e27a8bdb9b9b3a36" kindref="member">out</ref><sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(<ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref>&amp;<sp/>operandStack,<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673" kindref="member">Operator</ref><sp/>op)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(op)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a989378c9dfab87e3faf7b5e7db8885a2" kindref="member">kConcatenation</ref>:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(operandStack.<ref refid="classinternal_1_1_stack_1ac484468a2791bd3e9ba609bd1600ab48" kindref="member">GetSize</ref>()<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref><sp/>e2<sp/>=<sp/>*operandStack.template<sp/>Pop&lt;Frag&gt;(1);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref><sp/>e1<sp/>=<sp/>*operandStack.template<sp/>Pop&lt;Frag&gt;(1);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a90c5c230de4794560971c48e15861f8e" kindref="member">Patch</ref>(e1.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a48b23d866d56328e05c187de2d7443d2" kindref="member">out</ref>,<sp/>e2.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1adec8170ccdf14bfc3138a4df0b2e4abd" kindref="member">start</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operandStack.template<sp/>Push&lt;Frag&gt;()<sp/>=<sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>(e1.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1adec8170ccdf14bfc3138a4df0b2e4abd" kindref="member">start</ref>,<sp/>e2.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a48b23d866d56328e05c187de2d7443d2" kindref="member">out</ref>,<sp/><ref refid="classinternal_1_1_generic_regex_1a064e15b8c9c222a07e143ec5847c6ec6" kindref="member">Min</ref>(e1.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a8007c1e6c879d1fe3eec2327fed0c664" kindref="member">minIndex</ref>,<sp/>e2.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a8007c1e6c879d1fe3eec2327fed0c664" kindref="member">minIndex</ref>));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a6c251a26f84dc6bc21717ef5fe8504d4" kindref="member">kAlternation</ref>:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operandStack.<ref refid="classinternal_1_1_stack_1ac484468a2791bd3e9ba609bd1600ab48" kindref="member">GetSize</ref>()<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>)<sp/>*<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref><sp/>e2<sp/>=<sp/>*operandStack.template<sp/>Pop&lt;Frag&gt;(1);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref><sp/>e1<sp/>=<sp/>*operandStack.template<sp/>Pop&lt;Frag&gt;(1);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>s<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1ad57a48991e61750ef7426c48b1d3e51b" kindref="member">NewState</ref>(e1.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1adec8170ccdf14bfc3138a4df0b2e4abd" kindref="member">start</ref>,<sp/>e2.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1adec8170ccdf14bfc3138a4df0b2e4abd" kindref="member">start</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operandStack.template<sp/>Push&lt;Frag&gt;()<sp/>=<sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>(s,<sp/><ref refid="classinternal_1_1_generic_regex_1a96b270e845e58787b624604531598517" kindref="member">Append</ref>(e1.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a48b23d866d56328e05c187de2d7443d2" kindref="member">out</ref>,<sp/>e2.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a48b23d866d56328e05c187de2d7443d2" kindref="member">out</ref>),<sp/><ref refid="classinternal_1_1_generic_regex_1a064e15b8c9c222a07e143ec5847c6ec6" kindref="member">Min</ref>(e1.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a8007c1e6c879d1fe3eec2327fed0c664" kindref="member">minIndex</ref>,<sp/>e2.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a8007c1e6c879d1fe3eec2327fed0c664" kindref="member">minIndex</ref>));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ad4577594ddb5fee3be7138b0759c35b3" kindref="member">kZeroOrOne</ref>:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operandStack.<ref refid="classinternal_1_1_stack_1ac484468a2791bd3e9ba609bd1600ab48" kindref="member">GetSize</ref>()<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>))<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref><sp/>e<sp/>=<sp/>*operandStack.template<sp/>Pop&lt;Frag&gt;(1);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>s<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1ad57a48991e61750ef7426c48b1d3e51b" kindref="member">NewState</ref>(<ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>,<sp/>e.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1adec8170ccdf14bfc3138a4df0b2e4abd" kindref="member">start</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operandStack.template<sp/>Push&lt;Frag&gt;()<sp/>=<sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>(s,<sp/><ref refid="classinternal_1_1_generic_regex_1a96b270e845e58787b624604531598517" kindref="member">Append</ref>(e.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a48b23d866d56328e05c187de2d7443d2" kindref="member">out</ref>,<sp/>s),<sp/>e.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a8007c1e6c879d1fe3eec2327fed0c664" kindref="member">minIndex</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673aa4482f5484f4db6675095aaec3286e4f" kindref="member">kZeroOrMore</ref>:</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operandStack.<ref refid="classinternal_1_1_stack_1ac484468a2791bd3e9ba609bd1600ab48" kindref="member">GetSize</ref>()<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>))<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref><sp/>e<sp/>=<sp/>*operandStack.template<sp/>Pop&lt;Frag&gt;(1);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>s<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1ad57a48991e61750ef7426c48b1d3e51b" kindref="member">NewState</ref>(<ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>,<sp/>e.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1adec8170ccdf14bfc3138a4df0b2e4abd" kindref="member">start</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a90c5c230de4794560971c48e15861f8e" kindref="member">Patch</ref>(e.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a48b23d866d56328e05c187de2d7443d2" kindref="member">out</ref>,<sp/>s);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operandStack.template<sp/>Push&lt;Frag&gt;()<sp/>=<sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>(s,<sp/>s,<sp/>e.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a8007c1e6c879d1fe3eec2327fed0c664" kindref="member">minIndex</ref>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a5640dadf6c1cff543463686f2f2903e3" kindref="member">kOneOrMore</ref>:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operandStack.<ref refid="classinternal_1_1_stack_1ac484468a2791bd3e9ba609bd1600ab48" kindref="member">GetSize</ref>()<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>))<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref><sp/>e<sp/>=<sp/>*operandStack.template<sp/>Pop&lt;Frag&gt;(1);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>s<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1ad57a48991e61750ef7426c48b1d3e51b" kindref="member">NewState</ref>(<ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>,<sp/>e.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1adec8170ccdf14bfc3138a4df0b2e4abd" kindref="member">start</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a90c5c230de4794560971c48e15861f8e" kindref="member">Patch</ref>(e.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a48b23d866d56328e05c187de2d7443d2" kindref="member">out</ref>,<sp/>s);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operandStack.template<sp/>Push&lt;Frag&gt;()<sp/>=<sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>(e.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1adec8170ccdf14bfc3138a4df0b2e4abd" kindref="member">start</ref>,<sp/>s,<sp/>e.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a8007c1e6c879d1fe3eec2327fed0c664" kindref="member">minIndex</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>syntax<sp/>error<sp/>(e.g.<sp/>unclosed<sp/>kLeftParenthesis)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="classinternal_1_1_generic_regex_1a71f934ac6c4b2b4f63b0c5fc68797933" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a71f934ac6c4b2b4f63b0c5fc68797933" kindref="member">EvalQuantifier</ref>(<ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref>&amp;<sp/>operandStack,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(n<sp/>&lt;=<sp/>m);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(operandStack.<ref refid="classinternal_1_1_stack_1ac484468a2791bd3e9ba609bd1600ab48" kindref="member">GetSize</ref>()<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a{0}<sp/>not<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/><ref refid="classinternal_1_1_generic_regex_1a12955d17d702f2fa9cf39421666c3ff3" kindref="member">kInfinityQuantifier</ref>)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(operandStack,<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673aa4482f5484f4db6675095aaec3286e4f" kindref="member">kZeroOrMore</ref>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a{0,}<sp/>-&gt;<sp/>a*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(operandStack,<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ad4577594ddb5fee3be7138b0759c35b3" kindref="member">kZeroOrOne</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a{0,5}<sp/>-&gt;<sp/>a?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m<sp/>-<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a44a907caf47179a3f0edcf46a4be8b2f" kindref="member">CloneTopOperand</ref>(operandStack);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a{0,5}<sp/>-&gt;<sp/>a?<sp/>a?<sp/>a?<sp/>a?<sp/>a?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m<sp/>-<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(operandStack,<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a989378c9dfab87e3faf7b5e7db8885a2" kindref="member">kConcatenation</ref>);<sp/></highlight><highlight class="comment">//<sp/>a{0,5}<sp/>-&gt;<sp/>a?a?a?a?a?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n<sp/>-<sp/>1;<sp/>i++)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a{3}<sp/>-&gt;<sp/>a<sp/>a<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a44a907caf47179a3f0edcf46a4be8b2f" kindref="member">CloneTopOperand</ref>(operandStack);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/><ref refid="classinternal_1_1_generic_regex_1a12955d17d702f2fa9cf39421666c3ff3" kindref="member">kInfinityQuantifier</ref>)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(operandStack,<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a5640dadf6c1cff543463686f2f2903e3" kindref="member">kOneOrMore</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a{3,}<sp/>-&gt;<sp/>a<sp/>a<sp/>a+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a44a907caf47179a3f0edcf46a4be8b2f" kindref="member">CloneTopOperand</ref>(operandStack);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a{3,5}<sp/>-&gt;<sp/>a<sp/>a<sp/>a<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(operandStack,<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ad4577594ddb5fee3be7138b0759c35b3" kindref="member">kZeroOrOne</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a{3,5}<sp/>-&gt;<sp/>a<sp/>a<sp/>a<sp/>a?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>n;<sp/>i<sp/>&lt;<sp/>m<sp/>-<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a44a907caf47179a3f0edcf46a4be8b2f" kindref="member">CloneTopOperand</ref>(operandStack);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a{3,5}<sp/>-&gt;<sp/>a<sp/>a<sp/>a<sp/>a?<sp/>a?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>n;<sp/>i<sp/>&lt;<sp/>m;<sp/>i++)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(operandStack,<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a989378c9dfab87e3faf7b5e7db8885a2" kindref="member">kConcatenation</ref>);<sp/></highlight><highlight class="comment">//<sp/>a{3,5}<sp/>-&gt;<sp/>a<sp/>a<sp/>aa?a?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n<sp/>-<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" kindref="member">Eval</ref>(operandStack,<sp/><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a989378c9dfab87e3faf7b5e7db8885a2" kindref="member">kConcatenation</ref>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a{3}<sp/>-&gt;<sp/>aaa,<sp/>a{3,}<sp/>-&gt;<sp/>aaa+,<sp/>a{3.5}<sp/>-&gt;<sp/>aaaa?a?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="classinternal_1_1_generic_regex_1a064e15b8c9c222a07e143ec5847c6ec6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="classinternal_1_1_generic_regex_1a064e15b8c9c222a07e143ec5847c6ec6" kindref="member">Min</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&lt;<sp/>b<sp/>?<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>:<sp/>b;<sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="classinternal_1_1_generic_regex_1a44a907caf47179a3f0edcf46a4be8b2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a44a907caf47179a3f0edcf46a4be8b2f" kindref="member">CloneTopOperand</ref>(<ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref>&amp;<sp/>operandStack)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref><sp/>src<sp/>=<sp/>*operandStack.template<sp/>Top&lt;Frag&gt;();<sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>constructor<sp/>to<sp/>prevent<sp/>invalidation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1af47146f067e491bb9cb23b13a88a26db" kindref="member">stateCount_</ref><sp/>-<sp/>src.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a8007c1e6c879d1fe3eec2327fed0c664" kindref="member">minIndex</ref>;<sp/></highlight><highlight class="comment">//<sp/>Assumes<sp/>top<sp/>operand<sp/>contains<sp/>states<sp/>in<sp/>[src-&gt;minIndex,<sp/>stateCount_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_state" kindref="compound">State</ref>*<sp/>s<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1a5391b182b60bb8967dd0a6d99db9c9f0" kindref="member">states_</ref>.template<sp/>Push&lt;State&gt;(count);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(s,<sp/>&amp;<ref refid="classinternal_1_1_generic_regex_1aea17c79a5d4d17a3b21ef86dda9fa0e3" kindref="member">GetState</ref>(src.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a8007c1e6c879d1fe3eec2327fed0c664" kindref="member">minIndex</ref>),<sp/>count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structinternal_1_1_generic_regex_1_1_state" kindref="compound">State</ref>));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>count;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s[j].out<sp/>!=<sp/><ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[j].<ref refid="structinternal_1_1_generic_regex_1_1_state_1a2db0ecd5296137b4e27a8bdb9b9b3a36" kindref="member">out</ref><sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s[j].out1<sp/>!=<sp/><ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[j].<ref refid="structinternal_1_1_generic_regex_1_1_state_1a018baa62233a52e87df7dac21dcfefc7" kindref="member">out1</ref><sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operandStack.template<sp/>Push&lt;Frag&gt;()<sp/>=<sp/><ref refid="structinternal_1_1_generic_regex_1_1_frag" kindref="compound">Frag</ref>(src.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1adec8170ccdf14bfc3138a4df0b2e4abd" kindref="member">start</ref><sp/>+<sp/>count,<sp/>src.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a48b23d866d56328e05c187de2d7443d2" kindref="member">out</ref><sp/>+<sp/>count,<sp/>src.<ref refid="structinternal_1_1_generic_regex_1_1_frag_1a8007c1e6c879d1fe3eec2327fed0c664" kindref="member">minIndex</ref><sp/>+<sp/>count);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1af47146f067e491bb9cb23b13a88a26db" kindref="member">stateCount_</ref><sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream&gt;</highlight></codeline>
<codeline lineno="468" refid="classinternal_1_1_generic_regex_1a16d0bf927741c666f46eed1c66f04150" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a16d0bf927741c666f46eed1c66f04150" kindref="member">ParseUnsigned</ref>(<ref refid="classinternal_1_1_decoded_stream" kindref="compound">DecodedStream&lt;InputStream, Encoding&gt;</ref>&amp;<sp/>ds,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">*<sp/>u)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ds.<ref refid="classinternal_1_1_decoded_stream_1ac78f2cbc03ae0d79a0fcfe6d56589d70" kindref="member">Peek</ref>()<sp/>&lt;<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>||<sp/>ds.<ref refid="classinternal_1_1_decoded_stream_1ac78f2cbc03ae0d79a0fcfe6d56589d70" kindref="member">Peek</ref>()<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ds.<ref refid="classinternal_1_1_decoded_stream_1ac78f2cbc03ae0d79a0fcfe6d56589d70" kindref="member">Peek</ref>()<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ds.<ref refid="classinternal_1_1_decoded_stream_1ac78f2cbc03ae0d79a0fcfe6d56589d70" kindref="member">Peek</ref>()<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&gt;=<sp/>429496729<sp/>&amp;&amp;<sp/>ds.<ref refid="classinternal_1_1_decoded_stream_1ac78f2cbc03ae0d79a0fcfe6d56589d70" kindref="member">Peek</ref>()<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>2^32<sp/>-<sp/>1<sp/>=<sp/>4294967295</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>r<sp/>*<sp/>10<sp/>+<sp/>(ds.<ref refid="classinternal_1_1_decoded_stream_1a62b45969ce169bef1da0600490329857" kindref="member">Take</ref>()<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*u<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream&gt;</highlight></codeline>
<codeline lineno="482" refid="classinternal_1_1_generic_regex_1aa7336514ba21536ec90aaf2188581c1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1aa7336514ba21536ec90aaf2188581c1e" kindref="member">ParseRange</ref>(<ref refid="classinternal_1_1_decoded_stream" kindref="compound">DecodedStream&lt;InputStream, Encoding&gt;</ref>&amp;<sp/>ds,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>*<sp/>range)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isBegin<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>negate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>start<sp/>=<sp/><ref refid="namespaceinternal_1afc9153a9f72e57e5184d5c54562fa8f7" kindref="member">kRegexInvalidRange</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>current<sp/>=<sp/><ref refid="namespaceinternal_1afc9153a9f72e57e5184d5c54562fa8f7" kindref="member">kRegexInvalidRange</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>codepoint;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((codepoint<sp/>=<sp/>ds.<ref refid="classinternal_1_1_decoded_stream_1a62b45969ce169bef1da0600490329857" kindref="member">Take</ref>())<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isBegin)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isBegin<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(codepoint<sp/>==<sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(codepoint)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>==<sp/><ref refid="namespaceinternal_1afc9153a9f72e57e5184d5c54562fa8f7" kindref="member">kRegexInvalidRange</ref>)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error:<sp/>nothing<sp/>inside<sp/>[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(step<sp/>==<sp/>2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>trailing<sp/>&apos;-&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>r<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1a868d6e44d0782e9fbdd476243daa578f" kindref="member">NewRange</ref>(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(current<sp/>!=<sp/><ref refid="namespaceinternal_1afc9153a9f72e57e5184d5c54562fa8f7" kindref="member">kRegexInvalidRange</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a7e05e1219867fdbe83cb4e1f6d4aed91" kindref="member">GetRange</ref>(current).<ref refid="structinternal_1_1_generic_regex_1_1_range_1abaff4592e1947f5368339ebfa7ad9f7f" kindref="member">next</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(negate)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a7e05e1219867fdbe83cb4e1f6d4aed91" kindref="member">GetRange</ref>(start).<ref refid="structinternal_1_1_generic_regex_1_1_range_1a7b407235cac7d4245b984c970c8b2026" kindref="member">start</ref><sp/>|=<sp/><ref refid="classinternal_1_1_generic_regex_1ae435570506343e24811e588614f6842b" kindref="member">kRangeNegationFlag</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*range<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ds.<ref refid="classinternal_1_1_decoded_stream_1ac78f2cbc03ae0d79a0fcfe6d56589d70" kindref="member">Peek</ref>()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds.<ref refid="classinternal_1_1_decoded_stream_1a62b45969ce169bef1da0600490329857" kindref="member">Take</ref>();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codepoint<sp/>=<sp/>0x0008;<sp/></highlight><highlight class="comment">//<sp/>Escape<sp/>backspace<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classinternal_1_1_generic_regex_1ae46593a63a93b8bc34d044800777b72d" kindref="member">CharacterEscape</ref>(ds,<sp/>&amp;codepoint))</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through<sp/>to<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RAPIDJSON_DELIBERATE_FALLTHROUGH;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(step)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(codepoint<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step++;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through<sp/>to<sp/>step<sp/>0<sp/>for<sp/>other<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RAPIDJSON_DELIBERATE_FALLTHROUGH;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>r<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1a868d6e44d0782e9fbdd476243daa578f" kindref="member">NewRange</ref>(codepoint);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/><ref refid="namespaceinternal_1afc9153a9f72e57e5184d5c54562fa8f7" kindref="member">kRegexInvalidRange</ref>)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a7e05e1219867fdbe83cb4e1f6d4aed91" kindref="member">GetRange</ref>(current).<ref refid="structinternal_1_1_generic_regex_1_1_range_1abaff4592e1947f5368339ebfa7ad9f7f" kindref="member">next</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>==<sp/><ref refid="namespaceinternal_1afc9153a9f72e57e5184d5c54562fa8f7" kindref="member">kRegexInvalidRange</ref>)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(step<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_1a7e05e1219867fdbe83cb4e1f6d4aed91" kindref="member">GetRange</ref>(current).<ref refid="structinternal_1_1_generic_regex_1_1_range_1a48a003fe4bf27591ec30595c968953f2" kindref="member">end</ref><sp/>=<sp/>codepoint;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="554" refid="classinternal_1_1_generic_regex_1a868d6e44d0782e9fbdd476243daa578f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="classinternal_1_1_generic_regex_1a868d6e44d0782e9fbdd476243daa578f" kindref="member">NewRange</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>codepoint)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_generic_regex_1_1_range" kindref="compound">Range</ref>*<sp/>r<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_1af94c64023502147345303d70ff594140" kindref="member">ranges_</ref>.template<sp/>Push&lt;Range&gt;();</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structinternal_1_1_generic_regex_1_1_range_1a7b407235cac7d4245b984c970c8b2026" kindref="member">start</ref><sp/>=<sp/>r-&gt;<ref refid="structinternal_1_1_generic_regex_1_1_range_1a48a003fe4bf27591ec30595c968953f2" kindref="member">end</ref><sp/>=<sp/>codepoint;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structinternal_1_1_generic_regex_1_1_range_1abaff4592e1947f5368339ebfa7ad9f7f" kindref="member">next</ref><sp/>=<sp/><ref refid="namespaceinternal_1afc9153a9f72e57e5184d5c54562fa8f7" kindref="member">kRegexInvalidRange</ref>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1ad65c6144b7dc5b0441ef20dc4ef81619" kindref="member">rangeCount_</ref>++;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream&gt;</highlight></codeline>
<codeline lineno="562" refid="classinternal_1_1_generic_regex_1ae46593a63a93b8bc34d044800777b72d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1ae46593a63a93b8bc34d044800777b72d" kindref="member">CharacterEscape</ref>(<ref refid="classinternal_1_1_decoded_stream" kindref="compound">DecodedStream&lt;InputStream, Encoding&gt;</ref>&amp;<sp/>ds,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">*<sp/>escapedCodepoint)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>codepoint;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(codepoint<sp/>=<sp/>ds.<ref refid="classinternal_1_1_decoded_stream_1a62b45969ce169bef1da0600490329857" kindref="member">Take</ref>())<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;$&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*escapedCodepoint<sp/>=<sp/>codepoint;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">:<sp/>*escapedCodepoint<sp/>=<sp/>0x000C;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:<sp/>*escapedCodepoint<sp/>=<sp/>0x000A;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">:<sp/>*escapedCodepoint<sp/>=<sp/>0x000D;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">:<sp/>*escapedCodepoint<sp/>=<sp/>0x0009;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">:<sp/>*escapedCodepoint<sp/>=<sp/>0x000B;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Unsupported<sp/>escape<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="classinternal_1_1_generic_regex_1a63f4d8c4e3d61fcd9f1489347708ded8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>*<sp/><ref refid="classinternal_1_1_generic_regex_1a63f4d8c4e3d61fcd9f1489347708ded8" kindref="member">ownAllocator_</ref>;</highlight></codeline>
<codeline lineno="591" refid="classinternal_1_1_generic_regex_1a2fb2543ae1c5ec68f891745fa69af0e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>*<sp/><ref refid="classinternal_1_1_generic_regex_1a2fb2543ae1c5ec68f891745fa69af0e3" kindref="member">allocator_</ref>;</highlight></codeline>
<codeline lineno="592" refid="classinternal_1_1_generic_regex_1a5391b182b60bb8967dd0a6d99db9c9f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref><sp/><ref refid="classinternal_1_1_generic_regex_1a5391b182b60bb8967dd0a6d99db9c9f0" kindref="member">states_</ref>;</highlight></codeline>
<codeline lineno="593" refid="classinternal_1_1_generic_regex_1af94c64023502147345303d70ff594140" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref><sp/><ref refid="classinternal_1_1_generic_regex_1af94c64023502147345303d70ff594140" kindref="member">ranges_</ref>;</highlight></codeline>
<codeline lineno="594" refid="classinternal_1_1_generic_regex_1a2af8c29234a2229b509fdf60cf265201" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="classinternal_1_1_generic_regex_1a2af8c29234a2229b509fdf60cf265201" kindref="member">root_</ref>;</highlight></codeline>
<codeline lineno="595" refid="classinternal_1_1_generic_regex_1af47146f067e491bb9cb23b13a88a26db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="classinternal_1_1_generic_regex_1af47146f067e491bb9cb23b13a88a26db" kindref="member">stateCount_</ref>;</highlight></codeline>
<codeline lineno="596" refid="classinternal_1_1_generic_regex_1ad65c6144b7dc5b0441ef20dc4ef81619" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="classinternal_1_1_generic_regex_1ad65c6144b7dc5b0441ef20dc4ef81619" kindref="member">rangeCount_</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="classinternal_1_1_generic_regex_1a12955d17d702f2fa9cf39421666c3ff3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1a12955d17d702f2fa9cf39421666c3ff3" kindref="member">kInfinityQuantifier</ref><sp/>=<sp/>~0u;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>SearchWithAnchoring()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="classinternal_1_1_generic_regex_1ac99b045cc5250649ea3708bee95a56e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1ac99b045cc5250649ea3708bee95a56e8" kindref="member">anchorBegin_</ref>;</highlight></codeline>
<codeline lineno="602" refid="classinternal_1_1_generic_regex_1adbd19f8921ece1563d02e74f479d2e13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_1adbd19f8921ece1563d02e74f479d2e13" kindref="member">anchorEnd_</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal">};</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RegexType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/>CrtAllocator&gt;</highlight></codeline>
<codeline lineno="606" refid="classinternal_1_1_generic_regex_search" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classinternal_1_1_generic_regex_search" kindref="compound">GenericRegexSearch</ref><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="608" refid="classinternal_1_1_generic_regex_search_1a7b1f81c580c33200c83e1529c2fdbf54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RegexType::EncodingType<sp/><ref refid="classinternal_1_1_generic_regex_search_1a7b1f81c580c33200c83e1529c2fdbf54" kindref="member">Encoding</ref>;</highlight></codeline>
<codeline lineno="609" refid="classinternal_1_1_generic_regex_search_1a966f3a62fc838b5e9350f4c6a624d9a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch<sp/><ref refid="classinternal_1_1_generic_regex_search_1a966f3a62fc838b5e9350f4c6a624d9a1" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="classinternal_1_1_generic_regex_search_1a72f70e210a4bc944dba62655a008750b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_search_1a72f70e210a4bc944dba62655a008750b" kindref="member">GenericRegexSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RegexType&amp;<sp/>regex,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>*<sp/>allocator<sp/>=<sp/>0)<sp/>:<sp/></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>(regex),<sp/><ref refid="classinternal_1_1_generic_regex_search_1aa87a7caf0054f4e65446ecd91aba367c" kindref="member">allocator_</ref>(allocator),<sp/><ref refid="classinternal_1_1_generic_regex_search_1a804573e03eb673a9633f638fe3e3b62f" kindref="member">ownAllocator_</ref>(0),</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_search_1a6b44c058a10cff21c2e3d20d32b84eba" kindref="member">state0_</ref>(allocator,<sp/>0),<sp/><ref refid="classinternal_1_1_generic_regex_search_1a029a67ab36e5cb1b1394fc7a688c7cda" kindref="member">state1_</ref>(allocator,<sp/>0),<sp/><ref refid="classinternal_1_1_generic_regex_search_1a2f697f3edbd1e1f91d3f4535e494f4c2" kindref="member">stateSet_</ref>()</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>.IsValid());</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classinternal_1_1_generic_regex_search_1aa87a7caf0054f4e65446ecd91aba367c" kindref="member">allocator_</ref>)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_search_1a804573e03eb673a9633f638fe3e3b62f" kindref="member">ownAllocator_</ref><sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_search_1aa87a7caf0054f4e65446ecd91aba367c" kindref="member">allocator_</ref><sp/>=<sp/><ref refid="rapidjson_8h_1abdc7cd7902748ffe6626d71c59a73c3b" kindref="member">RAPIDJSON_NEW</ref>(<ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>)();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_search_1a2f697f3edbd1e1f91d3f4535e494f4c2" kindref="member">stateSet_</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classinternal_1_1_generic_regex_search_1aa87a7caf0054f4e65446ecd91aba367c" kindref="member">allocator_</ref>-&gt;Malloc(<ref refid="classinternal_1_1_generic_regex_search_1a12ddb6629c0be52801d291a8e5005c06" kindref="member">GetStateSetSize</ref>()));</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_search_1a6b44c058a10cff21c2e3d20d32b84eba" kindref="member">state0_</ref>.template<sp/>Reserve&lt;SizeType&gt;(<ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>.stateCount_);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_search_1a029a67ab36e5cb1b1394fc7a688c7cda" kindref="member">state1_</ref>.template<sp/>Reserve&lt;SizeType&gt;(<ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>.stateCount_);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623" refid="classinternal_1_1_generic_regex_search_1ad14ee51edf6f9bfe3b7cffa59c4c19c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_search_1ad14ee51edf6f9bfe3b7cffa59c4c19c9" kindref="member">~GenericRegexSearch</ref>()<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">Allocator::Free</ref>(<ref refid="classinternal_1_1_generic_regex_search_1a2f697f3edbd1e1f91d3f4535e494f4c2" kindref="member">stateSet_</ref>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a52c941c3fdd646527cdcd42aa846a28a" kindref="member">RAPIDJSON_DELETE</ref>(<ref refid="classinternal_1_1_generic_regex_search_1a804573e03eb673a9633f638fe3e3b62f" kindref="member">ownAllocator_</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream&gt;</highlight></codeline>
<codeline lineno="629" refid="classinternal_1_1_generic_regex_search_1ad204164a20e3ac403b405683b51c2d0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1ad204164a20e3ac403b405683b51c2d0b" kindref="member">Match</ref>(InputStream&amp;<sp/>is)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1a850b4f0e1cf3f7e0f6c02ae3d7da654a" kindref="member">SearchWithAnchoring</ref>(is,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="classinternal_1_1_generic_regex_search_1a9d3fe83905549d2fd4c513b8eacd14de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1a9d3fe83905549d2fd4c513b8eacd14de" kindref="member">Match</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1a966f3a62fc838b5e9350f4c6a624d9a1" kindref="member">Ch</ref>*<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;Encoding&gt;</ref><sp/>is(s);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1ad204164a20e3ac403b405683b51c2d0b" kindref="member">Match</ref>(is);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream&gt;</highlight></codeline>
<codeline lineno="639" refid="classinternal_1_1_generic_regex_search_1a766c684321471b468ff468648f186cf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1a766c684321471b468ff468648f186cf0" kindref="member">Search</ref>(InputStream&amp;<sp/>is)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1a850b4f0e1cf3f7e0f6c02ae3d7da654a" kindref="member">SearchWithAnchoring</ref>(is,<sp/><ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>.anchorBegin_,<sp/><ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>.anchorEnd_);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643" refid="classinternal_1_1_generic_regex_search_1a97398161c60f3ed3e4aabaff952c6f1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1a97398161c60f3ed3e4aabaff952c6f1e" kindref="member">Search</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1a966f3a62fc838b5e9350f4c6a624d9a1" kindref="member">Ch</ref>*<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;Encoding&gt;</ref><sp/>is(s);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1a766c684321471b468ff468648f186cf0" kindref="member">Search</ref>(is);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="649" refid="classinternal_1_1_generic_regex_search_1a0586261735313d8cf20042e50ee75c92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RegexType::State<sp/><ref refid="classinternal_1_1_generic_regex_search_1a0586261735313d8cf20042e50ee75c92" kindref="member">State</ref>;</highlight></codeline>
<codeline lineno="650" refid="classinternal_1_1_generic_regex_search_1aaceb6517b628e447c6df61a8b7b33c7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RegexType::Range<sp/><ref refid="classinternal_1_1_generic_regex_search_1aaceb6517b628e447c6df61a8b7b33c7c" kindref="member">Range</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream&gt;</highlight></codeline>
<codeline lineno="653" refid="classinternal_1_1_generic_regex_search_1a850b4f0e1cf3f7e0f6c02ae3d7da654a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1a850b4f0e1cf3f7e0f6c02ae3d7da654a" kindref="member">SearchWithAnchoring</ref>(InputStream&amp;<sp/>is,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>anchorBegin,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>anchorEnd)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_decoded_stream" kindref="compound">DecodedStream&lt;InputStream, Encoding&gt;</ref><sp/>ds(is);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_search_1a6b44c058a10cff21c2e3d20d32b84eba" kindref="member">state0_</ref>.Clear();</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref><sp/>*current<sp/>=<sp/>&amp;<ref refid="classinternal_1_1_generic_regex_search_1a6b44c058a10cff21c2e3d20d32b84eba" kindref="member">state0_</ref>,<sp/>*next<sp/>=<sp/>&amp;<ref refid="classinternal_1_1_generic_regex_search_1a029a67ab36e5cb1b1394fc7a688c7cda" kindref="member">state1_</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stateSetSize<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_search_1a12ddb6629c0be52801d291a8e5005c06" kindref="member">GetStateSetSize</ref>();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memset(<ref refid="classinternal_1_1_generic_regex_search_1a2f697f3edbd1e1f91d3f4535e494f4c2" kindref="member">stateSet_</ref>,<sp/>0,<sp/>stateSetSize);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matched<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_search_1aa16ed718784de143ec64861b2b662ea4" kindref="member">AddState</ref>(*current,<sp/><ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>.root_);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>codepoint;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!current-&gt;<ref refid="classinternal_1_1_stack_1a2b8bda380e33838a99e3c73ff9785f03" kindref="member">Empty</ref>()<sp/>&amp;&amp;<sp/>(codepoint<sp/>=<sp/>ds.<ref refid="classinternal_1_1_decoded_stream_1a62b45969ce169bef1da0600490329857" kindref="member">Take</ref>())<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memset(<ref refid="classinternal_1_1_generic_regex_search_1a2f697f3edbd1e1f91d3f4535e494f4c2" kindref="member">stateSet_</ref>,<sp/>0,<sp/>stateSetSize);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next-&gt;Clear();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>*<sp/>s<sp/>=<sp/>current-&gt;template<sp/>Bottom&lt;SizeType&gt;();<sp/>s<sp/>!=<sp/>current-&gt;template<sp/>End&lt;SizeType&gt;();<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1a0586261735313d8cf20042e50ee75c92" kindref="member">State</ref>&amp;<sp/>sr<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>.GetState(*s);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sr.codepoint<sp/>==<sp/>codepoint<sp/>||</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sr.codepoint<sp/>==<sp/>RegexType::kAnyCharacterClass<sp/>||<sp/></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sr.codepoint<sp/>==<sp/>RegexType::kRangeCharacterClass<sp/>&amp;&amp;<sp/><ref refid="classinternal_1_1_generic_regex_search_1a1a9c7b4f977805912d1c1f1866442fbe" kindref="member">MatchRange</ref>(sr.rangeStart,<sp/>codepoint)))</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matched<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_search_1aa16ed718784de143ec64861b2b662ea4" kindref="member">AddState</ref>(*next,<sp/>sr.out)<sp/>||<sp/>matched;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!anchorEnd<sp/>&amp;&amp;<sp/>matched)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!anchorBegin)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_search_1aa16ed718784de143ec64861b2b662ea4" kindref="member">AddState</ref>(*next,<sp/><ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>.root_);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceinternal_1a72b2c71d36273b9691487f58c671ce04" kindref="member">internal::Swap</ref>(current,<sp/>next);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matched;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="classinternal_1_1_generic_regex_search_1a12ddb6629c0be52801d291a8e5005c06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1a12ddb6629c0be52801d291a8e5005c06" kindref="member">GetStateSetSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>.stateCount_<sp/>+<sp/>31)<sp/>/<sp/>32<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>whether<sp/>the<sp/>added<sp/>states<sp/>is<sp/>a<sp/>match<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="classinternal_1_1_generic_regex_search_1aa16ed718784de143ec64861b2b662ea4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1aa16ed718784de143ec64861b2b662ea4" kindref="member">AddState</ref>(<ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref>&amp;<sp/>l,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(index<sp/>!=<sp/><ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1a0586261735313d8cf20042e50ee75c92" kindref="member">State</ref>&amp;<sp/>s<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>.GetState(index);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.out1<sp/>!=<sp/><ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Split</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matched<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_search_1aa16ed718784de143ec64861b2b662ea4" kindref="member">AddState</ref>(l,<sp/>s.out);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1aa16ed718784de143ec64861b2b662ea4" kindref="member">AddState</ref>(l,<sp/>s.out1)<sp/>||<sp/>matched;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="classinternal_1_1_generic_regex_search_1a2f697f3edbd1e1f91d3f4535e494f4c2" kindref="member">stateSet_</ref>[index<sp/>&gt;&gt;<sp/>5]<sp/>&amp;<sp/>(1u<sp/>&lt;&lt;<sp/>(index<sp/>&amp;<sp/>31))))<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_generic_regex_search_1a2f697f3edbd1e1f91d3f4535e494f4c2" kindref="member">stateSet_</ref>[index<sp/>&gt;&gt;<sp/>5]<sp/>|=<sp/>(1u<sp/>&lt;&lt;<sp/>(index<sp/>&amp;<sp/>31));</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*l.template<sp/>PushUnsafe&lt;SizeType&gt;()<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.out<sp/>==<sp/><ref refid="namespaceinternal_1abdcff7a639884034f884dab7bd6ae76c" kindref="member">kRegexInvalidState</ref>;<sp/></highlight><highlight class="comment">//<sp/>by<sp/>using<sp/>PushUnsafe()<sp/>above,<sp/>we<sp/>can<sp/>ensure<sp/>s<sp/>is<sp/>not<sp/>validated<sp/>due<sp/>to<sp/>reallocation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706" refid="classinternal_1_1_generic_regex_search_1a1a9c7b4f977805912d1c1f1866442fbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1a1a9c7b4f977805912d1c1f1866442fbe" kindref="member">MatchRange</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>rangeIndex,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>codepoint)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>yes<sp/>=<sp/>(<ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>.GetRange(rangeIndex).start<sp/>&amp;<sp/>RegexType::kRangeNegationFlag)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(rangeIndex<sp/>!=<sp/><ref refid="namespaceinternal_1afc9153a9f72e57e5184d5c54562fa8f7" kindref="member">kRegexInvalidRange</ref>)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search_1aaceb6517b628e447c6df61a8b7b33c7c" kindref="member">Range</ref>&amp;<sp/>r<sp/>=<sp/><ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>.GetRange(rangeIndex);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(codepoint<sp/>&gt;=<sp/>(r.start<sp/>&amp;<sp/>~RegexType::kRangeNegationFlag)<sp/>&amp;&amp;<sp/>codepoint<sp/>&lt;=<sp/>r.end)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yes;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rangeIndex<sp/>=<sp/>r.next;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!yes;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RegexType&amp;<sp/><ref refid="classinternal_1_1_generic_regex_search_1aaec69557b0641a19b337ebd44b6d7a7b" kindref="member">regex_</ref>;</highlight></codeline>
<codeline lineno="718" refid="classinternal_1_1_generic_regex_search_1aa87a7caf0054f4e65446ecd91aba367c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>*<sp/><ref refid="classinternal_1_1_generic_regex_search_1aa87a7caf0054f4e65446ecd91aba367c" kindref="member">allocator_</ref>;</highlight></codeline>
<codeline lineno="719" refid="classinternal_1_1_generic_regex_search_1a804573e03eb673a9633f638fe3e3b62f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>*<sp/><ref refid="classinternal_1_1_generic_regex_search_1a804573e03eb673a9633f638fe3e3b62f" kindref="member">ownAllocator_</ref>;</highlight></codeline>
<codeline lineno="720" refid="classinternal_1_1_generic_regex_search_1a6b44c058a10cff21c2e3d20d32b84eba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref><sp/><ref refid="classinternal_1_1_generic_regex_search_1a6b44c058a10cff21c2e3d20d32b84eba" kindref="member">state0_</ref>;</highlight></codeline>
<codeline lineno="721" refid="classinternal_1_1_generic_regex_search_1a029a67ab36e5cb1b1394fc7a688c7cda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref><sp/><ref refid="classinternal_1_1_generic_regex_search_1a029a67ab36e5cb1b1394fc7a688c7cda" kindref="member">state1_</ref>;</highlight></codeline>
<codeline lineno="722" refid="classinternal_1_1_generic_regex_search_1a2f697f3edbd1e1f91d3f4535e494f4c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref>*<sp/><ref refid="classinternal_1_1_generic_regex_search_1a2f697f3edbd1e1f91d3f4535e494f4c2" kindref="member">stateSet_</ref>;</highlight></codeline>
<codeline lineno="723"><highlight class="normal">};</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725" refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex" kindref="compound">GenericRegex&lt;UTF8&lt;&gt;</ref><sp/>&gt;<sp/><ref refid="namespaceinternal_1ae7fc20c6ee680ae3ba16ae16b4bd5e16" kindref="member">Regex</ref>;</highlight></codeline>
<codeline lineno="726" refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex_search" kindref="compound">GenericRegexSearch&lt;Regex&gt;</ref><sp/><ref refid="namespaceinternal_1a7101e324c2d06f1505ef7c7d4401392b" kindref="member">RegexSearch</ref>;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1" kindref="member">RAPIDJSON_NAMESPACE_END</ref></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal">RAPIDJSON_DIAG_POP</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)<sp/>||<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal">RAPIDJSON_DIAG_POP</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RAPIDJSON_INTERNAL_REGEX_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/rapidjson/include/rapidjson/internal/regex.h"/>
  </compounddef>
</doxygen>
