<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_lookahead_parser" kind="class" language="C++" prot="public">
    <compoundname>LookaheadParser</compoundname>
    <basecompoundref refid="class_lookahead_parser_handler" prot="protected" virt="non-virtual">LookaheadParserHandler</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_lookahead_parser_1a126093b7e0e6ad1d007f4f07030bcd81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>LookaheadParser::LookaheadParser</definition>
        <argsstring>(char *str)</argsstring>
        <name>LookaheadParser</name>
        <qualifiedname>LookaheadParser::LookaheadParser</qualifiedname>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="103" column="5" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1aa91c5b65b5b119b1d27c8b5d63651be1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LookaheadParser::EnterObject</definition>
        <argsstring>()</argsstring>
        <name>EnterObject</name>
        <qualifiedname>LookaheadParser::EnterObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="105" column="10" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="127" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1a36ec1615d48fe4d2e16e373adea63e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LookaheadParser::EnterArray</definition>
        <argsstring>()</argsstring>
        <name>EnterArray</name>
        <qualifiedname>LookaheadParser::EnterArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="106" column="10" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="137" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1a5fa1c656fa149e2a580a4065351705e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * LookaheadParser::NextObjectKey</definition>
        <argsstring>()</argsstring>
        <name>NextObjectKey</name>
        <qualifiedname>LookaheadParser::NextObjectKey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="107" column="16" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="147" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1a0c9116fd6becabf6fabfe4c7b0d2544f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LookaheadParser::NextArrayValue</definition>
        <argsstring>()</argsstring>
        <name>NextArrayValue</name>
        <qualifiedname>LookaheadParser::NextArrayValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="108" column="10" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="163" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1a2b36cab5f9af8c1273b58ac4174f0158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LookaheadParser::GetInt</definition>
        <argsstring>()</argsstring>
        <name>GetInt</name>
        <qualifiedname>LookaheadParser::GetInt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="109" column="9" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="177" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1a9456db070c2321b42bf8fe1e62dd1b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double LookaheadParser::GetDouble</definition>
        <argsstring>()</argsstring>
        <name>GetDouble</name>
        <qualifiedname>LookaheadParser::GetDouble</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="110" column="12" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="188" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1a254a193b0bf66ddfa5b4a915768c07a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * LookaheadParser::GetString</definition>
        <argsstring>()</argsstring>
        <name>GetString</name>
        <qualifiedname>LookaheadParser::GetString</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="111" column="16" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="219" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1ad27dd0413166aab3fb173d4f52b045b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LookaheadParser::GetBool</definition>
        <argsstring>()</argsstring>
        <name>GetBool</name>
        <qualifiedname>LookaheadParser::GetBool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="112" column="10" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="199" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1a2a70de5ba5eab2ad0a4220cfafc61a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LookaheadParser::GetNull</definition>
        <argsstring>()</argsstring>
        <name>GetNull</name>
        <qualifiedname>LookaheadParser::GetNull</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="113" column="10" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="210" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1a26c28d790e7c915f86c6454a56597098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LookaheadParser::SkipObject</definition>
        <argsstring>()</argsstring>
        <name>SkipObject</name>
        <qualifiedname>LookaheadParser::SkipObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="115" column="10" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1a864c0b5ca3d7bcd6655b7b5b91eb7d4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LookaheadParser::SkipArray</definition>
        <argsstring>()</argsstring>
        <name>SkipArray</name>
        <qualifiedname>LookaheadParser::SkipArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="116" column="10" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1a32530191b0e9f290e639c540813a0a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LookaheadParser::SkipValue</definition>
        <argsstring>()</argsstring>
        <name>SkipValue</name>
        <qualifiedname>LookaheadParser::SkipValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="117" column="10" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1a28f142988e64794a006f0f7650def537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">Value</ref> *</type>
        <definition>Value * LookaheadParser::PeekValue</definition>
        <argsstring>()</argsstring>
        <name>PeekValue</name>
        <qualifiedname>LookaheadParser::PeekValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="118" column="11" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="259" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1a2ace6cf83f030330cc6fec191fa62418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LookaheadParser::PeekType</definition>
        <argsstring>()</argsstring>
        <name>PeekType</name>
        <qualifiedname>LookaheadParser::PeekType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="119" column="9" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="267" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_lookahead_parser_1a320cb1a9934a9fd67b7bf2cd0ff413d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool LookaheadParser::IsValid</definition>
        <argsstring>()</argsstring>
        <name>IsValid</name>
        <qualifiedname>LookaheadParser::IsValid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="121" column="10" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="121" bodyend="121"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_lookahead_parser_1aa8d1c7d1588947612aefd02cf5fd3590" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LookaheadParser::SkipOut</definition>
        <argsstring>(int depth)</argsstring>
        <name>SkipOut</name>
        <qualifiedname>LookaheadParser::SkipOut</qualifiedname>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="124" column="10" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="230" bodyend="245"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>LookaheadParser</label>
        <link refid="class_lookahead_parser"/>
        <childnode refid="2" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>LookaheadParserHandler</label>
        <link refid="class_lookahead_parser_handler"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="19">
        <label>CrtAllocator</label>
        <link refid="class_crt_allocator"/>
      </node>
      <node id="21">
        <label>GenericInsituStringStream&lt; UTF8&lt; char &gt; &gt;</label>
        <link refid="struct_generic_insitu_string_stream"/>
      </node>
      <node id="11">
        <label>GenericMember&lt; Encoding, Allocator &gt;</label>
        <link refid="class_generic_member"/>
        <childnode refid="12" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>GenericReader&lt; UTF8&lt; char &gt;, UTF8&lt; char &gt;, CrtAllocator &gt;</label>
        <link refid="class_generic_reader"/>
        <childnode refid="17" relation="usage">
          <edgelabel>kDefaultStackCapacity</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>stack_</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>parseResult_</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>GenericValue&lt; Encoding, Allocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="4" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ArrayData</label>
        <link refid="struct_generic_value_1_1_array_data"/>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Data</label>
        <link refid="union_generic_value_1_1_data"/>
        <childnode refid="5" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>ss</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>n</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>o</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>a</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Flag</label>
        <link refid="struct_generic_value_1_1_flag"/>
      </node>
      <node id="7">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number</label>
        <link refid="union_generic_value_1_1_number"/>
        <childnode refid="8" relation="usage">
          <edgelabel>i</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>u</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number::I</label>
        <link refid="struct_generic_value_1_1_number_1_1_i"/>
      </node>
      <node id="9">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number::U</label>
        <link refid="struct_generic_value_1_1_number_1_1_u"/>
      </node>
      <node id="10">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ObjectData</label>
        <link refid="struct_generic_value_1_1_object_data"/>
        <childnode refid="11" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ShortString</label>
        <link refid="struct_generic_value_1_1_short_string"/>
      </node>
      <node id="5">
        <label>GenericValue&lt; Encoding, Allocator &gt;::String</label>
        <link refid="struct_generic_value_1_1_string"/>
      </node>
      <node id="3">
        <label>GenericValue&lt; UTF8&lt;&gt; &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="4" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>GenericValue&lt; rapidjson::Encoding, rapidjson::Allocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="4" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>LookaheadParser</label>
        <link refid="class_lookahead_parser"/>
        <childnode refid="2" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>LookaheadParserHandler</label>
        <link refid="class_lookahead_parser_handler"/>
        <childnode refid="3" relation="usage">
          <edgelabel>v_</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>r_</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>ss_</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>ParseResult</label>
        <link refid="struct_parse_result"/>
        <childnode refid="17" relation="usage">
          <edgelabel>offset_</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>internal::Stack&lt; CrtAllocator &gt;</label>
        <link refid="classinternal_1_1_stack"/>
        <childnode refid="19" relation="usage">
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>initialCapacity_</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>size_t</label>
      </node>
    </collaborationgraph>
    <location file="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" line="101" column="1" bodyfile="src/rapidjson/example/lookaheadparser/lookaheadparser.cpp" bodystart="101" bodyend="125"/>
    <listofallmembers>
      <member refid="class_lookahead_parser_handler_1aa955ecc5369dc814acf003d2131c4d25" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>Bool</name></member>
      <member refid="class_lookahead_parser_handler_1aed09e1f187f88a8280009190a111c218" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>Double</name></member>
      <member refid="class_lookahead_parser_handler_1a8375dcab0e4bfb73067517e15e8a9991" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>EndArray</name></member>
      <member refid="class_lookahead_parser_handler_1a5d0aa1d01d2a120c34ca01c20b69e046" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>EndObject</name></member>
      <member refid="class_lookahead_parser_1a36ec1615d48fe4d2e16e373adea63e2b" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>EnterArray</name></member>
      <member refid="class_lookahead_parser_1aa91c5b65b5b119b1d27c8b5d63651be1" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>EnterObject</name></member>
      <member refid="class_lookahead_parser_1ad27dd0413166aab3fb173d4f52b045b7" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>GetBool</name></member>
      <member refid="class_lookahead_parser_1a9456db070c2321b42bf8fe1e62dd1b72" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>GetDouble</name></member>
      <member refid="class_lookahead_parser_1a2b36cab5f9af8c1273b58ac4174f0158" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>GetInt</name></member>
      <member refid="class_lookahead_parser_1a2a70de5ba5eab2ad0a4220cfafc61a59" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>GetNull</name></member>
      <member refid="class_lookahead_parser_1a254a193b0bf66ddfa5b4a915768c07a8" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>GetString</name></member>
      <member refid="class_lookahead_parser_handler_1a5f2b3e640904bae9b2387f7bf1f81844" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>Int</name></member>
      <member refid="class_lookahead_parser_handler_1a4631a4de15f0529ae6968f978df7e5be" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>Int64</name></member>
      <member refid="class_lookahead_parser_1a320cb1a9934a9fd67b7bf2cd0ff413d9" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>IsValid</name></member>
      <member refid="class_lookahead_parser_handler_1ae334adb8f4e9f8ae9912a026eef9f40aaa04d166db393c889f3b444e932f30842" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>kEnteringArray</name></member>
      <member refid="class_lookahead_parser_handler_1ae334adb8f4e9f8ae9912a026eef9f40aadfd64dce5fb7510a35452945eb3e1f81" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>kEnteringObject</name></member>
      <member refid="class_lookahead_parser_handler_1ae334adb8f4e9f8ae9912a026eef9f40aad76ea407bb7cc307e6e95d181f845d45" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>kError</name></member>
      <member refid="class_lookahead_parser_handler_1ae334adb8f4e9f8ae9912a026eef9f40aa11da35dbfb582c675b5a2e53e693afe5" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>kExitingArray</name></member>
      <member refid="class_lookahead_parser_handler_1ae334adb8f4e9f8ae9912a026eef9f40aa79f2f8d0ebe5856a0e45bca27640b920" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>kExitingObject</name></member>
      <member refid="class_lookahead_parser_handler_1a94a76a0ce3032dfa008cbf97cc7fcec8" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>Key</name></member>
      <member refid="class_lookahead_parser_handler_1ae334adb8f4e9f8ae9912a026eef9f40aad9f9336c30ffd2acd766298b24246eec" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>kHasBool</name></member>
      <member refid="class_lookahead_parser_handler_1ae334adb8f4e9f8ae9912a026eef9f40aadea4f79ab30f23f94fe694aa923a12bb" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>kHasKey</name></member>
      <member refid="class_lookahead_parser_handler_1ae334adb8f4e9f8ae9912a026eef9f40aa00cc1c35661ac51ff7101ff12b733448" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>kHasNull</name></member>
      <member refid="class_lookahead_parser_handler_1ae334adb8f4e9f8ae9912a026eef9f40aa2e55a1f4539fc2c9c3ce9b8860d50288" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>kHasNumber</name></member>
      <member refid="class_lookahead_parser_handler_1ae334adb8f4e9f8ae9912a026eef9f40aada0be4b465fce304dd5300d710f5e01c" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>kHasString</name></member>
      <member refid="class_lookahead_parser_handler_1ae334adb8f4e9f8ae9912a026eef9f40aa5a684cd67d320c36fe15b25c4c39ad0c" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>kInit</name></member>
      <member refid="class_lookahead_parser_1a126093b7e0e6ad1d007f4f07030bcd81" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>LookaheadParser</name></member>
      <member refid="class_lookahead_parser_handler_1aa56a8db4091e158c3dfecea6b2e7c96e" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>LookaheadParserHandler</name></member>
      <member refid="class_lookahead_parser_handler_1ae334adb8f4e9f8ae9912a026eef9f40a" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>LookaheadParsingState</name></member>
      <member refid="class_lookahead_parser_1a0c9116fd6becabf6fabfe4c7b0d2544f" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>NextArrayValue</name></member>
      <member refid="class_lookahead_parser_1a5fa1c656fa149e2a580a4065351705e8" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>NextObjectKey</name></member>
      <member refid="class_lookahead_parser_handler_1a85ccb4b2536522ae930b4af571a53f33" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>Null</name></member>
      <member refid="class_lookahead_parser_handler_1a42807dffc6082004527f5baaa0dd9cf3" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>parseFlags</name></member>
      <member refid="class_lookahead_parser_handler_1a7d0cc7887e9e0c37e645e27744a5b356" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>ParseNext</name></member>
      <member refid="class_lookahead_parser_1a2ace6cf83f030330cc6fec191fa62418" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>PeekType</name></member>
      <member refid="class_lookahead_parser_1a28f142988e64794a006f0f7650def537" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>PeekValue</name></member>
      <member refid="class_lookahead_parser_handler_1afcdd963db296b957f3afb8bbcb170e09" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>r_</name></member>
      <member refid="class_lookahead_parser_handler_1a0aaf8c093d2a385f7490d2ac0152dbe9" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>RawNumber</name></member>
      <member refid="class_lookahead_parser_1a864c0b5ca3d7bcd6655b7b5b91eb7d4c" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>SkipArray</name></member>
      <member refid="class_lookahead_parser_1a26c28d790e7c915f86c6454a56597098" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>SkipObject</name></member>
      <member refid="class_lookahead_parser_1aa8d1c7d1588947612aefd02cf5fd3590" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>SkipOut</name></member>
      <member refid="class_lookahead_parser_1a32530191b0e9f290e639c540813a0a5c" prot="public" virt="non-virtual"><scope>LookaheadParser</scope><name>SkipValue</name></member>
      <member refid="class_lookahead_parser_handler_1a0a1dd732ae2d8aab57dd04677bc55f6b" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>ss_</name></member>
      <member refid="class_lookahead_parser_handler_1a167f959f2c0930dc4cb60e8e7267f7d6" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>st_</name></member>
      <member refid="class_lookahead_parser_handler_1a7d345e799ae345624448b605a4a6aab3" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>StartArray</name></member>
      <member refid="class_lookahead_parser_handler_1a00a8690452c9ecea125d621344e87d10" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>StartObject</name></member>
      <member refid="class_lookahead_parser_handler_1a9f2950368d68abee5868de20d3f8a673" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>String</name></member>
      <member refid="class_lookahead_parser_handler_1a89d96f278529d0fc4b38babb1b12a7bf" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>Uint</name></member>
      <member refid="class_lookahead_parser_handler_1aab1be7f0bdd8ee8d9999f26085eb15f4" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>Uint64</name></member>
      <member refid="class_lookahead_parser_handler_1a180a9567951c536adf91b8ab74621eb5" prot="protected" virt="non-virtual"><scope>LookaheadParser</scope><name>v_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
