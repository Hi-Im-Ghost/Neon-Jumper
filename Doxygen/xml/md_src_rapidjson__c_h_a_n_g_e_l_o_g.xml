<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="md_src_rapidjson__c_h_a_n_g_e_l_o_g" kind="page">
    <compoundname>md_src_rapidjson_CHANGELOG</compoundname>
    <title>Change Log</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>All notable changes to this project will be documented in this file. This project adheres to <ulink url="http://semver.org/">Semantic Versioning</ulink>.</para>
<sect1 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md20">
<title>&lt;a href=&quot;https://github.com/Tencent/rapidjson/compare/v1.1.0...HEAD&quot;</title>
<para>&gt;Unreleased</para>
</sect1>
<sect1 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md21">
<title>1.1.0 - 2016-08-25</title>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md22">
<title>Added</title>
<para><itemizedlist>
<listitem><para>Add <ref refid="class_generic_document" kindref="compound">GenericDocument</ref> ctor overload to specify JSON type (#369)</para>
</listitem><listitem><para>Add FAQ (#372, #373, #374, #376)</para>
</listitem><listitem><para>Add forward declaration header <computeroutput><ref refid="fwd_8h" kindref="compound">fwd.h</ref></computeroutput></para>
</listitem><listitem><para>Add @PlatformIO Library Registry manifest file (#400)</para>
</listitem><listitem><para>Implement assignment operator for BigInteger (#404)</para>
</listitem><listitem><para>Add comments support (#443)</para>
</listitem><listitem><para>Adding coapp definition (#460)</para>
</listitem><listitem><para><ref refid="documenttest_8cpp" kindref="compound">documenttest.cpp</ref>: EXPECT_THROW when checking empty allocator (470)</para>
</listitem><listitem><para><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>: add implicit conversion to <ref refid="struct_parse_result" kindref="compound">ParseResult</ref> (#480)</para>
</listitem><listitem><para>Use &lt;wchar.h&gt; with C++ linkage on Windows ARM (#485)</para>
</listitem><listitem><para>Detect little endian for Microsoft ARM targets</para>
</listitem><listitem><para>Check Nan/Inf when writing a double (#510)</para>
</listitem><listitem><para>Add JSON <ref refid="class_schema" kindref="compound">Schema</ref> Implementation (#522)</para>
</listitem><listitem><para>Add iostream wrapper (#530)</para>
</listitem><listitem><para>Add Jsonx example for converting JSON into JSONx (a XML format) (#531)</para>
</listitem><listitem><para>Add optional unresolvedTokenIndex parameter to Pointer::Get() (#532)</para>
</listitem><listitem><para>Add encoding validation option for Writer/PrettyWriter (#534)</para>
</listitem><listitem><para>Add <ref refid="class_writer_1a58e3f94dc5af1432a8eace5ba427eca7" kindref="member">Writer::SetMaxDecimalPlaces()</ref> (#536)</para>
</listitem><listitem><para>Support {0, } and {0, m} in Regex (#539)</para>
</listitem><listitem><para>Add Value::Get/SetFloat(), Value::IsLossLessFloat/Double() (#540)</para>
</listitem><listitem><para>Add stream position check to reader unit tests (#541)</para>
</listitem><listitem><para>Add Templated accessors and range-based for (#542)</para>
</listitem><listitem><para>Add (Pretty)<ref refid="class_writer_1ae0d1615104e4e88040b9640e6784008a" kindref="member">Writer::RawValue()</ref> (#543)</para>
</listitem><listitem><para>Add Document::Parse(std::string), Document::Parse(const char*, size_t length) and related APIs. (#553)</para>
</listitem><listitem><para>Add move constructor for <ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref> (#554)</para>
</listitem><listitem><para>Add VS2010 and VS2015 to AppVeyor CI (#555)</para>
</listitem><listitem><para>Add parse-by-parts example (#556, #562)</para>
</listitem><listitem><para>Support parse number as string (#564, #589)</para>
</listitem><listitem><para>Add kFormatSingleLineArray for <ref refid="class_pretty_writer" kindref="compound">PrettyWriter</ref> (#577)</para>
</listitem><listitem><para>Added optional support for trailing commas (#584)</para>
</listitem><listitem><para>Added filterkey and filterkeydom examples (#615)</para>
</listitem><listitem><para>Added npm docs (#639)</para>
</listitem><listitem><para>Allow options for writing and parsing NaN/Infinity (#641)</para>
</listitem><listitem><para>Add std::string overload to <ref refid="class_pretty_writer_1a20ecbe1d31a871e4da4a3899b40ad3cd" kindref="member">PrettyWriter::Key()</ref> when RAPIDJSON_HAS_STDSTRING is defined (#698)</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md23">
<title>Fixed</title>
<para><itemizedlist>
<listitem><para>Fix gcc/clang/vc warnings (#350, #394, #397, #444, #447, #473, #515, #582, #589, #595, #667)</para>
</listitem><listitem><para>Fix documentation (#482, #511, #550, #557, #614, #635, #660)</para>
</listitem><listitem><para>Fix emscripten alignment issue (#535)</para>
</listitem><listitem><para>Fix missing allocator to uses of AddMember in document (#365)</para>
</listitem><listitem><para>CMake will no longer complain that the minimum CMake version is not specified (#501)</para>
</listitem><listitem><para>Make it usable with old VC8 (VS2005) (#383)</para>
</listitem><listitem><para>Prohibit C++11 move from Document to Value (#391)</para>
</listitem><listitem><para>Try to fix incorrect 64-bit alignment (#419)</para>
</listitem><listitem><para>Check return of fwrite to avoid warn_unused_result build failures (#421)</para>
</listitem><listitem><para>Fix UB in <ref refid="class_generic_document_1a7bc1827a7ab04de4789fe46237f0e921" kindref="member">GenericDocument::ParseStream</ref> (#426)</para>
</listitem><listitem><para>Keep Document value unchanged on parse error (#439)</para>
</listitem><listitem><para>Add missing return statement (#450)</para>
</listitem><listitem><para>Fix <ref refid="class_generic_document_1a3c3977dcf15fafe17d57f6784e0ce2b5" kindref="member">Document::Parse(const Ch*)</ref> for transcoding (#478)</para>
</listitem><listitem><para><ref refid="encodings_8h" kindref="compound">encodings.h</ref>: fix typo in preprocessor condition (#495)</para>
</listitem><listitem><para>Custom Microsoft headers are necessary only for Visual Studio 2012 and lower (#559)</para>
</listitem><listitem><para>Fix memory leak for invalid regex (26e69ffde95ba4773ab06db6457b78f308716f4b)</para>
</listitem><listitem><para>Fix a bug in schema minimum/maximum keywords for 64-bit integer (e7149d665941068ccf8c565e77495521331cf390)</para>
</listitem><listitem><para>Fix a crash bug in regex (#605)</para>
</listitem><listitem><para>Fix schema &quot;required&quot; keyword cannot handle duplicated keys (#609)</para>
</listitem><listitem><para>Fix cmake CMP0054 warning (#612)</para>
</listitem><listitem><para>Added missing include guards in <ref refid="istreamwrapper_8h" kindref="compound">istreamwrapper.h</ref> and <ref refid="ostreamwrapper_8h" kindref="compound">ostreamwrapper.h</ref> (#634)</para>
</listitem><listitem><para>Fix undefined behaviour (#646)</para>
</listitem><listitem><para>Fix buffer overrun using PutN (#673)</para>
</listitem><listitem><para>Fix rapidjson::value::Get&lt;std::string&gt;() may returns wrong data (#681)</para>
</listitem><listitem><para>Add Flush() for all value types (#689)</para>
</listitem><listitem><para>Handle malloc() fail in PoolAllocator (#691)</para>
</listitem><listitem><para>Fix builds on x32 platform. #703</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md24">
<title>Changed</title>
<para><itemizedlist>
<listitem><para>Clarify problematic JSON license (#392)</para>
</listitem><listitem><para>Move Travis to container based infrastructure (#504, #558)</para>
</listitem><listitem><para>Make whitespace array more compact (#513)</para>
</listitem><listitem><para>Optimize <ref refid="class_writer_1acda4412ef5f4cac6e89f9544e4b10f70" kindref="member">Writer::WriteString()</ref> with SIMD (#544)</para>
</listitem><listitem><para>x86-64 48-bit pointer optimization for <ref refid="class_generic_value" kindref="compound">GenericValue</ref> (#546)</para>
</listitem><listitem><para>Define RAPIDJSON_HAS_CXX11_RVALUE_REFS directly in clang (#617)</para>
</listitem><listitem><para>Make <ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref> constructor explicit (#674)</para>
</listitem><listitem><para>Optimize FindMember when use std::string (#690)</para>
</listitem></itemizedlist>
</para>
</sect2>
</sect1>
<sect1 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md25">
<title>&lt;a href=&quot;https://github.com/Tencent/rapidjson/compare/v1.0.1...v1.0.2&quot; &gt;1.0.2&lt;/a&gt; - 2015-05-14</title>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md26">
<title>Added</title>
<para><itemizedlist>
<listitem><para>Add Value::XXXMember(...) overloads for std::string (#335)</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md27">
<title>Fixed</title>
<para><itemizedlist>
<listitem><para>Include <ref refid="rapidjson_8h" kindref="compound">rapidjson.h</ref> for all internal/error headers.</para>
</listitem><listitem><para>Parsing some numbers incorrectly in full-precision mode (<computeroutput>kFullPrecisionParseFlag</computeroutput>) (#342)</para>
</listitem><listitem><para>Fix some numbers parsed incorrectly (#336)</para>
</listitem><listitem><para>Fix alignment of 64bit platforms (#328)</para>
</listitem><listitem><para>Fix <ref refid="class_memory_pool_allocator_1a6f6dce308aa10a28c898348db3bc75c1" kindref="member">MemoryPoolAllocator::Clear()</ref> to clear user-buffer (0691502573f1afd3341073dd24b12c3db20fbde4)</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md28">
<title>Changed</title>
<para><itemizedlist>
<listitem><para>CMakeLists for include as a thirdparty in projects (#334, #337)</para>
</listitem><listitem><para>Change <ref refid="class_generic_document_1a7bc1827a7ab04de4789fe46237f0e921" kindref="member">Document::ParseStream()</ref> to use stack allocator for Reader (ffbe38614732af8e0b3abdc8b50071f386a4a685)</para>
</listitem></itemizedlist>
</para>
</sect2>
</sect1>
<sect1 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md29">
<title>&lt;a href=&quot;https://github.com/Tencent/rapidjson/compare/v1.0.0...v1.0.1&quot; &gt;1.0.1&lt;/a&gt; - 2015-04-25</title>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md30">
<title>Added</title>
<para><itemizedlist>
<listitem><para>Changelog following <ulink url="https://github.com/olivierlacan/keep-a-changelog">Keep a CHANGELOG</ulink> suggestions.</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md31">
<title>Fixed</title>
<para><itemizedlist>
<listitem><para>Parsing of some numbers (e.g. &quot;1e-00011111111111&quot;) causing assertion (#314).</para>
</listitem><listitem><para>Visual C++ 32-bit compilation error in <computeroutput><ref refid="diyfp_8h" kindref="compound">diyfp.h</ref></computeroutput> (#317).</para>
</listitem></itemizedlist>
</para>
</sect2>
</sect1>
<sect1 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md32">
<title>&lt;a href=&quot;https://github.com/Tencent/rapidjson/compare/v1.0-beta...v1.0.0&quot; &gt;1.0.0&lt;/a&gt; - 2015-04-22</title>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md33">
<title>Added</title>
<para><itemizedlist>
<listitem><para>100% <ulink url="https://coveralls.io/r/Tencent/rapidjson?branch=master">Coverall</ulink> coverage.</para>
</listitem><listitem><para>Version macros (#311)</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md34">
<title>Fixed</title>
<para><itemizedlist>
<listitem><para>A bug in trimming long number sequence (4824f12efbf01af72b8cb6fc96fae7b097b73015).</para>
</listitem><listitem><para>Double quote in unicode escape (#288).</para>
</listitem><listitem><para>Negative zero roundtrip (double only) (#289).</para>
</listitem><listitem><para>Standardize behavior of <computeroutput>memcpy()</computeroutput> and <computeroutput>malloc()</computeroutput> (0c5c1538dcfc7f160e5a4aa208ddf092c787be5a, #305, 0e8bbe5e3ef375e7f052f556878be0bd79e9062d).</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md35">
<title>Removed</title>
<para><itemizedlist>
<listitem><para>Remove an invalid <computeroutput><ref refid="class_generic_document_1a13f68b1896a24eea4cdbc03a3916225f" kindref="member">Document::ParseInsitu()</ref></computeroutput> API (e7f1c6dd08b522cfcf9aed58a333bd9a0c0ccbeb).</para>
</listitem></itemizedlist>
</para>
</sect2>
</sect1>
<sect1 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md36">
<title>1.0-beta - 2015-04-8</title>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md37">
<title>Added</title>
<para><itemizedlist>
<listitem><para>RFC 7159 (#101)</para>
</listitem><listitem><para>Optional Iterative Parser (#76)</para>
</listitem><listitem><para>Deep-copy values (#20)</para>
</listitem><listitem><para>Error code and message (#27)</para>
</listitem><listitem><para><ref refid="struct_a_s_c_i_i" kindref="compound">ASCII</ref> Encoding (#70)</para>
</listitem><listitem><para><computeroutput>kParseStopWhenDoneFlag</computeroutput> (#83)</para>
</listitem><listitem><para><computeroutput>kParseFullPrecisionFlag</computeroutput> (881c91d696f06b7f302af6d04ec14dd08db66ceb)</para>
</listitem><listitem><para>Add <computeroutput>Key()</computeroutput> to handler concept (#134)</para>
</listitem><listitem><para>C++11 compatibility and support (#128)</para>
</listitem><listitem><para>Optimized number-to-string and vice versa conversions (#137, #80)</para>
</listitem><listitem><para>Short-String Optimization (#131)</para>
</listitem><listitem><para>Local stream optimization by traits (#32)</para>
</listitem><listitem><para>Travis &amp; Appveyor Continuous Integration, with Valgrind verification (#24, #242)</para>
</listitem><listitem><para>Redo all documentation (English, Simplified Chinese)</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md38">
<title>Changed</title>
<para><itemizedlist>
<listitem><para>Copyright ownership transferred to THL A29 Limited (a Tencent company).</para>
</listitem><listitem><para>Migrating from Premake to CMAKE (#192)</para>
</listitem><listitem><para>Resolve all warning reports</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md39">
<title>Removed</title>
<para><itemizedlist>
<listitem><para>Remove other JSON libraries for performance comparison (#180)</para>
</listitem></itemizedlist>
</para>
</sect2>
</sect1>
<sect1 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md40">
<title>0.11 - 2012-11-16</title>
</sect1>
<sect1 id="md_src_rapidjson__c_h_a_n_g_e_l_o_g_1autotoc_md41">
<title>0.1 - 2011-11-18</title>
</sect1>
    </detaileddescription>
    <location file="src/rapidjson/CHANGELOG.md"/>
  </compounddef>
</doxygen>
