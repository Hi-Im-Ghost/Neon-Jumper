<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classmyjson_1_1_my_allocator" kind="class" language="C++" prot="public">
    <compoundname>myjson::MyAllocator</compoundname>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmyjson_1_1_my_allocator_1a6bce993410843339068ce5495e48eed2" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool myjson::MyAllocator::kNeedFree</definition>
        <argsstring></argsstring>
        <name>kNeedFree</name>
        <qualifiedname>myjson::MyAllocator::kNeedFree</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/pointertest.cpp" line="1692" column="23" bodyfile="src/rapidjson/test/unittest/pointertest.cpp" bodystart="1692" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmyjson_1_1_my_allocator_1a969652f85ab8b4c63b0dd33f4b373448" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * myjson::MyAllocator::Malloc</definition>
        <argsstring>(size_t _size)</argsstring>
        <name>Malloc</name>
        <qualifiedname>myjson::MyAllocator::Malloc</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/pointertest.cpp" line="1693" column="11" bodyfile="src/rapidjson/test/unittest/pointertest.cpp" bodystart="1693" bodyend="1693"/>
      </memberdef>
      <memberdef kind="function" id="classmyjson_1_1_my_allocator_1a6457176352eb9dbe010824414b603607" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * myjson::MyAllocator::Realloc</definition>
        <argsstring>(void *_org_p, size_t _org_size, size_t _new_size)</argsstring>
        <name>Realloc</name>
        <qualifiedname>myjson::MyAllocator::Realloc</qualifiedname>
        <param>
          <type>void *</type>
          <declname>_org_p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_org_size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/pointertest.cpp" line="1694" column="11" bodyfile="src/rapidjson/test/unittest/pointertest.cpp" bodystart="1694" bodyend="1694"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmyjson_1_1_my_allocator_1a3638ad210868b5bb2d48f4839c06ef29" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void myjson::MyAllocator::Free</definition>
        <argsstring>(void *_p)</argsstring>
        <name>Free</name>
        <qualifiedname>myjson::MyAllocator::Free</qualifiedname>
        <param>
          <type>void *</type>
          <declname>_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/pointertest.cpp" line="1695" column="17" bodyfile="src/rapidjson/test/unittest/pointertest.cpp" bodystart="1695" bodyend="1695"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/rapidjson/test/unittest/pointertest.cpp" line="1689" column="1" bodyfile="src/rapidjson/test/unittest/pointertest.cpp" bodystart="1690" bodyend="1696"/>
    <listofallmembers>
      <member refid="classmyjson_1_1_my_allocator_1a3638ad210868b5bb2d48f4839c06ef29" prot="public" virt="non-virtual"><scope>myjson::MyAllocator</scope><name>Free</name></member>
      <member refid="classmyjson_1_1_my_allocator_1a6bce993410843339068ce5495e48eed2" prot="public" virt="non-virtual"><scope>myjson::MyAllocator</scope><name>kNeedFree</name></member>
      <member refid="classmyjson_1_1_my_allocator_1a969652f85ab8b4c63b0dd33f4b373448" prot="public" virt="non-virtual"><scope>myjson::MyAllocator</scope><name>Malloc</name></member>
      <member refid="classmyjson_1_1_my_allocator_1a6457176352eb9dbe010824414b603607" prot="public" virt="non-virtual"><scope>myjson::MyAllocator</scope><name>Realloc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
