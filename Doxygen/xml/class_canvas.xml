<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_canvas" kind="class" language="C++" prot="public">
    <compoundname>Canvas</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_canvas_1a929b5186aecb2699b6c89d13397ebcaf" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_shape" kindref="compound">Shape</ref> * &gt;</type>
        <definition>std::vector&lt;Shape*&gt; Canvas::shapes_</definition>
        <argsstring></argsstring>
        <name>shapes_</name>
        <qualifiedname>Canvas::shapes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archivertest.cpp" line="225" column="17" bodyfile="src/rapidjson/example/archiver/archivertest.cpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_canvas_1a5fce53f080ad6540094901f9768805a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Canvas::Canvas</definition>
        <argsstring>()</argsstring>
        <name>Canvas</name>
        <qualifiedname>Canvas::Canvas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archivertest.cpp" line="204" column="5" bodyfile="src/rapidjson/example/archiver/archivertest.cpp" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_canvas_1a237c4549ad2e27c729cd1f71e89f0fd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Canvas::~Canvas</definition>
        <argsstring>()</argsstring>
        <name>~Canvas</name>
        <qualifiedname>Canvas::~Canvas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archivertest.cpp" line="205" column="5" bodyfile="src/rapidjson/example/archiver/archivertest.cpp" bodystart="205" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_canvas_1a5cf12ec3c89b0e8b63c50317e056ebc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Canvas::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <qualifiedname>Canvas::Clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archivertest.cpp" line="207" column="10" bodyfile="src/rapidjson/example/archiver/archivertest.cpp" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_canvas_1a277e4e60f5ec3ea16efd7ce9e1fb654b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Canvas::AddShape</definition>
        <argsstring>(Shape *shape)</argsstring>
        <name>AddShape</name>
        <qualifiedname>Canvas::AddShape</qualifiedname>
        <param>
          <type><ref refid="class_shape" kindref="compound">Shape</ref> *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archivertest.cpp" line="212" column="10" bodyfile="src/rapidjson/example/archiver/archivertest.cpp" bodystart="212" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_canvas_1acf5c8e6bbc490927df36e3c30583800e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Canvas::Print</definition>
        <argsstring>(std::ostream &amp;os)</argsstring>
        <name>Print</name>
        <qualifiedname>Canvas::Print</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archivertest.cpp" line="214" column="10" bodyfile="src/rapidjson/example/archiver/archivertest.cpp" bodystart="214" bodyend="219"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_canvas_1a47db321e893b59b20080b4c364552844" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="class_archiver" kindref="compound">Archiver</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="class_archiver" kindref="compound">Archiver</ref> &amp;</type>
        <definition>Archiver &amp; operator&amp;</definition>
        <argsstring>(Archiver &amp;ar, Canvas &amp;c)</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>Canvas::operator&amp;</qualifiedname>
        <param>
          <type><ref refid="class_archiver" kindref="compound">Archiver</ref> &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type><ref refid="class_canvas" kindref="compound">Canvas</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archivertest.cpp" line="223" column="21" bodyfile="src/rapidjson/example/archiver/archivertest.cpp" bodystart="245" bodyend="255"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/rapidjson/example/archiver/archivertest.cpp" line="202" column="1" bodyfile="src/rapidjson/example/archiver/archivertest.cpp" bodystart="202" bodyend="226"/>
    <listofallmembers>
      <member refid="class_canvas_1a277e4e60f5ec3ea16efd7ce9e1fb654b" prot="public" virt="non-virtual"><scope>Canvas</scope><name>AddShape</name></member>
      <member refid="class_canvas_1a5fce53f080ad6540094901f9768805a8" prot="public" virt="non-virtual"><scope>Canvas</scope><name>Canvas</name></member>
      <member refid="class_canvas_1a5cf12ec3c89b0e8b63c50317e056ebc3" prot="public" virt="non-virtual"><scope>Canvas</scope><name>Clear</name></member>
      <member refid="class_canvas_1a47db321e893b59b20080b4c364552844" prot="private" virt="non-virtual"><scope>Canvas</scope><name>operator&amp;</name></member>
      <member refid="class_canvas_1acf5c8e6bbc490927df36e3c30583800e" prot="public" virt="non-virtual"><scope>Canvas</scope><name>Print</name></member>
      <member refid="class_canvas_1a929b5186aecb2699b6c89d13397ebcaf" prot="private" virt="non-virtual"><scope>Canvas</scope><name>shapes_</name></member>
      <member refid="class_canvas_1a237c4549ad2e27c729cd1f71e89f0fd9" prot="public" virt="non-virtual"><scope>Canvas</scope><name>~Canvas</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
