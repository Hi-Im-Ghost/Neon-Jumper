<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_projectile" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Projectile</compoundname>
    <derivedcompoundref refid="class_bullet" prot="public" virt="non-virtual">Bullet</derivedcompoundref>
    <includes refid="_projectile_8h" local="no">Projectile.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_projectile_1a1220dfd08fe74bb7ab09e8008d1cf70d" prot="private" static="no" mutable="no">
        <type>sf::Texture</type>
        <definition>sf::Texture Projectile::_texture</definition>
        <argsstring></argsstring>
        <name>_texture</name>
        <qualifiedname>Projectile::_texture</qualifiedname>
        <briefdescription>
<para>Tekstura pocisku. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="11" column="17" bodyfile="src/entities/projectiles/Projectile.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_projectile_1af96e1c6bd505495166db6c59f5301656" prot="private" static="no" mutable="no">
        <type>sf::Sprite</type>
        <definition>sf::Sprite Projectile::_sprite</definition>
        <argsstring></argsstring>
        <name>_sprite</name>
        <qualifiedname>Projectile::_sprite</qualifiedname>
        <briefdescription>
<para>Sprite pocisku wczytywany z tekstury. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="13" column="16" bodyfile="src/entities/projectiles/Projectile.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_projectile_1ae13dbe19f644c0f60751e75f5edcbc2a" prot="private" static="no" mutable="no">
        <type>sf::RectangleShape</type>
        <definition>sf::RectangleShape Projectile::_hitbox</definition>
        <argsstring></argsstring>
        <name>_hitbox</name>
        <qualifiedname>Projectile::_hitbox</qualifiedname>
        <briefdescription>
<para>Kształt odpowiadający za wykrywanie kolizji pocisku. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="15" column="24" bodyfile="src/entities/projectiles/Projectile.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_projectile_1a57cd904f69bfb6291ac3fb9807e7ba32" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Projectile::_bMovingRight</definition>
        <argsstring></argsstring>
        <name>_bMovingRight</name>
        <qualifiedname>Projectile::_bMovingRight</qualifiedname>
        <briefdescription>
<para>Określa czy pocisk porysza się w prawo, czy w lewo. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="18" column="10" bodyfile="src/entities/projectiles/Projectile.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_projectile_1a7220229e045cd2d5bc18dcf42c483c43" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Projectile::_bShouldBeDestroyed</definition>
        <argsstring></argsstring>
        <name>_bShouldBeDestroyed</name>
        <qualifiedname>Projectile::_bShouldBeDestroyed</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Określa czy pocisk powinien być zniszczony. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="20" column="10" bodyfile="src/entities/projectiles/Projectile.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_projectile_1a1e7043391129f4b34c7b9ab011edb3ef" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Projectile::move</definition>
        <argsstring>()=0</argsstring>
        <name>move</name>
        <qualifiedname>Projectile::move</qualifiedname>
        <reimplementedby refid="class_bullet_1a88af6034543e11dd8e4b5539b7634838">move</reimplementedby>
        <briefdescription>
<para>Porusza pociskiem w odpowiedni sposób. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="24" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_projectile_1acdf51147e7efc2a15af8bca73b3243be" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Projectile::setPosition</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>setPosition</name>
        <qualifiedname>Projectile::setPosition</qualifiedname>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ustawia pozycję pozisku na mapie <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>pozycja x na mapie </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>pozycja y na mapie </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="29" column="10" bodyfile="src/entities/projectiles/Projectile.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_projectile_1a76008c00d23d28ef400a863bd0b56257" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Projectile::initTexture</definition>
        <argsstring>(const std::string &amp;path, sf::IntRect textureRect)</argsstring>
        <name>initTexture</name>
        <qualifiedname>Projectile::initTexture</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>sf::IntRect</type>
          <declname>textureRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inicjalizacja tekstury i sprite pocisku <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>ścieżka do pliku tekstury </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>textureRect</parametername>
</parameternamelist>
<parameterdescription>
<para>fragment tekstury, który zostanie wczytany do sprite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="35" column="10" bodyfile="src/entities/projectiles/Projectile.cpp" bodystart="10" bodyend="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_projectile_1a3f19ab91fddb8211bac7e1196b0f15c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Projectile::Projectile</definition>
        <argsstring>(sf::Vector2f pos, bool movingRight)</argsstring>
        <name>Projectile</name>
        <qualifiedname>Projectile::Projectile</qualifiedname>
        <param>
          <type>sf::Vector2f</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>movingRight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Konstruktor pocisku <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>początkowa pozycja pocisku na mapie </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>movingRight</parametername>
</parameternamelist>
<parameterdescription>
<para>określa czy pocisk powinien poruszać się w prawo czy w lewo </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="42" column="5" bodyfile="src/entities/projectiles/Projectile.cpp" bodystart="3" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="class_projectile_1a88ed5be04ec9eddeb83deb201607368c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Projectile::getPosition</definition>
        <argsstring>()</argsstring>
        <name>getPosition</name>
        <qualifiedname>Projectile::getPosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca pozycję pocisku na mapie <simplesect kind="return"><para>pozycja pocisku na mapie </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="48" column="18" bodyfile="src/entities/projectiles/Projectile.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_projectile_1a91ca302f63a06df2c67b9b94a478b0f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Projectile::getIsMovingRight</definition>
        <argsstring>() const</argsstring>
        <name>getIsMovingRight</name>
        <qualifiedname>Projectile::getIsMovingRight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca informację, czy pocisk porusza się w prawo <simplesect kind="return"><para>informacja, czy pocisk porusza się w prawo </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="53" column="10" bodyfile="src/entities/projectiles/Projectile.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_projectile_1a321c90dbedd089ad2d0b3ec8f21d5922" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Projectile::getShouldBeDestroyed</definition>
        <argsstring>() const</argsstring>
        <name>getShouldBeDestroyed</name>
        <qualifiedname>Projectile::getShouldBeDestroyed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca informację, czy pocisk powinien zostać zniszczony <simplesect kind="return"><para>informacja, czy pocisk powinien zostać zniszcczony </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="58" column="10" bodyfile="src/entities/projectiles/Projectile.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_projectile_1a429879cf9406d612f95183e9428f104b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Projectile::isColliding</definition>
        <argsstring>(const sf::RectangleShape &amp;recShape)</argsstring>
        <name>isColliding</name>
        <qualifiedname>Projectile::isColliding</qualifiedname>
        <param>
          <type>const sf::RectangleShape &amp;</type>
          <declname>recShape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sprawdza, czy pocisk koliduje z podanym kształtem <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recShape</parametername>
</parameternamelist>
<parameterdescription>
<para>kształt z którym pocisk testuje kolizje </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true - jeżeli nastąpiła kolizja, false - jeżeli nie </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="64" column="10" bodyfile="src/entities/projectiles/Projectile.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_projectile_1a970ca4296053eaff4665f0c4ff3e83c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Projectile::markForDestruction</definition>
        <argsstring>()</argsstring>
        <name>markForDestruction</name>
        <qualifiedname>Projectile::markForDestruction</qualifiedname>
        <briefdescription>
<para>Oznacza pocisk jako gotowy do zniszczenia. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="66" column="10" bodyfile="src/entities/projectiles/Projectile.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_projectile_1a5bc646de87829b911d6817a6478c353e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Projectile::update</definition>
        <argsstring>(float deltaTime)</argsstring>
        <name>update</name>
        <qualifiedname>Projectile::update</qualifiedname>
        <reimplementedby refid="class_bullet_1a0f8a91fcf01c7e95f25bb9754bac6cfd">update</reimplementedby>
        <param>
          <type>float</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Odświeżanie logiki pocisku <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deltaTime</parametername>
</parameternamelist>
<parameterdescription>
<para>czas pomiędzy klatkami aplikacji </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="71" column="18" bodyfile="src/entities/projectiles/Projectile.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_projectile_1a44595d2283e231188003bef859f98eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Projectile::render</definition>
        <argsstring>(sf::RenderTarget &amp;window)</argsstring>
        <name>render</name>
        <qualifiedname>Projectile::render</qualifiedname>
        <param>
          <type>sf::RenderTarget &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Renderowanie pocisku na oknie <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>okno, na którym renderowany jest pocisk </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/entities/projectiles/Projectile.h" line="76" column="10" bodyfile="src/entities/projectiles/Projectile.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Bullet</label>
        <link refid="class_bullet"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Projectile</label>
        <link refid="class_projectile"/>
      </node>
    </inheritancegraph>
    <location file="src/entities/projectiles/Projectile.h" line="8" column="1" bodyfile="src/entities/projectiles/Projectile.h" bodystart="8" bodyend="77"/>
    <listofallmembers>
      <member refid="class_projectile_1a57cd904f69bfb6291ac3fb9807e7ba32" prot="private" virt="non-virtual"><scope>Projectile</scope><name>_bMovingRight</name></member>
      <member refid="class_projectile_1a7220229e045cd2d5bc18dcf42c483c43" prot="private" virt="non-virtual"><scope>Projectile</scope><name>_bShouldBeDestroyed</name></member>
      <member refid="class_projectile_1ae13dbe19f644c0f60751e75f5edcbc2a" prot="private" virt="non-virtual"><scope>Projectile</scope><name>_hitbox</name></member>
      <member refid="class_projectile_1af96e1c6bd505495166db6c59f5301656" prot="private" virt="non-virtual"><scope>Projectile</scope><name>_sprite</name></member>
      <member refid="class_projectile_1a1220dfd08fe74bb7ab09e8008d1cf70d" prot="private" virt="non-virtual"><scope>Projectile</scope><name>_texture</name></member>
      <member refid="class_projectile_1a91ca302f63a06df2c67b9b94a478b0f6" prot="public" virt="non-virtual"><scope>Projectile</scope><name>getIsMovingRight</name></member>
      <member refid="class_projectile_1a88ed5be04ec9eddeb83deb201607368c" prot="public" virt="non-virtual"><scope>Projectile</scope><name>getPosition</name></member>
      <member refid="class_projectile_1a321c90dbedd089ad2d0b3ec8f21d5922" prot="public" virt="non-virtual"><scope>Projectile</scope><name>getShouldBeDestroyed</name></member>
      <member refid="class_projectile_1a76008c00d23d28ef400a863bd0b56257" prot="protected" virt="non-virtual"><scope>Projectile</scope><name>initTexture</name></member>
      <member refid="class_projectile_1a429879cf9406d612f95183e9428f104b" prot="public" virt="non-virtual"><scope>Projectile</scope><name>isColliding</name></member>
      <member refid="class_projectile_1a970ca4296053eaff4665f0c4ff3e83c7" prot="public" virt="non-virtual"><scope>Projectile</scope><name>markForDestruction</name></member>
      <member refid="class_projectile_1a1e7043391129f4b34c7b9ab011edb3ef" prot="protected" virt="pure-virtual"><scope>Projectile</scope><name>move</name></member>
      <member refid="class_projectile_1a3f19ab91fddb8211bac7e1196b0f15c0" prot="public" virt="non-virtual"><scope>Projectile</scope><name>Projectile</name></member>
      <member refid="class_projectile_1a44595d2283e231188003bef859f98eb9" prot="public" virt="non-virtual"><scope>Projectile</scope><name>render</name></member>
      <member refid="class_projectile_1acdf51147e7efc2a15af8bca73b3243be" prot="protected" virt="non-virtual"><scope>Projectile</scope><name>setPosition</name></member>
      <member refid="class_projectile_1a5bc646de87829b911d6817a6478c353e" prot="public" virt="virtual"><scope>Projectile</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
