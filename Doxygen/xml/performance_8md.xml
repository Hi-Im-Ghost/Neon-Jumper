<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="performance_8md" kind="file" language="Markdown">
    <compoundname>performance.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Performance</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">There<sp/>is<sp/>a<sp/>[native<sp/>JSON<sp/>benchmark<sp/>collection]<sp/>[1]<sp/>which<sp/>evaluates<sp/>speed,<sp/>memory<sp/>usage<sp/>and<sp/>code<sp/>size<sp/>of<sp/>various<sp/>operations<sp/>among<sp/>37<sp/>JSON<sp/>libraries.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[1]:<sp/>https://github.com/miloyip/nativejson-benchmark</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>old<sp/>performance<sp/>article<sp/>for<sp/>RapidJSON<sp/>0.1<sp/>is<sp/>provided<sp/>[here](https://code.google.com/p/rapidjson/wiki/Performance).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Additionally,<sp/>you<sp/>may<sp/>refer<sp/>to<sp/>the<sp/>following<sp/>third-party<sp/>benchmarks.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Third-party<sp/>benchmarks</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>[Basic<sp/>benchmarks<sp/>for<sp/>miscellaneous<sp/>C++<sp/>JSON<sp/>parsers<sp/>and<sp/>generators](https://github.com/mloskot/json_benchmark)<sp/>by<sp/>Mateusz<sp/>Loskot<sp/>(Jun<sp/>2013)</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>[casablanca](https://casablanca.codeplex.com/)</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>[json_spirit](https://github.com/cierelabs/json_spirit)</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>[jsoncpp](http://jsoncpp.sourceforge.net/)</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>[libjson](http://sourceforge.net/projects/libjson/)</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>[rapidjson](https://github.com/Tencent/rapidjson/)</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>[QJsonDocument](http://qt-project.org/doc/qt-5.0/qtcore/qjsondocument.html)</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight></codeline>
<codeline><highlight class="normal">*<sp/>[JSON<sp/>Parser<sp/>Benchmarking](http://chadaustin.me/2013/01/json-parser-benchmarking/)<sp/>by<sp/>Chad<sp/>Austin<sp/>(Jan<sp/>2013)</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>[sajson](https://github.com/chadaustin/sajson)</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>[rapidjson](https://github.com/Tencent/rapidjson/)</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>[vjson](https://code.google.com/p/vjson/)</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>[YAJL](http://lloyd.github.com/yajl/)</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>[Jansson](http://www.digip.org/jansson/)</highlight></codeline>
    </programlisting>
    <location file="src/rapidjson/doc/performance.md"/>
  </compounddef>
</doxygen>
