<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_load_map" kind="class" language="C++" prot="public">
    <compoundname>LoadMap</compoundname>
    <includes refid="_load_map_8h" local="no">LoadMap.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_load_map_1a53959655400892dc7ea5249e5e5114f8" prot="private" static="no" mutable="no">
        <type>sf::Texture</type>
        <definition>sf::Texture LoadMap::bg</definition>
        <argsstring></argsstring>
        <name>bg</name>
        <qualifiedname>LoadMap::bg</qualifiedname>
        <briefdescription>
<para>Zmienna która przechowuje teksturę dla tła. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LoadMap.h" line="15" column="17" bodyfile="src/LoadMap.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_load_map_1a91692f7e88c0262bb8e33c4c47b51cc4" prot="private" static="no" mutable="no">
        <type>sf::Sprite</type>
        <definition>sf::Sprite LoadMap::bgSpr</definition>
        <argsstring></argsstring>
        <name>bgSpr</name>
        <qualifiedname>LoadMap::bgSpr</qualifiedname>
        <briefdescription>
<para>Zmienna która służy do przeniesienia tekstury tła na ekran. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LoadMap.h" line="17" column="16" bodyfile="src/LoadMap.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_load_map_1afee37ee6c7a216eda99611d06658808d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_tile_map" kindref="compound">TileMap</ref> &gt;</type>
        <definition>std::vector&lt;TileMap&gt; LoadMap::tilemap_render</definition>
        <argsstring></argsstring>
        <name>tilemap_render</name>
        <qualifiedname>LoadMap::tilemap_render</qualifiedname>
        <briefdescription>
<para>Vector który przechowuje wszystkie elementy mapy do wyrenderowania. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LoadMap.h" line="19" column="17" bodyfile="src/LoadMap.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_load_map_1a0d53f21ac37c0c7b9911a491bd13e3c8" prot="private" static="no" mutable="no">
        <type><ref refid="class_layer" kindref="compound">Layer</ref></type>
        <definition>Layer LoadMap::solidLayer</definition>
        <argsstring></argsstring>
        <name>solidLayer</name>
        <qualifiedname>LoadMap::solidLayer</qualifiedname>
        <briefdescription>
<para>Obiekt warstwy gry który przechowuje hitboxy dla terenu. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LoadMap.h" line="22" column="11" bodyfile="src/LoadMap.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_load_map_1ad30ea2f20fde1331c978b4f85301c34c" prot="private" static="no" mutable="no">
        <type><ref refid="class_layer" kindref="compound">Layer</ref></type>
        <definition>Layer LoadMap::damageLayer</definition>
        <argsstring></argsstring>
        <name>damageLayer</name>
        <qualifiedname>LoadMap::damageLayer</qualifiedname>
        <briefdescription>
<para>Obiekt warstawy gry który przechowuje hitboxy dla obiektów które zadają obrażenia. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LoadMap.h" line="24" column="11" bodyfile="src/LoadMap.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_load_map_1ae780842a81d47d2463f40bf561fbdfa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LoadMap::LoadMap</definition>
        <argsstring>(std::string mapFileName)</argsstring>
        <name>LoadMap</name>
        <qualifiedname>LoadMap::LoadMap</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>mapFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Konstruktor, który przyjmuje nazwę pliku json w którym to znajdują się elementy mapy <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mapFileName</parametername>
</parameternamelist>
<parameterdescription>
<para>- nazwa pliku json w której to znajdują się elementy mapy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LoadMap.h" line="30" column="5" bodyfile="src/LoadMap.cpp" bodystart="28" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_load_map_1ae3d1eb7e8e3f5748430e1189d72a3849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ifstream</type>
        <definition>std::ifstream LoadMap::readFile</definition>
        <argsstring>(std::string)</argsstring>
        <name>readFile</name>
        <qualifiedname>LoadMap::readFile</qualifiedname>
        <param>
          <type>std::string</type>
          <defname>path</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metoda która słuzy do wczytywania danych z pliku <simplesect kind="return"><para>zwraca tekst wczytany z pliku </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LoadMap.h" line="34" column="19" bodyfile="src/LoadMap.cpp" bodystart="6" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_load_map_1aae3bcc5f28ae22b7cda5ae6785b04a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_tile_set" kindref="compound">TileSet</ref></type>
        <definition>TileSet LoadMap::findTileSet</definition>
        <argsstring>(Layer &amp;, std::vector&lt; TileSet &gt; &amp;)</argsstring>
        <name>findTileSet</name>
        <qualifiedname>LoadMap::findTileSet</qualifiedname>
        <param>
          <type><ref refid="class_layer" kindref="compound">Layer</ref> &amp;</type>
          <defname>layer</defname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_tile_set" kindref="compound">TileSet</ref> &gt; &amp;</type>
          <defname>tilesets</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metoda która służy do znalezienia przekazanej w parametrze warstwy <simplesect kind="return"><para>zwraca warstwie kafelków </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LoadMap.h" line="38" column="13" bodyfile="src/LoadMap.cpp" bodystart="16" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_load_map_1a1c887ad2112bf7d749d0254309c1ab73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_layer" kindref="compound">Layer</ref></type>
        <definition>Layer LoadMap::getSolidLayer</definition>
        <argsstring>()</argsstring>
        <name>getSolidLayer</name>
        <qualifiedname>LoadMap::getSolidLayer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metoda klasy <ref refid="class_layer" kindref="compound">Layer</ref> która zwraca warstwe hitboxow dla terenu <simplesect kind="return"><para>zwraca warstwe, która reprezentuje hitboxy terenu </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LoadMap.h" line="43" column="11" bodyfile="src/LoadMap.cpp" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_load_map_1a21f5bf47590f84c73e4850a20acad787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_layer" kindref="compound">Layer</ref></type>
        <definition>Layer LoadMap::getDamageLayer</definition>
        <argsstring>()</argsstring>
        <name>getDamageLayer</name>
        <qualifiedname>LoadMap::getDamageLayer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metoda klasy <ref refid="class_layer" kindref="compound">Layer</ref> która zwraca warstwe hitboxow dla obiektow ktore zadaja obrazenia <simplesect kind="return"><para>zwraca warstwie, która reprezentuje hitboxy dla obiektów zadających obrażenia </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LoadMap.h" line="47" column="11" bodyfile="src/LoadMap.cpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_load_map_1a7020a11fa9a16e73ff62bbdd93d2db8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoadMap::draw</definition>
        <argsstring>(sf::RenderTarget &amp;window)</argsstring>
        <name>draw</name>
        <qualifiedname>LoadMap::draw</qualifiedname>
        <param>
          <type>sf::RenderTarget &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Służy do wyświetlania na ekranie warstw <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>- okno na którym elementy mają być wyświetlane </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LoadMap.h" line="52" column="10" bodyfile="src/LoadMap.cpp" bodystart="81" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>Layer</label>
        <link refid="class_layer"/>
      </node>
      <node id="1">
        <label>LoadMap</label>
        <link refid="class_load_map"/>
        <childnode refid="2" relation="usage">
          <edgelabel>damageLayer</edgelabel>
          <edgelabel>solidLayer</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/LoadMap.h" line="12" column="1" bodyfile="src/LoadMap.h" bodystart="12" bodyend="54"/>
    <listofallmembers>
      <member refid="class_load_map_1a53959655400892dc7ea5249e5e5114f8" prot="private" virt="non-virtual"><scope>LoadMap</scope><name>bg</name></member>
      <member refid="class_load_map_1a91692f7e88c0262bb8e33c4c47b51cc4" prot="private" virt="non-virtual"><scope>LoadMap</scope><name>bgSpr</name></member>
      <member refid="class_load_map_1ad30ea2f20fde1331c978b4f85301c34c" prot="private" virt="non-virtual"><scope>LoadMap</scope><name>damageLayer</name></member>
      <member refid="class_load_map_1a7020a11fa9a16e73ff62bbdd93d2db8c" prot="public" virt="non-virtual"><scope>LoadMap</scope><name>draw</name></member>
      <member refid="class_load_map_1aae3bcc5f28ae22b7cda5ae6785b04a4c" prot="public" virt="non-virtual"><scope>LoadMap</scope><name>findTileSet</name></member>
      <member refid="class_load_map_1a21f5bf47590f84c73e4850a20acad787" prot="public" virt="non-virtual"><scope>LoadMap</scope><name>getDamageLayer</name></member>
      <member refid="class_load_map_1a1c887ad2112bf7d749d0254309c1ab73" prot="public" virt="non-virtual"><scope>LoadMap</scope><name>getSolidLayer</name></member>
      <member refid="class_load_map_1ae780842a81d47d2463f40bf561fbdfa7" prot="public" virt="non-virtual"><scope>LoadMap</scope><name>LoadMap</name></member>
      <member refid="class_load_map_1ae3d1eb7e8e3f5748430e1189d72a3849" prot="public" virt="non-virtual"><scope>LoadMap</scope><name>readFile</name></member>
      <member refid="class_load_map_1a0d53f21ac37c0c7b9911a491bd13e3c8" prot="private" virt="non-virtual"><scope>LoadMap</scope><name>solidLayer</name></member>
      <member refid="class_load_map_1afee37ee6c7a216eda99611d06658808d" prot="private" virt="non-virtual"><scope>LoadMap</scope><name>tilemap_render</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
