<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_map" kind="class" language="C++" prot="public">
    <compoundname>Map</compoundname>
    <includes refid="_map_8h" local="no">Map.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_map_1a0546fef98caebe38385bb2e0c7a15da1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Map::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <qualifiedname>Map::height</qualifiedname>
        <briefdescription>
<para>Zmienna do wysokości. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="86" column="9" bodyfile="src/Map.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_map_1aa3e42d577840a0069c94ecae4467562d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Map::infinite</definition>
        <argsstring></argsstring>
        <name>infinite</name>
        <qualifiedname>Map::infinite</qualifiedname>
        <briefdescription>
<para>Zmienna określjąca czy jest nieskończoność </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="88" column="10" bodyfile="src/Map.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_map_1a5cd95ff260dce65601bb62c3292a3bfd" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_layer" kindref="compound">Layer</ref> &gt;</type>
        <definition>std::vector&lt;Layer&gt; Map::layers</definition>
        <argsstring></argsstring>
        <name>layers</name>
        <qualifiedname>Map::layers</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca warstwy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="90" column="17" bodyfile="src/Map.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_map_1a02e2d0dbcc15af66e896365ed40fdc01" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Map::nextlayerid</definition>
        <argsstring></argsstring>
        <name>nextlayerid</name>
        <qualifiedname>Map::nextlayerid</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca id następnej warstwy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="92" column="9" bodyfile="src/Map.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_map_1af62ec82d7f35991aa77c52da4d2e2290" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Map::nextobjectid</definition>
        <argsstring></argsstring>
        <name>nextobjectid</name>
        <qualifiedname>Map::nextobjectid</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca id nastepnego obiektu. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="94" column="9" bodyfile="src/Map.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_map_1a71ce7d3f9b38d813ccdee6238c928331" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Map::orientation</definition>
        <argsstring></argsstring>
        <name>orientation</name>
        <qualifiedname>Map::orientation</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca informacje o orientacji na mapie. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="96" column="17" bodyfile="src/Map.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_map_1a465b7f45392e5d283a58cb8deed34866" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Map::renderorder</definition>
        <argsstring></argsstring>
        <name>renderorder</name>
        <qualifiedname>Map::renderorder</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca informacje o renderowaniu. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="98" column="17" bodyfile="src/Map.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_map_1ab2ee86c9d4bf09110ca91ae8971ebb87" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Map::tiledversion</definition>
        <argsstring></argsstring>
        <name>tiledversion</name>
        <qualifiedname>Map::tiledversion</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca informacje o wersji. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="100" column="17" bodyfile="src/Map.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_map_1aaf62b7a95219df701f793bbdb7ad7219" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Map::tileheight</definition>
        <argsstring></argsstring>
        <name>tileheight</name>
        <qualifiedname>Map::tileheight</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca informacje o wysokości kafelka. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="102" column="9" bodyfile="src/Map.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_map_1a8ecfbf296ba00680bd6b63956102e8e6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_tile_set_map" kindref="compound">TileSetMap</ref> &gt;</type>
        <definition>std::vector&lt;TileSetMap&gt; Map::tilesets</definition>
        <argsstring></argsstring>
        <name>tilesets</name>
        <qualifiedname>Map::tilesets</qualifiedname>
        <briefdescription>
<para>Zmienna przechowują kafleki. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="104" column="17" bodyfile="src/Map.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_map_1adf0b26f23f7de86d44fff24daedf3e6f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Map::tilewidth</definition>
        <argsstring></argsstring>
        <name>tilewidth</name>
        <qualifiedname>Map::tilewidth</qualifiedname>
        <briefdescription>
<para>Zmienna przechowujaca informacje o szerokości kafelka. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="106" column="9" bodyfile="src/Map.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_map_1aa6e7a427f467c84f33079371231b69c0" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Map::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>Map::type</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca informacje o typie. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="108" column="17" bodyfile="src/Map.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_map_1a02cbc0172c2867bef1a7caef9752cf1d" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Map::version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <qualifiedname>Map::version</qualifiedname>
        <briefdescription>
<para>Zmienna przechowujaca informacje o wersji zapisu. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="110" column="11" bodyfile="src/Map.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_map_1a9ecfe932ad2d2bc22492416033bdacfd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Map::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <qualifiedname>Map::width</qualifiedname>
        <briefdescription>
<para>Zmienna przechowujaca informacje o szerokosci. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="112" column="9" bodyfile="src/Map.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_map_1ac63a69baabe2c549b51ef0507c6a7a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Map::Map</definition>
        <argsstring>(std::string mapa)</argsstring>
        <name>Map</name>
        <qualifiedname>Map::Map</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>mapa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Konstruktor który parsuje przekazana w parametrze mape <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mapa</parametername>
</parameternamelist>
<parameterdescription>
<para>- tekst, który reprezentuje nazwe pliku w którym przechowywana jest mapa </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="23" column="5" bodyfile="src/Map.cpp" bodystart="4" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1aa403fbe09394ccf39747588f5168e3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Map::~Map</definition>
        <argsstring>()</argsstring>
        <name>~Map</name>
        <qualifiedname>Map::~Map</qualifiedname>
        <briefdescription>
<para>Destruktor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="25" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1a2b09c8875af2efb711fc3a022e70427d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Map::getHeight</definition>
        <argsstring>()</argsstring>
        <name>getHeight</name>
        <qualifiedname>Map::getHeight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca wysokość <simplesect kind="return"><para>zwraca liczbę, która reprezentuje wysokość mapy </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="30" column="9" bodyfile="src/Map.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1a6e7241617514fc7b227d8cb96d30c81a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Map::isInfinite</definition>
        <argsstring>()</argsstring>
        <name>isInfinite</name>
        <qualifiedname>Map::isInfinite</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sprawdza czy wystepuje niesokonczoność <simplesect kind="return"><para>zwraca true jeśli mapa jest nieskończona lub false jeśli nie jest </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="34" column="10" bodyfile="src/Map.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1a3ff0c79b25f70af9cee6f555a53bfd4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_layer" kindref="compound">Layer</ref> &gt;</type>
        <definition>std::vector&lt; Layer &gt; Map::getLayers</definition>
        <argsstring>()</argsstring>
        <name>getLayers</name>
        <qualifiedname>Map::getLayers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca poszczególne warstwy <simplesect kind="return"><para>zwraca kolekcje vector, która przechowuje warstwy mapy </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="38" column="17" bodyfile="src/Map.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1a6b1292daca7ef375968f073718c402ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Map::getNextLayerId</definition>
        <argsstring>()</argsstring>
        <name>getNextLayerId</name>
        <qualifiedname>Map::getNextLayerId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwaraca nastepne id warstwy <simplesect kind="return"><para>zwraca liczbe reprezentujacą id kolejnej warstwy mapy </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="42" column="9" bodyfile="src/Map.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1aacb2f9d02095076e61774bf8df62a970" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Map::getNextObjectId</definition>
        <argsstring>()</argsstring>
        <name>getNextObjectId</name>
        <qualifiedname>Map::getNextObjectId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca nastepny id obiektu <simplesect kind="return"><para>zwraca liczbę, która reprezentuje id kolejnego obiektu mapy </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="46" column="9" bodyfile="src/Map.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1a7ae44d1c43fc376de7355ffae6550ae7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Map::getOrientation</definition>
        <argsstring>()</argsstring>
        <name>getOrientation</name>
        <qualifiedname>Map::getOrientation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca informacje o orientacji mapy <simplesect kind="return"><para>zwraca tekst, który reprezentuje orientacje </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="50" column="17" bodyfile="src/Map.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1ab0768cad264812a3db223c893fa69ba5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Map::getRenderOrder</definition>
        <argsstring>()</argsstring>
        <name>getRenderOrder</name>
        <qualifiedname>Map::getRenderOrder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca informacje o renderowaniu <simplesect kind="return"><para>zwraca tekst, który informuje o kolejności renderowania obiektów na mapie </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="54" column="17" bodyfile="src/Map.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1ad90c3028202a393e68cb1ae07f23960a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Map::getTiledVersion</definition>
        <argsstring>()</argsstring>
        <name>getTiledVersion</name>
        <qualifiedname>Map::getTiledVersion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca informacje o wersji programu użytego do tworzenia mapy <simplesect kind="return"><para>zwraca tekst, który reprezentuje wersje programu </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="58" column="17" bodyfile="src/Map.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1afd173f72cb063592a0daa853a3be9d9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Map::getTileHeight</definition>
        <argsstring>()</argsstring>
        <name>getTileHeight</name>
        <qualifiedname>Map::getTileHeight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca informacje o wysokosci kafelka <simplesect kind="return"><para>zwraca liczbę, która reprezentuje wysokość kafelka </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="62" column="9" bodyfile="src/Map.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1a1e601f4ffaf9104214971e12b3b4de17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_tile_set_map" kindref="compound">TileSetMap</ref> &gt;</type>
        <definition>std::vector&lt; TileSetMap &gt; Map::getTileSetMap</definition>
        <argsstring>()</argsstring>
        <name>getTileSetMap</name>
        <qualifiedname>Map::getTileSetMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca kafelki mapy <simplesect kind="return"><para>zwraca kolekcje vector, która przechowuje kafelki użyte na mapie </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="66" column="17" bodyfile="src/Map.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1ab9209a0b619dbd3721335bd414968b6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Map::getTileWidth</definition>
        <argsstring>()</argsstring>
        <name>getTileWidth</name>
        <qualifiedname>Map::getTileWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca szerokosc kafelka <simplesect kind="return"><para>zwraca liczbę, która reprezentuje szerokość kafelka </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="70" column="9" bodyfile="src/Map.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1a4b04d446d3c661a985874ace350853b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Map::getType</definition>
        <argsstring>()</argsstring>
        <name>getType</name>
        <qualifiedname>Map::getType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca informacje o typie <simplesect kind="return"><para>zwraca tekst, który reprezentuje informacje o typie </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="74" column="17" bodyfile="src/Map.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1ad8563d64d89efd1be0694edc54abb2ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Map::getVersion</definition>
        <argsstring>()</argsstring>
        <name>getVersion</name>
        <qualifiedname>Map::getVersion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca informacje o uzytej wersji zapisu <simplesect kind="return"><para>zwraca liczbę zmiennoprzecinkową, która reprezentuje wersję użytą do zapisu do pliku json </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="78" column="11" bodyfile="src/Map.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1afd34d12227676b3cebeed9f5fae2508f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Map::getWidth</definition>
        <argsstring>()</argsstring>
        <name>getWidth</name>
        <qualifiedname>Map::getWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Zwraca szerokość <simplesect kind="return"><para>zwraca liczbę, która reprezentuje szerokość mapy </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Map.h" line="82" column="9" bodyfile="src/Map.h" bodystart="82" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>służy do pobrania informacji o mapie z pliku json </para>
    </detaileddescription>
    <location file="src/Map.h" line="18" column="1" bodyfile="src/Map.h" bodystart="18" bodyend="113"/>
    <listofallmembers>
      <member refid="class_map_1a2b09c8875af2efb711fc3a022e70427d" prot="public" virt="non-virtual"><scope>Map</scope><name>getHeight</name></member>
      <member refid="class_map_1a3ff0c79b25f70af9cee6f555a53bfd4d" prot="public" virt="non-virtual"><scope>Map</scope><name>getLayers</name></member>
      <member refid="class_map_1a6b1292daca7ef375968f073718c402ca" prot="public" virt="non-virtual"><scope>Map</scope><name>getNextLayerId</name></member>
      <member refid="class_map_1aacb2f9d02095076e61774bf8df62a970" prot="public" virt="non-virtual"><scope>Map</scope><name>getNextObjectId</name></member>
      <member refid="class_map_1a7ae44d1c43fc376de7355ffae6550ae7" prot="public" virt="non-virtual"><scope>Map</scope><name>getOrientation</name></member>
      <member refid="class_map_1ab0768cad264812a3db223c893fa69ba5" prot="public" virt="non-virtual"><scope>Map</scope><name>getRenderOrder</name></member>
      <member refid="class_map_1ad90c3028202a393e68cb1ae07f23960a" prot="public" virt="non-virtual"><scope>Map</scope><name>getTiledVersion</name></member>
      <member refid="class_map_1afd173f72cb063592a0daa853a3be9d9e" prot="public" virt="non-virtual"><scope>Map</scope><name>getTileHeight</name></member>
      <member refid="class_map_1a1e601f4ffaf9104214971e12b3b4de17" prot="public" virt="non-virtual"><scope>Map</scope><name>getTileSetMap</name></member>
      <member refid="class_map_1ab9209a0b619dbd3721335bd414968b6c" prot="public" virt="non-virtual"><scope>Map</scope><name>getTileWidth</name></member>
      <member refid="class_map_1a4b04d446d3c661a985874ace350853b9" prot="public" virt="non-virtual"><scope>Map</scope><name>getType</name></member>
      <member refid="class_map_1ad8563d64d89efd1be0694edc54abb2ab" prot="public" virt="non-virtual"><scope>Map</scope><name>getVersion</name></member>
      <member refid="class_map_1afd34d12227676b3cebeed9f5fae2508f" prot="public" virt="non-virtual"><scope>Map</scope><name>getWidth</name></member>
      <member refid="class_map_1a0546fef98caebe38385bb2e0c7a15da1" prot="private" virt="non-virtual"><scope>Map</scope><name>height</name></member>
      <member refid="class_map_1aa3e42d577840a0069c94ecae4467562d" prot="private" virt="non-virtual"><scope>Map</scope><name>infinite</name></member>
      <member refid="class_map_1a6e7241617514fc7b227d8cb96d30c81a" prot="public" virt="non-virtual"><scope>Map</scope><name>isInfinite</name></member>
      <member refid="class_map_1a5cd95ff260dce65601bb62c3292a3bfd" prot="private" virt="non-virtual"><scope>Map</scope><name>layers</name></member>
      <member refid="class_map_1ac63a69baabe2c549b51ef0507c6a7a8b" prot="public" virt="non-virtual"><scope>Map</scope><name>Map</name></member>
      <member refid="class_map_1a02e2d0dbcc15af66e896365ed40fdc01" prot="private" virt="non-virtual"><scope>Map</scope><name>nextlayerid</name></member>
      <member refid="class_map_1af62ec82d7f35991aa77c52da4d2e2290" prot="private" virt="non-virtual"><scope>Map</scope><name>nextobjectid</name></member>
      <member refid="class_map_1a71ce7d3f9b38d813ccdee6238c928331" prot="private" virt="non-virtual"><scope>Map</scope><name>orientation</name></member>
      <member refid="class_map_1a465b7f45392e5d283a58cb8deed34866" prot="private" virt="non-virtual"><scope>Map</scope><name>renderorder</name></member>
      <member refid="class_map_1ab2ee86c9d4bf09110ca91ae8971ebb87" prot="private" virt="non-virtual"><scope>Map</scope><name>tiledversion</name></member>
      <member refid="class_map_1aaf62b7a95219df701f793bbdb7ad7219" prot="private" virt="non-virtual"><scope>Map</scope><name>tileheight</name></member>
      <member refid="class_map_1a8ecfbf296ba00680bd6b63956102e8e6" prot="private" virt="non-virtual"><scope>Map</scope><name>tilesets</name></member>
      <member refid="class_map_1adf0b26f23f7de86d44fff24daedf3e6f" prot="private" virt="non-virtual"><scope>Map</scope><name>tilewidth</name></member>
      <member refid="class_map_1aa6e7a427f467c84f33079371231b69c0" prot="private" virt="non-virtual"><scope>Map</scope><name>type</name></member>
      <member refid="class_map_1a02cbc0172c2867bef1a7caef9752cf1d" prot="private" virt="non-virtual"><scope>Map</scope><name>version</name></member>
      <member refid="class_map_1a9ecfe932ad2d2bc22492416033bdacfd" prot="private" virt="non-virtual"><scope>Map</scope><name>width</name></member>
      <member refid="class_map_1aa403fbe09394ccf39747588f5168e3b2" prot="public" virt="non-virtual"><scope>Map</scope><name>~Map</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
