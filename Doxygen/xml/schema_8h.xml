<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="schema_8h" kind="file" language="C++">
    <compoundname>schema.h</compoundname>
    <includes refid="document_8h" local="yes">document.h</includes>
    <includes refid="pointer_8h" local="yes">pointer.h</includes>
    <includes refid="stringbuffer_8h" local="yes">stringbuffer.h</includes>
    <includes refid="en_8h" local="yes">error/en.h</includes>
    <includes refid="uri_8h" local="yes">uri.h</includes>
    <includes local="no">cmath</includes>
    <includes refid="regex_8h" local="yes">internal/regex.h</includes>
    <includedby refid="schemavalidator_8cpp" local="yes">src/rapidjson/example/schemavalidator/schemavalidator.cpp</includedby>
    <includedby refid="perftest_2schematest_8cpp" local="yes">src/rapidjson/test/perftest/schematest.cpp</includedby>
    <includedby refid="fwdtest_8cpp" local="yes">src/rapidjson/test/unittest/fwdtest.cpp</includedby>
    <includedby refid="unittest_2schematest_8cpp" local="yes">src/rapidjson/test/unittest/schematest.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>document.h</label>
        <link refid="document_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>encodedstream.h</label>
        <link refid="encodedstream_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>encodings.h</label>
        <link refid="encodings_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>error/en.h</label>
        <link refid="en_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>biginteger.h</label>
        <link refid="biginteger_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>internal/clzll.h</label>
        <link refid="clzll_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>diyfp.h</label>
        <link refid="diyfp_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ieee754.h</label>
        <link refid="ieee754_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>internal/itoa.h</label>
        <link refid="itoa_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>internal/meta.h</label>
        <link refid="meta_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>pow10.h</label>
        <link refid="pow10_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>internal/regex.h</label>
        <link refid="regex_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>internal/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>internal/strfunc.h</label>
        <link refid="strfunc_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>internal/strtod.h</label>
        <link refid="strtod_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>swap.h</label>
        <link refid="swap_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>memorystream.h</label>
        <link refid="memorystream_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>pointer.h</label>
        <link refid="pointer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/rapidjson/include/rapidjson/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stream.h</label>
        <link refid="stream_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>stringbuffer.h</label>
        <link refid="stringbuffer_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>uri.h</label>
        <link refid="uri_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cassert</label>
      </node>
      <node id="25">
        <label>climits</label>
      </node>
      <node id="36">
        <label>cmath</label>
      </node>
      <node id="18">
        <label>cstddef</label>
      </node>
      <node id="6">
        <label>cstdlib</label>
      </node>
      <node id="7">
        <label>cstring</label>
      </node>
      <node id="28">
        <label>cwchar</label>
      </node>
      <node id="30">
        <label>iterator</label>
      </node>
      <node id="23">
        <label>limits</label>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
      <node id="29">
        <label>new</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/rapidjson/example/schemavalidator/schemavalidator.cpp</label>
        <link refid="schemavalidator_8cpp"/>
      </node>
      <node id="1">
        <label>src/rapidjson/include/rapidjson/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/rapidjson/test/perftest/schematest.cpp</label>
        <link refid="perftest_2schematest_8cpp"/>
      </node>
      <node id="4">
        <label>src/rapidjson/test/unittest/fwdtest.cpp</label>
        <link refid="fwdtest_8cpp"/>
      </node>
      <node id="5">
        <label>src/rapidjson/test/unittest/schematest.cpp</label>
        <link refid="unittest_2schematest_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classinternal_1_1_i_schema_validator" prot="public">internal::ISchemaValidator</innerclass>
    <innerclass refid="classinternal_1_1_i_schema_state_factory" prot="public">internal::ISchemaStateFactory</innerclass>
    <innerclass refid="classinternal_1_1_i_validation_error_handler" prot="public">internal::IValidationErrorHandler</innerclass>
    <innerclass refid="classinternal_1_1_hasher" prot="public">internal::Hasher</innerclass>
    <innerclass refid="structinternal_1_1_hasher_1_1_number" prot="private">internal::Hasher::Number</innerclass>
    <innerclass refid="unioninternal_1_1_hasher_1_1_number_1_1_u" prot="public">internal::Hasher::Number::U</innerclass>
    <innerclass refid="structinternal_1_1_schema_validation_context" prot="public">internal::SchemaValidationContext</innerclass>
    <innerclass refid="classinternal_1_1_schema" prot="public">internal::Schema</innerclass>
    <innerclass refid="structinternal_1_1_schema_1_1_schema_array" prot="private">internal::Schema::SchemaArray</innerclass>
    <innerclass refid="structinternal_1_1_schema_1_1_property" prot="private">internal::Schema::Property</innerclass>
    <innerclass refid="structinternal_1_1_schema_1_1_pattern_property" prot="private">internal::Schema::PatternProperty</innerclass>
    <innerclass refid="structinternal_1_1_token_helper" prot="public">internal::TokenHelper</innerclass>
    <innerclass refid="structinternal_1_1_token_helper_3_01_stack_00_01char_01_4" prot="public">internal::TokenHelper&lt; Stack, char &gt;</innerclass>
    <innerclass refid="class_i_generic_remote_schema_document_provider" prot="public">IGenericRemoteSchemaDocumentProvider</innerclass>
    <innerclass refid="class_generic_schema_document" prot="public">GenericSchemaDocument</innerclass>
    <innerclass refid="struct_generic_schema_document_1_1_schema_entry" prot="private">GenericSchemaDocument::SchemaEntry</innerclass>
    <innerclass refid="class_generic_schema_validator" prot="public">GenericSchemaValidator</innerclass>
    <innerclass refid="class_schema_validating_reader" prot="public">SchemaValidatingReader</innerclass>
    <innernamespace refid="namespaceinternal">internal</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="schema_8h_1a6b8264e3ff82da125826f173a42c67e9" prot="public" static="no">
        <name>RAPIDJSON_SCHEMA_USE_INTERNALREGEX</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="26" column="9" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="schema_8h_1a9486b808605189c7ee677bb41d52f368" prot="public" static="no">
        <name>RAPIDJSON_SCHEMA_USE_STDREGEX</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="34" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="schema_8h_1a67269b1317b737ca47bcf5636091db1e" prot="public" static="no">
        <name>RAPIDJSON_SCHEMA_HAS_REGEX</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="44" column="9" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="schema_8h_1a40c690b6fd0b7ae8d8484b613255cc72" prot="public" static="no">
        <name>RAPIDJSON_SCHEMA_VERBOSE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="50" column="9" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="schema_8h_1a876f2526fe0190b8c5b44dfc77c5b259" prot="public" static="no">
        <name>RAPIDJSON_INVALID_KEYWORD_VERBOSE</name>
        <param><defname>keyword</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="115" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" prot="public" static="no">
        <name>RAPIDJSON_INVALID_KEYWORD_RETURN</name>
        <param><defname>code</defname></param>
        <initializer>RAPIDJSON_MULTILINEMACRO_BEGIN\
    context.invalidCode = code;\
    context.invalidKeyword = SchemaType::GetValidateErrorKeyword(code).GetString();\
    <ref refid="schema_8h_1a876f2526fe0190b8c5b44dfc77c5b259" kindref="member">RAPIDJSON_INVALID_KEYWORD_VERBOSE</ref>(context.invalidKeyword);\
    return false;\
RAPIDJSON_MULTILINEMACRO_END</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="118" column="9" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga8d06f2d50592811d2890b45243b8adcc" prot="public" static="no">
        <name>RAPIDJSON_VALIDATE_DEFAULT_FLAGS</name>
        <initializer><ref refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942a6479c4dbb9ae91ad95b4e6876a96cfa4" kindref="member">kValidateNoFlags</ref></initializer>
        <briefdescription>
<para>User-defined kValidateDefaultFlags definition. </para>
        </briefdescription>
        <detaileddescription>
<para>User can define this as any <computeroutput>ValidateFlag</computeroutput> combinations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="136" column="9" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" prot="public" static="no">
        <name>RAPIDJSON_STRING_</name>
        <param><defname>name</defname></param>
        <param><defname>...</defname></param>
        <initializer>    static const <ref refid="schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f" kindref="member">ValueType</ref>&amp; Get##name##String() {\
        static const Ch s[] = { __VA_ARGS__, &apos;\0&apos; };\
        static const <ref refid="schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f" kindref="member">ValueType</ref> v(s, static_cast&lt;<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>&gt;(sizeof(s) / sizeof(Ch) - 1));\
        return v;\
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1120" column="9" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" prot="public" static="no">
        <name>RAPIDJSON_STRING_</name>
        <param><defname>name</defname></param>
        <param><defname>...</defname></param>
        <initializer>    static const StringRefType&amp; Get##name##String() {\
        static const Ch s[] = { __VA_ARGS__, &apos;\0&apos; };\
        static const StringRefType v(s, static_cast&lt;<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>&gt;(sizeof(s) / sizeof(Ch) - 1)); \
        return v;\
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2317" column="9" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="schema_8h_1a722c98cfe486c35d086ea33144f4a3b8" prot="public" static="no">
        <name>RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2345" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="schema_8h_1a25701b28a823cc7621f1e01ae7031007" prot="public" static="no">
        <name>RAPIDJSON_SCHEMA_HANDLE_BEGIN_</name>
        <param><defname>method</defname></param>
        <param><defname>arg1</defname></param>
        <initializer>    if (!valid_) return false; \
    if ((!BeginValue() &amp;&amp; !GetContinueOnErrors()) || (!CurrentSchema().method arg1 &amp;&amp; !GetContinueOnErrors())) {\
        <ref refid="schema_8h_1a722c98cfe486c35d086ea33144f4a3b8" kindref="member">RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_</ref>();\
        return valid_ = false;\
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2348" column="9" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="schema_8h_1af17aaed9cdb88ac6faa2b7ca7029da63" prot="public" static="no">
        <name>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_</name>
        <param><defname>method</defname></param>
        <param><defname>arg2</defname></param>
        <initializer>    for (Context* context = schemaStack_.template Bottom&lt;Context&gt;(); context != schemaStack_.template End&lt;Context&gt;(); context++) {\
        if (context-&gt;hasher)\
            static_cast&lt;HasherType*&gt;(context-&gt;hasher)-&gt;method arg2;\
        if (context-&gt;validators)\
            for (<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref> i_ = 0; i_ &lt; context-&gt;validatorCount; i_++)\
                static_cast&lt;<ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>*&gt;(context-&gt;validators[i_])-&gt;method arg2;\
        if (context-&gt;patternPropertiesValidators)\
            for (<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref> i_ = 0; i_ &lt; context-&gt;patternPropertiesValidatorCount; i_++)\
                static_cast&lt;<ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>*&gt;(context-&gt;patternPropertiesValidators[i_])-&gt;method arg2;\
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2355" column="9" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="schema_8h_1ab1cb400ef08159e3e417f03c8adefaff" prot="public" static="no">
        <name>RAPIDJSON_SCHEMA_HANDLE_END_</name>
        <param><defname>method</defname></param>
        <param><defname>arg2</defname></param>
        <initializer>    valid_ = (EndValue() || GetContinueOnErrors()) &amp;&amp; (!outputHandler_ || outputHandler_-&gt;method arg2);\
    return valid_;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2367" column="9" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="schema_8h_1a8c347782f5ba7abab760e5dbc5795c41" prot="public" static="no">
        <name>RAPIDJSON_SCHEMA_HANDLE_VALUE_</name>
        <param><defname>method</defname></param>
        <param><defname>arg1</defname></param>
        <param><defname>arg2</defname></param>
        <initializer>    <ref refid="schema_8h_1a25701b28a823cc7621f1e01ae7031007" kindref="member">RAPIDJSON_SCHEMA_HANDLE_BEGIN_</ref>   (method, arg1);\
    <ref refid="schema_8h_1af17aaed9cdb88ac6faa2b7ca7029da63" kindref="member">RAPIDJSON_SCHEMA_HANDLE_PARALLEL_</ref>(method, arg2);\
    <ref refid="schema_8h_1ab1cb400ef08159e3e417f03c8adefaff" kindref="member">RAPIDJSON_SCHEMA_HANDLE_END_</ref>     (method, arg2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2371" column="9" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2371" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="schema_8h_1a380a56f9b589025b27a565de4c4a2942" prot="public" static="no" strong="no">
        <type></type>
        <name>ValidateFlag</name>
        <enumvalue id="schema_8h_1a380a56f9b589025b27a565de4c4a2942a6479c4dbb9ae91ad95b4e6876a96cfa4" prot="public">
          <name>kValidateNoFlags</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>No flags are set. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="schema_8h_1a380a56f9b589025b27a565de4c4a2942ab0d30a1c30a84eb96f5dda97abbde002" prot="public">
          <name>kValidateContinueOnErrorFlag</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Don&apos;t stop after first validation error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="schema_8h_1a380a56f9b589025b27a565de4c4a2942a70564fe50c13963b485000be542c52c9" prot="public">
          <name>kValidateDefaultFlags</name>
          <initializer>= RAPIDJSON_VALIDATE_DEFAULT_FLAGS</initializer>
          <briefdescription>
<para>Default validate flags. Can be customized by defining RAPIDJSON_VALIDATE_DEFAULT_FLAGS. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Combination of validate flags. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="142" column="1" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="142" bodyend="146"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="schema_8h_1a49355f280272b969cfd756ef556935c4" prot="public" static="no">
        <type><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref>&lt; <ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">Value</ref> &gt;</type>
        <definition>typedef GenericSchemaDocument&lt;Value&gt; SchemaDocument</definition>
        <argsstring></argsstring>
        <name>SchemaDocument</name>
        <briefdescription>
<para><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref> using Value type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1966" column="31" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1966" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="schema_8h_1afec32b8c8d16360397849fd8bcd28441" prot="public" static="no">
        <type><ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">IGenericRemoteSchemaDocumentProvider</ref>&lt; <ref refid="fwd_8h_1a05c97278ec100471e77a4d678957701b" kindref="member">SchemaDocument</ref> &gt;</type>
        <definition>typedef IGenericRemoteSchemaDocumentProvider&lt;SchemaDocument&gt; IRemoteSchemaDocumentProvider</definition>
        <argsstring></argsstring>
        <name>IRemoteSchemaDocumentProvider</name>
        <briefdescription>
<para><ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">IGenericRemoteSchemaDocumentProvider</ref> using SchemaDocument. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1968" column="46" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1968" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="schema_8h_1a09740efe5c13e9c508a4f067d85aa8c0" prot="public" static="no">
        <type><ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>&lt; <ref refid="fwd_8h_1a05c97278ec100471e77a4d678957701b" kindref="member">SchemaDocument</ref> &gt;</type>
        <definition>typedef GenericSchemaValidator&lt;SchemaDocument&gt; SchemaValidator</definition>
        <argsstring></argsstring>
        <name>SchemaValidator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2712" column="32" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2712" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available-&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip-&gt;<sp/>All<sp/>rights<sp/>reserved-&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License-&gt;<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://opensource-&gt;org/licenses/MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied-&gt;<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>License-&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_SCHEMA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="document_8h" kindref="compound">document.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer_8h" kindref="compound">pointer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stringbuffer_8h" kindref="compound">stringbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="en_8h" kindref="compound">error/en.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="uri_8h" kindref="compound">uri.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>abs,<sp/>floor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(RAPIDJSON_SCHEMA_USE_INTERNALREGEX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="schema_8h_1a6b8264e3ff82da125826f173a42c67e9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_USE_INTERNALREGEX<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_USE_INTERNALREGEX<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!RAPIDJSON_SCHEMA_USE_INTERNALREGEX<sp/>&amp;&amp;<sp/>defined(RAPIDJSON_SCHEMA_USE_STDREGEX)<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=201103L<sp/>||<sp/>(defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1800))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_USE_STDREGEX<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="schema_8h_1a9486b808605189c7ee677bb41d52f368" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_USE_STDREGEX<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_USE_INTERNALREGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="regex_8h" kindref="compound">internal/regex.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>RAPIDJSON_SCHEMA_USE_STDREGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;regex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_USE_INTERNALREGEX<sp/>||<sp/>RAPIDJSON_SCHEMA_USE_STDREGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="schema_8h_1a67269b1317b737ca47bcf5636091db1e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HAS_REGEX<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HAS_REGEX<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_SCHEMA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="schema_8h_1a40c690b6fd0b7ae8d8484b613255cc72" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_VERBOSE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stringbuffer_8h" kindref="compound">stringbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">RAPIDJSON_DIAG_OFF(effc++)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">RAPIDJSON_DIAG_OFF(weak-vtables)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">RAPIDJSON_DIAG_OFF(exit-time-destructors)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">RAPIDJSON_DIAG_OFF(c++98-compat-pedantic)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">RAPIDJSON_DIAG_OFF(variadic-macros)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">RAPIDJSON_DIAG_OFF(4512)<sp/></highlight><highlight class="comment">//<sp/>assignment<sp/>operator<sp/>could<sp/>not<sp/>be<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc" kindref="member">RAPIDJSON_NAMESPACE_BEGIN</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">//<sp/>Verbose<sp/>Utilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceinternal" kindref="compound">internal</ref><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintInvalidKeyword(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>keyword)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Fail<sp/>keyword:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>keyword);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintInvalidKeyword(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>keyword)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>wprintf(L</highlight><highlight class="stringliteral">&quot;Fail<sp/>keyword:<sp/>%ls\n&quot;</highlight><highlight class="normal">,<sp/>keyword);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintInvalidDocument(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>document)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Fail<sp/>document:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>document);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintInvalidDocument(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>document)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>wprintf(L</highlight><highlight class="stringliteral">&quot;Fail<sp/>document:<sp/>%ls\n\n&quot;</highlight><highlight class="normal">,<sp/>document);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintValidatorPointers(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>depth,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;S:<sp/>%*s%s\nD:<sp/>%*s%s\n\n&quot;</highlight><highlight class="normal">,<sp/>depth<sp/>*<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>depth<sp/>*<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>d);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintValidatorPointers(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>depth,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>wprintf(L</highlight><highlight class="stringliteral">&quot;S:<sp/>%*ls%ls\nD:<sp/>%*ls%ls\n\n&quot;</highlight><highlight class="normal">,<sp/>depth<sp/>*<sp/>4,<sp/>L</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>depth<sp/>*<sp/>4,<sp/>L</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>d);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RAPIDJSON_SCHEMA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">//<sp/>RAPIDJSON_INVALID_KEYWORD_RETURN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_INVALID_KEYWORD_VERBOSE(keyword)<sp/>internal::PrintInvalidKeyword(keyword)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="schema_8h_1a876f2526fe0190b8c5b44dfc77c5b259" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_INVALID_KEYWORD_VERBOSE(keyword)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(code)\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor">RAPIDJSON_MULTILINEMACRO_BEGIN\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>context.invalidCode<sp/>=<sp/>code;\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>context.invalidKeyword<sp/>=<sp/>SchemaType::GetValidateErrorKeyword(code).GetString();\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RAPIDJSON_INVALID_KEYWORD_VERBOSE(context.invalidKeyword);\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>false;\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor">RAPIDJSON_MULTILINEMACRO_END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="comment">//<sp/>ValidateFlag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_VALIDATE_DEFAULT_FLAGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga8d06f2d50592811d2890b45243b8adcc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_VALIDATE_DEFAULT_FLAGS<sp/>kValidateNoFlags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942" kindref="member">ValidateFlag</ref><sp/>{</highlight></codeline>
<codeline lineno="143" refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942a6479c4dbb9ae91ad95b4e6876a96cfa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942a6479c4dbb9ae91ad95b4e6876a96cfa4" kindref="member">kValidateNoFlags</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144" refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942ab0d30a1c30a84eb96f5dda97abbde002" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942ab0d30a1c30a84eb96f5dda97abbde002" kindref="member">kValidateContinueOnErrorFlag</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942a70564fe50c13963b485000be542c52c9" kindref="member">kValidateDefaultFlags</ref><sp/>=<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga8d06f2d50592811d2890b45243b8adcc" kindref="member">RAPIDJSON_VALIDATE_DEFAULT_FLAGS</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146" refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942a70564fe50c13963b485000be542c52c9" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">//<sp/>Forward<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceinternal" kindref="compound">internal</ref><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_schema" kindref="compound">Schema</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="comment">//<sp/>ISchemaValidator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classinternal_1_1_i_schema_validator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164" refid="classinternal_1_1_i_schema_validator_1aac77356c7a3f439bc5fb5302f3060c1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_schema_validator_1aac77356c7a3f439bc5fb5302f3060c1d" kindref="member">~ISchemaValidator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="165" refid="classinternal_1_1_i_schema_validator_1a94f61f24b1447497279ef12ee0127285" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_schema_validator_1a94f61f24b1447497279ef12ee0127285" kindref="member">IsValid</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166" refid="classinternal_1_1_i_schema_validator_1a29b7df0935c87630bbb70c1e19d4c722" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_schema_validator_1a29b7df0935c87630bbb70c1e19d4c722" kindref="member">SetValidateFlags</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flags)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="167" refid="classinternal_1_1_i_schema_validator_1aa27d587f8e6fa2b95235a6ffa077429d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_schema_validator_1aa27d587f8e6fa2b95235a6ffa077429d" kindref="member">GetValidateFlags</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="comment">//<sp/>ISchemaStateFactory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaType&gt;</highlight></codeline>
<codeline lineno="174" refid="classinternal_1_1_i_schema_state_factory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classinternal_1_1_i_schema_state_factory" kindref="compound">ISchemaStateFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="176" refid="classinternal_1_1_i_schema_state_factory_1ae769eac75f9561fc8d0da7fadad2f6b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_schema_state_factory_1ae769eac75f9561fc8d0da7fadad2f6b4" kindref="member">~ISchemaStateFactory</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="177" refid="classinternal_1_1_i_schema_state_factory_1ada66af7e924238f29314e3b462f1e3fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>*<sp/><ref refid="classinternal_1_1_i_schema_state_factory_1ada66af7e924238f29314e3b462f1e3fb" kindref="member">CreateSchemaValidator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaType&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inheritContinueOnErrors)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="178" refid="classinternal_1_1_i_schema_state_factory_1a112cbf154077050bc30ffe670032442c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_schema_state_factory_1a112cbf154077050bc30ffe670032442c" kindref="member">DestroySchemaValidator</ref>(<ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>*<sp/>validator)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="179" refid="classinternal_1_1_i_schema_state_factory_1ab26076418c94535cec2af570e8b0a436" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classinternal_1_1_i_schema_state_factory_1ab26076418c94535cec2af570e8b0a436" kindref="member">CreateHasher</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="180" refid="classinternal_1_1_i_schema_state_factory_1addfcf00963cc777edf642b204f07c8d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/><ref refid="classinternal_1_1_i_schema_state_factory_1addfcf00963cc777edf642b204f07c8d6" kindref="member">GetHashCode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hasher)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="181" refid="classinternal_1_1_i_schema_state_factory_1a70b8d88180d2e6993105b17f19101635" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_schema_state_factory_1a70b8d88180d2e6993105b17f19101635" kindref="member">DestroryHasher</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hasher)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182" refid="classinternal_1_1_i_schema_state_factory_1abf29f19ba86e08f62b84b74a879b8922" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classinternal_1_1_i_schema_state_factory_1abf29f19ba86e08f62b84b74a879b8922" kindref="member">MallocState</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183" refid="classinternal_1_1_i_schema_state_factory_1a27bd2138940cac3c330dd8399c49b22b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_schema_state_factory_1a27bd2138940cac3c330dd8399c49b22b" kindref="member">FreeState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="comment">//<sp/>IValidationErrorHandler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaType&gt;</highlight></codeline>
<codeline lineno="190" refid="classinternal_1_1_i_validation_error_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classinternal_1_1_i_validation_error_handler" kindref="compound">IValidationErrorHandler</ref><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="192" refid="classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaType::Ch<sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="193" refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaType::SValue<sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classinternal_1_1_i_validation_error_handler_1a79e5eb5707b73497cff913093dfec060" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a79e5eb5707b73497cff913093dfec060" kindref="member">~IValidationErrorHandler</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="classinternal_1_1_i_validation_error_handler_1a195a561f0bbbfb66961c9331a6afab39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a195a561f0bbbfb66961c9331a6afab39" kindref="member">NotMultipleOf</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>&amp;<sp/>expected)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198" refid="classinternal_1_1_i_validation_error_handler_1ad8bd123f154f4c39f48b366219878526" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1ad8bd123f154f4c39f48b366219878526" kindref="member">NotMultipleOf</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>&amp;<sp/>expected)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199" refid="classinternal_1_1_i_validation_error_handler_1ada3d2275ccdeb4874f34942d257af9c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1ada3d2275ccdeb4874f34942d257af9c5" kindref="member">NotMultipleOf</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>&amp;<sp/>expected)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="200" refid="classinternal_1_1_i_validation_error_handler_1a7dc32dfac536f8577cbcb702efde26d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a7dc32dfac536f8577cbcb702efde26d2" kindref="member">AboveMaximum</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>&amp;<sp/>expected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusive)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="201" refid="classinternal_1_1_i_validation_error_handler_1a78554707b14366d2ff7763290e1a6219" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a78554707b14366d2ff7763290e1a6219" kindref="member">AboveMaximum</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>&amp;<sp/>expected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusive)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202" refid="classinternal_1_1_i_validation_error_handler_1a5b9e4690c26adbf4128b0b16f9e0625f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a5b9e4690c26adbf4128b0b16f9e0625f" kindref="member">AboveMaximum</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>&amp;<sp/>expected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusive)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203" refid="classinternal_1_1_i_validation_error_handler_1a5ad9849c01a0bfa923d37ef2f1b4c933" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a5ad9849c01a0bfa923d37ef2f1b4c933" kindref="member">BelowMinimum</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>&amp;<sp/>expected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusive)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204" refid="classinternal_1_1_i_validation_error_handler_1aa7bbfd1a69ba08ae31f87cb96ab5ec04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1aa7bbfd1a69ba08ae31f87cb96ab5ec04" kindref="member">BelowMinimum</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>&amp;<sp/>expected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusive)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="205" refid="classinternal_1_1_i_validation_error_handler_1a921da9a7fa127035a2a259b19813230e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a921da9a7fa127035a2a259b19813230e" kindref="member">BelowMinimum</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>&amp;<sp/>expected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusive)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classinternal_1_1_i_validation_error_handler_1ae000553bd9312a5090eed393541243af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1ae000553bd9312a5090eed393541243af" kindref="member">TooLong</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>expected)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208" refid="classinternal_1_1_i_validation_error_handler_1a57f0cd2c2c9781af0e4c447700537f23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a57f0cd2c2c9781af0e4c447700537f23" kindref="member">TooShort</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>expected)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209" refid="classinternal_1_1_i_validation_error_handler_1a9551391add918d6679f9a2a85dffc19c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a9551391add918d6679f9a2a85dffc19c" kindref="member">DoesNotMatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classinternal_1_1_i_validation_error_handler_1a0ac36d4217d9a14205cbe392601f3ee7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a0ac36d4217d9a14205cbe392601f3ee7" kindref="member">DisallowedItem</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212" refid="classinternal_1_1_i_validation_error_handler_1afc144690ba0e24636a72f541efd32c3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1afc144690ba0e24636a72f541efd32c3b" kindref="member">TooFewItems</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>actualCount,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>expectedCount)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="213" refid="classinternal_1_1_i_validation_error_handler_1a9371ca15622897a429971f69c07c47ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a9371ca15622897a429971f69c07c47ef" kindref="member">TooManyItems</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>actualCount,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>expectedCount)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214" refid="classinternal_1_1_i_validation_error_handler_1a3a0836796f39c946f31f87b80ddd6cf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a3a0836796f39c946f31f87b80ddd6cf1" kindref="member">DuplicateItems</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index1,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index2)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="classinternal_1_1_i_validation_error_handler_1a3494e9d2bff94979649e186aba71b32e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a3494e9d2bff94979649e186aba71b32e" kindref="member">TooManyProperties</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>actualCount,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>expectedCount)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="217" refid="classinternal_1_1_i_validation_error_handler_1adf515d2fad2e55bc0735a6fb16eec9e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1adf515d2fad2e55bc0735a6fb16eec9e6" kindref="member">TooFewProperties</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>actualCount,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>expectedCount)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="218" refid="classinternal_1_1_i_validation_error_handler_1ac0073bef86b572b4517876b304aada0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1ac0073bef86b572b4517876b304aada0f" kindref="member">StartMissingProperties</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="219" refid="classinternal_1_1_i_validation_error_handler_1a3a2165f53ab565e052bcd35b6d19e473" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a3a2165f53ab565e052bcd35b6d19e473" kindref="member">AddMissingProperty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>&amp;<sp/>name)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="220" refid="classinternal_1_1_i_validation_error_handler_1a3a01eec1a969cfb600340a2bad157c9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a3a01eec1a969cfb600340a2bad157c9c" kindref="member">EndMissingProperties</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221" refid="classinternal_1_1_i_validation_error_handler_1abd92773fa046eeb6fd8416468e62e5b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1abd92773fa046eeb6fd8416468e62e5b1" kindref="member">PropertyViolations</ref>(<ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>**<sp/>subvalidators,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="222" refid="classinternal_1_1_i_validation_error_handler_1a689b8acc4cbe3e8683c1a29950438ac8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a689b8acc4cbe3e8683c1a29950438ac8" kindref="member">DisallowedProperty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7" kindref="member">Ch</ref>*<sp/>name,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classinternal_1_1_i_validation_error_handler_1ab3cf4b9fe450ff76f52d70a2888f0342" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1ab3cf4b9fe450ff76f52d70a2888f0342" kindref="member">StartDependencyErrors</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="225" refid="classinternal_1_1_i_validation_error_handler_1ae312aea74718dda0411af023c0c78ef6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1ae312aea74718dda0411af023c0c78ef6" kindref="member">StartMissingDependentProperties</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226" refid="classinternal_1_1_i_validation_error_handler_1a2e9e0b2f67467a62642e37e839f689c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a2e9e0b2f67467a62642e37e839f689c5" kindref="member">AddMissingDependentProperty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>&amp;<sp/>targetName)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="227" refid="classinternal_1_1_i_validation_error_handler_1a05af3199b8011a3476dfd238fa958213" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a05af3199b8011a3476dfd238fa958213" kindref="member">EndMissingDependentProperties</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>&amp;<sp/>sourceName)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="228" refid="classinternal_1_1_i_validation_error_handler_1a4b43ba6e6a9c544dfc631297104dc508" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a4b43ba6e6a9c544dfc631297104dc508" kindref="member">AddDependencySchemaError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a" kindref="member">SValue</ref>&amp;<sp/>souceName,<sp/><ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>*<sp/>subvalidator)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="229" refid="classinternal_1_1_i_validation_error_handler_1a817c1e3e9cc62603997a2fcdc564820b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a817c1e3e9cc62603997a2fcdc564820b" kindref="member">EndDependencyErrors</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classinternal_1_1_i_validation_error_handler_1a67531a59c1dd8db20db72b17f0933d03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a67531a59c1dd8db20db72b17f0933d03" kindref="member">DisallowedValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref><sp/>code)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="232" refid="classinternal_1_1_i_validation_error_handler_1a994a8b1526a79737b9d7b7575def4f65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a994a8b1526a79737b9d7b7575def4f65" kindref="member">StartDisallowedType</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="233" refid="classinternal_1_1_i_validation_error_handler_1a5e4d9e5d937bd54e481f90e23ec3aea4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a5e4d9e5d937bd54e481f90e23ec3aea4" kindref="member">AddExpectedType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f" kindref="member">SchemaType::ValueType</ref>&amp;<sp/>expectedType)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234" refid="classinternal_1_1_i_validation_error_handler_1ad8133b3c055b3a91b5072af81304ab87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1ad8133b3c055b3a91b5072af81304ab87" kindref="member">EndDisallowedType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f" kindref="member">SchemaType::ValueType</ref>&amp;<sp/>actualType)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="235" refid="classinternal_1_1_i_validation_error_handler_1a3ce77d66a09eb5d91833fc86f8fa5680" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a3ce77d66a09eb5d91833fc86f8fa5680" kindref="member">NotAllOf</ref>(<ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>**<sp/>subvalidators,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236" refid="classinternal_1_1_i_validation_error_handler_1a70105117617fc7edbe7f032975888e13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a70105117617fc7edbe7f032975888e13" kindref="member">NoneOf</ref>(<ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>**<sp/>subvalidators,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237" refid="classinternal_1_1_i_validation_error_handler_1a3ca6fd0aebd486de8dd78c952938a83b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a3ca6fd0aebd486de8dd78c952938a83b" kindref="member">NotOneOf</ref>(<ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>**<sp/>subvalidators,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matched)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="238" refid="classinternal_1_1_i_validation_error_handler_1a570a6723282e6c0576a47c492ffe5602" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler_1a570a6723282e6c0576a47c492ffe5602" kindref="member">Disallowed</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="comment">//<sp/>Hasher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>comparison<sp/>of<sp/>compound<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="247" refid="classinternal_1_1_hasher" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classinternal_1_1_hasher" kindref="compound">Hasher</ref><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="249" refid="classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Encoding::Ch<sp/><ref refid="classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="classinternal_1_1_hasher_1a7b6abfdd3bdc60064a2322cdd20708c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_hasher_1a7b6abfdd3bdc60064a2322cdd20708c1" kindref="member">Hasher</ref>(<ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>*<sp/>allocator<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stackCapacity<sp/>=<sp/>kDefaultSize)<sp/>:<sp/>stack_(allocator,<sp/>stackCapacity)<sp/>{}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="classinternal_1_1_hasher_1a57c656866aa08cc7c448ce47b7a243c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a57c656866aa08cc7c448ce47b7a243c3" kindref="member">Null</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WriteType(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7aa09befbfb4f2e1409f237817979d8087" kindref="member">kNullType</ref>);<sp/>}</highlight></codeline>
<codeline lineno="254" refid="classinternal_1_1_hasher_1a11efd784a4e9c4f8a3dc281552df0486" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a11efd784a4e9c4f8a3dc281552df0486" kindref="member">Bool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WriteType(b<sp/>?<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a209434e5edd66630011ca19d710d7cd6" kindref="member">kTrueType</ref><sp/>:<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a062b8296274a258acf0e142868684c54" kindref="member">kFalseType</ref>);<sp/>}</highlight></codeline>
<codeline lineno="255" refid="classinternal_1_1_hasher_1aadbadf98ee7c9ab03a636e0f06d38bac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1aadbadf98ee7c9ab03a636e0f06d38bac" kindref="member">Int</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/>Number<sp/>n;<sp/>n.u.i<sp/>=<sp/>i;<sp/>n.d<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WriteNumber(n);<sp/>}</highlight></codeline>
<codeline lineno="256" refid="classinternal_1_1_hasher_1a4401600c24c817a45cea6c281438e5b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a4401600c24c817a45cea6c281438e5b4" kindref="member">Uint</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>u)<sp/>{<sp/>Number<sp/>n;<sp/>n.u.u<sp/>=<sp/>u;<sp/>n.d<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(u);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WriteNumber(n);<sp/>}</highlight></codeline>
<codeline lineno="257" refid="classinternal_1_1_hasher_1ae0579cd54b3c545f77452543793b9a97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1ae0579cd54b3c545f77452543793b9a97" kindref="member">Int64</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i)<sp/>{<sp/>Number<sp/>n;<sp/>n.u.i<sp/>=<sp/>i;<sp/>n.d<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WriteNumber(n);<sp/>}</highlight></codeline>
<codeline lineno="258" refid="classinternal_1_1_hasher_1a14832ac4ec204f1065b929df2c255457" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a14832ac4ec204f1065b929df2c255457" kindref="member">Uint64</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>u)<sp/>{<sp/>Number<sp/>n;<sp/>n.u.u<sp/>=<sp/>u;<sp/>n.d<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(u);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WriteNumber(n);<sp/>}</highlight></codeline>
<codeline lineno="259" refid="classinternal_1_1_hasher_1a83abe847e24ed88d5aab092d840e37c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a83abe847e24ed88d5aab092d840e37c1" kindref="member">Double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/>{<sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>n;<sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>0)<sp/>n.u.i<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n.u.u<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d);<sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n.d<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WriteNumber(n);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classinternal_1_1_hasher_1ae277289ad2fb3a938a6507e566d3c5e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1ae277289ad2fb3a938a6507e566d3c5e2" kindref="member">RawNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteBuffer(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>,<sp/>str,<sp/>len<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43" kindref="member">Ch</ref>));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="classinternal_1_1_hasher_1a885f2bf42f2bb64d6f9443129dce3883" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a885f2bf42f2bb64d6f9443129dce3883" kindref="member">String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteBuffer(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref>,<sp/>str,<sp/>len<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43" kindref="member">Ch</ref>));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="classinternal_1_1_hasher_1a1607d6cac3daab9725e442e38d121028" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a1607d6cac3daab9725e442e38d121028" kindref="member">StartObject</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="278" refid="classinternal_1_1_hasher_1a1b34d88f85f9c6a739c1f9038f14f078" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a1b34d88f85f9c6a739c1f9038f14f078" kindref="member">Key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a885f2bf42f2bb64d6f9443129dce3883" kindref="member">String</ref>(str,<sp/>len,<sp/>copy);<sp/>}</highlight></codeline>
<codeline lineno="279" refid="classinternal_1_1_hasher_1a7050f1552d88967944195163a6a0b08e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a7050f1552d88967944195163a6a0b08e" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>memberCount)<sp/>{<sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>h<sp/>=<sp/>Hash(0,<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>*<sp/>kv<sp/>=<sp/>stack_.template<sp/>Pop&lt;uint64_t&gt;(memberCount<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>memberCount;<sp/>i++)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>^=<sp/>Hash(kv[i<sp/>*<sp/>2],<sp/>kv[i<sp/>*<sp/>2<sp/>+<sp/>1]);<sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>xor<sp/>to<sp/>achieve<sp/>member<sp/>order<sp/>insensitive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stack_.template<sp/>Push&lt;uint64_t&gt;()<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288" refid="classinternal_1_1_hasher_1a2ceb3cc00216f6b6ce66907856a16404" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1a2ceb3cc00216f6b6ce66907856a16404" kindref="member">StartArray</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="289" refid="classinternal_1_1_hasher_1ad445b2730be23e18b4dec2c4d1033419" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1ad445b2730be23e18b4dec2c4d1033419" kindref="member">EndArray</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>elementCount)<sp/>{<sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>h<sp/>=<sp/>Hash(0,<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>*<sp/>e<sp/>=<sp/>stack_.template<sp/>Pop&lt;uint64_t&gt;(elementCount);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>elementCount;<sp/>i++)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>Hash(h,<sp/>e[i]);<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>hash<sp/>to<sp/>achieve<sp/>element<sp/>order<sp/>sensitive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stack_.template<sp/>Push&lt;uint64_t&gt;()<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="classinternal_1_1_hasher_1ae09fee05c56194031e8af94a1b1be145" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher_1ae09fee05c56194031e8af94a1b1be145" kindref="member">IsValid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack_.GetSize()<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>);<sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="classinternal_1_1_hasher_1ac221aaaa0d643aae553125e76aed7b47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/><ref refid="classinternal_1_1_hasher_1ac221aaaa0d643aae553125e76aed7b47" kindref="member">GetHashCode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="classinternal_1_1_hasher_1ae09fee05c56194031e8af94a1b1be145" kindref="member">IsValid</ref>());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*stack_.template<sp/>Top&lt;uint64_t&gt;();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kDefaultSize<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Number<sp/>{</highlight></codeline>
<codeline lineno="308" refid="unioninternal_1_1_hasher_1_1_number_1_1_u" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unioninternal_1_1_hasher_1_1_number_1_1_u" kindref="compound">U</ref><sp/>{</highlight></codeline>
<codeline lineno="309" refid="unioninternal_1_1_hasher_1_1_number_1_1_u_1a6380a48b72a4bb5dd7291d47814e6421" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/><ref refid="unioninternal_1_1_hasher_1_1_number_1_1_u_1a6380a48b72a4bb5dd7291d47814e6421" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="310" refid="unioninternal_1_1_hasher_1_1_number_1_1_u_1a19099b91768e67f02ed5a27fc157974b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/><ref refid="unioninternal_1_1_hasher_1_1_number_1_1_u_1a19099b91768e67f02ed5a27fc157974b" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}u;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WriteType(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref><sp/>type)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WriteBuffer(type,<sp/>0,<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WriteNumber(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Number&amp;<sp/>n)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WriteBuffer(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d" kindref="member">kNumberType</ref>,<sp/>&amp;n,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(n));<sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WriteBuffer(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FNV-1a<sp/>from<sp/>http://isthe.com/chongo/tech/comp/fnv/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>h<sp/>=<sp/>Hash(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0x84222325,<sp/>0xcbf29ce4),<sp/>type);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>d<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>Hash(h,<sp/>d[i]);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stack_.template<sp/>Push&lt;uint64_t&gt;()<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>Hash(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>h,<sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>kPrime<sp/>=<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0x00000100,<sp/>0x000001b3);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>^=<sp/>d;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>*=<sp/>kPrime;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>Stack&lt;Allocator&gt;<sp/>stack_;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">};</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="comment">//<sp/>SchemaValidationContext</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType&gt;</highlight></codeline>
<codeline lineno="343" refid="structinternal_1_1_schema_validation_context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_schema_validation_context" kindref="compound">SchemaValidationContext</ref><sp/>{</highlight></codeline>
<codeline lineno="344" refid="structinternal_1_1_schema_validation_context_1a79b155ab3711b97b6e33ced450614397" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema" kindref="compound">Schema&lt;SchemaDocumentType&gt;</ref><sp/><ref refid="structinternal_1_1_schema_validation_context_1a79b155ab3711b97b6e33ced450614397" kindref="member">SchemaType</ref>;</highlight></codeline>
<codeline lineno="345" refid="structinternal_1_1_schema_validation_context_1a33fa91fd8e880d1adb9b891fe441f110" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_schema_state_factory" kindref="compound">ISchemaStateFactory&lt;SchemaType&gt;</ref><sp/><ref refid="structinternal_1_1_schema_validation_context_1a33fa91fd8e880d1adb9b891fe441f110" kindref="member">SchemaValidatorFactoryType</ref>;</highlight></codeline>
<codeline lineno="346" refid="structinternal_1_1_schema_validation_context_1a4d015d68e8957c254b84af5f3550b2f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler" kindref="compound">IValidationErrorHandler&lt;SchemaType&gt;</ref><sp/><ref refid="structinternal_1_1_schema_validation_context_1a4d015d68e8957c254b84af5f3550b2f3" kindref="member">ErrorHandlerType</ref>;</highlight></codeline>
<codeline lineno="347" refid="structinternal_1_1_schema_validation_context_1acc134e808d3a4dbe8834eb1a3e98e816" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">SchemaType::ValueType</ref><sp/><ref refid="structinternal_1_1_schema_validation_context_1acc134e808d3a4dbe8834eb1a3e98e816" kindref="member">ValueType</ref>;</highlight></codeline>
<codeline lineno="348" refid="structinternal_1_1_schema_validation_context_1abd905cd1513b117f1db68b58d6c41daf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">ValueType::Ch</ref><sp/><ref refid="structinternal_1_1_schema_validation_context_1abd905cd1513b117f1db68b58d6c41daf" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826c" kindref="member">PatternValidatorType</ref><sp/>{</highlight></codeline>
<codeline lineno="351" refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826ca54cca82af0ef391404c2a930187ce5e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826ca54cca82af0ef391404c2a930187ce5e9" kindref="member">kPatternValidatorOnly</ref>,</highlight></codeline>
<codeline lineno="352" refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826ca2514cf806ce8e41993907d57d3732435" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826ca2514cf806ce8e41993907d57d3732435" kindref="member">kPatternValidatorWithProperty</ref>,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826ca39a21b8fcd048ddaabe29bc11e08c8f8" kindref="member">kPatternValidatorWithAdditionalProperty</ref></highlight></codeline>
<codeline lineno="354" refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826ca39a21b8fcd048ddaabe29bc11e08c8f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="structinternal_1_1_schema_validation_context_1ad2cb3f3168faf268157f582102979102" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1ad2cb3f3168faf268157f582102979102" kindref="member">SchemaValidationContext</ref>(<ref refid="classinternal_1_1_i_schema_state_factory" kindref="compound">SchemaValidatorFactoryType</ref>&amp;<sp/>f,<sp/><ref refid="classinternal_1_1_i_validation_error_handler" kindref="compound">ErrorHandlerType</ref>&amp;<sp/>eh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema" kindref="compound">SchemaType</ref>*<sp/>s)<sp/>:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1ae2661ad92602b4f12fbffadb3dab502e" kindref="member">factory</ref>(f),</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>(eh),</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1af44336e8a612b77a0091cc57f8de1734" kindref="member">schema</ref>(s),</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref>(),</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a9f6a91ee46c70e55f287b1e9b219df21" kindref="member">invalidKeyword</ref>(),</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a598b05c1f85d8c071e85ad1ccc761e8e" kindref="member">invalidCode</ref>(),</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a4b419775e207cf72834f895dc30ac596" kindref="member">hasher</ref>(),</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a5b6ec1a5fde2215de14a65fcbb06edde" kindref="member">arrayElementHashCodes</ref>(),</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>(),</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a10e5e97640846f3c23eaaba0506bb4f7" kindref="member">validatorCount</ref>(),</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a758565f674e8fb2066ff0f89ee67a174" kindref="member">patternPropertiesValidators</ref>(),</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a2b8a521d60d39472a1550b535028a353" kindref="member">patternPropertiesValidatorCount</ref>(),</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a12c48f172fbaae2e883f9eb2614d860e" kindref="member">patternPropertiesSchemas</ref>(),</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a77d48b63f006479ab8c77f8192558441" kindref="member">patternPropertiesSchemaCount</ref>(),</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1acc1ba6a63e678d0efff8a63d617c4d0d" kindref="member">valuePatternValidatorType</ref>(<ref refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826ca54cca82af0ef391404c2a930187ce5e9" kindref="member">kPatternValidatorOnly</ref>),</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a3e58787498af48ecceb97c47fb592d47" kindref="member">propertyExist</ref>(),</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1af18fc4ef754e8a52732e152854f06341" kindref="member">inArray</ref>(false),</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a23e93ca88653ed878e3ddf290fc6bd9f" kindref="member">valueUniqueness</ref>(false),</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a0864c5e8155fe0064f17e8dcb31d93c7" kindref="member">arrayUniqueness</ref>(false)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="structinternal_1_1_schema_validation_context_1abd287930e1134fe74e3e92580e51e97b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1abd287930e1134fe74e3e92580e51e97b" kindref="member">~SchemaValidationContext</ref>()<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structinternal_1_1_schema_validation_context_1a4b419775e207cf72834f895dc30ac596" kindref="member">hasher</ref>)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1ae2661ad92602b4f12fbffadb3dab502e" kindref="member">factory</ref>.<ref refid="classinternal_1_1_i_schema_state_factory_1a70b8d88180d2e6993105b17f19101635" kindref="member">DestroryHasher</ref>(<ref refid="structinternal_1_1_schema_validation_context_1a4b419775e207cf72834f895dc30ac596" kindref="member">hasher</ref>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="structinternal_1_1_schema_validation_context_1a10e5e97640846f3c23eaaba0506bb4f7" kindref="member">validatorCount</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1ae2661ad92602b4f12fbffadb3dab502e" kindref="member">factory</ref>.<ref refid="classinternal_1_1_i_schema_state_factory_1a112cbf154077050bc30ffe670032442c" kindref="member">DestroySchemaValidator</ref>(<ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>[i]);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1ae2661ad92602b4f12fbffadb3dab502e" kindref="member">factory</ref>.<ref refid="classinternal_1_1_i_schema_state_factory_1a27bd2138940cac3c330dd8399c49b22b" kindref="member">FreeState</ref>(<ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structinternal_1_1_schema_validation_context_1a758565f674e8fb2066ff0f89ee67a174" kindref="member">patternPropertiesValidators</ref>)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="structinternal_1_1_schema_validation_context_1a2b8a521d60d39472a1550b535028a353" kindref="member">patternPropertiesValidatorCount</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1ae2661ad92602b4f12fbffadb3dab502e" kindref="member">factory</ref>.<ref refid="classinternal_1_1_i_schema_state_factory_1a112cbf154077050bc30ffe670032442c" kindref="member">DestroySchemaValidator</ref>(<ref refid="structinternal_1_1_schema_validation_context_1a758565f674e8fb2066ff0f89ee67a174" kindref="member">patternPropertiesValidators</ref>[i]);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1ae2661ad92602b4f12fbffadb3dab502e" kindref="member">factory</ref>.<ref refid="classinternal_1_1_i_schema_state_factory_1a27bd2138940cac3c330dd8399c49b22b" kindref="member">FreeState</ref>(<ref refid="structinternal_1_1_schema_validation_context_1a758565f674e8fb2066ff0f89ee67a174" kindref="member">patternPropertiesValidators</ref>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structinternal_1_1_schema_validation_context_1a12c48f172fbaae2e883f9eb2614d860e" kindref="member">patternPropertiesSchemas</ref>)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1ae2661ad92602b4f12fbffadb3dab502e" kindref="member">factory</ref>.<ref refid="classinternal_1_1_i_schema_state_factory_1a27bd2138940cac3c330dd8399c49b22b" kindref="member">FreeState</ref>(<ref refid="structinternal_1_1_schema_validation_context_1a12c48f172fbaae2e883f9eb2614d860e" kindref="member">patternPropertiesSchemas</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structinternal_1_1_schema_validation_context_1a3e58787498af48ecceb97c47fb592d47" kindref="member">propertyExist</ref>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1ae2661ad92602b4f12fbffadb3dab502e" kindref="member">factory</ref>.<ref refid="classinternal_1_1_i_schema_state_factory_1a27bd2138940cac3c330dd8399c49b22b" kindref="member">FreeState</ref>(<ref refid="structinternal_1_1_schema_validation_context_1a3e58787498af48ecceb97c47fb592d47" kindref="member">propertyExist</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="structinternal_1_1_schema_validation_context_1ae2661ad92602b4f12fbffadb3dab502e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_i_schema_state_factory" kindref="compound">SchemaValidatorFactoryType</ref>&amp;<sp/><ref refid="structinternal_1_1_schema_validation_context_1ae2661ad92602b4f12fbffadb3dab502e" kindref="member">factory</ref>;</highlight></codeline>
<codeline lineno="399" refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_i_validation_error_handler" kindref="compound">ErrorHandlerType</ref>&amp;<sp/><ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>;</highlight></codeline>
<codeline lineno="400" refid="structinternal_1_1_schema_validation_context_1af44336e8a612b77a0091cc57f8de1734" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema" kindref="compound">SchemaType</ref>*<sp/><ref refid="structinternal_1_1_schema_validation_context_1af44336e8a612b77a0091cc57f8de1734" kindref="member">schema</ref>;</highlight></codeline>
<codeline lineno="401" refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema" kindref="compound">SchemaType</ref>*<sp/><ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref>;</highlight></codeline>
<codeline lineno="402" refid="structinternal_1_1_schema_validation_context_1a9f6a91ee46c70e55f287b1e9b219df21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_schema_validation_context_1abd905cd1513b117f1db68b58d6c41daf" kindref="member">Ch</ref>*<sp/><ref refid="structinternal_1_1_schema_validation_context_1a9f6a91ee46c70e55f287b1e9b219df21" kindref="member">invalidKeyword</ref>;</highlight></codeline>
<codeline lineno="403" refid="structinternal_1_1_schema_validation_context_1a598b05c1f85d8c071e85ad1ccc761e8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref><sp/><ref refid="structinternal_1_1_schema_validation_context_1a598b05c1f85d8c071e85ad1ccc761e8e" kindref="member">invalidCode</ref>;</highlight></codeline>
<codeline lineno="404" refid="structinternal_1_1_schema_validation_context_1a4b419775e207cf72834f895dc30ac596" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structinternal_1_1_schema_validation_context_1a4b419775e207cf72834f895dc30ac596" kindref="member">hasher</ref>;<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>validator<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="structinternal_1_1_schema_validation_context_1a5b6ec1a5fde2215de14a65fcbb06edde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structinternal_1_1_schema_validation_context_1a5b6ec1a5fde2215de14a65fcbb06edde" kindref="member">arrayElementHashCodes</ref>;<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>validator<sp/>access<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>**<sp/><ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>;</highlight></codeline>
<codeline lineno="407" refid="structinternal_1_1_schema_validation_context_1a10e5e97640846f3c23eaaba0506bb4f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="structinternal_1_1_schema_validation_context_1a10e5e97640846f3c23eaaba0506bb4f7" kindref="member">validatorCount</ref>;</highlight></codeline>
<codeline lineno="408" refid="structinternal_1_1_schema_validation_context_1a758565f674e8fb2066ff0f89ee67a174" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>**<sp/><ref refid="structinternal_1_1_schema_validation_context_1a758565f674e8fb2066ff0f89ee67a174" kindref="member">patternPropertiesValidators</ref>;</highlight></codeline>
<codeline lineno="409" refid="structinternal_1_1_schema_validation_context_1a2b8a521d60d39472a1550b535028a353" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="structinternal_1_1_schema_validation_context_1a2b8a521d60d39472a1550b535028a353" kindref="member">patternPropertiesValidatorCount</ref>;</highlight></codeline>
<codeline lineno="410" refid="structinternal_1_1_schema_validation_context_1a12c48f172fbaae2e883f9eb2614d860e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema" kindref="compound">SchemaType</ref>**<sp/><ref refid="structinternal_1_1_schema_validation_context_1a12c48f172fbaae2e883f9eb2614d860e" kindref="member">patternPropertiesSchemas</ref>;</highlight></codeline>
<codeline lineno="411" refid="structinternal_1_1_schema_validation_context_1a77d48b63f006479ab8c77f8192558441" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="structinternal_1_1_schema_validation_context_1a77d48b63f006479ab8c77f8192558441" kindref="member">patternPropertiesSchemaCount</ref>;</highlight></codeline>
<codeline lineno="412" refid="structinternal_1_1_schema_validation_context_1acc1ba6a63e678d0efff8a63d617c4d0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826c" kindref="member">PatternValidatorType</ref><sp/><ref refid="structinternal_1_1_schema_validation_context_1acc1ba6a63e678d0efff8a63d617c4d0d" kindref="member">valuePatternValidatorType</ref>;</highlight></codeline>
<codeline lineno="413" refid="structinternal_1_1_schema_validation_context_1add156192946b251ded2e11e24cfa9898" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826c" kindref="member">PatternValidatorType</ref><sp/><ref refid="structinternal_1_1_schema_validation_context_1add156192946b251ded2e11e24cfa9898" kindref="member">objectPatternValidatorType</ref>;</highlight></codeline>
<codeline lineno="414" refid="structinternal_1_1_schema_validation_context_1a213dd0b8a746b1548bb28b12a17c2c1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="structinternal_1_1_schema_validation_context_1a213dd0b8a746b1548bb28b12a17c2c1e" kindref="member">arrayElementIndex</ref>;</highlight></codeline>
<codeline lineno="415" refid="structinternal_1_1_schema_validation_context_1a3e58787498af48ecceb97c47fb592d47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="structinternal_1_1_schema_validation_context_1a3e58787498af48ecceb97c47fb592d47" kindref="member">propertyExist</ref>;</highlight></codeline>
<codeline lineno="416" refid="structinternal_1_1_schema_validation_context_1af18fc4ef754e8a52732e152854f06341" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_schema_validation_context_1af18fc4ef754e8a52732e152854f06341" kindref="member">inArray</ref>;</highlight></codeline>
<codeline lineno="417" refid="structinternal_1_1_schema_validation_context_1a23e93ca88653ed878e3ddf290fc6bd9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_schema_validation_context_1a23e93ca88653ed878e3ddf290fc6bd9f" kindref="member">valueUniqueness</ref>;</highlight></codeline>
<codeline lineno="418" refid="structinternal_1_1_schema_validation_context_1a0864c5e8155fe0064f17e8dcb31d93c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_schema_validation_context_1a0864c5e8155fe0064f17e8dcb31d93c7" kindref="member">arrayUniqueness</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal">};</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="comment">//<sp/>Schema</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType&gt;</highlight></codeline>
<codeline lineno="425" refid="classinternal_1_1_schema" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classinternal_1_1_schema" kindref="compound">Schema</ref><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="427" refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f" kindref="member">SchemaDocumentType::ValueType</ref><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>;</highlight></codeline>
<codeline lineno="428" refid="classinternal_1_1_schema_1a7af392edd81e610754cd2e6b4f82761c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType::AllocatorType<sp/><ref refid="classinternal_1_1_schema_1a7af392edd81e610754cd2e6b4f82761c" kindref="member">AllocatorType</ref>;</highlight></codeline>
<codeline lineno="429" refid="classinternal_1_1_schema_1a13d7dbba6e4a77b10862546777c5aae8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType::PointerType<sp/><ref refid="classinternal_1_1_schema_1a13d7dbba6e4a77b10862546777c5aae8" kindref="member">PointerType</ref>;</highlight></codeline>
<codeline lineno="430" refid="classinternal_1_1_schema_1a9ea269c3ca8099c2a14b6519fe34efb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_encoding" kindref="compound">ValueType::EncodingType</ref><sp/><ref refid="classinternal_1_1_schema_1a9ea269c3ca8099c2a14b6519fe34efb1" kindref="member">EncodingType</ref>;</highlight></codeline>
<codeline lineno="431" refid="classinternal_1_1_schema_1a98043fca39adbf8b42e7472e3d80d6fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EncodingType::Ch<sp/><ref refid="classinternal_1_1_schema_1a98043fca39adbf8b42e7472e3d80d6fa" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="432" refid="classinternal_1_1_schema_1ac3f54abfefe300c5610c1205869cfd66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_schema_validation_context" kindref="compound">SchemaValidationContext&lt;SchemaDocumentType&gt;</ref><sp/><ref refid="classinternal_1_1_schema_1ac3f54abfefe300c5610c1205869cfd66" kindref="member">Context</ref>;</highlight></codeline>
<codeline lineno="433" refid="classinternal_1_1_schema_1ac2556ebf7a7db971e1c1c0f76eb5786e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema" kindref="compound">Schema&lt;SchemaDocumentType&gt;</ref><sp/><ref refid="classinternal_1_1_schema_1ac2556ebf7a7db971e1c1c0f76eb5786e" kindref="member">SchemaType</ref>;</highlight></codeline>
<codeline lineno="434" refid="classinternal_1_1_schema_1ab3a07540a27d4cc2b0e260290c5c5771" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType, AllocatorType&gt;</ref><sp/><ref refid="classinternal_1_1_schema_1ab3a07540a27d4cc2b0e260290c5c5771" kindref="member">SValue</ref>;</highlight></codeline>
<codeline lineno="435" refid="classinternal_1_1_schema_1a2f8b106324878cdfc614df855e8bc6cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler" kindref="compound">IValidationErrorHandler&lt;Schema&gt;</ref><sp/><ref refid="classinternal_1_1_schema_1a2f8b106324878cdfc614df855e8bc6cc" kindref="member">ErrorHandler</ref>;</highlight></codeline>
<codeline lineno="436" refid="classinternal_1_1_schema_1a04f1d1acd0a5a7fda069c115970d52b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_uri" kindref="compound">GenericUri&lt;ValueType, AllocatorType&gt;</ref><sp/><ref refid="classinternal_1_1_schema_1a3b6cd85c3eeebe870cf8017d9d131d35" kindref="member">UriType</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref>&lt;<ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>,<sp/><ref refid="classinternal_1_1_schema_1a7af392edd81e610754cd2e6b4f82761c" kindref="member">AllocatorType</ref>&gt;;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="classinternal_1_1_schema_1a7725acd72292490caf8605fbd8e2fa9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1a7725acd72292490caf8605fbd8e2fa9c" kindref="member">Schema</ref>(SchemaDocumentType*<sp/>schemaDocument,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a13d7dbba6e4a77b10862546777c5aae8" kindref="member">PointerType</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>&amp;<sp/>document,<sp/><ref refid="classinternal_1_1_schema_1a7af392edd81e610754cd2e6b4f82761c" kindref="member">AllocatorType</ref>*<sp/>allocator,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_uri" kindref="compound">UriType</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classinternal_1_1_schema_1a3b6cd85c3eeebe870cf8017d9d131d35" kindref="member">UriType</ref>())<sp/>:</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_(allocator),</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uri_(schemaDocument-&gt;<ref refid="classinternal_1_1_schema_1ace15922d253d6d299159a76f57179803" kindref="member">GetURI</ref>(),<sp/>*allocator),</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_(id),</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer_(p,<sp/>allocator),</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeless_(schemaDocument-&gt;GetTypeless()),</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enum_(),</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumCount_(),</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not_(),</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_((1<sp/>&lt;&lt;<sp/>kTotalSchemaType)<sp/>-<sp/>1),<sp/></highlight><highlight class="comment">//<sp/>typeless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validatorCount_(),</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notValidatorIndex_(),</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_(),</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>additionalPropertiesSchema_(),</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patternProperties_(),</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patternPropertyCount_(),</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertyCount_(),</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minProperties_(),</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxProperties_(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>(~0)),</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>additionalProperties_(true),</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasDependencies_(),</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasRequired_(),</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSchemaDependencies_(),</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>additionalItemsSchema_(),</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemsList_(),</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemsTuple_(),</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemsTupleCount_(),</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minItems_(),</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxItems_(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>(~0)),</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>additionalItems_(true),</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniqueItems_(false),</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern_(),</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minLength_(0),</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxLength_(~<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>(0)),</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exclusiveMinimum_(false),</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exclusiveMaximum_(false),</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultValueLength_(0)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType::ConstValueIterator</ref><sp/>ConstValueIterator;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">ValueType::ConstMemberIterator</ref><sp/>ConstMemberIterator;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PR<sp/>#1393</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Early<sp/>add<sp/>this<sp/>Schema<sp/>and<sp/>its<sp/>$ref(s)<sp/>in<sp/>schemaDocument&apos;s<sp/>map<sp/>to<sp/>avoid<sp/>infinite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recursion<sp/>(with<sp/>recursive<sp/>schemas),<sp/>since<sp/>schemaDocument-&gt;getSchema()<sp/>is<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>checked<sp/>before<sp/>creating<sp/>a<sp/>new<sp/>one.<sp/>Don&apos;t<sp/>cache<sp/>typeless_,<sp/>though.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>typeless_)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType::SchemaEntry<sp/>SchemaEntry;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SchemaEntry<sp/>*entry<sp/>=<sp/>schemaDocument-&gt;schemaMap_.template<sp/>Push&lt;SchemaEntry&gt;();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(entry)<sp/>SchemaEntry(pointer_,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>allocator_);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument-&gt;AddSchemaRefs(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>.IsObject())</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>an<sp/>id<sp/>property,<sp/>resolve<sp/>it<sp/>with<sp/>the<sp/>in-scope<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetIdString()))<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsString())<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_uri" kindref="compound">UriType</ref><sp/>local(*v,<sp/>allocator);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_<sp/>=<sp/>local.<ref refid="class_generic_uri_1a7de4b3a28c8046f2293658bc9c0b44e1" kindref="member">Resolve</ref>(id_,<sp/>allocator);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetTypeString()))<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsString())</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddType(*v);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsArray())</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstValueIterator<sp/>itr<sp/>=<sp/>v-&gt;Begin();<sp/>itr<sp/>!=<sp/>v-&gt;End();<sp/>++itr)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddType(*itr);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetEnumString()))<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsArray()<sp/>&amp;&amp;<sp/>v-&gt;Size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enum_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator_-&gt;Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>)<sp/>*<sp/>v-&gt;Size()));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstValueIterator<sp/>itr<sp/>=<sp/>v-&gt;Begin();<sp/>itr<sp/>!=<sp/>v-&gt;End();<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher" kindref="compound">Hasher&lt;EncodingType, MemoryPoolAllocator&lt;&gt;</ref><sp/>&gt;<sp/>EnumHasherType;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[256u<sp/>+<sp/>24];</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_memory_pool_allocator" kindref="compound">MemoryPoolAllocator&lt;&gt;</ref><sp/>hasherAllocator(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnumHasherType<sp/>h(&amp;hasherAllocator,<sp/>256);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr-&gt;Accept(h);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enum_[enumCount_++]<sp/>=<sp/>h.GetHashCode();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(schemaDocument)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssignIfExist(allOf_,<sp/>*schemaDocument,<sp/>p,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetAllOfString(),<sp/>document);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssignIfExist(anyOf_,<sp/>*schemaDocument,<sp/>p,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetAnyOfString(),<sp/>document);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssignIfExist(oneOf_,<sp/>*schemaDocument,<sp/>p,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetOneOfString(),<sp/>document);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetNotString()))<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument-&gt;CreateSchema(&amp;not_,<sp/>p.Append(GetNotString(),<sp/>allocator_),<sp/>*v,<sp/>document,<sp/>id_);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notValidatorIndex_<sp/>=<sp/>validatorCount_;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validatorCount_++;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>properties<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetPropertiesString());</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>required<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetRequiredString());</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>dependencies<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetDependenciesString());</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gather<sp/>properties<sp/>from<sp/>properties/required/dependencies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">SValue</ref><sp/>allProperties(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties<sp/>&amp;&amp;<sp/>properties-&gt;IsObject())</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstMemberIterator<sp/>itr<sp/>=<sp/>properties-&gt;MemberBegin();<sp/>itr<sp/>!=<sp/>properties-&gt;MemberEnd();<sp/>++itr)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddUniqueElement(allProperties,<sp/>itr-&gt;name);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(required<sp/>&amp;&amp;<sp/>required-&gt;IsArray())</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstValueIterator<sp/>itr<sp/>=<sp/>required-&gt;Begin();<sp/>itr<sp/>!=<sp/>required-&gt;End();<sp/>++itr)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr-&gt;IsString())</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddUniqueElement(allProperties,<sp/>*itr);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dependencies<sp/>&amp;&amp;<sp/>dependencies-&gt;IsObject())</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstMemberIterator<sp/>itr<sp/>=<sp/>dependencies-&gt;MemberBegin();<sp/>itr<sp/>!=<sp/>dependencies-&gt;MemberEnd();<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddUniqueElement(allProperties,<sp/>itr-&gt;name);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr-&gt;value.IsArray())</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstValueIterator<sp/>i<sp/>=<sp/>itr-&gt;value.Begin();<sp/>i<sp/>!=<sp/>itr-&gt;value.End();<sp/>++i)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i-&gt;IsString())</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddUniqueElement(allProperties,<sp/>*i);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allProperties.Size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertyCount_<sp/>=<sp/>allProperties.Size();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Property*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator_-&gt;Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Property)<sp/>*<sp/>propertyCount_));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>propertyCount_;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;properties_[i])<sp/>Property();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_[i].name<sp/>=<sp/>allProperties[i];</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_[i].schema<sp/>=<sp/>typeless_;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties<sp/>&amp;&amp;<sp/>properties-&gt;IsObject())<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1a13d7dbba6e4a77b10862546777c5aae8" kindref="member">PointerType</ref><sp/>q<sp/>=<sp/>p.Append(GetPropertiesString(),<sp/>allocator_);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstMemberIterator<sp/>itr<sp/>=<sp/>properties-&gt;MemberBegin();<sp/>itr<sp/>!=<sp/>properties-&gt;MemberEnd();<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FindPropertyIndex(itr-&gt;name,<sp/>&amp;index))</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument-&gt;CreateSchema(&amp;properties_[index].schema,<sp/>q.Append(itr-&gt;name,<sp/>allocator_),<sp/>itr-&gt;value,<sp/>document,<sp/>id_);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetPatternPropertiesString()))<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1a13d7dbba6e4a77b10862546777c5aae8" kindref="member">PointerType</ref><sp/>q<sp/>=<sp/>p.Append(GetPatternPropertiesString(),<sp/>allocator_);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patternProperties_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">PatternProperty*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator_-&gt;Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PatternProperty)<sp/>*<sp/>v-&gt;MemberCount()));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patternPropertyCount_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstMemberIterator<sp/>itr<sp/>=<sp/>v-&gt;MemberBegin();<sp/>itr<sp/>!=<sp/>v-&gt;MemberEnd();<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;patternProperties_[patternPropertyCount_])<sp/>PatternProperty();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patternProperties_[patternPropertyCount_].pattern<sp/>=<sp/>CreatePattern(itr-&gt;name);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument-&gt;CreateSchema(&amp;patternProperties_[patternPropertyCount_].schema,<sp/>q.Append(itr-&gt;name,<sp/>allocator_),<sp/>itr-&gt;value,<sp/>document,<sp/>id_);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patternPropertyCount_++;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(required<sp/>&amp;&amp;<sp/>required-&gt;IsArray())</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstValueIterator<sp/>itr<sp/>=<sp/>required-&gt;Begin();<sp/>itr<sp/>!=<sp/>required-&gt;End();<sp/>++itr)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr-&gt;IsString())<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FindPropertyIndex(*itr,<sp/>&amp;index))<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_[index].required<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasRequired_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dependencies<sp/>&amp;&amp;<sp/>dependencies-&gt;IsObject())<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1a13d7dbba6e4a77b10862546777c5aae8" kindref="member">PointerType</ref><sp/>q<sp/>=<sp/>p.Append(GetDependenciesString(),<sp/>allocator_);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasDependencies_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstMemberIterator<sp/>itr<sp/>=<sp/>dependencies-&gt;MemberBegin();<sp/>itr<sp/>!=<sp/>dependencies-&gt;MemberEnd();<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>sourceIndex;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FindPropertyIndex(itr-&gt;name,<sp/>&amp;sourceIndex))<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr-&gt;value.IsArray())<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_[sourceIndex].dependencies<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator_-&gt;Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>*<sp/>propertyCount_));</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memset(properties_[sourceIndex].dependencies,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)*<sp/>propertyCount_);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstValueIterator<sp/>targetItr<sp/>=<sp/>itr-&gt;value.Begin();<sp/>targetItr<sp/>!=<sp/>itr-&gt;value.End();<sp/>++targetItr)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>targetIndex;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FindPropertyIndex(*targetItr,<sp/>&amp;targetIndex))</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_[sourceIndex].dependencies[targetIndex]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr-&gt;value.IsObject())<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSchemaDependencies_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument-&gt;CreateSchema(&amp;properties_[sourceIndex].dependenciesSchema,<sp/>q.Append(itr-&gt;name,<sp/>allocator_),<sp/>itr-&gt;value,<sp/>document,<sp/>id_);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_[sourceIndex].dependenciesValidatorIndex<sp/>=<sp/>validatorCount_;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validatorCount_++;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetAdditionalPropertiesString()))<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsBool())</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>additionalProperties_<sp/>=<sp/>v-&gt;GetBool();</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsObject())</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument-&gt;CreateSchema(&amp;additionalPropertiesSchema_,<sp/>p.Append(GetAdditionalPropertiesString(),<sp/>allocator_),<sp/>*v,<sp/>document,<sp/>id_);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssignIfExist(minProperties_,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetMinPropertiesString());</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssignIfExist(maxProperties_,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetMaxPropertiesString());</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetItemsString()))<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1a13d7dbba6e4a77b10862546777c5aae8" kindref="member">PointerType</ref><sp/>q<sp/>=<sp/>p.Append(GetItemsString(),<sp/>allocator_);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsObject())<sp/></highlight><highlight class="comment">//<sp/>List<sp/>validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument-&gt;CreateSchema(&amp;itemsList_,<sp/>q,<sp/>*v,<sp/>document,<sp/>id_);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsArray())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Tuple<sp/>validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemsTuple_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classinternal_1_1_schema" kindref="compound">Schema</ref>**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator_-&gt;Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema" kindref="compound">Schema</ref>*)<sp/>*<sp/>v-&gt;Size()));</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConstValueIterator<sp/>itr<sp/>=<sp/>v-&gt;Begin();<sp/>itr<sp/>!=<sp/>v-&gt;End();<sp/>++itr,<sp/>index++)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument-&gt;CreateSchema(&amp;itemsTuple_[itemsTupleCount_++],<sp/>q.Append(index,<sp/>allocator_),<sp/>*itr,<sp/>document,<sp/>id_);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssignIfExist(minItems_,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetMinItemsString());</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssignIfExist(maxItems_,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetMaxItemsString());</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetAdditionalItemsString()))<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsBool())</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>additionalItems_<sp/>=<sp/>v-&gt;GetBool();</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsObject())</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument-&gt;CreateSchema(&amp;additionalItemsSchema_,<sp/>p.Append(GetAdditionalItemsString(),<sp/>allocator_),<sp/>*v,<sp/>document,<sp/>id_);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssignIfExist(uniqueItems_,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetUniqueItemsString());</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>String</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssignIfExist(minLength_,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetMinLengthString());</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssignIfExist(maxLength_,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetMaxLengthString());</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetPatternString()))</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern_<sp/>=<sp/>CreatePattern(*v);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetMinimumString()))</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsNumber())</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimum_.CopyFrom(*v,<sp/>*allocator_);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetMaximumString()))</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsNumber())</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maximum_.CopyFrom(*v,<sp/>*allocator_);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssignIfExist(exclusiveMinimum_,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetExclusiveMinimumString());</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssignIfExist(exclusiveMaximum_,<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetExclusiveMaximumString());</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetMultipleOfString()))</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsNumber()<sp/>&amp;&amp;<sp/>v-&gt;GetDouble()<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multipleOf_.CopyFrom(*v,<sp/>*allocator_);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>GetDefaultValueString()))</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsString())</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultValueLength_<sp/>=<sp/>v-&gt;GetStringLength();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697" refid="classinternal_1_1_schema_1a458f60f9fee54d74ac1f607bcf4e4ddc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1a458f60f9fee54d74ac1f607bcf4e4ddc" kindref="member">~Schema</ref>()<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">AllocatorType::Free</ref>(enum_);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties_)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>propertyCount_;<sp/>i++)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_[i].~Property();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">AllocatorType::Free</ref>(properties_);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(patternProperties_)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>patternPropertyCount_;<sp/>i++)</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patternProperties_[i].~PatternProperty();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">AllocatorType::Free</ref>(patternProperties_);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">AllocatorType::Free</ref>(itemsTuple_);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_HAS_REGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pattern_)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern_-&gt;~RegexType();</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">AllocatorType::Free</ref>(pattern_);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718" refid="classinternal_1_1_schema_1ace15922d253d6d299159a76f57179803" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">SValue</ref>&amp;<sp/><ref refid="classinternal_1_1_schema_1ace15922d253d6d299159a76f57179803" kindref="member">GetURI</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uri_;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722" refid="classinternal_1_1_schema_1a620036a91f95078dca15bb7aad5ba027" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_uri" kindref="compound">UriType</ref>&amp;<sp/><ref refid="classinternal_1_1_schema_1a620036a91f95078dca15bb7aad5ba027" kindref="member">GetId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id_;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="classinternal_1_1_schema_1a8d5ce15875e498c8c5f3512a5cadb65e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a13d7dbba6e4a77b10862546777c5aae8" kindref="member">PointerType</ref>&amp;<sp/><ref refid="classinternal_1_1_schema_1a8d5ce15875e498c8c5f3512a5cadb65e" kindref="member">GetPointer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointer_;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="classinternal_1_1_schema_1ae978defa6c4210365bdb3571643a0d40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1ae978defa6c4210365bdb3571643a0d40" kindref="member">BeginValue</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1af18fc4ef754e8a52732e152854f06341" kindref="member">inArray</ref>)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniqueItems_)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a23e93ca88653ed878e3ddf290fc6bd9f" kindref="member">valueUniqueness</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itemsList_)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref><sp/>=<sp/>itemsList_;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itemsTuple_)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1a213dd0b8a746b1548bb28b12a17c2c1e" kindref="member">arrayElementIndex</ref><sp/>&lt;<sp/>itemsTupleCount_)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref><sp/>=<sp/>itemsTuple_[context.<ref refid="structinternal_1_1_schema_validation_context_1a213dd0b8a746b1548bb28b12a17c2c1e" kindref="member">arrayElementIndex</ref>];</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(additionalItemsSchema_)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref><sp/>=<sp/>additionalItemsSchema_;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(additionalItems_)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref><sp/>=<sp/>typeless_;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a0ac36d4217d9a14205cbe392601f3ee7" kindref="member">DisallowedItem</ref>(context.<ref refid="structinternal_1_1_schema_validation_context_1a213dd0b8a746b1548bb28b12a17c2c1e" kindref="member">arrayElementIndex</ref>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>set<sp/>valueSchema<sp/>for<sp/>when<sp/>kValidateContinueOnErrorFlag<sp/>is<sp/>set,<sp/>else<sp/>reports<sp/>spurious<sp/>type<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref><sp/>=<sp/>typeless_;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>bump<sp/>arrayElementIndex<sp/>for<sp/>when<sp/>kValidateContinueOnErrorFlag<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a213dd0b8a746b1548bb28b12a17c2c1e" kindref="member">arrayElementIndex</ref>++;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa17861cca8a0ab2a0685f3b7804f67303" kindref="member">kValidateErrorAdditionalItems</ref>);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref><sp/>=<sp/>typeless_;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a213dd0b8a746b1548bb28b12a17c2c1e" kindref="member">arrayElementIndex</ref>++;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761" refid="classinternal_1_1_schema_1afced5d191620cfdf0971fdd30b004686" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1afced5d191620cfdf0971fdd30b004686" kindref="member">EndValue</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>check<sp/>pattern<sp/>properties<sp/>if<sp/>we<sp/>have<sp/>validators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1a2b8a521d60d39472a1550b535028a353" kindref="member">patternPropertiesValidatorCount</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>otherValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count<sp/>=<sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a2b8a521d60d39472a1550b535028a353" kindref="member">patternPropertiesValidatorCount</ref>;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1add156192946b251ded2e11e24cfa9898" kindref="member">objectPatternValidatorType</ref><sp/>!=<sp/><ref refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826ca54cca82af0ef391404c2a930187ce5e9" kindref="member">Context::kPatternValidatorOnly</ref>)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherValid<sp/>=<sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a758565f674e8fb2066ff0f89ee67a174" kindref="member">patternPropertiesValidators</ref>[--count]-&gt;<ref refid="classinternal_1_1_i_schema_validator_1a94f61f24b1447497279ef12ee0127285" kindref="member">IsValid</ref>();</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>patternValid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!context.<ref refid="structinternal_1_1_schema_validation_context_1a758565f674e8fb2066ff0f89ee67a174" kindref="member">patternPropertiesValidators</ref>[i]-&gt;<ref refid="classinternal_1_1_i_schema_validator_1a94f61f24b1447497279ef12ee0127285" kindref="member">IsValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patternValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1add156192946b251ded2e11e24cfa9898" kindref="member">objectPatternValidatorType</ref><sp/>==<sp/><ref refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826ca54cca82af0ef391404c2a930187ce5e9" kindref="member">Context::kPatternValidatorOnly</ref>)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!patternValid)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1abd92773fa046eeb6fd8416468e62e5b1" kindref="member">PropertyViolations</ref>(context.<ref refid="structinternal_1_1_schema_validation_context_1a758565f674e8fb2066ff0f89ee67a174" kindref="member">patternPropertiesValidators</ref>,<sp/>count);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaecdd1b884cbacca0213b36def4e1feaf" kindref="member">kValidateErrorPatternProperties</ref>);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1add156192946b251ded2e11e24cfa9898" kindref="member">objectPatternValidatorType</ref><sp/>==<sp/><ref refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826ca2514cf806ce8e41993907d57d3732435" kindref="member">Context::kPatternValidatorWithProperty</ref>)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!patternValid<sp/>||<sp/>!otherValid)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1abd92773fa046eeb6fd8416468e62e5b1" kindref="member">PropertyViolations</ref>(context.<ref refid="structinternal_1_1_schema_validation_context_1a758565f674e8fb2066ff0f89ee67a174" kindref="member">patternPropertiesValidators</ref>,<sp/>count<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaecdd1b884cbacca0213b36def4e1feaf" kindref="member">kValidateErrorPatternProperties</ref>);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!patternValid<sp/>&amp;&amp;<sp/>!otherValid)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>kPatternValidatorWithAdditionalProperty)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1abd92773fa046eeb6fd8416468e62e5b1" kindref="member">PropertyViolations</ref>(context.<ref refid="structinternal_1_1_schema_validation_context_1a758565f674e8fb2066ff0f89ee67a174" kindref="member">patternPropertiesValidators</ref>,<sp/>count<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaecdd1b884cbacca0213b36def4e1feaf" kindref="member">kValidateErrorPatternProperties</ref>);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>enums<sp/>only<sp/>check<sp/>if<sp/>we<sp/>have<sp/>a<sp/>hasher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enum_<sp/>&amp;&amp;<sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a4b419775e207cf72834f895dc30ac596" kindref="member">hasher</ref>)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>h<sp/>=<sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ae2661ad92602b4f12fbffadb3dab502e" kindref="member">factory</ref>.<ref refid="classinternal_1_1_i_schema_state_factory_1addfcf00963cc777edf642b204f07c8d6" kindref="member">GetHashCode</ref>(context.<ref refid="structinternal_1_1_schema_validation_context_1a4b419775e207cf72834f895dc30ac596" kindref="member">hasher</ref>);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>enumCount_;<sp/>i++)</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enum_[i]<sp/>==<sp/>h)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>foundEnum;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a67531a59c1dd8db20db72b17f0933d03" kindref="member">DisallowedValue</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3c12e9cbc8a479b77776ceccbda4c289" kindref="member">kValidateErrorEnum</ref>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3c12e9cbc8a479b77776ceccbda4c289" kindref="member">kValidateErrorEnum</ref>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundEnum:;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>check<sp/>allOf<sp/>etc<sp/>if<sp/>we<sp/>have<sp/>validators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1a10e5e97640846f3c23eaaba0506bb4f7" kindref="member">validatorCount</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allOf_.schemas)</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>allOf_.begin;<sp/>i<sp/>&lt;<sp/>allOf_.begin<sp/>+<sp/>allOf_.count;<sp/>i++)</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!context.<ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>[i]-&gt;<ref refid="classinternal_1_1_i_schema_validator_1a94f61f24b1447497279ef12ee0127285" kindref="member">IsValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a3ce77d66a09eb5d91833fc86f8fa5680" kindref="member">NotAllOf</ref>(&amp;context.<ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>[allOf_.begin],<sp/>allOf_.count);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaef48f9db2382e3308b823f078c73bce4" kindref="member">kValidateErrorAllOf</ref>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anyOf_.schemas)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>anyOf_.begin;<sp/>i<sp/>&lt;<sp/>anyOf_.begin<sp/>+<sp/>anyOf_.count;<sp/>i++)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>[i]-&gt;<ref refid="classinternal_1_1_i_schema_validator_1a94f61f24b1447497279ef12ee0127285" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>foundAny;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a70105117617fc7edbe7f032975888e13" kindref="member">NoneOf</ref>(&amp;context.<ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>[anyOf_.begin],<sp/>anyOf_.count);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa7b821605f3eb4ec77e2c42204b3957cf" kindref="member">kValidateErrorAnyOf</ref>);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundAny:;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oneOf_.schemas)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>oneValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>oneOf_.begin;<sp/>i<sp/>&lt;<sp/>oneOf_.begin<sp/>+<sp/>oneOf_.count;<sp/>i++)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>[i]-&gt;<ref refid="classinternal_1_1_i_schema_validator_1a94f61f24b1447497279ef12ee0127285" kindref="member">IsValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oneValid)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a3ca6fd0aebd486de8dd78c952938a83b" kindref="member">NotOneOf</ref>(&amp;context.<ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>[oneOf_.begin],<sp/>oneOf_.count,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa1bbc2293748b2e80415c77c7a6a069f9" kindref="member">kValidateErrorOneOfMatch</ref>);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oneValid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!oneValid)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a3ca6fd0aebd486de8dd78c952938a83b" kindref="member">NotOneOf</ref>(&amp;context.<ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>[oneOf_.begin],<sp/>oneOf_.count,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa56466697ca410e5ddc2c7fabe11f3132" kindref="member">kValidateErrorOneOf</ref>);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not_<sp/>&amp;&amp;<sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>[notValidatorIndex_]-&gt;<ref refid="classinternal_1_1_i_schema_validator_1a94f61f24b1447497279ef12ee0127285" kindref="member">IsValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a570a6723282e6c0576a47c492ffe5602" kindref="member">Disallowed</ref>();</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aadd079998cffcae99da28675a5742327d" kindref="member">kValidateErrorNot</ref>);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848" refid="classinternal_1_1_schema_1acd4fa9c33c9ef22a26ba160fdc1d78da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1acd4fa9c33c9ef22a26ba160fdc1d78da" kindref="member">Null</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kNullSchemaType)))<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisallowedType(context,<sp/>GetNullString());</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa5504bec97bd2ef15efac9ff5b0a6e8fa" kindref="member">kValidateErrorType</ref>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateParallelValidator(context);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856" refid="classinternal_1_1_schema_1ab3d266cf235cf2f165952c0b8891a962" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1ab3d266cf235cf2f165952c0b8891a962" kindref="member">Bool</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kBooleanSchemaType)))<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisallowedType(context,<sp/>GetBooleanString());</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa5504bec97bd2ef15efac9ff5b0a6e8fa" kindref="member">kValidateErrorType</ref>);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateParallelValidator(context);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864" refid="classinternal_1_1_schema_1a1e3a87b01db90408be438dd4f5b8ee28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a1e3a87b01db90408be438dd4f5b8ee28" kindref="member">Int</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CheckInt(context,<sp/>i))</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateParallelValidator(context);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="classinternal_1_1_schema_1abd42af9c38c9a02cda760567751fb00f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1abd42af9c38c9a02cda760567751fb00f" kindref="member">Uint</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>u)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CheckUint(context,<sp/>u))</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateParallelValidator(context);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876" refid="classinternal_1_1_schema_1a0190028fee83533e2b93f19ff5a99902" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a0190028fee83533e2b93f19ff5a99902" kindref="member">Int64</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context,<sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CheckInt(context,<sp/>i))</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateParallelValidator(context);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882" refid="classinternal_1_1_schema_1a1f80b1a9502b71530a98694e7b54987d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a1f80b1a9502b71530a98694e7b54987d" kindref="member">Uint64</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context,<sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>u)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CheckUint(context,<sp/>u))</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateParallelValidator(context);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888" refid="classinternal_1_1_schema_1a8336bcea8d0e802c4b070da18e04f1dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8336bcea8d0e802c4b070da18e04f1dd" kindref="member">Double</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kNumberSchemaType)))<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisallowedType(context,<sp/>GetNumberString());</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa5504bec97bd2ef15efac9ff5b0a6e8fa" kindref="member">kValidateErrorType</ref>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!minimum_.IsNull()<sp/>&amp;&amp;<sp/>!CheckDoubleMinimum(context,<sp/>d))</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!maximum_.IsNull()<sp/>&amp;&amp;<sp/>!CheckDoubleMaximum(context,<sp/>d))</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!multipleOf_.IsNull()<sp/>&amp;&amp;<sp/>!CheckDoubleMultipleOf(context,<sp/>d))</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateParallelValidator(context);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906" refid="classinternal_1_1_schema_1a8e652cbc67fa34181c3fd813c38d5280" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8e652cbc67fa34181c3fd813c38d5280" kindref="member">String</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a98043fca39adbf8b42e7472e3d80d6fa" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kStringSchemaType)))<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisallowedType(context,<sp/>GetStringString());</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa5504bec97bd2ef15efac9ff5b0a6e8fa" kindref="member">kValidateErrorType</ref>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minLength_<sp/>!=<sp/>0<sp/>||<sp/>maxLength_<sp/>!=<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>(~0))<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(internal::CountStringCodePoint&lt;EncodingType&gt;(str,<sp/>length,<sp/>&amp;count))<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&lt;<sp/>minLength_)<sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a57f0cd2c2c9781af0e4c447700537f23" kindref="member">TooShort</ref>(str,<sp/>length,<sp/>minLength_);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa58e6e01eef18ea0af4763abd84128790" kindref="member">kValidateErrorMinLength</ref>);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>maxLength_)<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1ae000553bd9312a5090eed393541243af" kindref="member">TooLong</ref>(str,<sp/>length,<sp/>maxLength_);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa6825de2427572de01bd121c9fffcee76" kindref="member">kValidateErrorMaxLength</ref>);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pattern_<sp/>&amp;&amp;<sp/>!IsPatternMatch(pattern_,<sp/>str,<sp/>length))<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a9551391add918d6679f9a2a85dffc19c" kindref="member">DoesNotMatch</ref>(str,<sp/>length);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa86bde2af1a18d73a533ba8e2f5971879" kindref="member">kValidateErrorPattern</ref>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateParallelValidator(context);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934" refid="classinternal_1_1_schema_1a124c90c0b46d8a06ae5c0314467b6363" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a124c90c0b46d8a06ae5c0314467b6363" kindref="member">StartObject</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kObjectSchemaType)))<sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisallowedType(context,<sp/>GetObjectString());</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa5504bec97bd2ef15efac9ff5b0a6e8fa" kindref="member">kValidateErrorType</ref>);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasDependencies_<sp/>||<sp/>hasRequired_)<sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a3e58787498af48ecceb97c47fb592d47" kindref="member">propertyExist</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(context.<ref refid="structinternal_1_1_schema_validation_context_1ae2661ad92602b4f12fbffadb3dab502e" kindref="member">factory</ref>.<ref refid="classinternal_1_1_i_schema_state_factory_1abf29f19ba86e08f62b84b74a879b8922" kindref="member">MallocState</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>*<sp/>propertyCount_));</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memset(context.<ref refid="structinternal_1_1_schema_validation_context_1a3e58787498af48ecceb97c47fb592d47" kindref="member">propertyExist</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>*<sp/>propertyCount_);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(patternProperties_)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>pre-allocate<sp/>schema<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count<sp/>=<sp/>patternPropertyCount_<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>extra<sp/>for<sp/>valuePatternValidatorType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a12c48f172fbaae2e883f9eb2614d860e" kindref="member">patternPropertiesSchemas</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classinternal_1_1_schema" kindref="compound">SchemaType</ref>**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(context.<ref refid="structinternal_1_1_schema_validation_context_1ae2661ad92602b4f12fbffadb3dab502e" kindref="member">factory</ref>.<ref refid="classinternal_1_1_i_schema_state_factory_1abf29f19ba86e08f62b84b74a879b8922" kindref="member">MallocState</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema" kindref="compound">SchemaType</ref>*)<sp/>*<sp/>count));</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a77d48b63f006479ab8c77f8192558441" kindref="member">patternPropertiesSchemaCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memset(context.<ref refid="structinternal_1_1_schema_validation_context_1a12c48f172fbaae2e883f9eb2614d860e" kindref="member">patternPropertiesSchemas</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classinternal_1_1_schema" kindref="compound">SchemaType</ref>*)<sp/>*<sp/>count);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateParallelValidator(context);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955" refid="classinternal_1_1_schema_1abdd4db48f1b6deb7881777ddc539709a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1abdd4db48f1b6deb7881777ddc539709a" kindref="member">Key</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a98043fca39adbf8b42e7472e3d80d6fa" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(patternProperties_)<sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a77d48b63f006479ab8c77f8192558441" kindref="member">patternPropertiesSchemaCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>patternPropertyCount_;<sp/>i++)</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(patternProperties_[i].pattern<sp/>&amp;&amp;<sp/>IsPatternMatch(patternProperties_[i].pattern,<sp/>str,<sp/>len))<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a12c48f172fbaae2e883f9eb2614d860e" kindref="member">patternPropertiesSchemas</ref>[context.<ref refid="structinternal_1_1_schema_validation_context_1a77d48b63f006479ab8c77f8192558441" kindref="member">patternPropertiesSchemaCount</ref>++]<sp/>=<sp/>patternProperties_[i].schema;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref><sp/>=<sp/>typeless_;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FindPropertyIndex(<ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>(str,<sp/>len).Move(),<sp/>&amp;index))<sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1a77d48b63f006479ab8c77f8192558441" kindref="member">patternPropertiesSchemaCount</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a12c48f172fbaae2e883f9eb2614d860e" kindref="member">patternPropertiesSchemas</ref>[context.<ref refid="structinternal_1_1_schema_validation_context_1a77d48b63f006479ab8c77f8192558441" kindref="member">patternPropertiesSchemaCount</ref>++]<sp/>=<sp/>properties_[index].schema;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref><sp/>=<sp/>typeless_;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1acc1ba6a63e678d0efff8a63d617c4d0d" kindref="member">valuePatternValidatorType</ref><sp/>=<sp/><ref refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826ca2514cf806ce8e41993907d57d3732435" kindref="member">Context::kPatternValidatorWithProperty</ref>;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref><sp/>=<sp/>properties_[index].schema;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1a3e58787498af48ecceb97c47fb592d47" kindref="member">propertyExist</ref>)</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a3e58787498af48ecceb97c47fb592d47" kindref="member">propertyExist</ref>[index]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(additionalPropertiesSchema_)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1a77d48b63f006479ab8c77f8192558441" kindref="member">patternPropertiesSchemaCount</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a12c48f172fbaae2e883f9eb2614d860e" kindref="member">patternPropertiesSchemas</ref>[context.<ref refid="structinternal_1_1_schema_validation_context_1a77d48b63f006479ab8c77f8192558441" kindref="member">patternPropertiesSchemaCount</ref>++]<sp/>=<sp/>additionalPropertiesSchema_;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref><sp/>=<sp/>typeless_;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1acc1ba6a63e678d0efff8a63d617c4d0d" kindref="member">valuePatternValidatorType</ref><sp/>=<sp/><ref refid="structinternal_1_1_schema_validation_context_1a4fb1b8fe7ecb9d4608e6b0ac0716826ca39a21b8fcd048ddaabe29bc11e08c8f8" kindref="member">Context::kPatternValidatorWithAdditionalProperty</ref>;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref><sp/>=<sp/>additionalPropertiesSchema_;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(additionalProperties_)<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref><sp/>=<sp/>typeless_;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1a77d48b63f006479ab8c77f8192558441" kindref="member">patternPropertiesSchemaCount</ref><sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>patternProperties<sp/>are<sp/>not<sp/>additional<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>set<sp/>valueSchema<sp/>for<sp/>when<sp/>kValidateContinueOnErrorFlag<sp/>is<sp/>set,<sp/>else<sp/>reports<sp/>spurious<sp/>type<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a34865d65fb3cbb01bc497d0efade0458" kindref="member">valueSchema</ref><sp/>=<sp/>typeless_;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a689b8acc4cbe3e8683c1a29950438ac8" kindref="member">DisallowedProperty</ref>(str,<sp/>len);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aae02b299a3f5db48400e7c1987201d2ca" kindref="member">kValidateErrorAdditionalProperties</ref>);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006" refid="classinternal_1_1_schema_1a5f74464dae5d41d5cbf626c8d6729d8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a5f74464dae5d41d5cbf626c8d6729d8a" kindref="member">EndObject</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>memberCount)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasRequired_)<sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1ac0073bef86b572b4517876b304aada0f" kindref="member">StartMissingProperties</ref>();</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>propertyCount_;<sp/>index++)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties_[index].required<sp/>&amp;&amp;<sp/>!context.<ref refid="structinternal_1_1_schema_validation_context_1a3e58787498af48ecceb97c47fb592d47" kindref="member">propertyExist</ref>[index])</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties_[index].schema-&gt;defaultValueLength_<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a3a2165f53ab565e052bcd35b6d19e473" kindref="member">AddMissingProperty</ref>(properties_[index].name);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a3a01eec1a969cfb600340a2bad157c9c" kindref="member">EndMissingProperties</ref>())</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa2dc93a549f16b70911e6399c61a1aec4" kindref="member">kValidateErrorRequired</ref>);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memberCount<sp/>&lt;<sp/>minProperties_)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1adf515d2fad2e55bc0735a6fb16eec9e6" kindref="member">TooFewProperties</ref>(memberCount,<sp/>minProperties_);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa017c1ccb7febfaff42115fc256753fb6" kindref="member">kValidateErrorMinProperties</ref>);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memberCount<sp/>&gt;<sp/>maxProperties_)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a3494e9d2bff94979649e186aba71b32e" kindref="member">TooManyProperties</ref>(memberCount,<sp/>maxProperties_);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa179693cbb5ea15f0242e37588e99edf6" kindref="member">kValidateErrorMaxProperties</ref>);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasDependencies_)<sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1ab3cf4b9fe450ff76f52d70a2888f0342" kindref="member">StartDependencyErrors</ref>();</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>sourceIndex<sp/>=<sp/>0;<sp/>sourceIndex<sp/>&lt;<sp/>propertyCount_;<sp/>sourceIndex++)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Property&amp;<sp/><ref refid="pointer_8h_1adb82dfe18535e9a30aa97d275f82bd55" kindref="member">source</ref><sp/>=<sp/>properties_[sourceIndex];</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1a3e58787498af48ecceb97c47fb592d47" kindref="member">propertyExist</ref>[sourceIndex])<sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1adb82dfe18535e9a30aa97d275f82bd55" kindref="member">source</ref>.dependencies)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1ae312aea74718dda0411af023c0c78ef6" kindref="member">StartMissingDependentProperties</ref>();</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>targetIndex<sp/>=<sp/>0;<sp/>targetIndex<sp/>&lt;<sp/>propertyCount_;<sp/>targetIndex++)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1adb82dfe18535e9a30aa97d275f82bd55" kindref="member">source</ref>.dependencies[targetIndex]<sp/>&amp;&amp;<sp/>!context.<ref refid="structinternal_1_1_schema_validation_context_1a3e58787498af48ecceb97c47fb592d47" kindref="member">propertyExist</ref>[targetIndex])</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a2e9e0b2f67467a62642e37e839f689c5" kindref="member">AddMissingDependentProperty</ref>(properties_[targetIndex].name);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a05af3199b8011a3476dfd238fa958213" kindref="member">EndMissingDependentProperties</ref>(<ref refid="pointer_8h_1adb82dfe18535e9a30aa97d275f82bd55" kindref="member">source</ref>.name);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1adb82dfe18535e9a30aa97d275f82bd55" kindref="member">source</ref>.dependenciesSchema)<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>*<sp/>dependenciesValidator<sp/>=<sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a1d215b80511f602ebece5c83b875cdd9" kindref="member">validators</ref>[<ref refid="pointer_8h_1adb82dfe18535e9a30aa97d275f82bd55" kindref="member">source</ref>.dependenciesValidatorIndex];</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dependenciesValidator-&gt;<ref refid="classinternal_1_1_i_schema_validator_1a94f61f24b1447497279ef12ee0127285" kindref="member">IsValid</ref>())</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a4b43ba6e6a9c544dfc631297104dc508" kindref="member">AddDependencySchemaError</ref>(<ref refid="pointer_8h_1adb82dfe18535e9a30aa97d275f82bd55" kindref="member">source</ref>.name,<sp/>dependenciesValidator);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a817c1e3e9cc62603997a2fcdc564820b" kindref="member">EndDependencyErrors</ref>())</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa2f81ab754a29330709c24110a2e895c8" kindref="member">kValidateErrorDependencies</ref>);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053" refid="classinternal_1_1_schema_1a094fbac3c04493aae304ef3011866f34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a094fbac3c04493aae304ef3011866f34" kindref="member">StartArray</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1a213dd0b8a746b1548bb28b12a17c2c1e" kindref="member">arrayElementIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1af18fc4ef754e8a52732e152854f06341" kindref="member">inArray</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>we<sp/>note<sp/>that<sp/>we<sp/>are<sp/>in<sp/>an<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kArraySchemaType)))<sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisallowedType(context,<sp/>GetArrayString());</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa5504bec97bd2ef15efac9ff5b0a6e8fa" kindref="member">kValidateErrorType</ref>);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateParallelValidator(context);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065" refid="classinternal_1_1_schema_1a7cae24caa7c2de31e7c5c07d23c737b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a7cae24caa7c2de31e7c5c07d23c737b3" kindref="member">EndArray</ref>(<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">Context</ref>&amp;<sp/>context,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>elementCount)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1af18fc4ef754e8a52732e152854f06341" kindref="member">inArray</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementCount<sp/>&lt;<sp/>minItems_)<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1afc144690ba0e24636a72f541efd32c3b" kindref="member">TooFewItems</ref>(elementCount,<sp/>minItems_);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aad31b3292fb68a14016514736b076200c" kindref="member">kValidateErrorMinItems</ref>);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementCount<sp/>&gt;<sp/>maxItems_)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structinternal_1_1_schema_validation_context_1ad85d300184c10bf45b0852b6b26d118d" kindref="member">error_handler</ref>.<ref refid="classinternal_1_1_i_validation_error_handler_1a9371ca15622897a429971f69c07c47ef" kindref="member">TooManyItems</ref>(elementCount,<sp/>maxItems_);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa9acbcf73fe6a65bd23108a2dbc945cff" kindref="member">kValidateErrorMaxItems</ref>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081" refid="classinternal_1_1_schema_1abfd6b8cdee14e45a45ae4c557357071b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a8976b6d7e2a885483d0b51d941019340" kindref="member">ValueType</ref>&amp;<sp/><ref refid="classinternal_1_1_schema_1abfd6b8cdee14e45a45ae4c557357071b" kindref="member">GetValidateErrorKeyword</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref><sp/>validateErrorCode)<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(validateErrorCode)<sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aab8cf6f0be86047d0bf345f25dac31f4c" kindref="member">kValidateErrorMultipleOf</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMultipleOfString();</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa933fe947a713d741c3dcdcd7cae96b35" kindref="member">kValidateErrorMaximum</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMaximumString();</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3fca29f33702d8d98135b849c5f05f00" kindref="member">kValidateErrorExclusiveMaximum</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMaximumString();<sp/></highlight><highlight class="comment">//<sp/>Same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaa5f0cf3faa2e08c359cfcd6d151d76e9" kindref="member">kValidateErrorMinimum</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMinimumString();</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa1722fc952e01a7a858d954c08e382d65" kindref="member">kValidateErrorExclusiveMinimum</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMinimumString();<sp/></highlight><highlight class="comment">//<sp/>Same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa6825de2427572de01bd121c9fffcee76" kindref="member">kValidateErrorMaxLength</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMaxLengthString();</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa58e6e01eef18ea0af4763abd84128790" kindref="member">kValidateErrorMinLength</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMinLengthString();</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa86bde2af1a18d73a533ba8e2f5971879" kindref="member">kValidateErrorPattern</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetPatternString();</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa9acbcf73fe6a65bd23108a2dbc945cff" kindref="member">kValidateErrorMaxItems</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMaxItemsString();</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aad31b3292fb68a14016514736b076200c" kindref="member">kValidateErrorMinItems</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMinItemsString();</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa35159c760856953cbd62258140d8d498" kindref="member">kValidateErrorUniqueItems</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetUniqueItemsString();</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa17861cca8a0ab2a0685f3b7804f67303" kindref="member">kValidateErrorAdditionalItems</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetAdditionalItemsString();</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa179693cbb5ea15f0242e37588e99edf6" kindref="member">kValidateErrorMaxProperties</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMaxPropertiesString();</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa017c1ccb7febfaff42115fc256753fb6" kindref="member">kValidateErrorMinProperties</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMinPropertiesString();</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa2dc93a549f16b70911e6399c61a1aec4" kindref="member">kValidateErrorRequired</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetRequiredString();</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aae02b299a3f5db48400e7c1987201d2ca" kindref="member">kValidateErrorAdditionalProperties</ref>:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetAdditionalPropertiesString();</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaecdd1b884cbacca0213b36def4e1feaf" kindref="member">kValidateErrorPatternProperties</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetPatternPropertiesString();</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa2f81ab754a29330709c24110a2e895c8" kindref="member">kValidateErrorDependencies</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetDependenciesString();</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3c12e9cbc8a479b77776ceccbda4c289" kindref="member">kValidateErrorEnum</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetEnumString();</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa5504bec97bd2ef15efac9ff5b0a6e8fa" kindref="member">kValidateErrorType</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetTypeString();</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa56466697ca410e5ddc2c7fabe11f3132" kindref="member">kValidateErrorOneOf</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetOneOfString();</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa1bbc2293748b2e80415c77c7a6a069f9" kindref="member">kValidateErrorOneOfMatch</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetOneOfString();<sp/></highlight><highlight class="comment">//<sp/>Same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaef48f9db2382e3308b823f078c73bce4" kindref="member">kValidateErrorAllOf</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetAllOfString();</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa7b821605f3eb4ec77e2c42204b3957cf" kindref="member">kValidateErrorAnyOf</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetAnyOfString();</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aadd079998cffcae99da28675a5742327d" kindref="member">kValidateErrorNot</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetNotString();</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetNullString();</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>functions<sp/>for<sp/>string<sp/>literal<sp/>according<sp/>to<sp/>Ch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_STRING_(name,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="1121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ValueType&amp;<sp/>Get##name##String()<sp/>{\</highlight></codeline>
<codeline lineno="1122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>Ch<sp/>s[]<sp/>=<sp/>{<sp/>__VA_ARGS__,<sp/>&apos;\0&apos;<sp/>};\</highlight></codeline>
<codeline lineno="1123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>ValueType<sp/>v(s,<sp/>static_cast&lt;SizeType&gt;(sizeof(s)<sp/>/<sp/>sizeof(Ch)<sp/>-<sp/>1));\</highlight></codeline>
<codeline lineno="1124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>v;\</highlight></codeline>
<codeline lineno="1125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(<ref refid="classinternal_1_1_schema_1acd4fa9c33c9ef22a26ba160fdc1d78da" kindref="member">Null</ref>,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Boolean,<sp/>&apos;b&apos;,<sp/>&apos;o&apos;,<sp/>&apos;o&apos;,<sp/>&apos;l&apos;,<sp/>&apos;e&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;n&apos;)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Object,<sp/>&apos;o&apos;,<sp/>&apos;b&apos;,<sp/>&apos;j&apos;,<sp/>&apos;e&apos;,<sp/>&apos;c&apos;,<sp/>&apos;t&apos;)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Array,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;r&apos;,<sp/>&apos;r&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;y&apos;)</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(<ref refid="classinternal_1_1_schema_1a8e652cbc67fa34181c3fd813c38d5280" kindref="member">String</ref>,<sp/>&apos;s&apos;,<sp/>&apos;t&apos;,<sp/>&apos;r&apos;,<sp/>&apos;i&apos;,<sp/>&apos;n&apos;,<sp/>&apos;g&apos;)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Number,<sp/>&apos;n&apos;,<sp/>&apos;u&apos;,<sp/>&apos;m&apos;,<sp/>&apos;b&apos;,<sp/>&apos;e&apos;,<sp/>&apos;r&apos;)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Integer,<sp/>&apos;i&apos;,<sp/>&apos;n&apos;,<sp/>&apos;t&apos;,<sp/>&apos;e&apos;,<sp/>&apos;g&apos;,<sp/>&apos;e&apos;,<sp/>&apos;r&apos;)</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>,<sp/>&apos;t&apos;,<sp/>&apos;y&apos;,<sp/>&apos;p&apos;,<sp/>&apos;e&apos;)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Enum,<sp/>&apos;e&apos;,<sp/>&apos;n&apos;,<sp/>&apos;u&apos;,<sp/>&apos;m&apos;)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(AllOf,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;l&apos;,<sp/>&apos;l&apos;,<sp/>&apos;O&apos;,<sp/>&apos;f&apos;)</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(AnyOf,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;n&apos;,<sp/>&apos;y&apos;,<sp/>&apos;O&apos;,<sp/>&apos;f&apos;)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(OneOf,<sp/>&apos;o&apos;,<sp/>&apos;n&apos;,<sp/>&apos;e&apos;,<sp/>&apos;O&apos;,<sp/>&apos;f&apos;)</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Not,<sp/>&apos;n&apos;,<sp/>&apos;o&apos;,<sp/>&apos;t&apos;)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Properties,<sp/>&apos;p&apos;,<sp/>&apos;r&apos;,<sp/>&apos;o&apos;,<sp/>&apos;p&apos;,<sp/>&apos;e&apos;,<sp/>&apos;r&apos;,<sp/>&apos;t&apos;,<sp/>&apos;i&apos;,<sp/>&apos;e&apos;,<sp/>&apos;s&apos;)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Required,<sp/>&apos;r&apos;,<sp/>&apos;e&apos;,<sp/>&apos;q&apos;,<sp/>&apos;u&apos;,<sp/>&apos;i&apos;,<sp/>&apos;r&apos;,<sp/>&apos;e&apos;,<sp/>&apos;d&apos;)</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Dependencies,<sp/>&apos;d&apos;,<sp/>&apos;e&apos;,<sp/>&apos;p&apos;,<sp/>&apos;e&apos;,<sp/>&apos;n&apos;,<sp/>&apos;d&apos;,<sp/>&apos;e&apos;,<sp/>&apos;n&apos;,<sp/>&apos;c&apos;,<sp/>&apos;i&apos;,<sp/>&apos;e&apos;,<sp/>&apos;s&apos;)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(PatternProperties,<sp/>&apos;p&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;t&apos;,<sp/>&apos;t&apos;,<sp/>&apos;e&apos;,<sp/>&apos;r&apos;,<sp/>&apos;n&apos;,<sp/>&apos;P&apos;,<sp/>&apos;r&apos;,<sp/>&apos;o&apos;,<sp/>&apos;p&apos;,<sp/>&apos;e&apos;,<sp/>&apos;r&apos;,<sp/>&apos;t&apos;,<sp/>&apos;i&apos;,<sp/>&apos;e&apos;,<sp/>&apos;s&apos;)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(AdditionalProperties,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;d&apos;,<sp/>&apos;d&apos;,<sp/>&apos;i&apos;,<sp/>&apos;t&apos;,<sp/>&apos;i&apos;,<sp/>&apos;o&apos;,<sp/>&apos;n&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;l&apos;,<sp/>&apos;P&apos;,<sp/>&apos;r&apos;,<sp/>&apos;o&apos;,<sp/>&apos;p&apos;,<sp/>&apos;e&apos;,<sp/>&apos;r&apos;,<sp/>&apos;t&apos;,<sp/>&apos;i&apos;,<sp/>&apos;e&apos;,<sp/>&apos;s&apos;)</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(MinProperties,<sp/>&apos;m&apos;,<sp/>&apos;i&apos;,<sp/>&apos;n&apos;,<sp/>&apos;P&apos;,<sp/>&apos;r&apos;,<sp/>&apos;o&apos;,<sp/>&apos;p&apos;,<sp/>&apos;e&apos;,<sp/>&apos;r&apos;,<sp/>&apos;t&apos;,<sp/>&apos;i&apos;,<sp/>&apos;e&apos;,<sp/>&apos;s&apos;)</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(MaxProperties,<sp/>&apos;m&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;x&apos;,<sp/>&apos;P&apos;,<sp/>&apos;r&apos;,<sp/>&apos;o&apos;,<sp/>&apos;p&apos;,<sp/>&apos;e&apos;,<sp/>&apos;r&apos;,<sp/>&apos;t&apos;,<sp/>&apos;i&apos;,<sp/>&apos;e&apos;,<sp/>&apos;s&apos;)</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Items,<sp/>&apos;i&apos;,<sp/>&apos;t&apos;,<sp/>&apos;e&apos;,<sp/>&apos;m&apos;,<sp/>&apos;s&apos;)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(MinItems,<sp/>&apos;m&apos;,<sp/>&apos;i&apos;,<sp/>&apos;n&apos;,<sp/>&apos;I&apos;,<sp/>&apos;t&apos;,<sp/>&apos;e&apos;,<sp/>&apos;m&apos;,<sp/>&apos;s&apos;)</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(MaxItems,<sp/>&apos;m&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;x&apos;,<sp/>&apos;I&apos;,<sp/>&apos;t&apos;,<sp/>&apos;e&apos;,<sp/>&apos;m&apos;,<sp/>&apos;s&apos;)</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(AdditionalItems,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;d&apos;,<sp/>&apos;d&apos;,<sp/>&apos;i&apos;,<sp/>&apos;t&apos;,<sp/>&apos;i&apos;,<sp/>&apos;o&apos;,<sp/>&apos;n&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;l&apos;,<sp/>&apos;I&apos;,<sp/>&apos;t&apos;,<sp/>&apos;e&apos;,<sp/>&apos;m&apos;,<sp/>&apos;s&apos;)</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(UniqueItems,<sp/>&apos;u&apos;,<sp/>&apos;n&apos;,<sp/>&apos;i&apos;,<sp/>&apos;q&apos;,<sp/>&apos;u&apos;,<sp/>&apos;e&apos;,<sp/>&apos;I&apos;,<sp/>&apos;t&apos;,<sp/>&apos;e&apos;,<sp/>&apos;m&apos;,<sp/>&apos;s&apos;)</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(MinLength,<sp/>&apos;m&apos;,<sp/>&apos;i&apos;,<sp/>&apos;n&apos;,<sp/>&apos;L&apos;,<sp/>&apos;e&apos;,<sp/>&apos;n&apos;,<sp/>&apos;g&apos;,<sp/>&apos;t&apos;,<sp/>&apos;h&apos;)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(MaxLength,<sp/>&apos;m&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;x&apos;,<sp/>&apos;L&apos;,<sp/>&apos;e&apos;,<sp/>&apos;n&apos;,<sp/>&apos;g&apos;,<sp/>&apos;t&apos;,<sp/>&apos;h&apos;)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Pattern,<sp/>&apos;p&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;t&apos;,<sp/>&apos;t&apos;,<sp/>&apos;e&apos;,<sp/>&apos;r&apos;,<sp/>&apos;n&apos;)</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Minimum,<sp/>&apos;m&apos;,<sp/>&apos;i&apos;,<sp/>&apos;n&apos;,<sp/>&apos;i&apos;,<sp/>&apos;m&apos;,<sp/>&apos;u&apos;,<sp/>&apos;m&apos;)</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Maximum,<sp/>&apos;m&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;x&apos;,<sp/>&apos;i&apos;,<sp/>&apos;m&apos;,<sp/>&apos;u&apos;,<sp/>&apos;m&apos;)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(ExclusiveMinimum,<sp/>&apos;e&apos;,<sp/>&apos;x&apos;,<sp/>&apos;c&apos;,<sp/>&apos;l&apos;,<sp/>&apos;u&apos;,<sp/>&apos;s&apos;,<sp/>&apos;i&apos;,<sp/>&apos;v&apos;,<sp/>&apos;e&apos;,<sp/>&apos;M&apos;,<sp/>&apos;i&apos;,<sp/>&apos;n&apos;,<sp/>&apos;i&apos;,<sp/>&apos;m&apos;,<sp/>&apos;u&apos;,<sp/>&apos;m&apos;)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(ExclusiveMaximum,<sp/>&apos;e&apos;,<sp/>&apos;x&apos;,<sp/>&apos;c&apos;,<sp/>&apos;l&apos;,<sp/>&apos;u&apos;,<sp/>&apos;s&apos;,<sp/>&apos;i&apos;,<sp/>&apos;v&apos;,<sp/>&apos;e&apos;,<sp/>&apos;M&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;x&apos;,<sp/>&apos;i&apos;,<sp/>&apos;m&apos;,<sp/>&apos;u&apos;,<sp/>&apos;m&apos;)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(MultipleOf,<sp/>&apos;m&apos;,<sp/>&apos;u&apos;,<sp/>&apos;l&apos;,<sp/>&apos;t&apos;,<sp/>&apos;i&apos;,<sp/>&apos;p&apos;,<sp/>&apos;l&apos;,<sp/>&apos;e&apos;,<sp/>&apos;O&apos;,<sp/>&apos;f&apos;)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(DefaultValue,<sp/>&apos;d&apos;,<sp/>&apos;e&apos;,<sp/>&apos;f&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;u&apos;,<sp/>&apos;l&apos;,<sp/>&apos;t&apos;)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Ref,<sp/>&apos;$&apos;,<sp/>&apos;r&apos;,<sp/>&apos;e&apos;,<sp/>&apos;f&apos;)</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Id,<sp/>&apos;i&apos;,<sp/>&apos;d&apos;)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(SchemeEnd,<sp/>&apos;:&apos;)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(AuthStart,<sp/>&apos;/&apos;,<sp/>&apos;/&apos;)</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(QueryStart,<sp/>&apos;?&apos;)</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(FragStart,<sp/>&apos;</highlight><highlight class="preprocessor">#&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Slash,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Dot,<sp/>&apos;.&apos;)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>RAPIDJSON_STRING_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>SchemaValueType<sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kNullSchemaType,</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kBooleanSchemaType,</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kObjectSchemaType,</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kArraySchemaType,</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kStringSchemaType,</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kNumberSchemaType,</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kIntegerSchemaType,</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kTotalSchemaType</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_USE_INTERNALREGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_generic_regex" kindref="compound">internal::GenericRegex&lt;EncodingType, AllocatorType&gt;</ref><sp/>RegexType;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>RAPIDJSON_SCHEMA_USE_STDREGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::basic_regex&lt;Ch&gt;<sp/>RegexType;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>RegexType;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SchemaArray<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SchemaArray()<sp/>:<sp/>schemas(),<sp/>count()<sp/>{}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SchemaArray()<sp/>{<sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">AllocatorType::Free</ref>(schemas);<sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1ac2556ebf7a7db971e1c1c0f76eb5786e" kindref="member">SchemaType</ref>**<sp/>schemas;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>begin;<sp/></highlight><highlight class="comment">//<sp/>begin<sp/>index<sp/>of<sp/>context.validators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V2&gt;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddUniqueElement(V1&amp;<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V2&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V1::ConstValueIterator<sp/>itr<sp/>=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.Begin();<sp/>itr<sp/>!=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.End();<sp/>++itr)</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*itr<sp/>==<sp/>v)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V1<sp/>c(v,<sp/>*allocator_);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>.PushBack(c,<sp/>*allocator_);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>*<sp/>GetMember(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">ValueType::ConstMemberIterator</ref><sp/>itr<sp/>=<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>.FindMember(name);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itr<sp/>!=<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>.MemberEnd()<sp/>?<sp/>&amp;(itr-&gt;value)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssignIfExist(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>name))</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsBool())</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>v-&gt;GetBool();</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssignIfExist(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>name))</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsUint64()<sp/>&amp;&amp;<sp/>v-&gt;GetUint64()<sp/>&lt;=<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>(~0))</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(v-&gt;GetUint64());</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssignIfExist(SchemaArray&amp;<sp/>out,<sp/>SchemaDocumentType&amp;<sp/>schemaDocument,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a13d7dbba6e4a77b10862546777c5aae8" kindref="member">PointerType</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>document)<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>*<sp/>v<sp/>=<sp/>GetMember(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/>name))<sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsArray()<sp/>&amp;&amp;<sp/>v-&gt;Size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1a13d7dbba6e4a77b10862546777c5aae8" kindref="member">PointerType</ref><sp/>q<sp/>=<sp/>p.Append(name,<sp/>allocator_);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.count<sp/>=<sp/>v-&gt;Size();</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.schemas<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="class_schema" kindref="compound">Schema</ref>**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator_-&gt;Malloc(out.count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_schema" kindref="compound">Schema</ref>*)));</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(out.schemas,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_schema" kindref="compound">Schema</ref>*)*<sp/>out.count);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>out.count;<sp/>i++)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument.CreateSchema(&amp;out.schemas[i],<sp/>q.Append(i,<sp/>allocator_),<sp/>(*v)[i],<sp/>document,<sp/>id_);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.begin<sp/>=<sp/>validatorCount_;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validatorCount_<sp/>+=<sp/>out.count;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_USE_INTERNALREGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>RegexType*<sp/>CreatePattern(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>.IsString())<sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegexType*<sp/>r<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(allocator_-&gt;Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(RegexType)))<sp/>RegexType(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>.GetString(),<sp/>allocator_);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!r-&gt;IsValid())<sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;~RegexType();</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">AllocatorType::Free</ref>(r);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsPatternMatch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RegexType*<sp/>pattern,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a98043fca39adbf8b42e7472e3d80d6fa" kindref="member">Ch</ref><sp/>*str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GenericRegexSearch&lt;RegexType&gt;<sp/>rs(*pattern);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rs.Search(str);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>RAPIDJSON_SCHEMA_USE_STDREGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>RegexType*<sp/>CreatePattern(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>.IsString())<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegexType<sp/>*r<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">RegexType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator_-&gt;Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(RegexType)));</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(r)<sp/>RegexType(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>.GetString(),<sp/>std::size_t(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>.GetStringLength()),<sp/>std::regex_constants::ECMAScript);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::regex_error&amp;)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">AllocatorType::Free</ref>(r);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsPatternMatch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RegexType*<sp/>pattern,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a98043fca39adbf8b42e7472e3d80d6fa" kindref="member">Ch</ref><sp/>*str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::match_results&lt;const<sp/>Ch*&gt;<sp/>r;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::regex_search(str,<sp/>str<sp/>+<sp/>length,<sp/>r,<sp/>*pattern);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>RegexType*<sp/>CreatePattern(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsPatternMatch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RegexType*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a98043fca39adbf8b42e7472e3d80d6fa" kindref="member">Ch</ref><sp/>*,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RAPIDJSON_SCHEMA_USE_STDREGEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(type<sp/>==<sp/>GetNullString()<sp/><sp/><sp/>)<sp/>type_<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>kNullSchemaType;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>GetBooleanString())<sp/>type_<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>kBooleanSchemaType;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>GetObjectString()<sp/>)<sp/>type_<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>kObjectSchemaType;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>GetArrayString()<sp/><sp/>)<sp/>type_<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>kArraySchemaType;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>GetStringString()<sp/>)<sp/>type_<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>kStringSchemaType;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>GetIntegerString())<sp/>type_<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>kIntegerSchemaType;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>GetNumberString()<sp/>)<sp/>type_<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>kNumberSchemaType)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>kIntegerSchemaType);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CreateParallelValidator(<ref refid="classinternal_1_1_schema_1ac3f54abfefe300c5610c1205869cfd66" kindref="member">Context</ref>&amp;<sp/>context)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enum_<sp/>||<sp/>context.arrayUniqueness)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.hasher<sp/>=<sp/>context.factory.CreateHasher();</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validatorCount_)<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(context.validators<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.validators<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ISchemaValidator**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(context.factory.MallocState(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ISchemaValidator*)<sp/>*<sp/>validatorCount_));</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.validatorCount<sp/>=<sp/>validatorCount_;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>return<sp/>after<sp/>first<sp/>failure<sp/>for<sp/>these<sp/>sub-validators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allOf_.schemas)</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateSchemaValidators(context,<sp/>allOf_,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anyOf_.schemas)</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateSchemaValidators(context,<sp/>anyOf_,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oneOf_.schemas)</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateSchemaValidators(context,<sp/>oneOf_,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not_)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.validators[notValidatorIndex_]<sp/>=<sp/>context.factory.CreateSchemaValidator(*not_,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasSchemaDependencies_)<sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>propertyCount_;<sp/>i++)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties_[i].dependenciesSchema)</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.validators[properties_[i].dependenciesValidatorIndex]<sp/>=<sp/>context.factory.CreateSchemaValidator(*properties_[i].dependenciesSchema,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateSchemaValidators(<ref refid="classinternal_1_1_schema_1ac3f54abfefe300c5610c1205869cfd66" kindref="member">Context</ref>&amp;<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaArray&amp;<sp/>schemas,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inheritContinueOnErrors)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>schemas.count;<sp/>i++)</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.validators[schemas.begin<sp/>+<sp/>i]<sp/>=<sp/>context.factory.CreateSchemaValidator(*schemas.schemas[i],<sp/>inheritContinueOnErrors);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>O(n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FindPropertyIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>name,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>*<sp/>outIndex)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len<sp/>=<sp/>name.GetStringLength();</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1a98043fca39adbf8b42e7472e3d80d6fa" kindref="member">Ch</ref>*<sp/>str<sp/>=<sp/>name.GetString();</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>propertyCount_;<sp/>index++)</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties_[index].name.GetStringLength()<sp/>==<sp/>len<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::memcmp(properties_[index].name.GetString(),<sp/>str,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classinternal_1_1_schema_1a98043fca39adbf8b42e7472e3d80d6fa" kindref="member">Ch</ref>)<sp/>*<sp/>len)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outIndex<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CheckInt(<ref refid="classinternal_1_1_schema_1ac3f54abfefe300c5610c1205869cfd66" kindref="member">Context</ref>&amp;<sp/>context,<sp/><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>kIntegerSchemaType)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>kNumberSchemaType))))<sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisallowedType(context,<sp/>GetIntegerString());</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa5504bec97bd2ef15efac9ff5b0a6e8fa" kindref="member">kValidateErrorType</ref>);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!minimum_.IsNull())<sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minimum_.IsInt64())<sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exclusiveMinimum_<sp/>?<sp/>i<sp/>&lt;=<sp/>minimum_.GetInt64()<sp/>:<sp/>i<sp/>&lt;<sp/>minimum_.GetInt64())<sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.error_handler.BelowMinimum(i,<sp/>minimum_,<sp/>exclusiveMinimum_);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(exclusiveMinimum_<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa1722fc952e01a7a858d954c08e382d65" kindref="member">kValidateErrorExclusiveMinimum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaa5f0cf3faa2e08c359cfcd6d151d76e9" kindref="member">kValidateErrorMinimum</ref>);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minimum_.IsUint64())<sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.error_handler.BelowMinimum(i,<sp/>minimum_,<sp/>exclusiveMinimum_);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(exclusiveMinimum_<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa1722fc952e01a7a858d954c08e382d65" kindref="member">kValidateErrorExclusiveMinimum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaa5f0cf3faa2e08c359cfcd6d151d76e9" kindref="member">kValidateErrorMinimum</ref>);<sp/></highlight><highlight class="comment">//<sp/>i<sp/>&lt;=<sp/>max(int64_t)<sp/>&lt;<sp/>minimum.GetUint64()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CheckDoubleMinimum(context,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i)))</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!maximum_.IsNull())<sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maximum_.IsInt64())<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exclusiveMaximum_<sp/>?<sp/>i<sp/>&gt;=<sp/>maximum_.GetInt64()<sp/>:<sp/>i<sp/>&gt;<sp/>maximum_.GetInt64())<sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.error_handler.AboveMaximum(i,<sp/>maximum_,<sp/>exclusiveMaximum_);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(exclusiveMaximum_<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3fca29f33702d8d98135b849c5f05f00" kindref="member">kValidateErrorExclusiveMaximum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa933fe947a713d741c3dcdcd7cae96b35" kindref="member">kValidateErrorMaximum</ref>);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maximum_.IsUint64())<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>i<sp/>&lt;=<sp/>max(int64_t)<sp/>&lt;<sp/>maximum_.GetUint64()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CheckDoubleMaximum(context,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i)))</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!multipleOf_.IsNull())<sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multipleOf_.IsUint64())<sp/>{</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i<sp/>&gt;=<sp/>0<sp/>?<sp/>i<sp/>:<sp/>-i)<sp/>%<sp/>multipleOf_.GetUint64()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.error_handler.NotMultipleOf(i,<sp/>multipleOf_);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aab8cf6f0be86047d0bf345f25dac31f4c" kindref="member">kValidateErrorMultipleOf</ref>);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CheckDoubleMultipleOf(context,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i)))</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CheckUint(<ref refid="classinternal_1_1_schema_1ac3f54abfefe300c5610c1205869cfd66" kindref="member">Context</ref>&amp;<sp/>context,<sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>kIntegerSchemaType)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>kNumberSchemaType))))<sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisallowedType(context,<sp/>GetIntegerString());</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa5504bec97bd2ef15efac9ff5b0a6e8fa" kindref="member">kValidateErrorType</ref>);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!minimum_.IsNull())<sp/>{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minimum_.IsUint64())<sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exclusiveMinimum_<sp/>?<sp/>i<sp/>&lt;=<sp/>minimum_.GetUint64()<sp/>:<sp/>i<sp/>&lt;<sp/>minimum_.GetUint64())<sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.error_handler.BelowMinimum(i,<sp/>minimum_,<sp/>exclusiveMinimum_);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(exclusiveMinimum_<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa1722fc952e01a7a858d954c08e382d65" kindref="member">kValidateErrorExclusiveMinimum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaa5f0cf3faa2e08c359cfcd6d151d76e9" kindref="member">kValidateErrorMinimum</ref>);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minimum_.IsInt64())</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>i<sp/>&gt;=<sp/>0<sp/>&gt;<sp/>minimum.Getint64()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CheckDoubleMinimum(context,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i)))</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!maximum_.IsNull())<sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maximum_.IsUint64())<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exclusiveMaximum_<sp/>?<sp/>i<sp/>&gt;=<sp/>maximum_.GetUint64()<sp/>:<sp/>i<sp/>&gt;<sp/>maximum_.GetUint64())<sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.error_handler.AboveMaximum(i,<sp/>maximum_,<sp/>exclusiveMaximum_);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(exclusiveMaximum_<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3fca29f33702d8d98135b849c5f05f00" kindref="member">kValidateErrorExclusiveMaximum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa933fe947a713d741c3dcdcd7cae96b35" kindref="member">kValidateErrorMaximum</ref>);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maximum_.IsInt64())<sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.error_handler.AboveMaximum(i,<sp/>maximum_,<sp/>exclusiveMaximum_);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(exclusiveMaximum_<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3fca29f33702d8d98135b849c5f05f00" kindref="member">kValidateErrorExclusiveMaximum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa933fe947a713d741c3dcdcd7cae96b35" kindref="member">kValidateErrorMaximum</ref>);<sp/></highlight><highlight class="comment">//<sp/>i<sp/>&gt;=<sp/>0<sp/>&gt;<sp/>maximum_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CheckDoubleMaximum(context,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i)))</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!multipleOf_.IsNull())<sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multipleOf_.IsUint64())<sp/>{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>multipleOf_.GetUint64()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.error_handler.NotMultipleOf(i,<sp/>multipleOf_);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aab8cf6f0be86047d0bf345f25dac31f4c" kindref="member">kValidateErrorMultipleOf</ref>);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CheckDoubleMultipleOf(context,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i)))</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CheckDoubleMinimum(<ref refid="classinternal_1_1_schema_1ac3f54abfefe300c5610c1205869cfd66" kindref="member">Context</ref>&amp;<sp/>context,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exclusiveMinimum_<sp/>?<sp/>d<sp/>&lt;=<sp/>minimum_.GetDouble()<sp/>:<sp/>d<sp/>&lt;<sp/>minimum_.GetDouble())<sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.error_handler.BelowMinimum(d,<sp/>minimum_,<sp/>exclusiveMinimum_);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(exclusiveMinimum_<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa1722fc952e01a7a858d954c08e382d65" kindref="member">kValidateErrorExclusiveMinimum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaa5f0cf3faa2e08c359cfcd6d151d76e9" kindref="member">kValidateErrorMinimum</ref>);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CheckDoubleMaximum(<ref refid="classinternal_1_1_schema_1ac3f54abfefe300c5610c1205869cfd66" kindref="member">Context</ref>&amp;<sp/>context,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exclusiveMaximum_<sp/>?<sp/>d<sp/>&gt;=<sp/>maximum_.GetDouble()<sp/>:<sp/>d<sp/>&gt;<sp/>maximum_.GetDouble())<sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.error_handler.AboveMaximum(d,<sp/>maximum_,<sp/>exclusiveMaximum_);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(exclusiveMaximum_<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3fca29f33702d8d98135b849c5f05f00" kindref="member">kValidateErrorExclusiveMaximum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa933fe947a713d741c3dcdcd7cae96b35" kindref="member">kValidateErrorMaximum</ref>);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CheckDoubleMultipleOf(<ref refid="classinternal_1_1_schema_1ac3f54abfefe300c5610c1205869cfd66" kindref="member">Context</ref>&amp;<sp/>context,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>std::abs(d),<sp/>b<sp/>=<sp/>std::abs(multipleOf_.GetDouble());</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q<sp/>=<sp/>std::floor(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>/<sp/>b);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>-<sp/>q<sp/>*<sp/>b;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.error_handler.NotMultipleOf(d,<sp/>multipleOf_);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aab8cf6f0be86047d0bf345f25dac31f4c" kindref="member">kValidateErrorMultipleOf</ref>);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DisallowedType(<ref refid="classinternal_1_1_schema_1ac3f54abfefe300c5610c1205869cfd66" kindref="member">Context</ref>&amp;<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>actualType)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1a2f8b106324878cdfc614df855e8bc6cc" kindref="member">ErrorHandler</ref>&amp;<sp/>eh<sp/>=<sp/>context.error_handler;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eh.StartDisallowedType();</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kNullSchemaType))<sp/>eh.AddExpectedType(GetNullString());</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kBooleanSchemaType))<sp/>eh.AddExpectedType(GetBooleanString());</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kObjectSchemaType))<sp/>eh.AddExpectedType(GetObjectString());</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kArraySchemaType))<sp/>eh.AddExpectedType(GetArrayString());</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kStringSchemaType))<sp/>eh.AddExpectedType(GetStringString());</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kNumberSchemaType))<sp/>eh.AddExpectedType(GetNumberString());</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kIntegerSchemaType))<sp/>eh.AddExpectedType(GetIntegerString());</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eh.EndDisallowedType(actualType);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Property<sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Property()<sp/>:<sp/>schema(),<sp/>dependenciesSchema(),<sp/>dependenciesValidatorIndex(),<sp/>dependencies(),<sp/>required(false)<sp/>{}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~Property()<sp/>{<sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">AllocatorType::Free</ref>(dependencies);<sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1ab3a07540a27d4cc2b0e260290c5c5771" kindref="member">SValue</ref><sp/>name;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1ac2556ebf7a7db971e1c1c0f76eb5786e" kindref="member">SchemaType</ref>*<sp/>schema;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1ac2556ebf7a7db971e1c1c0f76eb5786e" kindref="member">SchemaType</ref>*<sp/>dependenciesSchema;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>dependenciesValidatorIndex;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>dependencies;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>required;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PatternProperty<sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PatternProperty()<sp/>:<sp/>schema(),<sp/>pattern()<sp/>{}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~PatternProperty()<sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pattern)<sp/>{</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern-&gt;~RegexType();</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">AllocatorType::Free</ref>(pattern);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1ac2556ebf7a7db971e1c1c0f76eb5786e" kindref="member">SchemaType</ref>*<sp/>schema;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegexType*<sp/>pattern;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1a7af392edd81e610754cd2e6b4f82761c" kindref="member">AllocatorType</ref>*<sp/>allocator_;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1ab3a07540a27d4cc2b0e260290c5c5771" kindref="member">SValue</ref><sp/>uri_;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1a3b6cd85c3eeebe870cf8017d9d131d35" kindref="member">UriType</ref><sp/>id_;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1a13d7dbba6e4a77b10862546777c5aae8" kindref="member">PointerType</ref><sp/>pointer_;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1ac2556ebf7a7db971e1c1c0f76eb5786e" kindref="member">SchemaType</ref>*<sp/>typeless_;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>*<sp/>enum_;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>enumCount_;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>SchemaArray<sp/>allOf_;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>SchemaArray<sp/>anyOf_;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>SchemaArray<sp/>oneOf_;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1ac2556ebf7a7db971e1c1c0f76eb5786e" kindref="member">SchemaType</ref>*<sp/>not_;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>type_;<sp/></highlight><highlight class="comment">//<sp/>bitmask<sp/>of<sp/>kSchemaType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>validatorCount_;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>notValidatorIndex_;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>Property*<sp/>properties_;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1ac2556ebf7a7db971e1c1c0f76eb5786e" kindref="member">SchemaType</ref>*<sp/>additionalPropertiesSchema_;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>PatternProperty*<sp/>patternProperties_;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>patternPropertyCount_;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>propertyCount_;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>minProperties_;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>maxProperties_;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additionalProperties_;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasDependencies_;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasRequired_;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasSchemaDependencies_;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1ac2556ebf7a7db971e1c1c0f76eb5786e" kindref="member">SchemaType</ref>*<sp/>additionalItemsSchema_;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1ac2556ebf7a7db971e1c1c0f76eb5786e" kindref="member">SchemaType</ref>*<sp/>itemsList_;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema_1ac2556ebf7a7db971e1c1c0f76eb5786e" kindref="member">SchemaType</ref>**<sp/>itemsTuple_;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>itemsTupleCount_;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>minItems_;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>maxItems_;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additionalItems_;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>uniqueItems_;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>RegexType*<sp/>pattern_;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>minLength_;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>maxLength_;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1ab3a07540a27d4cc2b0e260290c5c5771" kindref="member">SValue</ref><sp/>minimum_;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1ab3a07540a27d4cc2b0e260290c5c5771" kindref="member">SValue</ref><sp/>maximum_;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_schema_1ab3a07540a27d4cc2b0e260290c5c5771" kindref="member">SValue</ref><sp/>multipleOf_;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusiveMinimum_;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusiveMaximum_;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>defaultValueLength_;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stack,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Ch&gt;</highlight></codeline>
<codeline lineno="1560" refid="structinternal_1_1_token_helper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_token_helper" kindref="compound">TokenHelper</ref><sp/>{</highlight></codeline>
<codeline lineno="1561" refid="structinternal_1_1_token_helper_1a7b1864bfe6d4014ba7a5114acb26b3ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_token_helper_1a7b1864bfe6d4014ba7a5114acb26b3ae" kindref="member">AppendIndexToken</ref>(<ref refid="classinternal_1_1_stack" kindref="compound">Stack</ref>&amp;<sp/>documentStack,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*documentStack.template<sp/>Push&lt;Ch&gt;()<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[21];</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>==<sp/>4<sp/>?<sp/><ref refid="namespaceinternal_1a90e3cb218b557548f361e99dc718b4b1" kindref="member">u32toa</ref>(index,<sp/>buffer)<sp/>:<sp/><ref refid="namespaceinternal_1a489150922c0320e4290b455bf3c6e36c" kindref="member">u64toa</ref>(index,<sp/>buffer))<sp/>-<sp/>buffer);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*documentStack.template<sp/>Push&lt;Ch&gt;()<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Ch</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(buffer[i]);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Partial<sp/>specialized<sp/>version<sp/>for<sp/>char<sp/>to<sp/>prevent<sp/>buffer<sp/>copying.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stack&gt;</highlight></codeline>
<codeline lineno="1572" refid="structinternal_1_1_token_helper_3_01_stack_00_01char_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal_1_1_token_helper" kindref="compound">TokenHelper</ref>&lt;<ref refid="classinternal_1_1_stack" kindref="compound">Stack</ref>,<sp/>char&gt;<sp/>{</highlight></codeline>
<codeline lineno="1573" refid="structinternal_1_1_token_helper_3_01_stack_00_01char_01_4_1a5d635eb7590e098c3340c9e5dcc72ae3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structinternal_1_1_token_helper_3_01_stack_00_01char_01_4_1a5d635eb7590e098c3340c9e5dcc72ae3" kindref="member">AppendIndexToken</ref>(<ref refid="classinternal_1_1_stack" kindref="compound">Stack</ref>&amp;<sp/>documentStack,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer<sp/>=<sp/>documentStack.template<sp/>Push&lt;char&gt;(1<sp/>+<sp/>10);<sp/></highlight><highlight class="comment">//<sp/>&apos;/&apos;<sp/>+<sp/>uint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>end<sp/>=<sp/><ref refid="namespaceinternal_1a90e3cb218b557548f361e99dc718b4b1" kindref="member">internal::u32toa</ref>(index,<sp/>buffer);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentStack.template<sp/>Pop&lt;char&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(10<sp/>-<sp/>(end<sp/>-<sp/>buffer)));</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer<sp/>=<sp/>documentStack.template<sp/>Push&lt;char&gt;(1<sp/>+<sp/>20);<sp/></highlight><highlight class="comment">//<sp/>&apos;/&apos;<sp/>+<sp/>uint64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>end<sp/>=<sp/><ref refid="namespaceinternal_1a489150922c0320e4290b455bf3c6e36c" kindref="member">internal::u64toa</ref>(index,<sp/>buffer);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentStack.template<sp/>Pop&lt;char&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(20<sp/>-<sp/>(end<sp/>-<sp/>buffer)));</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="comment">//<sp/>IGenericRemoteSchemaDocumentProvider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType&gt;</highlight></codeline>
<codeline lineno="1595" refid="class_i_generic_remote_schema_document_provider" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">IGenericRemoteSchemaDocumentProvider</ref><sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1597" refid="class_i_generic_remote_schema_document_provider_1acfcd5492c3df8ff56cd2d84d36cc0ceb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType::Ch<sp/><ref refid="class_i_generic_remote_schema_document_provider_1acfcd5492c3df8ff56cd2d84d36cc0ceb" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="1598" refid="class_i_generic_remote_schema_document_provider_1aefaefd0d3fc938b6a81634edf1646205" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f" kindref="member">SchemaDocumentType::ValueType</ref><sp/><ref refid="class_i_generic_remote_schema_document_provider_1aefaefd0d3fc938b6a81634edf1646205" kindref="member">ValueType</ref>;</highlight></codeline>
<codeline lineno="1599" refid="class_i_generic_remote_schema_document_provider_1a79476f0e0f4d51ca7244685698dadbd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType::AllocatorType<sp/><ref refid="class_i_generic_remote_schema_document_provider_1a79476f0e0f4d51ca7244685698dadbd0" kindref="member">AllocatorType</ref>;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601" refid="class_i_generic_remote_schema_document_provider_1a8465954888b127a2ef966ed01c3692bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_i_generic_remote_schema_document_provider_1a8465954888b127a2ef966ed01c3692bb" kindref="member">~IGenericRemoteSchemaDocumentProvider</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1602" refid="class_i_generic_remote_schema_document_provider_1af348980f793d9777abb9b7b6afcbfd93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaDocumentType*<sp/><ref refid="class_i_generic_remote_schema_document_provider_1af348980f793d9777abb9b7b6afcbfd93" kindref="member">GetRemoteDocument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_generic_remote_schema_document_provider_1acfcd5492c3df8ff56cd2d84d36cc0ceb" kindref="member">Ch</ref>*<sp/>uri,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1603" refid="class_i_generic_remote_schema_document_provider_1aca9690363ebaa9e6dd3a0629b0cb31b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaDocumentType*<sp/><ref refid="class_i_generic_remote_schema_document_provider_1aca9690363ebaa9e6dd3a0629b0cb31b2" kindref="member">GetRemoteDocument</ref>(<ref refid="class_generic_uri" kindref="compound">GenericUri&lt;ValueType, AllocatorType&gt;</ref><sp/>uri)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_i_generic_remote_schema_document_provider_1aca9690363ebaa9e6dd3a0629b0cb31b2" kindref="member">GetRemoteDocument</ref>(uri.<ref refid="class_generic_uri_1aa01f0e6bc010e7f41e91f11351b7a1a4" kindref="member">GetBaseString</ref>(),<sp/>uri.<ref refid="class_generic_uri_1a87075603b398cc925d04180343443aca" kindref="member">GetBaseStringLength</ref>());<sp/>}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="comment">//<sp/>GenericSchemaDocument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/>CrtAllocator&gt;</highlight></codeline>
<codeline lineno="1619" refid="class_generic_schema_document" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref><sp/>{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1621" refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ValueT<sp/><ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref>;</highlight></codeline>
<codeline lineno="1622" refid="class_generic_schema_document_1aa53ca323efce50f88aea6fa0d03e9785" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">IGenericRemoteSchemaDocumentProvider&lt;GenericSchemaDocument&gt;</ref><sp/><ref refid="class_generic_schema_document_1aa53ca323efce50f88aea6fa0d03e9785" kindref="member">IRemoteSchemaDocumentProviderType</ref>;</highlight></codeline>
<codeline lineno="1623" refid="class_generic_schema_document_1ac0d88adf8c86917d8bc9563ffdab6a6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref><sp/><ref refid="class_generic_schema_document_1ac0d88adf8c86917d8bc9563ffdab6a6d" kindref="member">AllocatorType</ref>;</highlight></codeline>
<codeline lineno="1624" refid="class_generic_schema_document_1ad0293c28c9ffe80ab1f8ec86efee35c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrapidjson_1_1_encoding" kindref="compound">ValueType::EncodingType</ref><sp/><ref refid="class_generic_schema_document_1ad0293c28c9ffe80ab1f8ec86efee35c8" kindref="member">EncodingType</ref>;</highlight></codeline>
<codeline lineno="1625" refid="class_generic_schema_document_1ab1dec56a78b29649eb8e4b85b101ec7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EncodingType::Ch<sp/><ref refid="class_generic_schema_document_1ab1dec56a78b29649eb8e4b85b101ec7c" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="1626" refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema" kindref="compound">internal::Schema&lt;GenericSchemaDocument&gt;</ref><sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>;</highlight></codeline>
<codeline lineno="1627" refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_pointer" kindref="compound">GenericPointer&lt;ValueType, Allocator&gt;</ref><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>;</highlight></codeline>
<codeline lineno="1628" refid="class_generic_schema_document_1af017bc68811efaabb9925b6db03fa3d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType, AllocatorType&gt;</ref><sp/><ref refid="class_generic_schema_document_1af017bc68811efaabb9925b6db03fa3d5" kindref="member">SValue</ref>;</highlight></codeline>
<codeline lineno="1629" refid="class_generic_schema_document_1a706511849688d9245fc37109f02a03c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_uri" kindref="compound">GenericUri&lt;ValueType, Allocator&gt;</ref><sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classinternal_1_1_schema" kindref="compound">internal::Schema</ref>&lt;<ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref>&gt;;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="1632" refid="class_generic_schema_document_1afcc03e6ba8f1a819e1a028c31ad38347" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645" refid="class_generic_schema_document_1a302a3c608c137d5542105c8298bfba1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1a302a3c608c137d5542105c8298bfba1f" kindref="member">GenericSchemaDocument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref>&amp;<sp/>document,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1ab1dec56a78b29649eb8e4b85b101ec7c" kindref="member">Ch</ref>*<sp/>uri<sp/>=<sp/>0,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>uriLength<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">IRemoteSchemaDocumentProviderType</ref>*<sp/>remoteProvider<sp/>=<sp/>0,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>*<sp/>allocator<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_pointer" kindref="compound">PointerType</ref>&amp;<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref><sp/>=<sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>())<sp/>:<sp/><sp/></highlight><highlight class="comment">//<sp/>PR<sp/>#1393</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remoteProvider_(remoteProvider),</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_(allocator),</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownAllocator_(),</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_(),</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeless_(),</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaMap_(allocator,<sp/>kInitialSchemaMapSize),</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaRef_(allocator,<sp/>kInitialSchemaRefSize)</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allocator_)</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownAllocator_<sp/>=<sp/>allocator_<sp/>=<sp/><ref refid="rapidjson_8h_1abdc7cd7902748ffe6626d71c59a73c3b" kindref="member">RAPIDJSON_NEW</ref>(<ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>)();</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1ab1dec56a78b29649eb8e4b85b101ec7c" kindref="member">Ch</ref><sp/>noUri[1]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uri_.SetString(uri<sp/>?<sp/>uri<sp/>:<sp/>noUri,<sp/>uriLength,<sp/>*allocator_);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docId_<sp/>=<sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>(uri_,<sp/>allocator_);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeless_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classinternal_1_1_schema" kindref="compound">SchemaType</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(allocator_-&gt;Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classinternal_1_1_schema" kindref="compound">SchemaType</ref>)));</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(typeless_)<sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>(),<sp/><ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>).Move(),<sp/><ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref>(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>).Move(),<sp/>allocator_,<sp/>docId_);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>root<sp/>schema,<sp/>it<sp/>will<sp/>call<sp/>CreateSchema()<sp/>to<sp/>create<sp/>sub-schemas,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>call<sp/>HandleRefSchema()<sp/>if<sp/>there<sp/>are<sp/>$ref.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PR<sp/>#1393<sp/>use<sp/>input<sp/>pointer<sp/>if<sp/>supplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_<sp/>=<sp/>typeless_;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>.GetTokenCount()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateSchemaRecursive(&amp;root_,<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>,<sp/>document,<sp/>document,<sp/>docId_);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref>*<sp/>v<sp/>=<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>.Get(document))<sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateSchema(&amp;root_,<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>,<sp/>*v,<sp/>document,<sp/>docId_);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(root_<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaRef_.ShrinkToFit();<sp/></highlight><highlight class="comment">//<sp/>Deallocate<sp/>all<sp/>memory<sp/>for<sp/>ref</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1a302a3c608c137d5542105c8298bfba1f" kindref="member">GenericSchemaDocument</ref>(<ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref>&amp;&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>:</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remoteProvider_(rhs.remoteProvider_),</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_(rhs.allocator_),</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownAllocator_(rhs.ownAllocator_),</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_(rhs.root_),</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeless_(rhs.typeless_),</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaMap_(std::move(rhs.schemaMap_)),</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaRef_(std::move(rhs.schemaRef_)),</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uri_(std::move(rhs.uri_)),</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docId_(rhs.docId_)</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.remoteProvider_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.allocator_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.ownAllocator_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.typeless_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703" refid="class_generic_schema_document_1a6a54dfd1aec0f560f7e47e08f3fcb8f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1a6a54dfd1aec0f560f7e47e08f3fcb8f1" kindref="member">~GenericSchemaDocument</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!schemaMap_.Empty())</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaMap_.template<sp/>Pop&lt;SchemaEntry&gt;(1)-&gt;~SchemaEntry();</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typeless_)<sp/>{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeless_-&gt;~SchemaType();</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">Allocator::Free</ref>(typeless_);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a52c941c3fdd646527cdcd42aa846a28a" kindref="member">RAPIDJSON_DELETE</ref>(ownAllocator_);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715" refid="class_generic_schema_document_1aab0203c06e65d944a8a03517d84de3cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">SValue</ref>&amp;<sp/><ref refid="class_generic_schema_document_1aab0203c06e65d944a8a03517d84de3cd" kindref="member">GetURI</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uri_;<sp/>}</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718" refid="class_generic_schema_document_1a6a0b2b360df728077bb5d3779f97e73d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_schema" kindref="compound">SchemaType</ref>&amp;<sp/><ref refid="class_generic_schema_document_1a6a0b2b360df728077bb5d3779f97e73d" kindref="member">GetRoot</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*root_;<sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1a302a3c608c137d5542105c8298bfba1f" kindref="member">GenericSchemaDocument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref>&amp;);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref>&amp;);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>*<sp/>SchemaRefPtr;<sp/></highlight><highlight class="comment">//<sp/>PR<sp/>#1393</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SchemaEntry<sp/>{</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SchemaEntry(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>&amp;<sp/>p,<sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>*<sp/>s,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>o,<sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref>*<sp/>allocator)<sp/>:<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>(p,<sp/>allocator),<sp/>schema(s),<sp/>owned(o)<sp/>{}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SchemaEntry()<sp/>{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(owned)<sp/>{</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schema-&gt;~SchemaType();</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">Allocator::Free</ref>(schema);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref><sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>*<sp/>schema;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>owned;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Changed<sp/>by<sp/>PR<sp/>#1393</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateSchemaRecursive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>**<sp/>schema,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>&amp;<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>document,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.GetType()<sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref><sp/>newid<sp/>=<sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>(CreateSchema(schema,<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>,<sp/>v,<sp/>document,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>allocator_);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">ValueType::ConstMemberIterator</ref><sp/>itr<sp/>=<sp/>v.MemberBegin();<sp/>itr<sp/>!=<sp/>v.MemberEnd();<sp/>++itr)</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateSchemaRecursive(0,<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>.Append(itr-&gt;name,<sp/>allocator_),<sp/>itr-&gt;value,<sp/>document,<sp/>newid);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.GetType()<sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>)</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>v.Size();<sp/>i++)</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateSchemaRecursive(0,<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>.Append(i,<sp/>allocator_),<sp/>v[i],<sp/>document,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Changed<sp/>by<sp/>PR<sp/>#1393</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>&amp;<sp/>CreateSchema(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>**<sp/>schema,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>&amp;<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>document,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(<ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>.IsValid());</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.IsObject())<sp/>{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>*<sp/>sc<sp/>=<sp/>GetSchema(<ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(schema)</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*schema<sp/>=<sp/>sc;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddSchemaRefs(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sc));</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!HandleRefSchema(<ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>,<sp/>schema,<sp/>v,<sp/>document,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>new<sp/>schema<sp/>constructor<sp/>adds<sp/>itself<sp/>and<sp/>its<sp/>$ref(s)<sp/>to<sp/>schemaMap_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>*<sp/>s<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(allocator_-&gt;Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>)))<sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>,<sp/>v,<sp/>document,<sp/>allocator_,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(schema)</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*schema<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s-&gt;GetId();</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(schema)</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*schema<sp/>=<sp/>typeless_;</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddSchemaRefs(typeless_);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Changed<sp/>by<sp/>PR<sp/>#1393</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>should<sp/>this<sp/>return<sp/>a<sp/>UriType&amp;<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleRefSchema(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>&amp;<sp/><ref refid="pointer_8h_1adb82dfe18535e9a30aa97d275f82bd55" kindref="member">source</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>**<sp/>schema,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>document,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">ValueType::ConstMemberIterator</ref><sp/>itr<sp/>=<sp/>v.FindMember(SchemaType::GetRefString());</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr<sp/>==<sp/>v.MemberEnd())</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resolve<sp/>the<sp/>source<sp/>pointer<sp/>to<sp/>the<sp/>$ref&apos;ed<sp/>schema<sp/>(finally)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(schemaRef_.template<sp/>Push&lt;SchemaRefPtr&gt;())<sp/>SchemaRefPtr(&amp;<ref refid="pointer_8h_1adb82dfe18535e9a30aa97d275f82bd55" kindref="member">source</ref>);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr-&gt;value.IsString())<sp/>{</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len<sp/>=<sp/>itr-&gt;value.GetStringLength();</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>resolve<sp/>$ref<sp/>against<sp/>the<sp/>in-scope<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref><sp/>scopeId<sp/>=<sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>allocator_);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref><sp/>ref<sp/>=<sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>(itr-&gt;value,<sp/>allocator_).Resolve(scopeId,<sp/>allocator_);</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>the<sp/>resolved<sp/>$ref<sp/>minus<sp/>the<sp/>fragment<sp/>matches<sp/>a<sp/>resolved<sp/>id<sp/>in<sp/>this<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>from<sp/>the<sp/>root.<sp/>Returns<sp/>the<sp/>subschema<sp/>in<sp/>the<sp/>document<sp/>and<sp/>its<sp/>absolute<sp/>JSON<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref><sp/>basePointer<sp/>=<sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>();</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>*base<sp/>=<sp/>FindId(document,<sp/>ref,<sp/>basePointer,<sp/>docId_,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!base)<sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remote<sp/>reference<sp/>-<sp/>call<sp/>the<sp/>remote<sp/>document<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remoteProvider_)<sp/>{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref>*<sp/>remoteDocument<sp/>=<sp/>remoteProvider_-&gt;<ref refid="class_i_generic_remote_schema_document_provider_1af348980f793d9777abb9b7b6afcbfd93" kindref="member">GetRemoteDocument</ref>(ref))<sp/>{</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1ab1dec56a78b29649eb8e4b85b101ec7c" kindref="member">Ch</ref>*<sp/>s<sp/>=<sp/>ref.GetFragString();</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>ref.GetFragStringLength();</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;=<sp/>1<sp/>||<sp/>s[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JSON<sp/>pointer<sp/>fragment,<sp/>absolute<sp/>in<sp/>the<sp/>remote<sp/>schema</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref><sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>(s,<sp/>len,<sp/>allocator_);</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>.IsValid())<sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>subschema</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref><sp/>*sc<sp/>=<sp/>remoteDocument-&gt;GetSchema(<ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(schema)</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*schema<sp/>=<sp/>sc;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddSchemaRefs(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sc));</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plain<sp/>name<sp/>fragment,<sp/>not<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Local<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1ab1dec56a78b29649eb8e4b85b101ec7c" kindref="member">Ch</ref>*<sp/>s<sp/>=<sp/>ref.GetFragString();</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>ref.GetFragStringLength();</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;=<sp/>1<sp/>||<sp/>s[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JSON<sp/>pointer<sp/>fragment,<sp/>relative<sp/>to<sp/>the<sp/>resolved<sp/>URI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref><sp/>relPointer(s,<sp/>len,<sp/>allocator_);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relPointer.IsValid())<sp/>{</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>subschema</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>*pv<sp/>=<sp/>relPointer.Get(*base))<sp/>{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>get<sp/>the<sp/>absolute<sp/>JSON<sp/>pointer<sp/>by<sp/>adding<sp/>relative<sp/>to<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref><sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>(basePointer);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>relPointer.GetTokenCount();<sp/>i++)</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref><sp/>=<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>.Append(relPointer.GetTokens()[i],<sp/>allocator_);</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GenericStringBuffer&lt;EncodingType&gt;<sp/>sb;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pointer.StringifyUriFragment(sb);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>.IsValid()<sp/>&amp;&amp;<sp/>!IsCyclicRef(<ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>CreateSchema<sp/>recursively,<sp/>but<sp/>first<sp/>compute<sp/>the<sp/>in-scope<sp/>id<sp/>for<sp/>the<sp/>$ref<sp/>target<sp/>as<sp/>we<sp/>have<sp/>jumped<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>cache<sp/>pointer<sp/>&lt;-&gt;<sp/>id<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>unresolvedTokenIndex;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scopeId<sp/>=<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>.GetUri(document,<sp/>docId_,<sp/>&amp;unresolvedTokenIndex,<sp/>allocator_);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateSchema(schema,<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>,<sp/>*pv,<sp/>document,<sp/>scopeId);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plain<sp/>name<sp/>fragment,<sp/>relative<sp/>to<sp/>the<sp/>resolved<sp/>URI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>the<sp/>fragment<sp/>matches<sp/>an<sp/>id<sp/>in<sp/>this<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>from<sp/>the<sp/>base<sp/>we<sp/>just<sp/>established.<sp/>Returns<sp/>the<sp/>subschema<sp/>in<sp/>the<sp/>document<sp/>and<sp/>its<sp/>absolute<sp/>JSON<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref><sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref><sp/>=<sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>();</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>*pv<sp/>=<sp/>FindId(*base,<sp/>ref,<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>,<sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>(ref.GetBaseString(),<sp/>ref.GetBaseStringLength(),<sp/>allocator_),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>basePointer))<sp/>{</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsCyclicRef(<ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GenericStringBuffer&lt;EncodingType&gt;<sp/>sb;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pointer.StringifyUriFragment(sb);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>CreateSchema<sp/>recursively,<sp/>but<sp/>first<sp/>compute<sp/>the<sp/>in-scope<sp/>id<sp/>for<sp/>the<sp/>$ref<sp/>target<sp/>as<sp/>we<sp/>have<sp/>jumped<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>cache<sp/>pointer<sp/>&lt;-&gt;<sp/>id<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>unresolvedTokenIndex;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scopeId<sp/>=<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>.GetUri(document,<sp/>docId_,<sp/>&amp;unresolvedTokenIndex,<sp/>allocator_);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateSchema(schema,<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>,<sp/>*pv,<sp/>document,<sp/>scopeId);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid/Unknown<sp/>$ref</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(schema)</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*schema<sp/>=<sp/>typeless_;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddSchemaRefs(typeless_);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>full<sp/>specified<sp/>use<sp/>all<sp/>URI<sp/>else<sp/>ignore<sp/>fragment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>found,<sp/>return<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>subschema<sp/>and<sp/>its<sp/>JSON<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>cache<sp/>pointer<sp/>&lt;-&gt;<sp/>id<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>*<sp/>FindId(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>&amp;<sp/>finduri,<sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>&amp;<sp/>resptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>&amp;<sp/>baseuri,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>full,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>&amp;<sp/>here<sp/>=<sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>())</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>*<sp/>resval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref><sp/>tempuri<sp/>=<sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>(finduri,<sp/>allocator_);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref><sp/>localuri<sp/>=<sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>(baseuri,<sp/>allocator_);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doc.GetType()<sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Establish<sp/>the<sp/>base<sp/>URI<sp/>of<sp/>this<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">ValueType::ConstMemberIterator</ref><sp/>m<sp/>=<sp/>doc.FindMember(SchemaType::GetIdString());</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>!=<sp/>doc.MemberEnd()<sp/>&amp;&amp;<sp/>m-&gt;value.GetType()<sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338" kindref="member">kStringType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localuri<sp/>=<sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref>(m-&gt;value,<sp/>allocator_).Resolve(baseuri,<sp/>allocator_);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>it<sp/>matches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(localuri.Match(finduri,<sp/>full))<sp/>{</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resval<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;doc);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resptr<sp/>=<sp/>here;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resval;</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>match,<sp/>continue<sp/>looking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m<sp/>=<sp/>doc.MemberBegin();<sp/>m<sp/>!=<sp/>doc.MemberEnd();<sp/>++m)<sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;value.GetType()<sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref><sp/>||<sp/>m-&gt;value.GetType()<sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resval<sp/>=<sp/>FindId(m-&gt;value,<sp/>finduri,<sp/>resptr,<sp/>localuri,<sp/>full,<sp/>here.Append(m-&gt;name.GetString(),<sp/>m-&gt;name.GetStringLength(),<sp/>allocator_));</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resval)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doc.GetType()<sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Continue<sp/>looking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType::ConstValueIterator</ref><sp/>v<sp/>=<sp/>doc.Begin();<sp/>v<sp/>!=<sp/>doc.End();<sp/>++v)<sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;GetType()<sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref><sp/>||<sp/>v-&gt;GetType()<sp/>==<sp/><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resval<sp/>=<sp/>FindId(*v,<sp/>finduri,<sp/>resptr,<sp/>localuri,<sp/>full,<sp/>here.Append(i,<sp/>allocator_));</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resval)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resval;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Added<sp/>by<sp/>PR<sp/>#1393</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddSchemaRefs(<ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>*<sp/>schema)<sp/>{</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!schemaRef_.Empty())<sp/>{</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SchemaRefPtr<sp/>*ref<sp/>=<sp/>schemaRef_.template<sp/>Pop&lt;SchemaRefPtr&gt;(1);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SchemaEntry<sp/>*entry<sp/>=<sp/>schemaMap_.template<sp/>Push&lt;SchemaEntry&gt;();</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(entry)<sp/>SchemaEntry(**ref,<sp/>schema,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>allocator_);</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Added<sp/>by<sp/>PR<sp/>#1393</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsCyclicRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>&amp;<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaRefPtr*<sp/>ref<sp/>=<sp/>schemaRef_.template<sp/>Bottom&lt;SchemaRefPtr&gt;();<sp/>ref<sp/>!=<sp/>schemaRef_.template<sp/>End&lt;SchemaRefPtr&gt;();<sp/>++ref)</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref><sp/>==<sp/>**ref)</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>*<sp/>GetSchema(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>&amp;<sp/><ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaEntry*<sp/>target<sp/>=<sp/>schemaMap_.template<sp/>Bottom&lt;SchemaEntry&gt;();<sp/>target<sp/>!=<sp/>schemaMap_.template<sp/>End&lt;SchemaEntry&gt;();<sp/>++target)</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pointer_8h_1aae1f8d263916ad71bd415381591549c0" kindref="member">pointer</ref><sp/>==<sp/>target-&gt;pointer)</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target-&gt;schema;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref><sp/>GetPointer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>*<sp/>schema)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaEntry*<sp/>target<sp/>=<sp/>schemaMap_.template<sp/>Bottom&lt;SchemaEntry&gt;();<sp/>target<sp/>!=<sp/>schemaMap_.template<sp/>End&lt;SchemaEntry&gt;();<sp/>++target)</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(schema<sp/>==<sp/>target-&gt;schema)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target-&gt;pointer;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>();</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>*<sp/>GetTypeless()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>typeless_;<sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kInitialSchemaMapSize<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kInitialSchemaRefSize<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1aa53ca323efce50f88aea6fa0d03e9785" kindref="member">IRemoteSchemaDocumentProviderType</ref>*<sp/>remoteProvider_;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref><sp/>*allocator_;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref><sp/>*ownAllocator_;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>*<sp/>root_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref>*<sp/>typeless_;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;Allocator&gt;</ref><sp/>schemaMap_;<sp/><sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>created<sp/>Pointer<sp/>-&gt;<sp/>Schemas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;Allocator&gt;</ref><sp/>schemaRef_;<sp/><sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>Pointer(s)<sp/>from<sp/>$ref(s)<sp/>until<sp/>resolved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1af017bc68811efaabb9925b6db03fa3d5" kindref="member">SValue</ref><sp/>uri_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Schema<sp/>document<sp/>URI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref><sp/>docId_;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966" refid="schema_8h_1a49355f280272b969cfd756ef556935c4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument&lt;Value&gt;</ref><sp/><ref refid="schema_8h_1a49355f280272b969cfd756ef556935c4" kindref="member">SchemaDocument</ref>;</highlight></codeline>
<codeline lineno="1968" refid="schema_8h_1afec32b8c8d16360397849fd8bcd28441" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">IGenericRemoteSchemaDocumentProvider&lt;SchemaDocument&gt;</ref><sp/><ref refid="schema_8h_1afec32b8c8d16360397849fd8bcd28441" kindref="member">IRemoteSchemaDocumentProvider</ref>;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="comment">//<sp/>GenericSchemaValidator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType,</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputHandler<sp/>=<sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;</ref>,</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StateAllocator<sp/>=<sp/><ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>&gt;</highlight></codeline>
<codeline lineno="1989" refid="class_generic_schema_validator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref><sp/>:</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_schema_state_factory" kindref="compound">internal::ISchemaStateFactory</ref>&lt;typename<sp/>SchemaDocumentType::SchemaType&gt;,<sp/></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_schema_validator" kindref="compound">internal::ISchemaValidator</ref>,</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_i_validation_error_handler" kindref="compound">internal::IValidationErrorHandler</ref>&lt;typename<sp/>SchemaDocumentType::SchemaType&gt;<sp/>{</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1994" refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType::SchemaType<sp/><ref refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" kindref="member">SchemaType</ref>;</highlight></codeline>
<codeline lineno="1995" refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType::PointerType<sp/><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref>;</highlight></codeline>
<codeline lineno="1996" refid="class_generic_schema_validator_1acf1c5361bb96da87d23167d8720b1ea5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaType::EncodingType<sp/><ref refid="class_generic_schema_validator_1acf1c5361bb96da87d23167d8720b1ea5" kindref="member">EncodingType</ref>;</highlight></codeline>
<codeline lineno="1997" refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaType::SValue<sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>;</highlight></codeline>
<codeline lineno="1998" refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EncodingType::Ch<sp/><ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="1999" refid="class_generic_schema_validator_1a604160fcd6af7582e0deccc205309dcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;Ch&gt;</ref><sp/><ref refid="class_generic_schema_validator_1a604160fcd6af7582e0deccc205309dcf" kindref="member">StringRefType</ref>;</highlight></codeline>
<codeline lineno="2000" refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType, StateAllocator&gt;</ref><sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2009" refid="class_generic_schema_validator_1a202ee6fdbe5ae9eab3e77a81ecdfeb6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1a202ee6fdbe5ae9eab3e77a81ecdfeb6d" kindref="member">GenericSchemaValidator</ref>(</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaDocumentType&amp;<sp/>schemaDocument,</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StateAllocator*<sp/>allocator<sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>schemaStackCapacity<sp/>=<sp/>kDefaultSchemaStackCapacity,</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>documentStackCapacity<sp/>=<sp/>kDefaultDocumentStackCapacity)</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument_(&amp;schemaDocument),</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_(schemaDocument.GetRoot()),</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateAllocator_(allocator),</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownStateAllocator_(0),</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaStack_(allocator,<sp/>schemaStackCapacity),</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentStack_(allocator,<sp/>documentStackCapacity),</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputHandler_(0),</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>),</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_(),</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>missingDependents_(),</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_(true),</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_(<ref refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942a70564fe50c13963b485000be542c52c9" kindref="member">kValidateDefaultFlags</ref>)</highlight></codeline>
<codeline lineno="2027"><highlight class="normal">#if<sp/><ref refid="schema_8h_1a40c690b6fd0b7ae8d8484b613255cc72" kindref="member">RAPIDJSON_SCHEMA_VERBOSE</ref></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>depth_(0)</highlight></codeline>
<codeline lineno="2029"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040" refid="class_generic_schema_validator_1ac2027be8ca55b01cd6f38b45f4e233b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1ac2027be8ca55b01cd6f38b45f4e233b4" kindref="member">GenericSchemaValidator</ref>(</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaDocumentType&amp;<sp/>schemaDocument,</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputHandler&amp;<sp/>outputHandler,</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StateAllocator*<sp/>allocator<sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>schemaStackCapacity<sp/>=<sp/>kDefaultSchemaStackCapacity,</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>documentStackCapacity<sp/>=<sp/>kDefaultDocumentStackCapacity)</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument_(&amp;schemaDocument),</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_(schemaDocument.GetRoot()),</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateAllocator_(allocator),</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownStateAllocator_(0),</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaStack_(allocator,<sp/>schemaStackCapacity),</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentStack_(allocator,<sp/>documentStackCapacity),</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputHandler_(&amp;outputHandler),</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>),</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_(),</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>missingDependents_(),</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_(true),</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_(<ref refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942a70564fe50c13963b485000be542c52c9" kindref="member">kValidateDefaultFlags</ref>)</highlight></codeline>
<codeline lineno="2059"><highlight class="normal">#if<sp/><ref refid="schema_8h_1a40c690b6fd0b7ae8d8484b613255cc72" kindref="member">RAPIDJSON_SCHEMA_VERBOSE</ref></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>depth_(0)</highlight></codeline>
<codeline lineno="2061"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066" refid="class_generic_schema_validator_1a3eab83d483a50efb0c0390adf3291963" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1a3eab83d483a50efb0c0390adf3291963" kindref="member">~GenericSchemaValidator</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1a49efbbe098cb77728be3d48cafed17e4" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a52c941c3fdd646527cdcd42aa846a28a" kindref="member">RAPIDJSON_DELETE</ref>(ownStateAllocator_);</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2072" refid="class_generic_schema_validator_1a49efbbe098cb77728be3d48cafed17e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a49efbbe098cb77728be3d48cafed17e4" kindref="member">Reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!schemaStack_.Empty())</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopSchema();</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentStack_.Clear();</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1a8374dd359e572f653c49293545ad3ef4" kindref="member">ResetError</ref>();</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080" refid="class_generic_schema_validator_1a8374dd359e572f653c49293545ad3ef4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a8374dd359e572f653c49293545ad3ef4" kindref="member">ResetError</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_.SetObject();</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.SetNull();</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>missingDependents_.SetNull();</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2088" refid="class_generic_schema_validator_1af4840dac2410bcfe73912c30eb95b875" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1af4840dac2410bcfe73912c30eb95b875" kindref="member">SetValidateFlags</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flags)<sp/>{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2091" refid="class_generic_schema_validator_1a318bf1cf98d2f18074edd336b1bc684d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a318bf1cf98d2f18074edd336b1bc684d" kindref="member">GetValidateFlags</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags_;</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implementation<sp/>of<sp/>ISchemaValidator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2097" refid="class_generic_schema_validator_1a8ebda4da3d8b1fc41e57f15dd62e8f19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a8ebda4da3d8b1fc41e57f15dd62e8f19" kindref="member">IsValid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valid_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetContinueOnErrors()<sp/>&amp;&amp;<sp/>!error_.ObjectEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2104" refid="class_generic_schema_validator_1a21c0ad159e91398d222bab4d91d4c5dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="class_generic_schema_validator_1a21c0ad159e91398d222bab4d91d4c5dd" kindref="member">GetError</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error_;<sp/>}</highlight></codeline>
<codeline lineno="2105" refid="class_generic_schema_validator_1ad7b8d71bd651c3da614a877816de7573" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="class_generic_schema_validator_1ad7b8d71bd651c3da614a877816de7573" kindref="member">GetError</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error_;<sp/>}</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>If<sp/>reporting<sp/>all<sp/>errors,<sp/>the<sp/>stack<sp/>will<sp/>be<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109" refid="class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref><sp/><ref refid="class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8" kindref="member">GetInvalidSchemaPointer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schemaStack_.Empty()<sp/>?<sp/><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref>()<sp/>:<sp/>CurrentSchema().GetPointer();</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>If<sp/>reporting<sp/>all<sp/>errors,<sp/>the<sp/>stack<sp/>will<sp/>be<sp/>empty,<sp/>so<sp/>return<sp/>&quot;errors&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115" refid="class_generic_schema_validator_1ab5980d72c786b81ab907526fdf4172f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>*<sp/><ref refid="class_generic_schema_validator_1ab5980d72c786b81ab907526fdf4172f3" kindref="member">GetInvalidSchemaKeyword</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!schemaStack_.Empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CurrentContext().invalidKeyword;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetContinueOnErrors()<sp/>&amp;&amp;<sp/>!error_.ObjectEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>*)GetErrorsString();</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>If<sp/>reporting<sp/>all<sp/>errors,<sp/>the<sp/>stack<sp/>will<sp/>be<sp/>empty,<sp/>so<sp/>return<sp/>kValidateErrors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123" refid="class_generic_schema_validator_1aeba2093eb93f77b239e9b4c27219c982" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref><sp/><ref refid="class_generic_schema_validator_1aeba2093eb93f77b239e9b4c27219c982" kindref="member">GetInvalidSchemaCode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!schemaStack_.Empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CurrentContext().invalidCode;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetContinueOnErrors()<sp/>&amp;&amp;<sp/>!error_.ObjectEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa626466aeef9cacbac149e4ae57d5fda2" kindref="member">kValidateErrors</ref>;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aac15ca121db8911126960c0672dfe2a2e" kindref="member">kValidateErrorNone</ref>;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>If<sp/>reporting<sp/>all<sp/>errors,<sp/>the<sp/>stack<sp/>will<sp/>be<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131" refid="class_generic_schema_validator_1ac10a88c4dc138bbdbe2afd041658a3b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref><sp/><ref refid="class_generic_schema_validator_1ac10a88c4dc138bbdbe2afd041658a3b0" kindref="member">GetInvalidDocumentPointer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(documentStack_.Empty())<sp/>{</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref>();</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref>(documentStack_.template<sp/>Bottom&lt;Ch&gt;(),<sp/>documentStack_.GetSize()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>));</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140" refid="class_generic_schema_validator_1ab2f08413a2b23d73d4bbd09c8ca1f547" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ab2f08413a2b23d73d4bbd09c8ca1f547" kindref="member">NotMultipleOf</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>expected)<sp/>{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aab8cf6f0be86047d0bf345f25dac31f4c" kindref="member">kValidateErrorMultipleOf</ref>,<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actual).Move(),<sp/>expected);</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2143" refid="class_generic_schema_validator_1a5c59d25dc44d85404cc587ebfa7455cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a5c59d25dc44d85404cc587ebfa7455cd" kindref="member">NotMultipleOf</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>expected)<sp/>{</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aab8cf6f0be86047d0bf345f25dac31f4c" kindref="member">kValidateErrorMultipleOf</ref>,<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actual).Move(),<sp/>expected);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2146" refid="class_generic_schema_validator_1ae5fc8a4545fed53955ec6c57b79ca949" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ae5fc8a4545fed53955ec6c57b79ca949" kindref="member">NotMultipleOf</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>expected)<sp/>{</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aab8cf6f0be86047d0bf345f25dac31f4c" kindref="member">kValidateErrorMultipleOf</ref>,<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actual).Move(),<sp/>expected);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2149" refid="class_generic_schema_validator_1a4c9c7db8a3488f84a5a86681ad1d8194" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a4c9c7db8a3488f84a5a86681ad1d8194" kindref="member">AboveMaximum</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>expected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusive)<sp/>{</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(exclusive<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3fca29f33702d8d98135b849c5f05f00" kindref="member">kValidateErrorExclusiveMaximum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa933fe947a713d741c3dcdcd7cae96b35" kindref="member">kValidateErrorMaximum</ref>,<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actual).Move(),<sp/>expected,</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exclusive<sp/>?<sp/>&amp;SchemaType::GetExclusiveMaximumString<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2153" refid="class_generic_schema_validator_1a9262c73768789eb7cf8dc271cfec7f96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a9262c73768789eb7cf8dc271cfec7f96" kindref="member">AboveMaximum</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>expected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusive)<sp/>{</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(exclusive<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3fca29f33702d8d98135b849c5f05f00" kindref="member">kValidateErrorExclusiveMaximum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa933fe947a713d741c3dcdcd7cae96b35" kindref="member">kValidateErrorMaximum</ref>,<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actual).Move(),<sp/>expected,</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exclusive<sp/>?<sp/>&amp;SchemaType::GetExclusiveMaximumString<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2157" refid="class_generic_schema_validator_1abcf1f5b46bdae8ca20a80858d603483d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1abcf1f5b46bdae8ca20a80858d603483d" kindref="member">AboveMaximum</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>expected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusive)<sp/>{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(exclusive<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3fca29f33702d8d98135b849c5f05f00" kindref="member">kValidateErrorExclusiveMaximum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa933fe947a713d741c3dcdcd7cae96b35" kindref="member">kValidateErrorMaximum</ref>,<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actual).Move(),<sp/>expected,</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exclusive<sp/>?<sp/>&amp;SchemaType::GetExclusiveMaximumString<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2161" refid="class_generic_schema_validator_1a15a12306bc14f16357b4f2edea8396b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a15a12306bc14f16357b4f2edea8396b7" kindref="member">BelowMinimum</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>expected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusive)<sp/>{</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(exclusive<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa1722fc952e01a7a858d954c08e382d65" kindref="member">kValidateErrorExclusiveMinimum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaa5f0cf3faa2e08c359cfcd6d151d76e9" kindref="member">kValidateErrorMinimum</ref>,<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actual).Move(),<sp/>expected,</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exclusive<sp/>?<sp/>&amp;SchemaType::GetExclusiveMinimumString<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2165" refid="class_generic_schema_validator_1ad3db1f3852a1b2e6fada43fbcad401ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ad3db1f3852a1b2e6fada43fbcad401ea" kindref="member">BelowMinimum</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>expected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusive)<sp/>{</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(exclusive<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa1722fc952e01a7a858d954c08e382d65" kindref="member">kValidateErrorExclusiveMinimum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaa5f0cf3faa2e08c359cfcd6d151d76e9" kindref="member">kValidateErrorMinimum</ref>,<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actual).Move(),<sp/>expected,</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exclusive<sp/>?<sp/>&amp;SchemaType::GetExclusiveMinimumString<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2169" refid="class_generic_schema_validator_1afdd4a9787239a6fc3eeb56d34fd531f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1afdd4a9787239a6fc3eeb56d34fd531f4" kindref="member">BelowMinimum</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>expected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exclusive)<sp/>{</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(exclusive<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa1722fc952e01a7a858d954c08e382d65" kindref="member">kValidateErrorExclusiveMinimum</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaa5f0cf3faa2e08c359cfcd6d151d76e9" kindref="member">kValidateErrorMinimum</ref>,<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actual).Move(),<sp/>expected,</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exclusive<sp/>?<sp/>&amp;SchemaType::GetExclusiveMinimumString<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight></codeline>
<codeline lineno="2174" refid="class_generic_schema_validator_1a227dce44e0684a73accbfb062200eb26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a227dce44e0684a73accbfb062200eb26" kindref="member">TooLong</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>expected)<sp/>{</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa6825de2427572de01bd121c9fffcee76" kindref="member">kValidateErrorMaxLength</ref>,</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(str,<sp/>length,<sp/>GetStateAllocator()).Move(),<sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>(expected).Move());</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2178" refid="class_generic_schema_validator_1a7711071f95ead18c0dd99f69c09a4c11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a7711071f95ead18c0dd99f69c09a4c11" kindref="member">TooShort</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>expected)<sp/>{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa58e6e01eef18ea0af4763abd84128790" kindref="member">kValidateErrorMinLength</ref>,</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(str,<sp/>length,<sp/>GetStateAllocator()).Move(),<sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>(expected).Move());</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2182" refid="class_generic_schema_validator_1af1be05889e634936c223f24c6e5f6ec5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1af1be05889e634936c223f24c6e5f6ec5" kindref="member">DoesNotMatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.SetObject();</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.AddMember(GetActualString(),<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(str,<sp/>length,<sp/>GetStateAllocator()).Move(),<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddCurrentError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa86bde2af1a18d73a533ba8e2f5971879" kindref="member">kValidateErrorPattern</ref>);</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight></codeline>
<codeline lineno="2188" refid="class_generic_schema_validator_1a2d47a88a3d9fb82466b5bda480b6e70f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a2d47a88a3d9fb82466b5bda480b6e70f" kindref="member">DisallowedItem</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.SetObject();</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.AddMember(GetDisallowedString(),<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(index).Move(),<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddCurrentError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa17861cca8a0ab2a0685f3b7804f67303" kindref="member">kValidateErrorAdditionalItems</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2193" refid="class_generic_schema_validator_1af39007d9bf43126dab231961a1c5064f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1af39007d9bf43126dab231961a1c5064f" kindref="member">TooFewItems</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>actualCount,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>expectedCount)<sp/>{</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aad31b3292fb68a14016514736b076200c" kindref="member">kValidateErrorMinItems</ref>,</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actualCount).Move(),<sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>(expectedCount).Move());</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2197" refid="class_generic_schema_validator_1a78e85eeae0e2bdef827815672a7fbbc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a78e85eeae0e2bdef827815672a7fbbc9" kindref="member">TooManyItems</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>actualCount,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>expectedCount)<sp/>{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa9acbcf73fe6a65bd23108a2dbc945cff" kindref="member">kValidateErrorMaxItems</ref>,</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actualCount).Move(),<sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>(expectedCount).Move());</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2201" refid="class_generic_schema_validator_1a82aa865146069e3ba5010d25346a71f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a82aa865146069e3ba5010d25346a71f2" kindref="member">DuplicateItems</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index1,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>index2)<sp/>{</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>duplicates(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>);</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplicates.PushBack(index1,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplicates.PushBack(index2,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.SetObject();</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.AddMember(GetDuplicatesString(),<sp/>duplicates,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddCurrentError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa35159c760856953cbd62258140d8d498" kindref="member">kValidateErrorUniqueItems</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210" refid="class_generic_schema_validator_1ad7ca0a327420c110e9ee6e70b2cdbc87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ad7ca0a327420c110e9ee6e70b2cdbc87" kindref="member">TooManyProperties</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>actualCount,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>expectedCount)<sp/>{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa179693cbb5ea15f0242e37588e99edf6" kindref="member">kValidateErrorMaxProperties</ref>,</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actualCount).Move(),<sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>(expectedCount).Move());</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2214" refid="class_generic_schema_validator_1aaebaf28aa289826a3c39dc953b0ca466" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1aaebaf28aa289826a3c39dc953b0ca466" kindref="member">TooFewProperties</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>actualCount,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>expectedCount)<sp/>{</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddNumberError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa017c1ccb7febfaff42115fc256753fb6" kindref="member">kValidateErrorMinProperties</ref>,</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actualCount).Move(),<sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>(expectedCount).Move());</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2218" refid="class_generic_schema_validator_1a41c4d67e349561f13948a5045bfc50c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a41c4d67e349561f13948a5045bfc50c9" kindref="member">StartMissingProperties</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.SetArray();</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2221" refid="class_generic_schema_validator_1a8d355eeb25364e414d9a2f8121aa0eaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a8d355eeb25364e414d9a2f8121aa0eaa" kindref="member">AddMissingProperty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.PushBack(<ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(name,<sp/>GetStateAllocator()).Move(),<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224" refid="class_generic_schema_validator_1a557b7aa531ff94a6355fed8f8575fed5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a557b7aa531ff94a6355fed8f8575fed5" kindref="member">EndMissingProperties</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentError_.Empty())</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>error(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>);</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.AddMember(GetMissingString(),<sp/>currentError_,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddCurrentError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa2dc93a549f16b70911e6399c61a1aec4" kindref="member">kValidateErrorRequired</ref>);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2233" refid="class_generic_schema_validator_1a29fa7c6f787450b2df1f9d440436aeab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a29fa7c6f787450b2df1f9d440436aeab" kindref="member">PropertyViolations</ref>(ISchemaValidator**<sp/>subvalidators,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MergeError(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(subvalidators[i])-&gt;<ref refid="class_generic_schema_validator_1a21c0ad159e91398d222bab4d91d4c5dd" kindref="member">GetError</ref>());</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2237" refid="class_generic_schema_validator_1a44f06b99edfb650c6088f17e8af5b5a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a44f06b99edfb650c6088f17e8af5b5a8" kindref="member">DisallowedProperty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>*<sp/>name,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.SetObject();</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.AddMember(GetDisallowedString(),<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(name,<sp/>length,<sp/>GetStateAllocator()).Move(),<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddCurrentError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aae02b299a3f5db48400e7c1987201d2ca" kindref="member">kValidateErrorAdditionalProperties</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243" refid="class_generic_schema_validator_1a767f115cc90e0f2f5bdd1c9fbdbf75df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a767f115cc90e0f2f5bdd1c9fbdbf75df" kindref="member">StartDependencyErrors</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.SetObject();</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2246" refid="class_generic_schema_validator_1ac4faa073bc4671f42e98a59a9e9cb01a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ac4faa073bc4671f42e98a59a9e9cb01a" kindref="member">StartMissingDependentProperties</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>missingDependents_.SetArray();</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2249" refid="class_generic_schema_validator_1a85f2be483f0ddfc402a97665aff6eca9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a85f2be483f0ddfc402a97665aff6eca9" kindref="member">AddMissingDependentProperty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>targetName)<sp/>{</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>missingDependents_.PushBack(<ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(targetName,<sp/>GetStateAllocator()).Move(),<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2252" refid="class_generic_schema_validator_1afdcd2ff7b5f7e24f4f3d6976fa5b803e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1afdcd2ff7b5f7e24f4f3d6976fa5b803e" kindref="member">EndMissingDependentProperties</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>sourceName)<sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!missingDependents_.Empty())<sp/>{</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>equivalent<sp/>&apos;required&apos;<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>error(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>);</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref><sp/>code<sp/>=<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa2dc93a549f16b70911e6399c61a1aec4" kindref="member">kValidateErrorRequired</ref>;</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.AddMember(GetMissingString(),<sp/>missingDependents_.Move(),<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddErrorCode(error,<sp/>code);</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddErrorInstanceLocation(error,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>appending<sp/>to<sp/>a<sp/>pointer<sp/>ensure<sp/>its<sp/>allocator<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref><sp/>schemaRef<sp/>=<sp/><ref refid="class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8" kindref="member">GetInvalidSchemaPointer</ref>().Append(SchemaType::GetValidateErrorKeyword(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa2f81ab754a29330709c24110a2e895c8" kindref="member">kValidateErrorDependencies</ref>),<sp/>&amp;<ref refid="class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8" kindref="member">GetInvalidSchemaPointer</ref>().GetAllocator());</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddErrorSchemaLocation(error,<sp/>schemaRef.Append(sourceName.GetString(),<sp/>sourceName.GetStringLength(),<sp/>&amp;<ref refid="class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8" kindref="member">GetInvalidSchemaPointer</ref>().GetAllocator()));</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>wrapper(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrapper.AddMember(<ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(SchemaType::GetValidateErrorKeyword(code),<sp/>GetStateAllocator()).Move(),<sp/>error,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.AddMember(<ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(sourceName,<sp/>GetStateAllocator()).Move(),<sp/>wrapper,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2268" refid="class_generic_schema_validator_1a27542a75617cdc28f6846b594fe01229" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a27542a75617cdc28f6846b594fe01229" kindref="member">AddDependencySchemaError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>sourceName,<sp/>ISchemaValidator*<sp/>subvalidator)<sp/>{</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.AddMember(<ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(sourceName,<sp/>GetStateAllocator()).Move(),</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(subvalidator)-&gt;<ref refid="class_generic_schema_validator_1a21c0ad159e91398d222bab4d91d4c5dd" kindref="member">GetError</ref>(),<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2272" refid="class_generic_schema_validator_1ab6d1c964faaa0f86f9da51a0f66dc1e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ab6d1c964faaa0f86f9da51a0f66dc1e4" kindref="member">EndDependencyErrors</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentError_.ObjectEmpty())</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>error(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>);</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.AddMember(GetErrorsString(),<sp/>currentError_,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddCurrentError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa2f81ab754a29330709c24110a2e895c8" kindref="member">kValidateErrorDependencies</ref>);</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282" refid="class_generic_schema_validator_1afc9082d5e9733762e64df3faa88e0160" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1afc9082d5e9733762e64df3faa88e0160" kindref="member">DisallowedValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref><sp/>code<sp/>=<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3c12e9cbc8a479b77776ceccbda4c289" kindref="member">kValidateErrorEnum</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.SetObject();</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddCurrentError(code);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2286" refid="class_generic_schema_validator_1a9904719420fd91200f80772e92fe225f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a9904719420fd91200f80772e92fe225f" kindref="member">StartDisallowedType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.SetArray();</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2289" refid="class_generic_schema_validator_1a68e5308e5ca9726ee66139a212b63bcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a68e5308e5ca9726ee66139a212b63bcc" kindref="member">AddExpectedType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f" kindref="member">SchemaType::ValueType</ref>&amp;<sp/>expectedType)<sp/>{</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.PushBack(<ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(expectedType,<sp/>GetStateAllocator()).Move(),<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2292" refid="class_generic_schema_validator_1ae0f99bfee3e2021c05322fd5d6de2f6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ae0f99bfee3e2021c05322fd5d6de2f6e" kindref="member">EndDisallowedType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f" kindref="member">SchemaType::ValueType</ref>&amp;<sp/>actualType)<sp/>{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>error(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.AddMember(GetExpectedString(),<sp/>currentError_,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.AddMember(GetActualString(),<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(actualType,<sp/>GetStateAllocator()).Move(),<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddCurrentError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa5504bec97bd2ef15efac9ff5b0a6e8fa" kindref="member">kValidateErrorType</ref>);</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2299" refid="class_generic_schema_validator_1a4275b02cdd86bfe11b42afe94817eae5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a4275b02cdd86bfe11b42afe94817eae5" kindref="member">NotAllOf</ref>(ISchemaValidator**<sp/>subvalidators,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Treat<sp/>allOf<sp/>like<sp/>oneOf<sp/>and<sp/>anyOf<sp/>to<sp/>match<sp/>https://rapidjson.org/md_doc_schema.html#allOf-anyOf-oneOf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddErrorArray(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aaef48f9db2382e3308b823f078c73bce4" kindref="member">kValidateErrorAllOf</ref>,<sp/>subvalidators,<sp/>count);</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(SizeType<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>MergeError(static_cast&lt;GenericSchemaValidator*&gt;(subvalidators[i])-&gt;GetError());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2306" refid="class_generic_schema_validator_1aae9c45082721c650b91f8418cecc7293" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1aae9c45082721c650b91f8418cecc7293" kindref="member">NoneOf</ref>(ISchemaValidator**<sp/>subvalidators,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddErrorArray(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa7b821605f3eb4ec77e2c42204b3957cf" kindref="member">kValidateErrorAnyOf</ref>,<sp/>subvalidators,<sp/>count);</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2309" refid="class_generic_schema_validator_1accdba5555deae396fa728d8e20ce7ed5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1accdba5555deae396fa728d8e20ce7ed5" kindref="member">NotOneOf</ref>(ISchemaValidator**<sp/>subvalidators,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddErrorArray(matched<sp/>?<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa1bbc2293748b2e80415c77c7a6a069f9" kindref="member">kValidateErrorOneOfMatch</ref><sp/>:<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa56466697ca410e5ddc2c7fabe11f3132" kindref="member">kValidateErrorOneOf</ref>,<sp/>subvalidators,<sp/>count);</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2312" refid="class_generic_schema_validator_1acc65a322086c792d6534e306c7a091cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1acc65a322086c792d6534e306c7a091cf" kindref="member">Disallowed</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.SetObject();</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddCurrentError(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aadd079998cffcae99da28675a5742327d" kindref="member">kValidateErrorNot</ref>);</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight></codeline>
<codeline lineno="2317" refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_STRING_(name,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="2318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>StringRefType&amp;<sp/>Get##name##String()<sp/>{\</highlight></codeline>
<codeline lineno="2319"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>Ch<sp/>s[]<sp/>=<sp/>{<sp/>__VA_ARGS__,<sp/>&apos;\0&apos;<sp/>};\</highlight></codeline>
<codeline lineno="2320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>StringRefType<sp/>v(s,<sp/>static_cast&lt;SizeType&gt;(sizeof(s)<sp/>/<sp/>sizeof(Ch)<sp/>-<sp/>1));<sp/>\</highlight></codeline>
<codeline lineno="2321"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>v;\</highlight></codeline>
<codeline lineno="2322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(InstanceRef,<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(SchemaRef,<sp/>&apos;s&apos;,<sp/>&apos;c&apos;,<sp/>&apos;h&apos;,<sp/>&apos;e&apos;,<sp/>&apos;m&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;R&apos;,<sp/>&apos;e&apos;,<sp/>&apos;f&apos;)</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Expected,<sp/>&apos;e&apos;,<sp/>&apos;x&apos;,<sp/>&apos;p&apos;,<sp/>&apos;e&apos;,<sp/>&apos;c&apos;,<sp/>&apos;t&apos;,<sp/>&apos;e&apos;,<sp/>&apos;d&apos;)</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Actual,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;c&apos;,<sp/>&apos;t&apos;,<sp/>&apos;u&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;l&apos;)</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(<ref refid="class_generic_schema_validator_1acc65a322086c792d6534e306c7a091cf" kindref="member">Disallowed</ref>,<sp/>&apos;d&apos;,<sp/>&apos;i&apos;,<sp/>&apos;s&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;l&apos;,<sp/>&apos;l&apos;,<sp/>&apos;o&apos;,<sp/>&apos;w&apos;,<sp/>&apos;e&apos;,<sp/>&apos;d&apos;)</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Missing,<sp/>&apos;m&apos;,<sp/>&apos;i&apos;,<sp/>&apos;s&apos;,<sp/>&apos;s&apos;,<sp/>&apos;i&apos;,<sp/>&apos;n&apos;,<sp/>&apos;g&apos;)</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Errors,<sp/>&apos;e&apos;,<sp/>&apos;r&apos;,<sp/>&apos;r&apos;,<sp/>&apos;o&apos;,<sp/>&apos;r&apos;,<sp/>&apos;s&apos;)</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(ErrorCode,<sp/>&apos;e&apos;,<sp/>&apos;r&apos;,<sp/>&apos;r&apos;,<sp/>&apos;o&apos;,<sp/>&apos;r&apos;,<sp/>&apos;C&apos;,<sp/>&apos;o&apos;,<sp/>&apos;d&apos;,<sp/>&apos;e&apos;)</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(ErrorMessage,<sp/>&apos;e&apos;,<sp/>&apos;r&apos;,<sp/>&apos;r&apos;,<sp/>&apos;o&apos;,<sp/>&apos;r&apos;,<sp/>&apos;M&apos;,<sp/>&apos;e&apos;,<sp/>&apos;s&apos;,<sp/>&apos;s&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;g&apos;,<sp/>&apos;e&apos;)</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" kindref="member">RAPIDJSON_STRING_</ref>(Duplicates,<sp/>&apos;d&apos;,<sp/>&apos;u&apos;,<sp/>&apos;p&apos;,<sp/>&apos;l&apos;,<sp/>&apos;i&apos;,<sp/>&apos;c&apos;,<sp/>&apos;<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>&apos;,<sp/>&apos;t&apos;,<sp/>&apos;e&apos;,<sp/>&apos;s&apos;)</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>RAPIDJSON_STRING_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_()<sp/>\</highlight></codeline>
<codeline lineno="2339"><highlight class="preprocessor">RAPIDJSON_MULTILINEMACRO_BEGIN\</highlight></codeline>
<codeline lineno="2340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*documentStack_.template<sp/>Push&lt;Ch&gt;()<sp/>=<sp/>&apos;\0&apos;;\</highlight></codeline>
<codeline lineno="2341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>documentStack_.template<sp/>Pop&lt;Ch&gt;(1);\</highlight></codeline>
<codeline lineno="2342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>internal::PrintInvalidDocument(documentStack_.template<sp/>Bottom&lt;Ch&gt;());\</highlight></codeline>
<codeline lineno="2343"><highlight class="preprocessor">RAPIDJSON_MULTILINEMACRO_END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345" refid="schema_8h_1a722c98cfe486c35d086ea33144f4a3b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348" refid="schema_8h_1a25701b28a823cc7621f1e01ae7031007" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_(method,<sp/>arg1)\</highlight></codeline>
<codeline lineno="2349"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!valid_)<sp/>return<sp/>false;<sp/>\</highlight></codeline>
<codeline lineno="2350"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((!BeginValue()<sp/>&amp;&amp;<sp/>!GetContinueOnErrors())<sp/>||<sp/>(!CurrentSchema().method<sp/>arg1<sp/>&amp;&amp;<sp/>!GetContinueOnErrors()))<sp/>{\</highlight></codeline>
<codeline lineno="2351"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_();\</highlight></codeline>
<codeline lineno="2352"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>valid_<sp/>=<sp/>false;\</highlight></codeline>
<codeline lineno="2353"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight></codeline>
<codeline lineno="2355" refid="schema_8h_1af17aaed9cdb88ac6faa2b7ca7029da63" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_(method,<sp/>arg2)\</highlight></codeline>
<codeline lineno="2356"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>(Context*<sp/>context<sp/>=<sp/>schemaStack_.template<sp/>Bottom&lt;Context&gt;();<sp/>context<sp/>!=<sp/>schemaStack_.template<sp/>End&lt;Context&gt;();<sp/>context++)<sp/>{\</highlight></codeline>
<codeline lineno="2357"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(context-&gt;hasher)\</highlight></codeline>
<codeline lineno="2358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;HasherType*&gt;(context-&gt;hasher)-&gt;method<sp/>arg2;\</highlight></codeline>
<codeline lineno="2359"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(context-&gt;validators)\</highlight></codeline>
<codeline lineno="2360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(SizeType<sp/>i_<sp/>=<sp/>0;<sp/>i_<sp/>&lt;<sp/>context-&gt;validatorCount;<sp/>i_++)\</highlight></codeline>
<codeline lineno="2361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;GenericSchemaValidator*&gt;(context-&gt;validators[i_])-&gt;method<sp/>arg2;\</highlight></codeline>
<codeline lineno="2362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(context-&gt;patternPropertiesValidators)\</highlight></codeline>
<codeline lineno="2363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(SizeType<sp/>i_<sp/>=<sp/>0;<sp/>i_<sp/>&lt;<sp/>context-&gt;patternPropertiesValidatorCount;<sp/>i_++)\</highlight></codeline>
<codeline lineno="2364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;GenericSchemaValidator*&gt;(context-&gt;patternPropertiesValidators[i_])-&gt;method<sp/>arg2;\</highlight></codeline>
<codeline lineno="2365"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight></codeline>
<codeline lineno="2367" refid="schema_8h_1ab1cb400ef08159e3e417f03c8adefaff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HANDLE_END_(method,<sp/>arg2)\</highlight></codeline>
<codeline lineno="2368"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>valid_<sp/>=<sp/>(EndValue()<sp/>||<sp/>GetContinueOnErrors())<sp/>&amp;&amp;<sp/>(!outputHandler_<sp/>||<sp/>outputHandler_-&gt;method<sp/>arg2);\</highlight></codeline>
<codeline lineno="2369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>valid_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371" refid="schema_8h_1a8c347782f5ba7abab760e5dbc5795c41" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HANDLE_VALUE_(method,<sp/>arg1,<sp/>arg2)<sp/>\</highlight></codeline>
<codeline lineno="2372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_<sp/><sp/><sp/>(method,<sp/>arg1);\</highlight></codeline>
<codeline lineno="2373"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_(method,<sp/>arg2);\</highlight></codeline>
<codeline lineno="2374"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RAPIDJSON_SCHEMA_HANDLE_END_<sp/><sp/><sp/><sp/><sp/>(method,<sp/>arg2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight></codeline>
<codeline lineno="2376" refid="class_generic_schema_validator_1a7137af73e934f50c66cbb8a9aa802ea6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a7137af73e934f50c66cbb8a9aa802ea6" kindref="member">Null</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="schema_8h_1a8c347782f5ba7abab760e5dbc5795c41" kindref="member">RAPIDJSON_SCHEMA_HANDLE_VALUE_</ref>(<ref refid="class_generic_schema_validator_1a7137af73e934f50c66cbb8a9aa802ea6" kindref="member">Null</ref>,<sp/><sp/><sp/>(CurrentContext()),<sp/>(<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="2377" refid="class_generic_schema_validator_1aa25fa7456f2f308a105e400f01a4afde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1aa25fa7456f2f308a105e400f01a4afde" kindref="member">Bool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="schema_8h_1a8c347782f5ba7abab760e5dbc5795c41" kindref="member">RAPIDJSON_SCHEMA_HANDLE_VALUE_</ref>(<ref refid="class_generic_schema_validator_1aa25fa7456f2f308a105e400f01a4afde" kindref="member">Bool</ref>,<sp/><sp/><sp/>(CurrentContext(),<sp/>b),<sp/>(b));<sp/>}</highlight></codeline>
<codeline lineno="2378" refid="class_generic_schema_validator_1ad823c29990225661a4df69d34647b659" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ad823c29990225661a4df69d34647b659" kindref="member">Int</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="schema_8h_1a8c347782f5ba7abab760e5dbc5795c41" kindref="member">RAPIDJSON_SCHEMA_HANDLE_VALUE_</ref>(<ref refid="class_generic_schema_validator_1ad823c29990225661a4df69d34647b659" kindref="member">Int</ref>,<sp/><sp/><sp/><sp/>(CurrentContext(),<sp/>i),<sp/>(i));<sp/>}</highlight></codeline>
<codeline lineno="2379" refid="class_generic_schema_validator_1aa688665c5274f93543c84a4b6cabe8da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1aa688665c5274f93543c84a4b6cabe8da" kindref="member">Uint</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>u)<sp/><sp/><sp/>{<sp/><ref refid="schema_8h_1a8c347782f5ba7abab760e5dbc5795c41" kindref="member">RAPIDJSON_SCHEMA_HANDLE_VALUE_</ref>(<ref refid="class_generic_schema_validator_1aa688665c5274f93543c84a4b6cabe8da" kindref="member">Uint</ref>,<sp/><sp/><sp/>(CurrentContext(),<sp/>u),<sp/>(u));<sp/>}</highlight></codeline>
<codeline lineno="2380" refid="class_generic_schema_validator_1ac5a9e416e18129a7b787f251019a828f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ac5a9e416e18129a7b787f251019a828f" kindref="member">Int64</ref>(<ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref><sp/>i)<sp/><sp/><sp/>{<sp/><ref refid="schema_8h_1a8c347782f5ba7abab760e5dbc5795c41" kindref="member">RAPIDJSON_SCHEMA_HANDLE_VALUE_</ref>(<ref refid="class_generic_schema_validator_1ac5a9e416e18129a7b787f251019a828f" kindref="member">Int64</ref>,<sp/><sp/>(CurrentContext(),<sp/>i),<sp/>(i));<sp/>}</highlight></codeline>
<codeline lineno="2381" refid="class_generic_schema_validator_1abfc56c58cf0b65318e376fc5f2879292" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1abfc56c58cf0b65318e376fc5f2879292" kindref="member">Uint64</ref>(<ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>u)<sp/>{<sp/><ref refid="schema_8h_1a8c347782f5ba7abab760e5dbc5795c41" kindref="member">RAPIDJSON_SCHEMA_HANDLE_VALUE_</ref>(<ref refid="class_generic_schema_validator_1abfc56c58cf0b65318e376fc5f2879292" kindref="member">Uint64</ref>,<sp/>(CurrentContext(),<sp/>u),<sp/>(u));<sp/>}</highlight></codeline>
<codeline lineno="2382" refid="class_generic_schema_validator_1aed0532dbda3ac6f3ca7196af06066b86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1aed0532dbda3ac6f3ca7196af06066b86" kindref="member">Double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/><sp/><sp/>{<sp/><ref refid="schema_8h_1a8c347782f5ba7abab760e5dbc5795c41" kindref="member">RAPIDJSON_SCHEMA_HANDLE_VALUE_</ref>(<ref refid="class_generic_schema_validator_1aed0532dbda3ac6f3ca7196af06066b86" kindref="member">Double</ref>,<sp/>(CurrentContext(),<sp/>d),<sp/>(d));<sp/>}</highlight></codeline>
<codeline lineno="2383" refid="class_generic_schema_validator_1ae4f024145421d2c1dde08a9de528722a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ae4f024145421d2c1dde08a9de528722a" kindref="member">RawNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="schema_8h_1a8c347782f5ba7abab760e5dbc5795c41" kindref="member">RAPIDJSON_SCHEMA_HANDLE_VALUE_</ref>(<ref refid="class_generic_schema_validator_1a33cf3f83307a8fea38c3238ef75c3d58" kindref="member">String</ref>,<sp/>(CurrentContext(),<sp/>str,<sp/>length,<sp/>copy),<sp/>(str,<sp/>length,<sp/>copy));<sp/>}</highlight></codeline>
<codeline lineno="2385" refid="class_generic_schema_validator_1a33cf3f83307a8fea38c3238ef75c3d58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a33cf3f83307a8fea38c3238ef75c3d58" kindref="member">String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="schema_8h_1a8c347782f5ba7abab760e5dbc5795c41" kindref="member">RAPIDJSON_SCHEMA_HANDLE_VALUE_</ref>(<ref refid="class_generic_schema_validator_1a33cf3f83307a8fea38c3238ef75c3d58" kindref="member">String</ref>,<sp/>(CurrentContext(),<sp/>str,<sp/>length,<sp/>copy),<sp/>(str,<sp/>length,<sp/>copy));<sp/>}</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight></codeline>
<codeline lineno="2388" refid="class_generic_schema_validator_1a59972d612c3d37aae9a30222e428d216" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a59972d612c3d37aae9a30222e428d216" kindref="member">StartObject</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1a25701b28a823cc7621f1e01ae7031007" kindref="member">RAPIDJSON_SCHEMA_HANDLE_BEGIN_</ref>(<ref refid="class_generic_schema_validator_1a59972d612c3d37aae9a30222e428d216" kindref="member">StartObject</ref>,<sp/>(CurrentContext()));</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1af17aaed9cdb88ac6faa2b7ca7029da63" kindref="member">RAPIDJSON_SCHEMA_HANDLE_PARALLEL_</ref>(<ref refid="class_generic_schema_validator_1a59972d612c3d37aae9a30222e428d216" kindref="member">StartObject</ref>,<sp/>());</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>valid_<sp/>=<sp/>!outputHandler_<sp/>||<sp/>outputHandler_-&gt;StartObject();</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2394" refid="class_generic_schema_validator_1a6d08b458216ec4a09eed9d94800d05c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a6d08b458216ec4a09eed9d94800d05c1" kindref="member">Key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)<sp/>{</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valid_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AppendToken(str,<sp/>len);</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CurrentSchema().<ref refid="class_generic_schema_validator_1a6d08b458216ec4a09eed9d94800d05c1" kindref="member">Key</ref>(CurrentContext(),<sp/>str,<sp/>len,<sp/>copy)<sp/>&amp;&amp;<sp/>!GetContinueOnErrors())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>valid_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1af17aaed9cdb88ac6faa2b7ca7029da63" kindref="member">RAPIDJSON_SCHEMA_HANDLE_PARALLEL_</ref>(<ref refid="class_generic_schema_validator_1a6d08b458216ec4a09eed9d94800d05c1" kindref="member">Key</ref>,<sp/>(str,<sp/>len,<sp/>copy));</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>valid_<sp/>=<sp/>!outputHandler_<sp/>||<sp/>outputHandler_-&gt;Key(str,<sp/>len,<sp/>copy);</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2402" refid="class_generic_schema_validator_1aa89e14f0f731f6acdec22a0f7e003037" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1aa89e14f0f731f6acdec22a0f7e003037" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>memberCount)<sp/>{</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valid_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1af17aaed9cdb88ac6faa2b7ca7029da63" kindref="member">RAPIDJSON_SCHEMA_HANDLE_PARALLEL_</ref>(<ref refid="class_generic_schema_validator_1aa89e14f0f731f6acdec22a0f7e003037" kindref="member">EndObject</ref>,<sp/>(memberCount));</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CurrentSchema().<ref refid="class_generic_schema_validator_1aa89e14f0f731f6acdec22a0f7e003037" kindref="member">EndObject</ref>(CurrentContext(),<sp/>memberCount)<sp/>&amp;&amp;<sp/>!GetContinueOnErrors())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>valid_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab1cb400ef08159e3e417f03c8adefaff" kindref="member">RAPIDJSON_SCHEMA_HANDLE_END_</ref>(<ref refid="class_generic_schema_validator_1aa89e14f0f731f6acdec22a0f7e003037" kindref="member">EndObject</ref>,<sp/>(memberCount));</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight></codeline>
<codeline lineno="2409" refid="class_generic_schema_validator_1aba13751f802531ed8cbd850778ea993c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1aba13751f802531ed8cbd850778ea993c" kindref="member">StartArray</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1a25701b28a823cc7621f1e01ae7031007" kindref="member">RAPIDJSON_SCHEMA_HANDLE_BEGIN_</ref>(<ref refid="class_generic_schema_validator_1aba13751f802531ed8cbd850778ea993c" kindref="member">StartArray</ref>,<sp/>(CurrentContext()));</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1af17aaed9cdb88ac6faa2b7ca7029da63" kindref="member">RAPIDJSON_SCHEMA_HANDLE_PARALLEL_</ref>(<ref refid="class_generic_schema_validator_1aba13751f802531ed8cbd850778ea993c" kindref="member">StartArray</ref>,<sp/>());</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>valid_<sp/>=<sp/>!outputHandler_<sp/>||<sp/>outputHandler_-&gt;StartArray();</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2415" refid="class_generic_schema_validator_1a67b501f0f65d40e0086ca8216882b34f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a67b501f0f65d40e0086ca8216882b34f" kindref="member">EndArray</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>elementCount)<sp/>{</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valid_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1af17aaed9cdb88ac6faa2b7ca7029da63" kindref="member">RAPIDJSON_SCHEMA_HANDLE_PARALLEL_</ref>(<ref refid="class_generic_schema_validator_1a67b501f0f65d40e0086ca8216882b34f" kindref="member">EndArray</ref>,<sp/>(elementCount));</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CurrentSchema().<ref refid="class_generic_schema_validator_1a67b501f0f65d40e0086ca8216882b34f" kindref="member">EndArray</ref>(CurrentContext(),<sp/>elementCount)<sp/>&amp;&amp;<sp/>!GetContinueOnErrors())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>valid_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ab1cb400ef08159e3e417f03c8adefaff" kindref="member">RAPIDJSON_SCHEMA_HANDLE_END_</ref>(<ref refid="class_generic_schema_validator_1a67b501f0f65d40e0086ca8216882b34f" kindref="member">EndArray</ref>,<sp/>(elementCount));</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>RAPIDJSON_SCHEMA_HANDLE_VALUE_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implementation<sp/>of<sp/>ISchemaStateFactory&lt;SchemaType&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2428" refid="class_generic_schema_validator_1ad4afd8cdb09a6f47a23406894f77ee8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>ISchemaValidator*<sp/><ref refid="class_generic_schema_validator_1ad4afd8cdb09a6f47a23406894f77ee8a" kindref="member">CreateSchemaValidator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" kindref="member">SchemaType</ref>&amp;<sp/>root,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inheritContinueOnErrors)<sp/>{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ISchemaValidator*<sp/>sv<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(GetStateAllocator().Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>)))<sp/><ref refid="class_generic_schema_validator_1a202ee6fdbe5ae9eab3e77a81ecdfeb6d" kindref="member">GenericSchemaValidator</ref>(*schemaDocument_,<sp/>root,<sp/>documentStack_.template<sp/>Bottom&lt;char&gt;(),<sp/>documentStack_.GetSize(),</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth_<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;GetStateAllocator());</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sv-&gt;SetValidateFlags(inheritContinueOnErrors<sp/>?<sp/><ref refid="class_generic_schema_validator_1a318bf1cf98d2f18074edd336b1bc684d" kindref="member">GetValidateFlags</ref>()<sp/>:<sp/><ref refid="class_generic_schema_validator_1a318bf1cf98d2f18074edd336b1bc684d" kindref="member">GetValidateFlags</ref>()<sp/>&amp;<sp/>~(unsigned)<ref refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942ab0d30a1c30a84eb96f5dda97abbde002" kindref="member">kValidateContinueOnErrorFlag</ref>);</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sv;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight></codeline>
<codeline lineno="2438" refid="class_generic_schema_validator_1ae24fa298e328f1fd7dda2ef6267156d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ae24fa298e328f1fd7dda2ef6267156d2" kindref="member">DestroySchemaValidator</ref>(ISchemaValidator*<sp/>validator)<sp/>{</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>*<sp/>v<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(validator);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;<ref refid="class_generic_schema_validator_1a3eab83d483a50efb0c0390adf3291963" kindref="member">~GenericSchemaValidator</ref>();</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">StateAllocator::Free</ref>(v);</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight></codeline>
<codeline lineno="2444" refid="class_generic_schema_validator_1a48ecc252813e60a0efdb4eb44b193bd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="class_generic_schema_validator_1a48ecc252813e60a0efdb4eb44b193bd5" kindref="member">CreateHasher</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(GetStateAllocator().Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classinternal_1_1_hasher" kindref="compound">HasherType</ref>)))<sp/><ref refid="classinternal_1_1_hasher" kindref="compound">HasherType</ref>(&amp;GetStateAllocator());</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight></codeline>
<codeline lineno="2448" refid="class_generic_schema_validator_1ac01c45982a1f512e1ca06fe5544b0c0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/><ref refid="class_generic_schema_validator_1ac01c45982a1f512e1ca06fe5544b0c0f" kindref="member">GetHashCode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hasher)<sp/>{</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classinternal_1_1_hasher" kindref="compound">HasherType</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(hasher)-&gt;<ref refid="class_generic_schema_validator_1ac01c45982a1f512e1ca06fe5544b0c0f" kindref="member">GetHashCode</ref>();</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight></codeline>
<codeline lineno="2452" refid="class_generic_schema_validator_1a007eef58be575dc562543d069ddd2710" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a007eef58be575dc562543d069ddd2710" kindref="member">DestroryHasher</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hasher)<sp/>{</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_hasher" kindref="compound">HasherType</ref>*<sp/>h<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classinternal_1_1_hasher" kindref="compound">HasherType</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(hasher);</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;~HasherType();</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">StateAllocator::Free</ref>(h);</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"></highlight></codeline>
<codeline lineno="2458" refid="class_generic_schema_validator_1a9f983043d6bd1a12d9e2dac756dabbae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="class_generic_schema_validator_1a9f983043d6bd1a12d9e2dac756dabbae" kindref="member">MallocState</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetStateAllocator().Malloc(size);</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight></codeline>
<codeline lineno="2462" refid="class_generic_schema_validator_1a4e250737a411af2969a9e585a7da4187" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a4e250737a411af2969a9e585a7da4187" kindref="member">FreeState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">StateAllocator::Free</ref>(p);</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaType::Context<sp/>Context;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;UTF8&lt;&gt;</ref>,<sp/>StateAllocator&gt;<sp/>HashCodeArray;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classinternal_1_1_hasher" kindref="compound">internal::Hasher&lt;EncodingType, StateAllocator&gt;</ref><sp/>HasherType;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1a202ee6fdbe5ae9eab3e77a81ecdfeb6d" kindref="member">GenericSchemaValidator</ref>(<sp/></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaDocumentType&amp;<sp/>schemaDocument,</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" kindref="member">SchemaType</ref>&amp;<sp/>root,</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>basePath,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>basePathSize,</highlight></codeline>
<codeline lineno="2475"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="schema_8h_1a40c690b6fd0b7ae8d8484b613255cc72" kindref="member">RAPIDJSON_SCHEMA_VERBOSE</ref></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>depth,</highlight></codeline>
<codeline lineno="2477"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StateAllocator*<sp/>allocator<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>schemaStackCapacity<sp/>=<sp/>kDefaultSchemaStackCapacity,</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>documentStackCapacity<sp/>=<sp/>kDefaultDocumentStackCapacity)</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument_(&amp;schemaDocument),</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_(root),</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateAllocator_(allocator),</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownStateAllocator_(0),</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaStack_(allocator,<sp/>schemaStackCapacity),</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentStack_(allocator,<sp/>documentStackCapacity),</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputHandler_(0),</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>),</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_(),</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>missingDependents_(),</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_(true),</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_(<ref refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942a70564fe50c13963b485000be542c52c9" kindref="member">kValidateDefaultFlags</ref>)</highlight></codeline>
<codeline lineno="2494"><highlight class="normal">#if<sp/><ref refid="schema_8h_1a40c690b6fd0b7ae8d8484b613255cc72" kindref="member">RAPIDJSON_SCHEMA_VERBOSE</ref></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>depth_(depth)</highlight></codeline>
<codeline lineno="2496"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basePath<sp/>&amp;&amp;<sp/>basePathSize)</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(documentStack_.template<sp/>Push&lt;char&gt;(basePathSize),<sp/>basePath,<sp/>basePathSize);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/>StateAllocator&amp;<sp/>GetStateAllocator()<sp/>{</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stateAllocator_)</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateAllocator_<sp/>=<sp/>ownStateAllocator_<sp/>=<sp/><ref refid="rapidjson_8h_1abdc7cd7902748ffe6626d71c59a73c3b" kindref="member">RAPIDJSON_NEW</ref>(StateAllocator)();</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*stateAllocator_;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetContinueOnErrors()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags_<sp/>&amp;<sp/><ref refid="schema_8h_1a380a56f9b589025b27a565de4c4a2942ab0d30a1c30a84eb96f5dda97abbde002" kindref="member">kValidateContinueOnErrorFlag</ref>;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>BeginValue()<sp/>{</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(schemaStack_.Empty())</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushSchema(root_);</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CurrentContext().inArray)</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinternal_1_1_token_helper" kindref="compound">internal::TokenHelper&lt;internal::Stack&lt;StateAllocator&gt;</ref>,<sp/><ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>&gt;::AppendIndexToken(documentStack_,<sp/>CurrentContext().arrayElementIndex);</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CurrentSchema().BeginValue(CurrentContext())<sp/>&amp;&amp;<sp/>!GetContinueOnErrors())</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count<sp/>=<sp/>CurrentContext().patternPropertiesSchemaCount;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" kindref="member">SchemaType</ref>**<sp/>sa<sp/>=<sp/>CurrentContext().patternPropertiesSchemas;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context::PatternValidatorType<sp/>patternValidatorType<sp/>=<sp/>CurrentContext().valuePatternValidatorType;</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valueUniqueness<sp/>=<sp/>CurrentContext().valueUniqueness;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c" kindref="member">RAPIDJSON_ASSERT</ref>(CurrentContext().valueSchema);</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PushSchema(*CurrentContext().valueSchema);</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentContext().objectPatternValidatorType<sp/>=<sp/>patternValidatorType;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ISchemaValidator**&amp;<sp/>va<sp/>=<sp/>CurrentContext().patternPropertiesValidators;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>&amp;<sp/>validatorCount<sp/>=<sp/>CurrentContext().patternPropertiesValidatorCount;</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ISchemaValidator**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_generic_schema_validator_1a9f983043d6bd1a12d9e2dac756dabbae" kindref="member">MallocState</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ISchemaValidator*)<sp/>*<sp/>count));</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va[validatorCount++]<sp/>=<sp/><ref refid="class_generic_schema_validator_1ad4afd8cdb09a6f47a23406894f77ee8a" kindref="member">CreateSchemaValidator</ref>(*sa[i],<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Inherit<sp/>continueOnError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentContext().arrayUniqueness<sp/>=<sp/>valueUniqueness;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EndValue()<sp/>{</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CurrentSchema().EndValue(CurrentContext())<sp/>&amp;&amp;<sp/>!GetContinueOnErrors())</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer&lt;EncodingType&gt;</ref><sp/>sb;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemaDocument_-&gt;GetPointer(&amp;CurrentSchema()).Stringify(sb);</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*documentStack_.template<sp/>Push&lt;Ch&gt;()<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentStack_.template<sp/>Pop&lt;Ch&gt;(1);</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal::PrintValidatorPointers(depth_,<sp/>sb.<ref refid="class_generic_string_buffer_1a42079865bab1deb930c6cff7d491c719" kindref="member">GetString</ref>(),<sp/>documentStack_.template<sp/>Bottom&lt;Ch&gt;());</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>hasher<sp/>=<sp/>CurrentContext().hasher;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>h<sp/>=<sp/>hasher<sp/>&amp;&amp;<sp/>CurrentContext().arrayUniqueness<sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">HasherType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(hasher)-&gt;<ref refid="class_generic_schema_validator_1ac01c45982a1f512e1ca06fe5544b0c0f" kindref="member">GetHashCode</ref>()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PopSchema();</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!schemaStack_.Empty())<sp/>{</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Context&amp;<sp/>context<sp/>=<sp/>CurrentContext();</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>check<sp/>uniqueness<sp/>if<sp/>there<sp/>is<sp/>a<sp/>hasher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasher<sp/>&amp;&amp;<sp/>context.valueUniqueness)<sp/>{</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HashCodeArray*<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">HashCodeArray*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(context.arrayElementHashCodes);</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>)</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurrentContext().arrayElementHashCodes<sp/>=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(GetStateAllocator().Malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(HashCodeArray)))<sp/>HashCodeArray(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>);</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" kindref="member">HashCodeArray::ConstValueIterator</ref><sp/>itr<sp/>=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>-&gt;Begin();<sp/>itr<sp/>!=<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>-&gt;End();<sp/>++itr)</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr-&gt;GetUint64()<sp/>==<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1a82aa865146069e3ba5010d25346a71f2" kindref="member">DuplicateItems</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(itr<sp/>-<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>-&gt;Begin()),<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>-&gt;Size());</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cleanup<sp/>before<sp/>returning<sp/>if<sp/>continuing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetContinueOnErrors())<sp/>{</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>-&gt;PushBack(h,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!documentStack_.Empty()<sp/>&amp;&amp;<sp/>*documentStack_.template<sp/>Pop&lt;Ch&gt;(1)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4" kindref="member">RAPIDJSON_INVALID_KEYWORD_RETURN</ref>(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa35159c760856953cbd62258140d8d498" kindref="member">kValidateErrorUniqueItems</ref>);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>-&gt;PushBack(h,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>last<sp/>token<sp/>of<sp/>document<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!documentStack_.Empty()<sp/>&amp;&amp;<sp/>*documentStack_.template<sp/>Pop&lt;Ch&gt;(1)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AppendToken(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentStack_.template<sp/>Reserve&lt;Ch&gt;(1<sp/>+<sp/>len<sp/>*<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>worst<sp/>case<sp/>all<sp/>characters<sp/>are<sp/>escaped<sp/>as<sp/>two<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*documentStack_.template<sp/>PushUnsafe&lt;Ch&gt;()<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*documentStack_.template<sp/>PushUnsafe&lt;Ch&gt;()<sp/>=<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*documentStack_.template<sp/>PushUnsafe&lt;Ch&gt;()<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*documentStack_.template<sp/>PushUnsafe&lt;Ch&gt;()<sp/>=<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*documentStack_.template<sp/>PushUnsafe&lt;Ch&gt;()<sp/>=<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*documentStack_.template<sp/>PushUnsafe&lt;Ch&gt;()<sp/>=<sp/>str[i];</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PushSchema(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" kindref="member">SchemaType</ref>&amp;<sp/>schema)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(schemaStack_.template<sp/>Push&lt;Context&gt;())<sp/>Context(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;schema);<sp/>}</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/>RAPIDJSON_FORCEINLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PopSchema()<sp/>{</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Context*<sp/>c<sp/>=<sp/>schemaStack_.template<sp/>Pop&lt;Context&gt;(1);</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HashCodeArray*<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">HashCodeArray*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(c-&gt;arrayElementHashCodes))<sp/>{</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>-&gt;~HashCodeArray();</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e" kindref="member">StateAllocator::Free</ref>(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;~Context();</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddErrorInstanceLocation(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>result,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parent)<sp/>{</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer&lt;EncodingType&gt;</ref><sp/>sb;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref><sp/>instancePointer<sp/>=<sp/><ref refid="class_generic_schema_validator_1ac10a88c4dc138bbdbe2afd041658a3b0" kindref="member">GetInvalidDocumentPointer</ref>();</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((parent<sp/>&amp;&amp;<sp/>instancePointer.GetTokenCount()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref>(instancePointer.GetTokens(),<sp/>instancePointer.GetTokenCount()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>instancePointer).StringifyUriFragment(sb);</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>instanceRef(sb.<ref refid="class_generic_string_buffer_1a42079865bab1deb930c6cff7d491c719" kindref="member">GetString</ref>(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sb.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>)),</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.AddMember(GetInstanceRefString(),<sp/>instanceRef,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddErrorSchemaLocation(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>result,<sp/><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref><sp/>schema<sp/>=<sp/><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer&lt;EncodingType&gt;</ref><sp/>sb;</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>len<sp/>=<sp/>CurrentSchema().GetURI().GetStringLength();</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len)<sp/>memcpy(sb.<ref refid="class_generic_string_buffer_1a80af78c43da93126a940a40d1889278a" kindref="member">Push</ref>(len),<sp/>CurrentSchema().GetURI().GetString(),<sp/>len<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>));</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(schema.GetTokenCount())<sp/>schema.StringifyUriFragment(sb);</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8" kindref="member">GetInvalidSchemaPointer</ref>().StringifyUriFragment(sb);</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>schemaRef(sb.<ref refid="class_generic_string_buffer_1a42079865bab1deb930c6cff7d491c719" kindref="member">GetString</ref>(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sb.<ref refid="class_generic_string_buffer_1a725e862b9a78375f5363b0b61ad789f3" kindref="member">GetSize</ref>()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref>)),</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.AddMember(GetSchemaRefString(),<sp/>schemaRef,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddErrorCode(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>result,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref><sp/>code)<sp/>{</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.AddMember(GetErrorCodeString(),<sp/>code,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddError(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>keyword,<sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>error)<sp/>{</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">ValueType::MemberIterator</ref><sp/>member<sp/>=<sp/>error_.FindMember(keyword);</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(member<sp/>==<sp/>error_.MemberEnd())</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_.AddMember(keyword,<sp/>error,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(member-&gt;value.IsObject())<sp/>{</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>errors(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>);</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors.PushBack(member-&gt;value,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>member-&gt;value<sp/>=<sp/>errors;</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>member-&gt;value.PushBack(error,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddCurrentError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref><sp/>code,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddErrorCode(currentError_,<sp/>code);</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddErrorInstanceLocation(currentError_,<sp/>parent);</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddErrorSchemaLocation(currentError_);</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddError(<ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(SchemaType::GetValidateErrorKeyword(code),<sp/>GetStateAllocator(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">).Move(),<sp/>currentError_);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MergeError(<ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_generic_member_iterator" kindref="compound">ValueType::MemberIterator</ref><sp/>it<sp/>=<sp/>other.MemberBegin(),<sp/>end<sp/>=<sp/>other.MemberEnd();<sp/>it<sp/>!=<sp/>end;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddError(it-&gt;name,<sp/>it-&gt;value);</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddNumberError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref><sp/>code,<sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/>actual,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref>&amp;<sp/>expected,</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f" kindref="member">SchemaType::ValueType</ref>&amp;<sp/>(*exclusive)()<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.SetObject();</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.AddMember(GetActualString(),<sp/>actual,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.AddMember(GetExpectedString(),<sp/><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(expected,<sp/>GetStateAllocator()).Move(),<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exclusive)</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.AddMember(<ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref>(exclusive(),<sp/>GetStateAllocator()).Move(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddCurrentError(code);</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddErrorArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref><sp/>code,</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ISchemaValidator**<sp/>subvalidators,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>errors(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8" kindref="member">kArrayType</ref>);</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors.PushBack(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(subvalidators[i])-&gt;<ref refid="class_generic_schema_validator_1a21c0ad159e91398d222bab4d91d4c5dd" kindref="member">GetError</ref>(),<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.SetObject();</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentError_.AddMember(GetErrorsString(),<sp/>errors,<sp/>GetStateAllocator());</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddCurrentError(code);</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" kindref="member">SchemaType</ref>&amp;<sp/>CurrentSchema()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*schemaStack_.template<sp/>Top&lt;Context&gt;()-&gt;schema;<sp/>}</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/>Context&amp;<sp/>CurrentContext()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*schemaStack_.template<sp/>Top&lt;Context&gt;();<sp/>}</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context&amp;<sp/>CurrentContext()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*schemaStack_.template<sp/>Top&lt;Context&gt;();<sp/>}</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kDefaultSchemaStackCapacity<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kDefaultDocumentStackCapacity<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaDocumentType*<sp/>schemaDocument_;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" kindref="member">SchemaType</ref>&amp;<sp/>root_;</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/>StateAllocator*<sp/>stateAllocator_;</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/>StateAllocator*<sp/>ownStateAllocator_;</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;StateAllocator&gt;</ref><sp/>schemaStack_;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;StateAllocator&gt;</ref><sp/>documentStack_;<sp/><sp/></highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputHandler*<sp/>outputHandler_;</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>error_;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>currentError_;</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>missingDependents_;</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid_;</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flags_;</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>depth_;</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"></highlight></codeline>
<codeline lineno="2712" refid="schema_8h_1a09740efe5c13e9c508a4f067d85aa8c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator&lt;SchemaDocument&gt;</ref><sp/><ref refid="schema_8h_1a09740efe5c13e9c508a4f067d85aa8c0" kindref="member">SchemaValidator</ref>;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="comment">//<sp/>SchemaValidatingReader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parseFlags,</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream,</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SourceEncoding,</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType<sp/>=<sp/><ref refid="schema_8h_1a49355f280272b969cfd756ef556935c4" kindref="member">SchemaDocument</ref>,</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StackAllocator<sp/>=<sp/><ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>&gt;</highlight></codeline>
<codeline lineno="2733" refid="class_schema_validating_reader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_schema_validating_reader" kindref="compound">SchemaValidatingReader</ref><sp/>{</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2735" refid="class_schema_validating_reader_1a30ecf1b20ca5a1b79e0d5f4ceb3bf198" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SchemaDocumentType::PointerType<sp/><ref refid="class_schema_validating_reader_1a30ecf1b20ca5a1b79e0d5f4ceb3bf198" kindref="member">PointerType</ref>;</highlight></codeline>
<codeline lineno="2736" refid="class_schema_validating_reader_1a6eb6f887a49dbb400800ab4fc01f02c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputStream::Ch<sp/><ref refid="class_schema_validating_reader_1a6eb6f887a49dbb400800ab4fc01f02c7" kindref="member">Ch</ref>;</highlight></codeline>
<codeline lineno="2737" refid="class_schema_validating_reader_1af08b51fcef602c68d95769c35ae606be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">GenericValue&lt;SourceEncoding, StackAllocator&gt;</ref><sp/><ref refid="class_schema_validating_reader_1af08b51fcef602c68d95769c35ae606be" kindref="member">ValueType</ref>;</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"></highlight></codeline>
<codeline lineno="2744" refid="class_schema_validating_reader_1ae7945b71687ad3dd13b9c3d096892eac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_schema_validating_reader_1ae7945b71687ad3dd13b9c3d096892eac" kindref="member">SchemaValidatingReader</ref>(InputStream&amp;<sp/>is,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaDocumentType&amp;<sp/>sd)<sp/>:<sp/>is_(is),<sp/>sd_(sd),<sp/>invalidSchemaKeyword_(),<sp/>invalidSchemaCode_(<ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aac15ca121db8911126960c0672dfe2a2e" kindref="member">kValidateErrorNone</ref>),<sp/>error_(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f" kindref="member">kObjectType</ref>),<sp/>isValid_(true)<sp/>{}</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Handler&gt;</highlight></codeline>
<codeline lineno="2747" refid="class_schema_validating_reader_1a7135d8d53aacd850fbce2901cca4a4c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_schema_validating_reader_1a7135d8d53aacd850fbce2901cca4a4c3" kindref="member">operator()</ref>(<ref refid="classrapidjson_1_1_handler" kindref="compound">Handler</ref>&amp;<sp/>handler)<sp/>{</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">GenericReader&lt;SourceEncoding, typename SchemaDocumentType::EncodingType, StackAllocator&gt;</ref><sp/>reader;</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator&lt;SchemaDocumentType, Handler&gt;</ref><sp/>validator(sd_,<sp/>handler);</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseResult_<sp/>=<sp/>reader.template<sp/>Parse&lt;parseFlags&gt;(is_,<sp/>validator);</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isValid_<sp/>=<sp/>validator.<ref refid="class_generic_schema_validator_1a8ebda4da3d8b1fc41e57f15dd62e8f19" kindref="member">IsValid</ref>();</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isValid_)<sp/>{</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalidSchemaPointer_<sp/>=<sp/><ref refid="class_schema_validating_reader_1a30ecf1b20ca5a1b79e0d5f4ceb3bf198" kindref="member">PointerType</ref>();</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalidSchemaKeyword_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalidDocumentPointer_<sp/>=<sp/><ref refid="class_schema_validating_reader_1a30ecf1b20ca5a1b79e0d5f4ceb3bf198" kindref="member">PointerType</ref>();</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_.SetObject();</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalidSchemaPointer_<sp/>=<sp/>validator.<ref refid="class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8" kindref="member">GetInvalidSchemaPointer</ref>();</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalidSchemaKeyword_<sp/>=<sp/>validator.<ref refid="class_generic_schema_validator_1ab5980d72c786b81ab907526fdf4172f3" kindref="member">GetInvalidSchemaKeyword</ref>();</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalidSchemaCode_<sp/>=<sp/>validator.<ref refid="class_generic_schema_validator_1aeba2093eb93f77b239e9b4c27219c982" kindref="member">GetInvalidSchemaCode</ref>();</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalidDocumentPointer_<sp/>=<sp/>validator.<ref refid="class_generic_schema_validator_1ac10a88c4dc138bbdbe2afd041658a3b0" kindref="member">GetInvalidDocumentPointer</ref>();</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_.CopyFrom(validator.<ref refid="class_generic_schema_validator_1a21c0ad159e91398d222bab4d91d4c5dd" kindref="member">GetError</ref>(),<sp/>allocator_);</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parseResult_;</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight></codeline>
<codeline lineno="2770" refid="class_schema_validating_reader_1acc40a173eed09563cb0abad84833e9b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref>&amp;<sp/><ref refid="class_schema_validating_reader_1acc40a173eed09563cb0abad84833e9b3" kindref="member">GetParseResult</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parseResult_;<sp/>}</highlight></codeline>
<codeline lineno="2771" refid="class_schema_validating_reader_1a3c04fa90a430a67a993a2b8876e89ff4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_schema_validating_reader_1a3c04fa90a430a67a993a2b8876e89ff4" kindref="member">IsValid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isValid_;<sp/>}</highlight></codeline>
<codeline lineno="2772" refid="class_schema_validating_reader_1a5bdb2a12bfff9952f7b89069cae6905c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_schema_validating_reader_1a30ecf1b20ca5a1b79e0d5f4ceb3bf198" kindref="member">PointerType</ref>&amp;<sp/><ref refid="class_schema_validating_reader_1a5bdb2a12bfff9952f7b89069cae6905c" kindref="member">GetInvalidSchemaPointer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>invalidSchemaPointer_;<sp/>}</highlight></codeline>
<codeline lineno="2773" refid="class_schema_validating_reader_1aa1dbb9886be16ee82c91a7293f9614e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_schema_validating_reader_1a6eb6f887a49dbb400800ab4fc01f02c7" kindref="member">Ch</ref>*<sp/><ref refid="class_schema_validating_reader_1aa1dbb9886be16ee82c91a7293f9614e5" kindref="member">GetInvalidSchemaKeyword</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>invalidSchemaKeyword_;<sp/>}</highlight></codeline>
<codeline lineno="2774" refid="class_schema_validating_reader_1a219ab1f4aa1623e0a8d67ff5d6cb54b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_schema_validating_reader_1a30ecf1b20ca5a1b79e0d5f4ceb3bf198" kindref="member">PointerType</ref>&amp;<sp/><ref refid="class_schema_validating_reader_1a219ab1f4aa1623e0a8d67ff5d6cb54b9" kindref="member">GetInvalidDocumentPointer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>invalidDocumentPointer_;<sp/>}</highlight></codeline>
<codeline lineno="2775" refid="class_schema_validating_reader_1ae9f1dde3317af2cf65ae165f060498b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref>&amp;<sp/><ref refid="class_schema_validating_reader_1ae9f1dde3317af2cf65ae165f060498b4" kindref="member">GetError</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error_;<sp/>}</highlight></codeline>
<codeline lineno="2776" refid="class_schema_validating_reader_1a625f4a209960ad79485d3c8e9bc23fbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref><sp/><ref refid="class_schema_validating_reader_1a625f4a209960ad79485d3c8e9bc23fbb" kindref="member">GetInvalidSchemaCode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>invalidSchemaCode_;<sp/>}</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/>InputStream&amp;<sp/>is_;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SchemaDocumentType&amp;<sp/>sd_;</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_parse_result" kindref="compound">ParseResult</ref><sp/>parseResult_;</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_schema_validating_reader_1a30ecf1b20ca5a1b79e0d5f4ceb3bf198" kindref="member">PointerType</ref><sp/>invalidSchemaPointer_;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_schema_validating_reader_1a6eb6f887a49dbb400800ab4fc01f02c7" kindref="member">Ch</ref>*<sp/>invalidSchemaKeyword_;</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_schema_validating_reader_1a30ecf1b20ca5a1b79e0d5f4ceb3bf198" kindref="member">PointerType</ref><sp/>invalidDocumentPointer_;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref><sp/>invalidSchemaCode_;</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/>StackAllocator<sp/>allocator_;</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_value" kindref="compound">ValueType</ref><sp/>error_;</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid_;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1" kindref="member">RAPIDJSON_NAMESPACE_END</ref></highlight></codeline>
<codeline lineno="2793"><highlight class="normal">RAPIDJSON_DIAG_POP</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RAPIDJSON_SCHEMA_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/rapidjson/include/rapidjson/schema.h"/>
  </compounddef>
</doxygen>
