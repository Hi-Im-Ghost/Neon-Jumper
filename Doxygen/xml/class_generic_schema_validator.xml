<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_generic_schema_validator" kind="class" language="C++" prot="public">
    <compoundname>GenericSchemaValidator</compoundname>
    <basecompoundref refid="classinternal_1_1_i_schema_state_factory" prot="public" virt="non-virtual">internal::ISchemaStateFactory&lt; SchemaDocumentType::SchemaType &gt;</basecompoundref>
    <basecompoundref refid="classinternal_1_1_i_schema_validator" prot="public" virt="non-virtual">internal::ISchemaValidator</basecompoundref>
    <basecompoundref refid="classinternal_1_1_i_validation_error_handler" prot="public" virt="non-virtual">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</basecompoundref>
    <includes refid="schema_8h" local="no">schema.h</includes>
    <templateparamlist>
      <param>
        <type>typename SchemaDocumentType</type>
      </param>
      <param>
        <type>typename OutputHandler</type>
        <defval><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;</defval>
      </param>
      <param>
        <type>typename StateAllocator</type>
        <defval><ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" prot="public" static="no">
        <type>SchemaDocumentType::SchemaType</type>
        <definition>typedef SchemaDocumentType::SchemaType GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::SchemaType</definition>
        <argsstring></argsstring>
        <name>SchemaType</name>
        <qualifiedname>GenericSchemaValidator::SchemaType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1994" column="53" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1994" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" prot="public" static="no">
        <type>SchemaDocumentType::PointerType</type>
        <definition>typedef SchemaDocumentType::PointerType GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::PointerType</definition>
        <argsstring></argsstring>
        <name>PointerType</name>
        <qualifiedname>GenericSchemaValidator::PointerType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1995" column="54" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1995" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_validator_1acf1c5361bb96da87d23167d8720b1ea5" prot="public" static="no">
        <type>SchemaType::EncodingType</type>
        <definition>typedef SchemaType::EncodingType GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EncodingType</definition>
        <argsstring></argsstring>
        <name>EncodingType</name>
        <qualifiedname>GenericSchemaValidator::EncodingType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1996" column="47" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1996" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" prot="public" static="no">
        <type>SchemaType::SValue</type>
        <definition>typedef SchemaType::SValue GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::SValue</definition>
        <argsstring></argsstring>
        <name>SValue</name>
        <qualifiedname>GenericSchemaValidator::SValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1997" column="41" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1997" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" prot="public" static="no">
        <type>EncodingType::Ch</type>
        <definition>typedef EncodingType::Ch GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Ch</definition>
        <argsstring></argsstring>
        <name>Ch</name>
        <qualifiedname>GenericSchemaValidator::Ch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1998" column="39" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1998" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_validator_1a604160fcd6af7582e0deccc205309dcf" prot="public" static="no">
        <type><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&lt; <ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref> &gt;</type>
        <definition>typedef GenericStringRef&lt;Ch&gt; GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StringRefType</definition>
        <argsstring></argsstring>
        <name>StringRefType</name>
        <qualifiedname>GenericSchemaValidator::StringRefType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1999" column="30" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1999" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" prot="public" static="no">
        <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref refid="class_generic_schema_validator_1acf1c5361bb96da87d23167d8720b1ea5" kindref="member">EncodingType</ref>, StateAllocator &gt;</type>
        <definition>typedef GenericValue&lt;EncodingType, StateAllocator&gt; GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::ValueType</definition>
        <argsstring></argsstring>
        <name>ValueType</name>
        <qualifiedname>GenericSchemaValidator::ValueType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2000" column="26" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2000" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_generic_schema_validator_1ac6403619afb8aa8729e1e15d8c34d350" prot="private" static="no">
        <type>SchemaType::Context</type>
        <definition>typedef SchemaType::Context GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Context</definition>
        <argsstring></argsstring>
        <name>Context</name>
        <qualifiedname>GenericSchemaValidator::Context</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2467" column="42" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_validator_1ae1cb713f267c2df2f8c5d4fbfe427ea4" prot="private" static="no">
        <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt;, StateAllocator &gt;</type>
        <definition>typedef GenericValue&lt;UTF8&lt;&gt;, StateAllocator&gt; GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::HashCodeArray</definition>
        <argsstring></argsstring>
        <name>HashCodeArray</name>
        <qualifiedname>GenericSchemaValidator::HashCodeArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2468" column="26" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_validator_1ab7df29495a3ba8f3f5dc828f90a40936" prot="private" static="no">
        <type><ref refid="classinternal_1_1_hasher" kindref="compound">internal::Hasher</ref>&lt; <ref refid="class_generic_schema_validator_1acf1c5361bb96da87d23167d8720b1ea5" kindref="member">EncodingType</ref>, StateAllocator &gt;</type>
        <definition>typedef internal::Hasher&lt;EncodingType, StateAllocator&gt; GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::HasherType</definition>
        <argsstring></argsstring>
        <name>HasherType</name>
        <qualifiedname>GenericSchemaValidator::HasherType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2469" column="30" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2469" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_generic_schema_validator_1aab8510602779c91bc5b55ea81fd7385b" prot="private" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::kDefaultSchemaStackCapacity</definition>
        <argsstring></argsstring>
        <name>kDefaultSchemaStackCapacity</name>
        <qualifiedname>GenericSchemaValidator::kDefaultSchemaStackCapacity</qualifiedname>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2693" column="25" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2693" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_validator_1a0052a86778575179422064167a95c405" prot="private" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::kDefaultDocumentStackCapacity</definition>
        <argsstring></argsstring>
        <name>kDefaultDocumentStackCapacity</name>
        <qualifiedname>GenericSchemaValidator::kDefaultDocumentStackCapacity</qualifiedname>
        <initializer>= 256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2694" column="25" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2694" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_generic_schema_validator_1a433e6fe22bea392d1dbd57e9f581bd7a" prot="private" static="no" mutable="no">
        <type>const SchemaDocumentType *</type>
        <definition>const SchemaDocumentType* GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::schemaDocument_</definition>
        <argsstring></argsstring>
        <name>schemaDocument_</name>
        <qualifiedname>GenericSchemaValidator::schemaDocument_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2695" column="30" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2695" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_validator_1a7517bd5334a8fc4696fe298dbab2ce31" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" kindref="member">SchemaType</ref> &amp;</type>
        <definition>const SchemaType&amp; GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::root_</definition>
        <argsstring></argsstring>
        <name>root_</name>
        <qualifiedname>GenericSchemaValidator::root_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2696" column="22" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2696" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_validator_1a1fea37905619d085cb3d3c6699b209a5" prot="private" static="no" mutable="no">
        <type>StateAllocator *</type>
        <definition>StateAllocator* GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::stateAllocator_</definition>
        <argsstring></argsstring>
        <name>stateAllocator_</name>
        <qualifiedname>GenericSchemaValidator::stateAllocator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2697" column="20" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2697" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_validator_1a1f8233bfa10ae88aac6137a0e979174b" prot="private" static="no" mutable="no">
        <type>StateAllocator *</type>
        <definition>StateAllocator* GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::ownStateAllocator_</definition>
        <argsstring></argsstring>
        <name>ownStateAllocator_</name>
        <qualifiedname>GenericSchemaValidator::ownStateAllocator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2698" column="20" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2698" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_validator_1ae5775fdd9f94b8a2581f774d97135670" prot="private" static="no" mutable="no">
        <type><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack</ref>&lt; StateAllocator &gt;</type>
        <definition>internal::Stack&lt;StateAllocator&gt; GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::schemaStack_</definition>
        <argsstring></argsstring>
        <name>schemaStack_</name>
        <qualifiedname>GenericSchemaValidator::schemaStack_</qualifiedname>
        <briefdescription>
<para>stack to store the current path of schema (BaseSchemaType *) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2699" column="21" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2699" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_validator_1a98a99734991555b5458398b01f0cce44" prot="private" static="no" mutable="no">
        <type><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack</ref>&lt; StateAllocator &gt;</type>
        <definition>internal::Stack&lt;StateAllocator&gt; GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::documentStack_</definition>
        <argsstring></argsstring>
        <name>documentStack_</name>
        <qualifiedname>GenericSchemaValidator::documentStack_</qualifiedname>
        <briefdescription>
<para>stack to store the current path of validating document (Ch) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2700" column="21" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2700" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_validator_1ac03855c6eb85ffcae993105082e09fc1" prot="private" static="no" mutable="no">
        <type>OutputHandler *</type>
        <definition>OutputHandler* GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::outputHandler_</definition>
        <argsstring></argsstring>
        <name>outputHandler_</name>
        <qualifiedname>GenericSchemaValidator::outputHandler_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2701" column="19" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2701" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_validator_1a9c3e6efc65a62225a83ae9d0f377c074" prot="private" static="no" mutable="no">
        <type><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref></type>
        <definition>ValueType GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::error_</definition>
        <argsstring></argsstring>
        <name>error_</name>
        <qualifiedname>GenericSchemaValidator::error_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2702" column="15" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2702" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_validator_1afa09db405ea6ce3f35d04401c89023f4" prot="private" static="no" mutable="no">
        <type><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref></type>
        <definition>ValueType GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::currentError_</definition>
        <argsstring></argsstring>
        <name>currentError_</name>
        <qualifiedname>GenericSchemaValidator::currentError_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2703" column="15" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_validator_1a08633a530070c002f9f0016991a22187" prot="private" static="no" mutable="no">
        <type><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref></type>
        <definition>ValueType GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::missingDependents_</definition>
        <argsstring></argsstring>
        <name>missingDependents_</name>
        <qualifiedname>GenericSchemaValidator::missingDependents_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2704" column="15" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2704" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_validator_1a637361bc6c37c60278576169f01c84bb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::valid_</definition>
        <argsstring></argsstring>
        <name>valid_</name>
        <qualifiedname>GenericSchemaValidator::valid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2705" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2705" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_validator_1ab56d66840b9f7afe8a806e31afa10a10" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::flags_</definition>
        <argsstring></argsstring>
        <name>flags_</name>
        <qualifiedname>GenericSchemaValidator::flags_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2706" column="14" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2706" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_generic_schema_validator_1a202ee6fdbe5ae9eab3e77a81ecdfeb6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GenericSchemaValidator</definition>
        <argsstring>(const SchemaDocumentType &amp;schemaDocument, StateAllocator *allocator=0, size_t schemaStackCapacity=kDefaultSchemaStackCapacity, size_t documentStackCapacity=kDefaultDocumentStackCapacity)</argsstring>
        <name>GenericSchemaValidator</name>
        <qualifiedname>GenericSchemaValidator::GenericSchemaValidator</qualifiedname>
        <param>
          <type>const SchemaDocumentType &amp;</type>
          <declname>schemaDocument</declname>
        </param>
        <param>
          <type>StateAllocator *</type>
          <declname>allocator</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>schemaStackCapacity</declname>
          <defval><ref refid="class_generic_schema_validator_1aab8510602779c91bc5b55ea81fd7385b" kindref="member">kDefaultSchemaStackCapacity</ref></defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>documentStackCapacity</declname>
          <defval><ref refid="class_generic_schema_validator_1a0052a86778575179422064167a95c405" kindref="member">kDefaultDocumentStackCapacity</ref></defval>
        </param>
        <briefdescription>
<para>Constructor without output handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schemaDocument</parametername>
</parameternamelist>
<parameterdescription>
<para>The schema document to conform to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocator</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional allocator for storing internal validation states. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schemaStackCapacity</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional initial capacity of schema path stack. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>documentStackCapacity</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional initial capacity of document path stack. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2009" column="5" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2009" bodyend="2031"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ac2027be8ca55b01cd6f38b45f4e233b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GenericSchemaValidator</definition>
        <argsstring>(const SchemaDocumentType &amp;schemaDocument, OutputHandler &amp;outputHandler, StateAllocator *allocator=0, size_t schemaStackCapacity=kDefaultSchemaStackCapacity, size_t documentStackCapacity=kDefaultDocumentStackCapacity)</argsstring>
        <name>GenericSchemaValidator</name>
        <qualifiedname>GenericSchemaValidator::GenericSchemaValidator</qualifiedname>
        <param>
          <type>const SchemaDocumentType &amp;</type>
          <declname>schemaDocument</declname>
        </param>
        <param>
          <type>OutputHandler &amp;</type>
          <declname>outputHandler</declname>
        </param>
        <param>
          <type>StateAllocator *</type>
          <declname>allocator</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>schemaStackCapacity</declname>
          <defval><ref refid="class_generic_schema_validator_1aab8510602779c91bc5b55ea81fd7385b" kindref="member">kDefaultSchemaStackCapacity</ref></defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>documentStackCapacity</declname>
          <defval><ref refid="class_generic_schema_validator_1a0052a86778575179422064167a95c405" kindref="member">kDefaultDocumentStackCapacity</ref></defval>
        </param>
        <briefdescription>
<para>Constructor with output handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schemaDocument</parametername>
</parameternamelist>
<parameterdescription>
<para>The schema document to conform to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocator</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional allocator for storing internal validation states. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schemaStackCapacity</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional initial capacity of schema path stack. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>documentStackCapacity</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional initial capacity of document path stack. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2040" column="5" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2040" bodyend="2063"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a3eab83d483a50efb0c0390adf3291963" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::~GenericSchemaValidator</definition>
        <argsstring>()</argsstring>
        <name>~GenericSchemaValidator</name>
        <qualifiedname>GenericSchemaValidator::~GenericSchemaValidator</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2066" column="5" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2066" bodyend="2069"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a49efbbe098cb77728be3d48cafed17e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <qualifiedname>GenericSchemaValidator::Reset</qualifiedname>
        <briefdescription>
<para>Reset the internal states. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2072" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2072" bodyend="2077"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a8374dd359e572f653c49293545ad3ef4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::ResetError</definition>
        <argsstring>()</argsstring>
        <name>ResetError</name>
        <qualifiedname>GenericSchemaValidator::ResetError</qualifiedname>
        <briefdescription>
<para>Reset the error state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2080" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2080" bodyend="2085"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1af4840dac2410bcfe73912c30eb95b875" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::SetValidateFlags</definition>
        <argsstring>(unsigned flags)</argsstring>
        <name>SetValidateFlags</name>
        <qualifiedname>GenericSchemaValidator::SetValidateFlags</qualifiedname>
        <reimplements refid="classinternal_1_1_i_schema_validator_1a29b7df0935c87630bbb70c1e19d4c722">SetValidateFlags</reimplements>
        <param>
          <type>unsigned</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Implementation of ISchemaValidator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2088" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2088" bodyend="2090"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a318bf1cf98d2f18074edd336b1bc684d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>unsigned</type>
        <definition>virtual unsigned GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetValidateFlags</definition>
        <argsstring>() const</argsstring>
        <name>GetValidateFlags</name>
        <qualifiedname>GenericSchemaValidator::GetValidateFlags</qualifiedname>
        <reimplements refid="classinternal_1_1_i_schema_validator_1aa27d587f8e6fa2b95235a6ffa077429d">GetValidateFlags</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2091" column="22" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2091" bodyend="2093"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a8ebda4da3d8b1fc41e57f15dd62e8f19" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <qualifiedname>GenericSchemaValidator::IsValid</qualifiedname>
        <reimplements refid="classinternal_1_1_i_schema_validator_1a94f61f24b1447497279ef12ee0127285">IsValid</reimplements>
        <briefdescription>
<para>Checks whether the current state is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2097" column="18" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2097" bodyend="2101"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a21c0ad159e91398d222bab4d91d4c5dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref> &amp;</type>
        <definition>ValueType &amp; GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetError</definition>
        <argsstring>()</argsstring>
        <name>GetError</name>
        <qualifiedname>GenericSchemaValidator::GetError</qualifiedname>
        <briefdescription>
<para>Gets the error object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2104" column="15" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2104" bodyend="2104"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ad7b8d71bd651c3da614a877816de7573" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref> &amp;</type>
        <definition>const ValueType &amp; GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetError</definition>
        <argsstring>() const</argsstring>
        <name>GetError</name>
        <qualifiedname>GenericSchemaValidator::GetError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2105" column="21" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2105" bodyend="2105"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref></type>
        <definition>PointerType GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetInvalidSchemaPointer</definition>
        <argsstring>() const</argsstring>
        <name>GetInvalidSchemaPointer</name>
        <qualifiedname>GenericSchemaValidator::GetInvalidSchemaPointer</qualifiedname>
        <briefdescription>
<para>Gets the JSON pointer pointed to the invalid schema. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2109" column="17" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2109" bodyend="2111"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ab5980d72c786b81ab907526fdf4172f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref> *</type>
        <definition>const Ch * GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetInvalidSchemaKeyword</definition>
        <argsstring>() const</argsstring>
        <name>GetInvalidSchemaKeyword</name>
        <qualifiedname>GenericSchemaValidator::GetInvalidSchemaKeyword</qualifiedname>
        <briefdescription>
<para>Gets the keyword of invalid schema. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2115" column="14" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2115" bodyend="2119"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1aeba2093eb93f77b239e9b4c27219c982" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref></type>
        <definition>ValidateErrorCode GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetInvalidSchemaCode</definition>
        <argsstring>() const</argsstring>
        <name>GetInvalidSchemaCode</name>
        <qualifiedname>GenericSchemaValidator::GetInvalidSchemaCode</qualifiedname>
        <briefdescription>
<para>Gets the error code of invalid schema. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2123" column="23" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2123" bodyend="2127"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ac10a88c4dc138bbdbe2afd041658a3b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref></type>
        <definition>PointerType GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetInvalidDocumentPointer</definition>
        <argsstring>() const</argsstring>
        <name>GetInvalidDocumentPointer</name>
        <qualifiedname>GenericSchemaValidator::GetInvalidDocumentPointer</qualifiedname>
        <briefdescription>
<para>Gets the JSON pointer pointed to the invalid value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2131" column="17" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2131" bodyend="2138"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ab2f08413a2b23d73d4bbd09c8ca1f547" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::NotMultipleOf</definition>
        <argsstring>(int64_t actual, const SValue &amp;expected)</argsstring>
        <name>NotMultipleOf</name>
        <qualifiedname>GenericSchemaValidator::NotMultipleOf</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a195a561f0bbbfb66961c9331a6afab39">NotMultipleOf</reimplements>
        <param>
          <type><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2140" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2140" bodyend="2142"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a5c59d25dc44d85404cc587ebfa7455cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::NotMultipleOf</definition>
        <argsstring>(uint64_t actual, const SValue &amp;expected)</argsstring>
        <name>NotMultipleOf</name>
        <qualifiedname>GenericSchemaValidator::NotMultipleOf</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1ad8bd123f154f4c39f48b366219878526">NotMultipleOf</reimplements>
        <param>
          <type><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2143" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2143" bodyend="2145"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ae5fc8a4545fed53955ec6c57b79ca949" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::NotMultipleOf</definition>
        <argsstring>(double actual, const SValue &amp;expected)</argsstring>
        <name>NotMultipleOf</name>
        <qualifiedname>GenericSchemaValidator::NotMultipleOf</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1ada3d2275ccdeb4874f34942d257af9c5">NotMultipleOf</reimplements>
        <param>
          <type>double</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2146" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2146" bodyend="2148"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a4c9c7db8a3488f84a5a86681ad1d8194" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AboveMaximum</definition>
        <argsstring>(int64_t actual, const SValue &amp;expected, bool exclusive)</argsstring>
        <name>AboveMaximum</name>
        <qualifiedname>GenericSchemaValidator::AboveMaximum</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a7dc32dfac536f8577cbcb702efde26d2">AboveMaximum</reimplements>
        <param>
          <type><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>exclusive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2149" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2149" bodyend="2152"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a9262c73768789eb7cf8dc271cfec7f96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AboveMaximum</definition>
        <argsstring>(uint64_t actual, const SValue &amp;expected, bool exclusive)</argsstring>
        <name>AboveMaximum</name>
        <qualifiedname>GenericSchemaValidator::AboveMaximum</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a78554707b14366d2ff7763290e1a6219">AboveMaximum</reimplements>
        <param>
          <type><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>exclusive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2153" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2153" bodyend="2156"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1abcf1f5b46bdae8ca20a80858d603483d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AboveMaximum</definition>
        <argsstring>(double actual, const SValue &amp;expected, bool exclusive)</argsstring>
        <name>AboveMaximum</name>
        <qualifiedname>GenericSchemaValidator::AboveMaximum</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a5b9e4690c26adbf4128b0b16f9e0625f">AboveMaximum</reimplements>
        <param>
          <type>double</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>exclusive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2157" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2157" bodyend="2160"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a15a12306bc14f16357b4f2edea8396b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::BelowMinimum</definition>
        <argsstring>(int64_t actual, const SValue &amp;expected, bool exclusive)</argsstring>
        <name>BelowMinimum</name>
        <qualifiedname>GenericSchemaValidator::BelowMinimum</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a5ad9849c01a0bfa923d37ef2f1b4c933">BelowMinimum</reimplements>
        <param>
          <type><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>exclusive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2161" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2161" bodyend="2164"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ad3db1f3852a1b2e6fada43fbcad401ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::BelowMinimum</definition>
        <argsstring>(uint64_t actual, const SValue &amp;expected, bool exclusive)</argsstring>
        <name>BelowMinimum</name>
        <qualifiedname>GenericSchemaValidator::BelowMinimum</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1aa7bbfd1a69ba08ae31f87cb96ab5ec04">BelowMinimum</reimplements>
        <param>
          <type><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>exclusive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2165" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2165" bodyend="2168"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1afdd4a9787239a6fc3eeb56d34fd531f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::BelowMinimum</definition>
        <argsstring>(double actual, const SValue &amp;expected, bool exclusive)</argsstring>
        <name>BelowMinimum</name>
        <qualifiedname>GenericSchemaValidator::BelowMinimum</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a921da9a7fa127035a2a259b19813230e">BelowMinimum</reimplements>
        <param>
          <type>double</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>exclusive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2169" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2169" bodyend="2172"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a227dce44e0684a73accbfb062200eb26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::TooLong</definition>
        <argsstring>(const Ch *str, SizeType length, SizeType expected)</argsstring>
        <name>TooLong</name>
        <qualifiedname>GenericSchemaValidator::TooLong</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2174" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2174" bodyend="2177"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a7711071f95ead18c0dd99f69c09a4c11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::TooShort</definition>
        <argsstring>(const Ch *str, SizeType length, SizeType expected)</argsstring>
        <name>TooShort</name>
        <qualifiedname>GenericSchemaValidator::TooShort</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2178" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2178" bodyend="2181"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1af1be05889e634936c223f24c6e5f6ec5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DoesNotMatch</definition>
        <argsstring>(const Ch *str, SizeType length)</argsstring>
        <name>DoesNotMatch</name>
        <qualifiedname>GenericSchemaValidator::DoesNotMatch</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2182" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2182" bodyend="2186"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a2d47a88a3d9fb82466b5bda480b6e70f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DisallowedItem</definition>
        <argsstring>(SizeType index)</argsstring>
        <name>DisallowedItem</name>
        <qualifiedname>GenericSchemaValidator::DisallowedItem</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a0ac36d4217d9a14205cbe392601f3ee7">DisallowedItem</reimplements>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2188" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2188" bodyend="2192"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1af39007d9bf43126dab231961a1c5064f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::TooFewItems</definition>
        <argsstring>(SizeType actualCount, SizeType expectedCount)</argsstring>
        <name>TooFewItems</name>
        <qualifiedname>GenericSchemaValidator::TooFewItems</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1afc144690ba0e24636a72f541efd32c3b">TooFewItems</reimplements>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>actualCount</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>expectedCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2193" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2193" bodyend="2196"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a78e85eeae0e2bdef827815672a7fbbc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::TooManyItems</definition>
        <argsstring>(SizeType actualCount, SizeType expectedCount)</argsstring>
        <name>TooManyItems</name>
        <qualifiedname>GenericSchemaValidator::TooManyItems</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a9371ca15622897a429971f69c07c47ef">TooManyItems</reimplements>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>actualCount</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>expectedCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2197" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2197" bodyend="2200"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a82aa865146069e3ba5010d25346a71f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DuplicateItems</definition>
        <argsstring>(SizeType index1, SizeType index2)</argsstring>
        <name>DuplicateItems</name>
        <qualifiedname>GenericSchemaValidator::DuplicateItems</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a3a0836796f39c946f31f87b80ddd6cf1">DuplicateItems</reimplements>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>index1</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>index2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2201" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2201" bodyend="2208"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ad7ca0a327420c110e9ee6e70b2cdbc87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::TooManyProperties</definition>
        <argsstring>(SizeType actualCount, SizeType expectedCount)</argsstring>
        <name>TooManyProperties</name>
        <qualifiedname>GenericSchemaValidator::TooManyProperties</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a3494e9d2bff94979649e186aba71b32e">TooManyProperties</reimplements>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>actualCount</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>expectedCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2210" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2210" bodyend="2213"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1aaebaf28aa289826a3c39dc953b0ca466" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::TooFewProperties</definition>
        <argsstring>(SizeType actualCount, SizeType expectedCount)</argsstring>
        <name>TooFewProperties</name>
        <qualifiedname>GenericSchemaValidator::TooFewProperties</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1adf515d2fad2e55bc0735a6fb16eec9e6">TooFewProperties</reimplements>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>actualCount</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>expectedCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2214" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2214" bodyend="2217"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a41c4d67e349561f13948a5045bfc50c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StartMissingProperties</definition>
        <argsstring>()</argsstring>
        <name>StartMissingProperties</name>
        <qualifiedname>GenericSchemaValidator::StartMissingProperties</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1ac0073bef86b572b4517876b304aada0f">StartMissingProperties</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2218" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2218" bodyend="2220"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a8d355eeb25364e414d9a2f8121aa0eaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddMissingProperty</definition>
        <argsstring>(const SValue &amp;name)</argsstring>
        <name>AddMissingProperty</name>
        <qualifiedname>GenericSchemaValidator::AddMissingProperty</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a3a2165f53ab565e052bcd35b6d19e473">AddMissingProperty</reimplements>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2221" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2221" bodyend="2223"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a557b7aa531ff94a6355fed8f8575fed5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EndMissingProperties</definition>
        <argsstring>()</argsstring>
        <name>EndMissingProperties</name>
        <qualifiedname>GenericSchemaValidator::EndMissingProperties</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a3a01eec1a969cfb600340a2bad157c9c">EndMissingProperties</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2224" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2224" bodyend="2232"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a29fa7c6f787450b2df1f9d440436aeab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::PropertyViolations</definition>
        <argsstring>(ISchemaValidator **subvalidators, SizeType count)</argsstring>
        <name>PropertyViolations</name>
        <qualifiedname>GenericSchemaValidator::PropertyViolations</qualifiedname>
        <param>
          <type>ISchemaValidator **</type>
          <declname>subvalidators</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2233" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2233" bodyend="2236"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a44f06b99edfb650c6088f17e8af5b5a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DisallowedProperty</definition>
        <argsstring>(const Ch *name, SizeType length)</argsstring>
        <name>DisallowedProperty</name>
        <qualifiedname>GenericSchemaValidator::DisallowedProperty</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2237" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2237" bodyend="2241"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a767f115cc90e0f2f5bdd1c9fbdbf75df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StartDependencyErrors</definition>
        <argsstring>()</argsstring>
        <name>StartDependencyErrors</name>
        <qualifiedname>GenericSchemaValidator::StartDependencyErrors</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1ab3cf4b9fe450ff76f52d70a2888f0342">StartDependencyErrors</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2243" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2243" bodyend="2245"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ac4faa073bc4671f42e98a59a9e9cb01a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StartMissingDependentProperties</definition>
        <argsstring>()</argsstring>
        <name>StartMissingDependentProperties</name>
        <qualifiedname>GenericSchemaValidator::StartMissingDependentProperties</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1ae312aea74718dda0411af023c0c78ef6">StartMissingDependentProperties</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2246" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2246" bodyend="2248"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a85f2be483f0ddfc402a97665aff6eca9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddMissingDependentProperty</definition>
        <argsstring>(const SValue &amp;targetName)</argsstring>
        <name>AddMissingDependentProperty</name>
        <qualifiedname>GenericSchemaValidator::AddMissingDependentProperty</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a2e9e0b2f67467a62642e37e839f689c5">AddMissingDependentProperty</reimplements>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>targetName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2249" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2249" bodyend="2251"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1afdcd2ff7b5f7e24f4f3d6976fa5b803e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EndMissingDependentProperties</definition>
        <argsstring>(const SValue &amp;sourceName)</argsstring>
        <name>EndMissingDependentProperties</name>
        <qualifiedname>GenericSchemaValidator::EndMissingDependentProperties</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a05af3199b8011a3476dfd238fa958213">EndMissingDependentProperties</reimplements>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>sourceName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2252" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2252" bodyend="2267"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a27542a75617cdc28f6846b594fe01229" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddDependencySchemaError</definition>
        <argsstring>(const SValue &amp;sourceName, ISchemaValidator *subvalidator)</argsstring>
        <name>AddDependencySchemaError</name>
        <qualifiedname>GenericSchemaValidator::AddDependencySchemaError</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>sourceName</declname>
        </param>
        <param>
          <type>ISchemaValidator *</type>
          <declname>subvalidator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2268" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2268" bodyend="2271"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ab6d1c964faaa0f86f9da51a0f66dc1e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EndDependencyErrors</definition>
        <argsstring>()</argsstring>
        <name>EndDependencyErrors</name>
        <qualifiedname>GenericSchemaValidator::EndDependencyErrors</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a817c1e3e9cc62603997a2fcdc564820b">EndDependencyErrors</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2272" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2272" bodyend="2280"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1afc9082d5e9733762e64df3faa88e0160" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DisallowedValue</definition>
        <argsstring>(const ValidateErrorCode code=kValidateErrorEnum)</argsstring>
        <name>DisallowedValue</name>
        <qualifiedname>GenericSchemaValidator::DisallowedValue</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a67531a59c1dd8db20db72b17f0933d03">DisallowedValue</reimplements>
        <param>
          <type>const <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref></type>
          <declname>code</declname>
          <defval><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3c12e9cbc8a479b77776ceccbda4c289" kindref="member">kValidateErrorEnum</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2282" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2282" bodyend="2285"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a9904719420fd91200f80772e92fe225f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StartDisallowedType</definition>
        <argsstring>()</argsstring>
        <name>StartDisallowedType</name>
        <qualifiedname>GenericSchemaValidator::StartDisallowedType</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a994a8b1526a79737b9d7b7575def4f65">StartDisallowedType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2286" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2286" bodyend="2288"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a68e5308e5ca9726ee66139a212b63bcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddExpectedType</definition>
        <argsstring>(const typename SchemaType::ValueType &amp;expectedType)</argsstring>
        <name>AddExpectedType</name>
        <qualifiedname>GenericSchemaValidator::AddExpectedType</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a5e4d9e5d937bd54e481f90e23ec3aea4">AddExpectedType</reimplements>
        <param>
          <type>const typename <ref refid="schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f" kindref="member">SchemaType::ValueType</ref> &amp;</type>
          <declname>expectedType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2289" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2289" bodyend="2291"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ae0f99bfee3e2021c05322fd5d6de2f6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EndDisallowedType</definition>
        <argsstring>(const typename SchemaType::ValueType &amp;actualType)</argsstring>
        <name>EndDisallowedType</name>
        <qualifiedname>GenericSchemaValidator::EndDisallowedType</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1ad8133b3c055b3a91b5072af81304ab87">EndDisallowedType</reimplements>
        <param>
          <type>const typename <ref refid="schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f" kindref="member">SchemaType::ValueType</ref> &amp;</type>
          <declname>actualType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2292" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2292" bodyend="2298"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a4275b02cdd86bfe11b42afe94817eae5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::NotAllOf</definition>
        <argsstring>(ISchemaValidator **subvalidators, SizeType count)</argsstring>
        <name>NotAllOf</name>
        <qualifiedname>GenericSchemaValidator::NotAllOf</qualifiedname>
        <param>
          <type>ISchemaValidator **</type>
          <declname>subvalidators</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2299" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2299" bodyend="2305"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1aae9c45082721c650b91f8418cecc7293" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::NoneOf</definition>
        <argsstring>(ISchemaValidator **subvalidators, SizeType count)</argsstring>
        <name>NoneOf</name>
        <qualifiedname>GenericSchemaValidator::NoneOf</qualifiedname>
        <param>
          <type>ISchemaValidator **</type>
          <declname>subvalidators</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2306" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2306" bodyend="2308"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1accdba5555deae396fa728d8e20ce7ed5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::NotOneOf</definition>
        <argsstring>(ISchemaValidator **subvalidators, SizeType count, bool matched=false)</argsstring>
        <name>NotOneOf</name>
        <qualifiedname>GenericSchemaValidator::NotOneOf</qualifiedname>
        <param>
          <type>ISchemaValidator **</type>
          <declname>subvalidators</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>matched</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2309" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2309" bodyend="2311"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1acc65a322086c792d6534e306c7a091cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Disallowed</definition>
        <argsstring>()</argsstring>
        <name>Disallowed</name>
        <qualifiedname>GenericSchemaValidator::Disallowed</qualifiedname>
        <reimplements refid="classinternal_1_1_i_validation_error_handler_1a570a6723282e6c0576a47c492ffe5602">Disallowed</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2312" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2312" bodyend="2315"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a7137af73e934f50c66cbb8a9aa802ea6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Null</definition>
        <argsstring>()</argsstring>
        <name>Null</name>
        <qualifiedname>GenericSchemaValidator::Null</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2376" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2376" bodyend="2376"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1aa25fa7456f2f308a105e400f01a4afde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Bool</definition>
        <argsstring>(bool b)</argsstring>
        <name>Bool</name>
        <qualifiedname>GenericSchemaValidator::Bool</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2377" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2377" bodyend="2377"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ad823c29990225661a4df69d34647b659" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Int</definition>
        <argsstring>(int i)</argsstring>
        <name>Int</name>
        <qualifiedname>GenericSchemaValidator::Int</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2378" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2378" bodyend="2378"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1aa688665c5274f93543c84a4b6cabe8da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Uint</definition>
        <argsstring>(unsigned u)</argsstring>
        <name>Uint</name>
        <qualifiedname>GenericSchemaValidator::Uint</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2379" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2379" bodyend="2379"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ac5a9e416e18129a7b787f251019a828f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Int64</definition>
        <argsstring>(int64_t i)</argsstring>
        <name>Int64</name>
        <qualifiedname>GenericSchemaValidator::Int64</qualifiedname>
        <param>
          <type><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2380" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2380" bodyend="2380"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1abfc56c58cf0b65318e376fc5f2879292" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Uint64</definition>
        <argsstring>(uint64_t u)</argsstring>
        <name>Uint64</name>
        <qualifiedname>GenericSchemaValidator::Uint64</qualifiedname>
        <param>
          <type><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2381" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2381" bodyend="2381"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1aed0532dbda3ac6f3ca7196af06066b86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Double</definition>
        <argsstring>(double d)</argsstring>
        <name>Double</name>
        <qualifiedname>GenericSchemaValidator::Double</qualifiedname>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2382" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2382" bodyend="2382"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ae4f024145421d2c1dde08a9de528722a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::RawNumber</definition>
        <argsstring>(const Ch *str, SizeType length, bool copy)</argsstring>
        <name>RawNumber</name>
        <qualifiedname>GenericSchemaValidator::RawNumber</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2383" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2383" bodyend="2384"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a33cf3f83307a8fea38c3238ef75c3d58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::String</definition>
        <argsstring>(const Ch *str, SizeType length, bool copy)</argsstring>
        <name>String</name>
        <qualifiedname>GenericSchemaValidator::String</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2385" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2385" bodyend="2386"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a59972d612c3d37aae9a30222e428d216" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StartObject</definition>
        <argsstring>()</argsstring>
        <name>StartObject</name>
        <qualifiedname>GenericSchemaValidator::StartObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2388" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2388" bodyend="2392"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a6d08b458216ec4a09eed9d94800d05c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Key</definition>
        <argsstring>(const Ch *str, SizeType len, bool copy)</argsstring>
        <name>Key</name>
        <qualifiedname>GenericSchemaValidator::Key</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2394" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2394" bodyend="2400"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1aa89e14f0f731f6acdec22a0f7e003037" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EndObject</definition>
        <argsstring>(SizeType memberCount)</argsstring>
        <name>EndObject</name>
        <qualifiedname>GenericSchemaValidator::EndObject</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>memberCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2402" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2402" bodyend="2407"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1aba13751f802531ed8cbd850778ea993c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StartArray</definition>
        <argsstring>()</argsstring>
        <name>StartArray</name>
        <qualifiedname>GenericSchemaValidator::StartArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2409" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2409" bodyend="2413"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a67b501f0f65d40e0086ca8216882b34f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EndArray</definition>
        <argsstring>(SizeType elementCount)</argsstring>
        <name>EndArray</name>
        <qualifiedname>GenericSchemaValidator::EndArray</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>elementCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2415" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2415" bodyend="2420"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ad4afd8cdb09a6f47a23406894f77ee8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>ISchemaValidator *</type>
        <definition>virtual ISchemaValidator * GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::CreateSchemaValidator</definition>
        <argsstring>(const SchemaType &amp;root, const bool inheritContinueOnErrors)</argsstring>
        <name>CreateSchemaValidator</name>
        <qualifiedname>GenericSchemaValidator::CreateSchemaValidator</qualifiedname>
        <reimplements refid="classinternal_1_1_i_schema_state_factory_1ada66af7e924238f29314e3b462f1e3fb">CreateSchemaValidator</reimplements>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" kindref="member">SchemaType</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>inheritContinueOnErrors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2428" column="30" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2428" bodyend="2436"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ae24fa298e328f1fd7dda2ef6267156d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DestroySchemaValidator</definition>
        <argsstring>(ISchemaValidator *validator)</argsstring>
        <name>DestroySchemaValidator</name>
        <qualifiedname>GenericSchemaValidator::DestroySchemaValidator</qualifiedname>
        <param>
          <type>ISchemaValidator *</type>
          <declname>validator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2438" column="18" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2438" bodyend="2442"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a48ecc252813e60a0efdb4eb44b193bd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void *</type>
        <definition>virtual void * GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::CreateHasher</definition>
        <argsstring>()</argsstring>
        <name>CreateHasher</name>
        <qualifiedname>GenericSchemaValidator::CreateHasher</qualifiedname>
        <reimplements refid="classinternal_1_1_i_schema_state_factory_1ab26076418c94535cec2af570e8b0a436">CreateHasher</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2444" column="18" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2444" bodyend="2446"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ac01c45982a1f512e1ca06fe5544b0c0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
        <definition>virtual uint64_t GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetHashCode</definition>
        <argsstring>(void *hasher)</argsstring>
        <name>GetHashCode</name>
        <qualifiedname>GenericSchemaValidator::GetHashCode</qualifiedname>
        <reimplements refid="classinternal_1_1_i_schema_state_factory_1addfcf00963cc777edf642b204f07c8d6">GetHashCode</reimplements>
        <param>
          <type>void *</type>
          <declname>hasher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2448" column="22" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2448" bodyend="2450"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a007eef58be575dc562543d069ddd2710" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DestroryHasher</definition>
        <argsstring>(void *hasher)</argsstring>
        <name>DestroryHasher</name>
        <qualifiedname>GenericSchemaValidator::DestroryHasher</qualifiedname>
        <reimplements refid="classinternal_1_1_i_schema_state_factory_1a70b8d88180d2e6993105b17f19101635">DestroryHasher</reimplements>
        <param>
          <type>void *</type>
          <declname>hasher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2452" column="18" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2452" bodyend="2456"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a9f983043d6bd1a12d9e2dac756dabbae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void *</type>
        <definition>virtual void * GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::MallocState</definition>
        <argsstring>(size_t size)</argsstring>
        <name>MallocState</name>
        <qualifiedname>GenericSchemaValidator::MallocState</qualifiedname>
        <reimplements refid="classinternal_1_1_i_schema_state_factory_1abf29f19ba86e08f62b84b74a879b8922">MallocState</reimplements>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2458" column="18" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2458" bodyend="2460"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a4e250737a411af2969a9e585a7da4187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::FreeState</definition>
        <argsstring>(void *p)</argsstring>
        <name>FreeState</name>
        <qualifiedname>GenericSchemaValidator::FreeState</qualifiedname>
        <reimplements refid="classinternal_1_1_i_schema_state_factory_1a27bd2138940cac3c330dd8399c49b22b">FreeState</reimplements>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2462" column="18" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2462" bodyend="2464"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_generic_schema_validator_1a8a83c0bd912e63225819dcc64f8d3916" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GenericSchemaValidator</definition>
        <argsstring>(const SchemaDocumentType &amp;schemaDocument, const SchemaType &amp;root, const char *basePath, size_t basePathSize, StateAllocator *allocator=0, size_t schemaStackCapacity=kDefaultSchemaStackCapacity, size_t documentStackCapacity=kDefaultDocumentStackCapacity)</argsstring>
        <name>GenericSchemaValidator</name>
        <qualifiedname>GenericSchemaValidator::GenericSchemaValidator</qualifiedname>
        <param>
          <type>const SchemaDocumentType &amp;</type>
          <declname>schemaDocument</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" kindref="member">SchemaType</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>basePath</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>basePathSize</declname>
        </param>
        <param>
          <type>StateAllocator *</type>
          <declname>allocator</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>schemaStackCapacity</declname>
          <defval><ref refid="class_generic_schema_validator_1aab8510602779c91bc5b55ea81fd7385b" kindref="member">kDefaultSchemaStackCapacity</ref></defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>documentStackCapacity</declname>
          <defval><ref refid="class_generic_schema_validator_1a0052a86778575179422064167a95c405" kindref="member">kDefaultDocumentStackCapacity</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2471" column="5" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2471" bodyend="2500"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a9440bb7b09f5b11b61f1ada708a26d0c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StateAllocator &amp;</type>
        <definition>StateAllocator &amp; GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetStateAllocator</definition>
        <argsstring>()</argsstring>
        <name>GetStateAllocator</name>
        <qualifiedname>GenericSchemaValidator::GetStateAllocator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2502" column="20" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2502" bodyend="2506"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a9f679277e023babf6a62ef8087ffd459" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetContinueOnErrors</definition>
        <argsstring>() const</argsstring>
        <name>GetContinueOnErrors</name>
        <qualifiedname>GenericSchemaValidator::GetContinueOnErrors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2508" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2508" bodyend="2510"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a3a701bdd690fa33db03431c8336a7653" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::BeginValue</definition>
        <argsstring>()</argsstring>
        <name>BeginValue</name>
        <qualifiedname>GenericSchemaValidator::BeginValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2512" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2512" bodyend="2541"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ae78fc24af2c112de5d7651f0755257db" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EndValue</definition>
        <argsstring>()</argsstring>
        <name>EndValue</name>
        <qualifiedname>GenericSchemaValidator::EndValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2543" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2543" bodyend="2586"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1acf4db1d2b158d7220adc228d872938ba" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AppendToken</definition>
        <argsstring>(const Ch *str, SizeType len)</argsstring>
        <name>AppendToken</name>
        <qualifiedname>GenericSchemaValidator::AppendToken</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2588" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2588" bodyend="2603"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ae7302da6df72e7af0451a78998eb624d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RAPIDJSON_FORCEINLINE void</type>
        <definition>RAPIDJSON_FORCEINLINE void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::PushSchema</definition>
        <argsstring>(const SchemaType &amp;schema)</argsstring>
        <name>PushSchema</name>
        <qualifiedname>GenericSchemaValidator::PushSchema</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" kindref="member">SchemaType</ref> &amp;</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2605" column="32" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2605" bodyend="2605"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a6cc7f347eace3847c428fce684c97b56" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RAPIDJSON_FORCEINLINE void</type>
        <definition>RAPIDJSON_FORCEINLINE void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::PopSchema</definition>
        <argsstring>()</argsstring>
        <name>PopSchema</name>
        <qualifiedname>GenericSchemaValidator::PopSchema</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2607" column="32" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2607" bodyend="2614"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1adabc1745041f939572aae7e2e6477f8e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddErrorInstanceLocation</definition>
        <argsstring>(ValueType &amp;result, bool parent)</argsstring>
        <name>AddErrorInstanceLocation</name>
        <qualifiedname>GenericSchemaValidator::AddErrorInstanceLocation</qualifiedname>
        <param>
          <type><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2616" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2616" bodyend="2625"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1abc04c7dc0ec538a08f62c76a41ce0e9a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddErrorSchemaLocation</definition>
        <argsstring>(ValueType &amp;result, PointerType schema=PointerType())</argsstring>
        <name>AddErrorSchemaLocation</name>
        <qualifiedname>GenericSchemaValidator::AddErrorSchemaLocation</qualifiedname>
        <param>
          <type><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref></type>
          <declname>schema</declname>
          <defval><ref refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" kindref="member">PointerType</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2627" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2627" bodyend="2636"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a437bd3210074af1b0df90b72e15e9b7e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddErrorCode</definition>
        <argsstring>(ValueType &amp;result, const ValidateErrorCode code)</argsstring>
        <name>AddErrorCode</name>
        <qualifiedname>GenericSchemaValidator::AddErrorCode</qualifiedname>
        <param>
          <type><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref></type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2638" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2638" bodyend="2640"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a0dcd3dedf97c2ccff9de5b194447f175" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddError</definition>
        <argsstring>(ValueType &amp;keyword, ValueType &amp;error)</argsstring>
        <name>AddError</name>
        <qualifiedname>GenericSchemaValidator::AddError</qualifiedname>
        <param>
          <type><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref> &amp;</type>
          <declname>keyword</declname>
        </param>
        <param>
          <type><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2642" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2642" bodyend="2654"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a9553b3f47b319674386ecafa513f0489" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddCurrentError</definition>
        <argsstring>(const ValidateErrorCode code, bool parent=false)</argsstring>
        <name>AddCurrentError</name>
        <qualifiedname>GenericSchemaValidator::AddCurrentError</qualifiedname>
        <param>
          <type>const <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>parent</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2656" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2656" bodyend="2661"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a55995260e5ef46a7b0706823d2985446" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::MergeError</definition>
        <argsstring>(ValueType &amp;other)</argsstring>
        <name>MergeError</name>
        <qualifiedname>GenericSchemaValidator::MergeError</qualifiedname>
        <param>
          <type><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2663" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2663" bodyend="2667"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a752965fdb585b99db45201579f8ff04a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddNumberError</definition>
        <argsstring>(const ValidateErrorCode code, ValueType &amp;actual, const SValue &amp;expected, const typename SchemaType::ValueType &amp;(*exclusive)()=0)</argsstring>
        <name>AddNumberError</name>
        <qualifiedname>GenericSchemaValidator::AddNumberError</qualifiedname>
        <param>
          <type>const <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" kindref="member">ValueType</ref> &amp;</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" kindref="member">SValue</ref> &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const typename <ref refid="schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f" kindref="member">SchemaType::ValueType</ref> &amp;(*)()</type>
          <declname>exclusive</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2669" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2669" bodyend="2677"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1aeaad9469f70e135ac75983e796818970" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddErrorArray</definition>
        <argsstring>(const ValidateErrorCode code, ISchemaValidator **subvalidators, SizeType count)</argsstring>
        <name>AddErrorArray</name>
        <qualifiedname>GenericSchemaValidator::AddErrorArray</qualifiedname>
        <param>
          <type>const <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a" kindref="member">ValidateErrorCode</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>ISchemaValidator **</type>
          <declname>subvalidators</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2679" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2679" bodyend="2687"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a748ae6eb8b6b6a6f5e8d0c23fdbd0327" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" kindref="member">SchemaType</ref> &amp;</type>
        <definition>const SchemaType &amp; GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::CurrentSchema</definition>
        <argsstring>() const</argsstring>
        <name>CurrentSchema</name>
        <qualifiedname>GenericSchemaValidator::CurrentSchema</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2689" column="22" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2689" bodyend="2689"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1a0bdaa7851cf9489921af192c34e2c587" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_schema_validator_1ac6403619afb8aa8729e1e15d8c34d350" kindref="member">Context</ref> &amp;</type>
        <definition>Context &amp; GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::CurrentContext</definition>
        <argsstring>()</argsstring>
        <name>CurrentContext</name>
        <qualifiedname>GenericSchemaValidator::CurrentContext</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2690" column="13" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2690" bodyend="2690"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_validator_1ac92471720eac3b49ba4d8433399a1355" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_generic_schema_validator_1ac6403619afb8aa8729e1e15d8c34d350" kindref="member">Context</ref> &amp;</type>
        <definition>const Context &amp; GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::CurrentContext</definition>
        <argsstring>() const</argsstring>
        <name>CurrentContext</name>
        <qualifiedname>GenericSchemaValidator::CurrentContext</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="2691" column="19" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="2691" bodyend="2691"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>JSON <ref refid="class_schema" kindref="compound">Schema</ref> Validator. </para>
    </briefdescription>
    <detaileddescription>
<para>A SAX style JSON schema validator. It uses a <computeroutput><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref></computeroutput> to validate SAX events. It delegates the incoming SAX events to an output handler. The default output handler does nothing. It can be reused multiple times by calling <computeroutput><ref refid="class_generic_schema_validator_1a49efbbe098cb77728be3d48cafed17e4" kindref="member">Reset()</ref></computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>SchemaDocumentType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of schema document. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OutputHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of output handler. Default handler does nothing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>StateAllocator</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocator for storing the internal validation states. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</label>
        <link refid="class_generic_schema_validator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>internal::ISchemaStateFactory&lt; SchemaDocumentType::SchemaType &gt;</label>
        <link refid="classinternal_1_1_i_schema_state_factory"/>
      </node>
      <node id="4">
        <label>internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</label>
        <link refid="classinternal_1_1_i_validation_error_handler"/>
      </node>
      <node id="3">
        <label>internal::ISchemaValidator</label>
        <link refid="classinternal_1_1_i_schema_validator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>BaseReaderHandler&lt; typename SchemaDocumentType::SchemaType::EncodingType &gt;</label>
        <link refid="struct_base_reader_handler"/>
      </node>
      <node id="6">
        <label>CrtAllocator</label>
        <link refid="class_crt_allocator"/>
      </node>
      <node id="17">
        <label>GenericMember&lt; Encoding, Allocator &gt;</label>
        <link refid="class_generic_member"/>
        <childnode refid="18" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</label>
        <link refid="class_generic_schema_validator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>kDefaultDocumentStackCapacity</edgelabel>
          <edgelabel>kDefaultSchemaStackCapacity</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>ownStateAllocator_</edgelabel>
          <edgelabel>stateAllocator_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>documentStack_</edgelabel>
          <edgelabel>schemaStack_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>outputHandler_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>currentError_</edgelabel>
          <edgelabel>error_</edgelabel>
          <edgelabel>missingDependents_</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>GenericValue&lt; Encoding, Allocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="10" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ArrayData</label>
        <link refid="struct_generic_value_1_1_array_data"/>
        <childnode refid="20" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Data</label>
        <link refid="union_generic_value_1_1_data"/>
        <childnode refid="11" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>ss</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>n</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>o</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>a</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Flag</label>
        <link refid="struct_generic_value_1_1_flag"/>
      </node>
      <node id="13">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number</label>
        <link refid="union_generic_value_1_1_number"/>
        <childnode refid="14" relation="usage">
          <edgelabel>i</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>u</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number::I</label>
        <link refid="struct_generic_value_1_1_number_1_1_i"/>
      </node>
      <node id="15">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number::U</label>
        <link refid="struct_generic_value_1_1_number_1_1_u"/>
      </node>
      <node id="16">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ObjectData</label>
        <link refid="struct_generic_value_1_1_object_data"/>
        <childnode refid="17" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ShortString</label>
        <link refid="struct_generic_value_1_1_short_string"/>
      </node>
      <node id="11">
        <label>GenericValue&lt; Encoding, Allocator &gt;::String</label>
        <link refid="struct_generic_value_1_1_string"/>
      </node>
      <node id="9">
        <label>GenericValue&lt; EncodingType, CrtAllocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="10" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>GenericValue&lt; rapidjson::Encoding, rapidjson::Allocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="10" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>internal::ISchemaStateFactory&lt; SchemaDocumentType::SchemaType &gt;</label>
        <link refid="classinternal_1_1_i_schema_state_factory"/>
      </node>
      <node id="4">
        <label>internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</label>
        <link refid="classinternal_1_1_i_validation_error_handler"/>
      </node>
      <node id="7">
        <label>internal::Stack&lt; CrtAllocator &gt;</label>
        <link refid="classinternal_1_1_stack"/>
        <childnode refid="6" relation="usage">
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>initialCapacity_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>internal::ISchemaValidator</label>
        <link refid="classinternal_1_1_i_schema_validator"/>
      </node>
      <node id="5">
        <label>size_t</label>
      </node>
    </collaborationgraph>
    <location file="src/rapidjson/include/rapidjson/schema.h" line="1989" column="1" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1992" bodyend="2710"/>
    <listofallmembers>
      <member refid="class_generic_schema_validator_1a4c9c7db8a3488f84a5a86681ad1d8194" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>AboveMaximum</name></member>
      <member refid="class_generic_schema_validator_1a9262c73768789eb7cf8dc271cfec7f96" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>AboveMaximum</name></member>
      <member refid="class_generic_schema_validator_1abcf1f5b46bdae8ca20a80858d603483d" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>AboveMaximum</name></member>
      <member refid="class_generic_schema_validator_1a9553b3f47b319674386ecafa513f0489" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>AddCurrentError</name></member>
      <member refid="class_generic_schema_validator_1a27542a75617cdc28f6846b594fe01229" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>AddDependencySchemaError</name></member>
      <member refid="classinternal_1_1_i_validation_error_handler_1a4b43ba6e6a9c544dfc631297104dc508" prot="public" virt="pure-virtual" ambiguityscope="IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;::"><scope>GenericSchemaValidator</scope><name>AddDependencySchemaError</name></member>
      <member refid="class_generic_schema_validator_1a0dcd3dedf97c2ccff9de5b194447f175" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>AddError</name></member>
      <member refid="class_generic_schema_validator_1aeaad9469f70e135ac75983e796818970" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>AddErrorArray</name></member>
      <member refid="class_generic_schema_validator_1a437bd3210074af1b0df90b72e15e9b7e" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>AddErrorCode</name></member>
      <member refid="class_generic_schema_validator_1adabc1745041f939572aae7e2e6477f8e" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>AddErrorInstanceLocation</name></member>
      <member refid="class_generic_schema_validator_1abc04c7dc0ec538a08f62c76a41ce0e9a" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>AddErrorSchemaLocation</name></member>
      <member refid="class_generic_schema_validator_1a68e5308e5ca9726ee66139a212b63bcc" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>AddExpectedType</name></member>
      <member refid="class_generic_schema_validator_1a85f2be483f0ddfc402a97665aff6eca9" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>AddMissingDependentProperty</name></member>
      <member refid="class_generic_schema_validator_1a8d355eeb25364e414d9a2f8121aa0eaa" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>AddMissingProperty</name></member>
      <member refid="class_generic_schema_validator_1a752965fdb585b99db45201579f8ff04a" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>AddNumberError</name></member>
      <member refid="class_generic_schema_validator_1acf4db1d2b158d7220adc228d872938ba" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>AppendToken</name></member>
      <member refid="class_generic_schema_validator_1a3a701bdd690fa33db03431c8336a7653" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>BeginValue</name></member>
      <member refid="class_generic_schema_validator_1a15a12306bc14f16357b4f2edea8396b7" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>BelowMinimum</name></member>
      <member refid="class_generic_schema_validator_1ad3db1f3852a1b2e6fada43fbcad401ea" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>BelowMinimum</name></member>
      <member refid="class_generic_schema_validator_1afdd4a9787239a6fc3eeb56d34fd531f4" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>BelowMinimum</name></member>
      <member refid="class_generic_schema_validator_1aa25fa7456f2f308a105e400f01a4afde" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>Bool</name></member>
      <member refid="class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>Ch</name></member>
      <member refid="class_generic_schema_validator_1ac6403619afb8aa8729e1e15d8c34d350" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>Context</name></member>
      <member refid="class_generic_schema_validator_1a48ecc252813e60a0efdb4eb44b193bd5" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>CreateHasher</name></member>
      <member refid="class_generic_schema_validator_1ad4afd8cdb09a6f47a23406894f77ee8a" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>CreateSchemaValidator</name></member>
      <member refid="class_generic_schema_validator_1a0bdaa7851cf9489921af192c34e2c587" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>CurrentContext</name></member>
      <member refid="class_generic_schema_validator_1ac92471720eac3b49ba4d8433399a1355" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>CurrentContext</name></member>
      <member refid="class_generic_schema_validator_1afa09db405ea6ce3f35d04401c89023f4" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>currentError_</name></member>
      <member refid="class_generic_schema_validator_1a748ae6eb8b6b6a6f5e8d0c23fdbd0327" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>CurrentSchema</name></member>
      <member refid="class_generic_schema_validator_1a007eef58be575dc562543d069ddd2710" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>DestroryHasher</name></member>
      <member refid="class_generic_schema_validator_1ae24fa298e328f1fd7dda2ef6267156d2" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>DestroySchemaValidator</name></member>
      <member refid="classinternal_1_1_i_schema_state_factory_1a112cbf154077050bc30ffe670032442c" prot="public" virt="pure-virtual" ambiguityscope="ISchemaStateFactory&lt; SchemaDocumentType::SchemaType &gt;::"><scope>GenericSchemaValidator</scope><name>DestroySchemaValidator</name></member>
      <member refid="class_generic_schema_validator_1acc65a322086c792d6534e306c7a091cf" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>Disallowed</name></member>
      <member refid="class_generic_schema_validator_1a2d47a88a3d9fb82466b5bda480b6e70f" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>DisallowedItem</name></member>
      <member refid="class_generic_schema_validator_1a44f06b99edfb650c6088f17e8af5b5a8" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>DisallowedProperty</name></member>
      <member refid="classinternal_1_1_i_validation_error_handler_1a689b8acc4cbe3e8683c1a29950438ac8" prot="public" virt="pure-virtual" ambiguityscope="IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;::"><scope>GenericSchemaValidator</scope><name>DisallowedProperty</name></member>
      <member refid="class_generic_schema_validator_1afc9082d5e9733762e64df3faa88e0160" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>DisallowedValue</name></member>
      <member refid="class_generic_schema_validator_1a98a99734991555b5458398b01f0cce44" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>documentStack_</name></member>
      <member refid="class_generic_schema_validator_1af1be05889e634936c223f24c6e5f6ec5" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>DoesNotMatch</name></member>
      <member refid="classinternal_1_1_i_validation_error_handler_1a9551391add918d6679f9a2a85dffc19c" prot="public" virt="pure-virtual" ambiguityscope="IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;::"><scope>GenericSchemaValidator</scope><name>DoesNotMatch</name></member>
      <member refid="class_generic_schema_validator_1aed0532dbda3ac6f3ca7196af06066b86" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>Double</name></member>
      <member refid="class_generic_schema_validator_1a82aa865146069e3ba5010d25346a71f2" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>DuplicateItems</name></member>
      <member refid="class_generic_schema_validator_1acf1c5361bb96da87d23167d8720b1ea5" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>EncodingType</name></member>
      <member refid="class_generic_schema_validator_1a67b501f0f65d40e0086ca8216882b34f" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>EndArray</name></member>
      <member refid="class_generic_schema_validator_1ab6d1c964faaa0f86f9da51a0f66dc1e4" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>EndDependencyErrors</name></member>
      <member refid="class_generic_schema_validator_1ae0f99bfee3e2021c05322fd5d6de2f6e" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>EndDisallowedType</name></member>
      <member refid="class_generic_schema_validator_1afdcd2ff7b5f7e24f4f3d6976fa5b803e" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>EndMissingDependentProperties</name></member>
      <member refid="class_generic_schema_validator_1a557b7aa531ff94a6355fed8f8575fed5" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>EndMissingProperties</name></member>
      <member refid="class_generic_schema_validator_1aa89e14f0f731f6acdec22a0f7e003037" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>EndObject</name></member>
      <member refid="class_generic_schema_validator_1ae78fc24af2c112de5d7651f0755257db" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>EndValue</name></member>
      <member refid="class_generic_schema_validator_1a9c3e6efc65a62225a83ae9d0f377c074" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>error_</name></member>
      <member refid="class_generic_schema_validator_1ab56d66840b9f7afe8a806e31afa10a10" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>flags_</name></member>
      <member refid="class_generic_schema_validator_1a4e250737a411af2969a9e585a7da4187" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>FreeState</name></member>
      <member refid="class_generic_schema_validator_1a202ee6fdbe5ae9eab3e77a81ecdfeb6d" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>GenericSchemaValidator</name></member>
      <member refid="class_generic_schema_validator_1ac2027be8ca55b01cd6f38b45f4e233b4" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>GenericSchemaValidator</name></member>
      <member refid="class_generic_schema_validator_1a8a83c0bd912e63225819dcc64f8d3916" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>GenericSchemaValidator</name></member>
      <member refid="class_generic_schema_validator_1a9f679277e023babf6a62ef8087ffd459" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>GetContinueOnErrors</name></member>
      <member refid="class_generic_schema_validator_1a21c0ad159e91398d222bab4d91d4c5dd" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>GetError</name></member>
      <member refid="class_generic_schema_validator_1ad7b8d71bd651c3da614a877816de7573" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>GetError</name></member>
      <member refid="class_generic_schema_validator_1ac01c45982a1f512e1ca06fe5544b0c0f" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>GetHashCode</name></member>
      <member refid="class_generic_schema_validator_1ac10a88c4dc138bbdbe2afd041658a3b0" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>GetInvalidDocumentPointer</name></member>
      <member refid="class_generic_schema_validator_1aeba2093eb93f77b239e9b4c27219c982" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>GetInvalidSchemaCode</name></member>
      <member refid="class_generic_schema_validator_1ab5980d72c786b81ab907526fdf4172f3" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>GetInvalidSchemaKeyword</name></member>
      <member refid="class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>GetInvalidSchemaPointer</name></member>
      <member refid="class_generic_schema_validator_1a9440bb7b09f5b11b61f1ada708a26d0c" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>GetStateAllocator</name></member>
      <member refid="class_generic_schema_validator_1a318bf1cf98d2f18074edd336b1bc684d" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>GetValidateFlags</name></member>
      <member refid="class_generic_schema_validator_1ae1cb713f267c2df2f8c5d4fbfe427ea4" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>HashCodeArray</name></member>
      <member refid="class_generic_schema_validator_1ab7df29495a3ba8f3f5dc828f90a40936" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>HasherType</name></member>
      <member refid="class_generic_schema_validator_1ad823c29990225661a4df69d34647b659" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>Int</name></member>
      <member refid="class_generic_schema_validator_1ac5a9e416e18129a7b787f251019a828f" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>Int64</name></member>
      <member refid="class_generic_schema_validator_1a8ebda4da3d8b1fc41e57f15dd62e8f19" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>IsValid</name></member>
      <member refid="class_generic_schema_validator_1a0052a86778575179422064167a95c405" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>kDefaultDocumentStackCapacity</name></member>
      <member refid="class_generic_schema_validator_1aab8510602779c91bc5b55ea81fd7385b" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>kDefaultSchemaStackCapacity</name></member>
      <member refid="class_generic_schema_validator_1a6d08b458216ec4a09eed9d94800d05c1" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>Key</name></member>
      <member refid="class_generic_schema_validator_1a9f983043d6bd1a12d9e2dac756dabbae" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>MallocState</name></member>
      <member refid="class_generic_schema_validator_1a55995260e5ef46a7b0706823d2985446" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>MergeError</name></member>
      <member refid="class_generic_schema_validator_1a08633a530070c002f9f0016991a22187" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>missingDependents_</name></member>
      <member refid="class_generic_schema_validator_1aae9c45082721c650b91f8418cecc7293" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>NoneOf</name></member>
      <member refid="classinternal_1_1_i_validation_error_handler_1a70105117617fc7edbe7f032975888e13" prot="public" virt="pure-virtual" ambiguityscope="IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;::"><scope>GenericSchemaValidator</scope><name>NoneOf</name></member>
      <member refid="class_generic_schema_validator_1a4275b02cdd86bfe11b42afe94817eae5" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>NotAllOf</name></member>
      <member refid="classinternal_1_1_i_validation_error_handler_1a3ce77d66a09eb5d91833fc86f8fa5680" prot="public" virt="pure-virtual" ambiguityscope="IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;::"><scope>GenericSchemaValidator</scope><name>NotAllOf</name></member>
      <member refid="class_generic_schema_validator_1ab2f08413a2b23d73d4bbd09c8ca1f547" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>NotMultipleOf</name></member>
      <member refid="class_generic_schema_validator_1a5c59d25dc44d85404cc587ebfa7455cd" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>NotMultipleOf</name></member>
      <member refid="class_generic_schema_validator_1ae5fc8a4545fed53955ec6c57b79ca949" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>NotMultipleOf</name></member>
      <member refid="class_generic_schema_validator_1accdba5555deae396fa728d8e20ce7ed5" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>NotOneOf</name></member>
      <member refid="classinternal_1_1_i_validation_error_handler_1a3ca6fd0aebd486de8dd78c952938a83b" prot="public" virt="pure-virtual" ambiguityscope="IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;::"><scope>GenericSchemaValidator</scope><name>NotOneOf</name></member>
      <member refid="class_generic_schema_validator_1a7137af73e934f50c66cbb8a9aa802ea6" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>Null</name></member>
      <member refid="class_generic_schema_validator_1ac03855c6eb85ffcae993105082e09fc1" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>outputHandler_</name></member>
      <member refid="class_generic_schema_validator_1a1f8233bfa10ae88aac6137a0e979174b" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>ownStateAllocator_</name></member>
      <member refid="class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>PointerType</name></member>
      <member refid="class_generic_schema_validator_1a6cc7f347eace3847c428fce684c97b56" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>PopSchema</name></member>
      <member refid="class_generic_schema_validator_1a29fa7c6f787450b2df1f9d440436aeab" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>PropertyViolations</name></member>
      <member refid="classinternal_1_1_i_validation_error_handler_1abd92773fa046eeb6fd8416468e62e5b1" prot="public" virt="pure-virtual" ambiguityscope="IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;::"><scope>GenericSchemaValidator</scope><name>PropertyViolations</name></member>
      <member refid="class_generic_schema_validator_1ae7302da6df72e7af0451a78998eb624d" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>PushSchema</name></member>
      <member refid="class_generic_schema_validator_1ae4f024145421d2c1dde08a9de528722a" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>RawNumber</name></member>
      <member refid="class_generic_schema_validator_1a49efbbe098cb77728be3d48cafed17e4" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>Reset</name></member>
      <member refid="class_generic_schema_validator_1a8374dd359e572f653c49293545ad3ef4" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>ResetError</name></member>
      <member refid="class_generic_schema_validator_1a7517bd5334a8fc4696fe298dbab2ce31" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>root_</name></member>
      <member refid="class_generic_schema_validator_1a433e6fe22bea392d1dbd57e9f581bd7a" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>schemaDocument_</name></member>
      <member refid="class_generic_schema_validator_1ae5775fdd9f94b8a2581f774d97135670" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>schemaStack_</name></member>
      <member refid="class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>SchemaType</name></member>
      <member refid="class_generic_schema_validator_1af4840dac2410bcfe73912c30eb95b875" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>SetValidateFlags</name></member>
      <member refid="class_generic_schema_validator_1aba13751f802531ed8cbd850778ea993c" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>StartArray</name></member>
      <member refid="class_generic_schema_validator_1a767f115cc90e0f2f5bdd1c9fbdbf75df" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>StartDependencyErrors</name></member>
      <member refid="class_generic_schema_validator_1a9904719420fd91200f80772e92fe225f" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>StartDisallowedType</name></member>
      <member refid="class_generic_schema_validator_1ac4faa073bc4671f42e98a59a9e9cb01a" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>StartMissingDependentProperties</name></member>
      <member refid="class_generic_schema_validator_1a41c4d67e349561f13948a5045bfc50c9" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>StartMissingProperties</name></member>
      <member refid="class_generic_schema_validator_1a59972d612c3d37aae9a30222e428d216" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>StartObject</name></member>
      <member refid="class_generic_schema_validator_1a1fea37905619d085cb3d3c6699b209a5" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>stateAllocator_</name></member>
      <member refid="class_generic_schema_validator_1a33cf3f83307a8fea38c3238ef75c3d58" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>String</name></member>
      <member refid="class_generic_schema_validator_1a604160fcd6af7582e0deccc205309dcf" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>StringRefType</name></member>
      <member refid="class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>SValue</name></member>
      <member refid="class_generic_schema_validator_1af39007d9bf43126dab231961a1c5064f" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>TooFewItems</name></member>
      <member refid="class_generic_schema_validator_1aaebaf28aa289826a3c39dc953b0ca466" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>TooFewProperties</name></member>
      <member refid="class_generic_schema_validator_1a227dce44e0684a73accbfb062200eb26" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>TooLong</name></member>
      <member refid="classinternal_1_1_i_validation_error_handler_1ae000553bd9312a5090eed393541243af" prot="public" virt="pure-virtual" ambiguityscope="IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;::"><scope>GenericSchemaValidator</scope><name>TooLong</name></member>
      <member refid="class_generic_schema_validator_1a78e85eeae0e2bdef827815672a7fbbc9" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>TooManyItems</name></member>
      <member refid="class_generic_schema_validator_1ad7ca0a327420c110e9ee6e70b2cdbc87" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>TooManyProperties</name></member>
      <member refid="class_generic_schema_validator_1a7711071f95ead18c0dd99f69c09a4c11" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>TooShort</name></member>
      <member refid="classinternal_1_1_i_validation_error_handler_1a57f0cd2c2c9781af0e4c447700537f23" prot="public" virt="pure-virtual" ambiguityscope="IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;::"><scope>GenericSchemaValidator</scope><name>TooShort</name></member>
      <member refid="class_generic_schema_validator_1aa688665c5274f93543c84a4b6cabe8da" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>Uint</name></member>
      <member refid="class_generic_schema_validator_1abfc56c58cf0b65318e376fc5f2879292" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>Uint64</name></member>
      <member refid="class_generic_schema_validator_1a637361bc6c37c60278576169f01c84bb" prot="private" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>valid_</name></member>
      <member refid="class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>ValueType</name></member>
      <member refid="class_generic_schema_validator_1a3eab83d483a50efb0c0390adf3291963" prot="public" virt="non-virtual"><scope>GenericSchemaValidator</scope><name>~GenericSchemaValidator</name></member>
      <member refid="classinternal_1_1_i_schema_state_factory_1ae769eac75f9561fc8d0da7fadad2f6b4" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>~ISchemaStateFactory</name></member>
      <member refid="classinternal_1_1_i_schema_validator_1aac77356c7a3f439bc5fb5302f3060c1d" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>~ISchemaValidator</name></member>
      <member refid="classinternal_1_1_i_validation_error_handler_1a79e5eb5707b73497cff913093dfec060" prot="public" virt="virtual"><scope>GenericSchemaValidator</scope><name>~IValidationErrorHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
