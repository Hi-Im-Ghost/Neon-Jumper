<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_pretty_writer" kind="class" language="C++" prot="public">
    <compoundname>PrettyWriter</compoundname>
    <basecompoundref refid="class_writer" prot="public" virt="non-virtual">Writer&lt; OutputStream, UTF8&lt;&gt;, UTF8&lt;&gt;, CrtAllocator, kWriteDefaultFlags &gt;</basecompoundref>
    <includes refid="prettywriter_8h" local="no">prettywriter.h</includes>
    <templateparamlist>
      <param>
        <type>typename OutputStream</type>
      </param>
      <param>
        <type>typename SourceEncoding</type>
        <defval><ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>typename TargetEncoding</type>
        <defval><ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>typename StackAllocator</type>
        <defval><ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref></defval>
      </param>
      <param>
        <type>unsigned</type>
        <declname>writeFlags</declname>
        <defname>writeFlags</defname>
        <defval><ref refid="writer_8h_1ab05d31260e712ed01daa80077f21e0a5a63d8536bdc203be5310a1c58643f30b8" kindref="member">kWriteDefaultFlags</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Convenience extensions</header>
      <memberdef kind="variable" id="class_pretty_writer_1aaa3f6380daa8466a5101ed18fc33bf04" prot="protected" static="no" mutable="no">
        <type><ref refid="class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3" kindref="member">Ch</ref></type>
        <definition>Ch PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::indentChar_</definition>
        <argsstring></argsstring>
        <name>indentChar_</name>
        <qualifiedname>PrettyWriter::indentChar_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="257" column="8" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pretty_writer_1a7d00b9716ef3cd7e34ae1b744c968f13" prot="protected" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::indentCharCount_</definition>
        <argsstring></argsstring>
        <name>indentCharCount_</name>
        <qualifiedname>PrettyWriter::indentCharCount_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="258" column="14" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pretty_writer_1a15505ed4ea0fa85d339b3a987f1a3aaf" prot="protected" static="no" mutable="no">
        <type><ref refid="prettywriter_8h_1a150fd6ef2dbf4025c33ece85451982d5" kindref="member">PrettyFormatOptions</ref></type>
        <definition>PrettyFormatOptions PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::formatOptions_</definition>
        <argsstring></argsstring>
        <name>formatOptions_</name>
        <qualifiedname>PrettyWriter::formatOptions_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="259" column="25" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1a7e85689355a827d273f272c26b447225" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::String</definition>
        <argsstring>(const Ch *str)</argsstring>
        <name>String</name>
        <qualifiedname>PrettyWriter::String</qualifiedname>
        <param>
          <type>const <ref refid="class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Simpler but slower overload. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="187" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1a4b2a2a6eef02c12d7a3fd77966bd4499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Key</definition>
        <argsstring>(const Ch *str)</argsstring>
        <name>Key</name>
        <qualifiedname>PrettyWriter::Key</qualifiedname>
        <param>
          <type>const <ref refid="class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="188" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1a440890a72408a150ef46edda6becdc94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::RawValue</definition>
        <argsstring>(const Ch *json, size_t length, Type type)</argsstring>
        <name>RawValue</name>
        <qualifiedname>PrettyWriter::RawValue</qualifiedname>
        <param>
          <type>const <ref refid="class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3" kindref="member">Ch</ref> *</type>
          <declname>json</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Write a raw JSON value. </para>
        </briefdescription>
        <detaileddescription>
<para>For user to write a stringified JSON as a value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>json</parametername>
</parameternamelist>
<parameterdescription>
<para>A well-formed JSON value. It should not contain null character within [0, length - 1] range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the json. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the root of json. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>When using <ref refid="class_pretty_writer_1a440890a72408a150ef46edda6becdc94" kindref="member">PrettyWriter::RawValue()</ref>, the result json may not be indented correctly. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="201" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="201" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1a09709ffa3b545e007631ecfd35029843" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::PrettyPrefix</definition>
        <argsstring>(Type type)</argsstring>
        <name>PrettyPrefix</name>
        <qualifiedname>PrettyWriter::PrettyPrefix</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="208" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="208" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1a6f244ecc94fd5b134d424033b1574b7e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::WriteIndent</definition>
        <argsstring>()</argsstring>
        <name>WriteIndent</name>
        <qualifiedname>PrettyWriter::WriteIndent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="252" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1af573bc27031d90fbc03aab668b099faa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::PrettyWriter</definition>
        <argsstring>(const PrettyWriter &amp;)</argsstring>
        <name>PrettyWriter</name>
        <qualifiedname>PrettyWriter::PrettyWriter</qualifiedname>
        <param>
          <type>const <ref refid="class_pretty_writer" kindref="compound">PrettyWriter</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="263" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1ae2fa01c806e051a833fc225003c2520e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_pretty_writer" kindref="compound">PrettyWriter</ref> &amp;</type>
        <definition>PrettyWriter &amp; PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::operator=</definition>
        <argsstring>(const PrettyWriter &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>PrettyWriter::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_pretty_writer" kindref="compound">PrettyWriter</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="264" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Implementation of Handler</header>
      <description><para><simplesect kind="see"><para>Handler </para>
</simplesect>
</para>
</description>
      <memberdef kind="function" id="class_pretty_writer_1aa144f2d0f0c3c69248cdbe957349528c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Null</definition>
        <argsstring>()</argsstring>
        <name>Null</name>
        <qualifiedname>PrettyWriter::Null</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="95" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1a6e765ee7ada5ed40f317c78a98f6f90b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Bool</definition>
        <argsstring>(bool b)</argsstring>
        <name>Bool</name>
        <qualifiedname>PrettyWriter::Bool</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="96" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1aa1815263e61cb7af3b6dfba480a0f481" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Int</definition>
        <argsstring>(int i)</argsstring>
        <name>Int</name>
        <qualifiedname>PrettyWriter::Int</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="97" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1a8c82302877a5588eae77eb7d042c49ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Uint</definition>
        <argsstring>(unsigned u)</argsstring>
        <name>Uint</name>
        <qualifiedname>PrettyWriter::Uint</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="98" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1ad42b797429f4ee19efdce610f5aff976" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Int64</definition>
        <argsstring>(int64_t i64)</argsstring>
        <name>Int64</name>
        <qualifiedname>PrettyWriter::Int64</qualifiedname>
        <param>
          <type><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref></type>
          <declname>i64</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="99" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1aba75ac1f13c2629b2a55ffbf3d8a116c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Uint64</definition>
        <argsstring>(uint64_t u64)</argsstring>
        <name>Uint64</name>
        <qualifiedname>PrettyWriter::Uint64</qualifiedname>
        <param>
          <type><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>u64</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="100" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1ad9d592e86b985da666665926e87db415" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Double</definition>
        <argsstring>(double d)</argsstring>
        <name>Double</name>
        <qualifiedname>PrettyWriter::Double</qualifiedname>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="101" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1a3941bc21d6a261ca8a86eff330db30ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::RawNumber</definition>
        <argsstring>(const Ch *str, SizeType length, bool copy=false)</argsstring>
        <name>RawNumber</name>
        <qualifiedname>PrettyWriter::RawNumber</qualifiedname>
        <param>
          <type>const <ref refid="class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="103" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="103" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1ae544ccfe35dd7e80ed694873062409f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::String</definition>
        <argsstring>(const Ch *str, SizeType length, bool copy=false)</argsstring>
        <name>String</name>
        <qualifiedname>PrettyWriter::String</qualifiedname>
        <param>
          <type>const <ref refid="class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="110" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="110" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1a27bdda225dc152b8974e44c1df7525b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::StartObject</definition>
        <argsstring>()</argsstring>
        <name>StartObject</name>
        <qualifiedname>PrettyWriter::StartObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="123" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1a20ecbe1d31a871e4da4a3899b40ad3cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Key</definition>
        <argsstring>(const Ch *str, SizeType length, bool copy=false)</argsstring>
        <name>Key</name>
        <qualifiedname>PrettyWriter::Key</qualifiedname>
        <param>
          <type>const <ref refid="class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="129" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1a6bfdfa4193193ef763cce5c592c4d20c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::EndObject</definition>
        <argsstring>(SizeType memberCount=0)</argsstring>
        <name>EndObject</name>
        <qualifiedname>PrettyWriter::EndObject</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>memberCount</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="137" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="137" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1aec7fdf4798a3af5e31c147633f4798ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::StartArray</definition>
        <argsstring>()</argsstring>
        <name>StartArray</name>
        <qualifiedname>PrettyWriter::StartArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="157" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="157" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1a1e9d97fc950d349f55abd864c787ff37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::EndArray</definition>
        <argsstring>(SizeType memberCount=0)</argsstring>
        <name>EndArray</name>
        <qualifiedname>PrettyWriter::EndArray</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>memberCount</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="163" column="10" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="163" bodyend="179"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_pretty_writer_1a6eecc5c896dcdaffca739dcd39d13a17" prot="public" static="no">
        <type><ref refid="class_writer" kindref="compound">Writer</ref>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</type>
        <definition>typedef Writer&lt;OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags&gt; PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Base</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>PrettyWriter::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="50" column="20" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3" prot="public" static="no">
        <type><ref refid="class_writer_1ab08bff5fd2daec65f4a78779ca3d2139" kindref="member">Base::Ch</ref></type>
        <definition>typedef Base::Ch PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Ch</definition>
        <argsstring></argsstring>
        <name>Ch</name>
        <qualifiedname>PrettyWriter::Ch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="51" column="31" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pretty_writer_1a928ac2a5235b8877048ebdd5f35a556f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::PrettyWriter</definition>
        <argsstring>(OutputStream &amp;os, StackAllocator *allocator=0, size_t levelDepth=Base::kDefaultLevelDepth)</argsstring>
        <name>PrettyWriter</name>
        <qualifiedname>PrettyWriter::PrettyWriter</qualifiedname>
        <param>
          <type>OutputStream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>StackAllocator *</type>
          <declname>allocator</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>levelDepth</declname>
          <defval><ref refid="class_writer_1a9cb4caeb9d8971f305edff1d70e67acb" kindref="member">Base::kDefaultLevelDepth</ref></defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>Output stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocator</parametername>
</parameternamelist>
<parameterdescription>
<para>User supplied allocator. If it is null, it will create a private one. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>levelDepth</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial capacity of stack. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="58" column="14" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="58" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1a4a9077e0300c6b0e1c830a58c1e738d2" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::PrettyWriter</definition>
        <argsstring>(StackAllocator *allocator=0, size_t levelDepth=Base::kDefaultLevelDepth)</argsstring>
        <name>PrettyWriter</name>
        <qualifiedname>PrettyWriter::PrettyWriter</qualifiedname>
        <param>
          <type>StackAllocator *</type>
          <declname>allocator</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>levelDepth</declname>
          <defval><ref refid="class_writer_1a9cb4caeb9d8971f305edff1d70e67acb" kindref="member">Base::kDefaultLevelDepth</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="62" column="14" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="62" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1abbdc83ce02cf4a811a7355aa3879b45a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_pretty_writer" kindref="compound">PrettyWriter</ref> &amp;</type>
        <definition>PrettyWriter &amp; PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::SetIndent</definition>
        <argsstring>(Ch indentChar, unsigned indentCharCount)</argsstring>
        <name>SetIndent</name>
        <qualifiedname>PrettyWriter::SetIndent</qualifiedname>
        <param>
          <type><ref refid="class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3" kindref="member">Ch</ref></type>
          <declname>indentChar</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>indentCharCount</declname>
        </param>
        <briefdescription>
<para>Set custom indentation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indentChar</parametername>
</parameternamelist>
<parameterdescription>
<para>Character for indentation. Must be whitespace character (&apos; &apos;, &apos;\t&apos;, &apos;\n&apos;, &apos;\r&apos;). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indentCharCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of indent characters for each indentation level. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The default indentation is 4 spaces. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="75" column="18" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_pretty_writer_1aade3381a128071f1da060f5f3075de10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_pretty_writer" kindref="compound">PrettyWriter</ref> &amp;</type>
        <definition>PrettyWriter &amp; PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::SetFormatOptions</definition>
        <argsstring>(PrettyFormatOptions options)</argsstring>
        <name>SetFormatOptions</name>
        <qualifiedname>PrettyWriter::SetFormatOptions</qualifiedname>
        <param>
          <type><ref refid="prettywriter_8h_1a150fd6ef2dbf4025c33ece85451982d5" kindref="member">PrettyFormatOptions</ref></type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Set pretty writer formatting options. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Formatting options. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="85" column="18" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="85" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_writer" kindref="compound">Writer</ref> with indentation and spacing. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of output os. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SourceEncoding</parametername>
</parameternamelist>
<parameterdescription>
<para>Encoding of source string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TargetEncoding</parametername>
</parameternamelist>
<parameterdescription>
<para>Encoding of output stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>StackAllocator</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of allocator for allocating memory of stack. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</label>
        <link refid="class_pretty_writer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Writer&lt; OutputStream, UTF8&lt;&gt;, UTF8&lt;&gt;, CrtAllocator, kWriteDefaultFlags &gt;</label>
        <link refid="class_writer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</label>
        <link refid="class_pretty_writer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>internal::Stack&lt; CrtAllocator &gt;</label>
        <link refid="classinternal_1_1_stack"/>
      </node>
      <node id="2">
        <label>Writer&lt; OutputStream, UTF8&lt;&gt;, UTF8&lt;&gt;, CrtAllocator, kWriteDefaultFlags &gt;</label>
        <link refid="class_writer"/>
        <childnode refid="3" relation="usage">
          <edgelabel>kDefaultLevelDepth</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>level_stack_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>size_t</label>
      </node>
    </collaborationgraph>
    <location file="src/rapidjson/include/rapidjson/prettywriter.h" line="48" column="1" bodyfile="src/rapidjson/include/rapidjson/prettywriter.h" bodystart="48" bodyend="265"/>
    <listofallmembers>
      <member refid="class_pretty_writer_1a6eecc5c896dcdaffca739dcd39d13a17" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Base</name></member>
      <member refid="class_pretty_writer_1a6e765ee7ada5ed40f317c78a98f6f90b" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Bool</name></member>
      <member refid="class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Ch</name></member>
      <member refid="class_pretty_writer_1ad9d592e86b985da666665926e87db415" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Double</name></member>
      <member refid="class_pretty_writer_1a1e9d97fc950d349f55abd864c787ff37" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>EndArray</name></member>
      <member refid="class_pretty_writer_1a6bfdfa4193193ef763cce5c592c4d20c" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>EndObject</name></member>
      <member refid="class_writer_1adc1cadbabc309d31f19cf7463251d879" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>EndValue</name></member>
      <member refid="class_writer_1a8ca4e364c546b2eb526caa68dde011d2" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Flush</name></member>
      <member refid="class_pretty_writer_1a15505ed4ea0fa85d339b3a987f1a3aaf" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>formatOptions_</name></member>
      <member refid="class_writer_1ad35ddb56c6969d9584bf1e73bebda5ab" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>GetMaxDecimalPlaces</name></member>
      <member refid="class_writer_1affc6b9e0332b50bee0d33f8b1841c9a6" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>hasRoot_</name></member>
      <member refid="class_pretty_writer_1aaa3f6380daa8466a5101ed18fc33bf04" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>indentChar_</name></member>
      <member refid="class_pretty_writer_1a7d00b9716ef3cd7e34ae1b744c968f13" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>indentCharCount_</name></member>
      <member refid="class_pretty_writer_1aa1815263e61cb7af3b6dfba480a0f481" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Int</name></member>
      <member refid="class_pretty_writer_1ad42b797429f4ee19efdce610f5aff976" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Int64</name></member>
      <member refid="class_writer_1a07d74d36dd3191b06e0aab678c246157" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>IsComplete</name></member>
      <member refid="class_writer_1a9cb4caeb9d8971f305edff1d70e67acb" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>kDefaultLevelDepth</name></member>
      <member refid="class_writer_1ab46d66ae0ca78cb03ab7fb865d129934" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>kDefaultMaxDecimalPlaces</name></member>
      <member refid="class_pretty_writer_1a20ecbe1d31a871e4da4a3899b40ad3cd" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Key</name></member>
      <member refid="class_pretty_writer_1a4b2a2a6eef02c12d7a3fd77966bd4499" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Key</name></member>
      <member refid="class_writer_1ab6057b7fa9737edb4da55a7afefa966d" prot="public" virt="non-virtual" ambiguityscope="Writer&lt; OutputStream, UTF8&lt;&gt;, UTF8&lt;&gt;, CrtAllocator, kWriteDefaultFlags &gt;::"><scope>PrettyWriter</scope><name>Key</name></member>
      <member refid="class_writer_1a9e6c13c06fc721dfd8486f17b9ff29de" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>level_stack_</name></member>
      <member refid="class_writer_1a3d4ef664c3cdf34a286b13d27adcdd4d" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>maxDecimalPlaces_</name></member>
      <member refid="class_pretty_writer_1aa144f2d0f0c3c69248cdbe957349528c" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Null</name></member>
      <member refid="class_pretty_writer_1ae2fa01c806e051a833fc225003c2520e" prot="private" virt="non-virtual"><scope>PrettyWriter</scope><name>operator=</name></member>
      <member refid="class_writer_1a3a3f60140f78dd67b5274978fd3a33ff" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>os_</name></member>
      <member refid="class_writer_1a1fc40f8b9f3abc2548c0c5782ce1755d" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>Prefix</name></member>
      <member refid="class_pretty_writer_1a09709ffa3b545e007631ecfd35029843" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>PrettyPrefix</name></member>
      <member refid="class_pretty_writer_1a928ac2a5235b8877048ebdd5f35a556f" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>PrettyWriter</name></member>
      <member refid="class_pretty_writer_1a4a9077e0300c6b0e1c830a58c1e738d2" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>PrettyWriter</name></member>
      <member refid="class_pretty_writer_1af573bc27031d90fbc03aab668b099faa" prot="private" virt="non-virtual"><scope>PrettyWriter</scope><name>PrettyWriter</name></member>
      <member refid="class_pretty_writer_1a3941bc21d6a261ca8a86eff330db30ef" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>RawNumber</name></member>
      <member refid="class_pretty_writer_1a440890a72408a150ef46edda6becdc94" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>RawValue</name></member>
      <member refid="class_writer_1a8b53e8f137f7fcf694f5500711b3f58d" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Reset</name></member>
      <member refid="class_writer_1a94140803bba7863a1b39c936bbe6d262" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>ScanWriteUnescapedString</name></member>
      <member refid="class_pretty_writer_1aade3381a128071f1da060f5f3075de10" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>SetFormatOptions</name></member>
      <member refid="class_pretty_writer_1abbdc83ce02cf4a811a7355aa3879b45a" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>SetIndent</name></member>
      <member refid="class_writer_1a58e3f94dc5af1432a8eace5ba427eca7" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>SetMaxDecimalPlaces</name></member>
      <member refid="class_pretty_writer_1aec7fdf4798a3af5e31c147633f4798ed" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>StartArray</name></member>
      <member refid="class_pretty_writer_1a27bdda225dc152b8974e44c1df7525b7" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>StartObject</name></member>
      <member refid="class_pretty_writer_1ae544ccfe35dd7e80ed694873062409f6" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>String</name></member>
      <member refid="class_pretty_writer_1a7e85689355a827d273f272c26b447225" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>String</name></member>
      <member refid="class_writer_1a2a2c6f51644b2013471aec4dac0d7466" prot="public" virt="non-virtual" ambiguityscope="Writer&lt; OutputStream, UTF8&lt;&gt;, UTF8&lt;&gt;, CrtAllocator, kWriteDefaultFlags &gt;::"><scope>PrettyWriter</scope><name>String</name></member>
      <member refid="class_pretty_writer_1a8c82302877a5588eae77eb7d042c49ef" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Uint</name></member>
      <member refid="class_pretty_writer_1aba75ac1f13c2629b2a55ffbf3d8a116c" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Uint64</name></member>
      <member refid="class_writer_1a42ad68b6950431bb8ca0199568546eaf" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteBool</name></member>
      <member refid="class_writer_1ae7a0fc4740681d845d92c1213bd25aa1" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteDouble</name></member>
      <member refid="class_writer_1a114c748ae1f770c20f6ecd7cfc7b67bb" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteDouble</name></member>
      <member refid="class_writer_1aabda2df1be6e83cef416e9b1f042e8f4" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteEndArray</name></member>
      <member refid="class_writer_1a7e3f6760a50a72f4217a9b2d625c43ee" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteEndObject</name></member>
      <member refid="class_pretty_writer_1a6f244ecc94fd5b134d424033b1574b7e" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteIndent</name></member>
      <member refid="class_writer_1a31d0feda654ca245c41462be7dc59998" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteInt</name></member>
      <member refid="class_writer_1aaa9cddc35dbc6a612ef01633ed8a6687" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteInt</name></member>
      <member refid="class_writer_1aa58d3f80c06394648de5055ecfb41587" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteInt64</name></member>
      <member refid="class_writer_1a439aacf94c862df151c16d9c907afe0f" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteInt64</name></member>
      <member refid="class_writer_1a44862b3eba8d84b909c69aba875c9f4d" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteNull</name></member>
      <member refid="class_writer_1af4f54830d6927d9daf5bd53bfd134dd3" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Writer</name></member>
      <member refid="class_writer_1a7b885cea71542fc436be80eff447fb64" prot="public" virt="non-virtual"><scope>PrettyWriter</scope><name>Writer</name></member>
      <member refid="class_writer_1a8ee1135b2595261819b134907f67614e" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteRawValue</name></member>
      <member refid="class_writer_1a3c3560a96cac58f98f4a74d6cb227204" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteStartArray</name></member>
      <member refid="class_writer_1a81c72a2eecd47e042f56ca93a27a5cb1" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteStartObject</name></member>
      <member refid="class_writer_1acda4412ef5f4cac6e89f9544e4b10f70" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteString</name></member>
      <member refid="class_writer_1a2861227e93707d1478d2cf56644dca3b" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteUint</name></member>
      <member refid="class_writer_1a9159dbd1625b1506cd13c79e3b7bad4a" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteUint</name></member>
      <member refid="class_writer_1ad07b325157220e3aa791c1c8c904021e" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteUint64</name></member>
      <member refid="class_writer_1aa1d514cd0200ec1732e74fe26ebcf463" prot="protected" virt="non-virtual"><scope>PrettyWriter</scope><name>WriteUint64</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
