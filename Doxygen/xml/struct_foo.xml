<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="struct_foo" kind="struct" language="C++" prot="public">
    <compoundname>Foo</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_foo_1a0690d7a3e59020efcd0a2b593ad52203" prot="public" static="no" mutable="no">
        <type><ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt; *</type>
        <definition>UTF8&lt;char&gt;* Foo::utf8</definition>
        <argsstring></argsstring>
        <name>utf8</name>
        <qualifiedname>Foo::utf8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="33" column="10" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1a6f425443f0529337b0749102c95e3a0a" prot="public" static="no" mutable="no">
        <type><ref refid="struct_u_t_f16" kindref="compound">UTF16</ref>&lt; wchar_t &gt; *</type>
        <definition>UTF16&lt;wchar_t&gt;* Foo::utf16</definition>
        <argsstring></argsstring>
        <name>utf16</name>
        <qualifiedname>Foo::utf16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="34" column="11" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1ad48b014a4f6832bb846b822382f941ce" prot="public" static="no" mutable="no">
        <type><ref refid="struct_u_t_f16_b_e" kindref="compound">UTF16BE</ref>&lt; wchar_t &gt; *</type>
        <definition>UTF16BE&lt;wchar_t&gt;* Foo::utf16be</definition>
        <argsstring></argsstring>
        <name>utf16be</name>
        <qualifiedname>Foo::utf16be</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="35" column="13" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1af459df7434c8b942513fc8edd684febe" prot="public" static="no" mutable="no">
        <type><ref refid="struct_u_t_f16_l_e" kindref="compound">UTF16LE</ref>&lt; wchar_t &gt; *</type>
        <definition>UTF16LE&lt;wchar_t&gt;* Foo::utf16le</definition>
        <argsstring></argsstring>
        <name>utf16le</name>
        <qualifiedname>Foo::utf16le</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="36" column="13" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1a82da10e57f68e56da0dfd215cbe7b925" prot="public" static="no" mutable="no">
        <type><ref refid="struct_u_t_f32" kindref="compound">UTF32</ref>&lt; unsigned &gt; *</type>
        <definition>UTF32&lt;unsigned&gt;* Foo::utf32</definition>
        <argsstring></argsstring>
        <name>utf32</name>
        <qualifiedname>Foo::utf32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="37" column="11" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1aef43473ce70845a4fc8370e8ade10d85" prot="public" static="no" mutable="no">
        <type><ref refid="struct_u_t_f32_b_e" kindref="compound">UTF32BE</ref>&lt; unsigned &gt; *</type>
        <definition>UTF32BE&lt;unsigned&gt;* Foo::utf32be</definition>
        <argsstring></argsstring>
        <name>utf32be</name>
        <qualifiedname>Foo::utf32be</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="38" column="13" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1aca7c35c438272e5386ee96d6a74606e2" prot="public" static="no" mutable="no">
        <type><ref refid="struct_u_t_f32_l_e" kindref="compound">UTF32LE</ref>&lt; unsigned &gt; *</type>
        <definition>UTF32LE&lt;unsigned&gt;* Foo::utf32le</definition>
        <argsstring></argsstring>
        <name>utf32le</name>
        <qualifiedname>Foo::utf32le</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="39" column="13" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1a379b2b35c1a8702178cce361eb568508" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_s_c_i_i" kindref="compound">ASCII</ref>&lt; char &gt; *</type>
        <definition>ASCII&lt;char&gt;* Foo::ascii</definition>
        <argsstring></argsstring>
        <name>ascii</name>
        <qualifiedname>Foo::ascii</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="40" column="11" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1acbeb6996d4b597ae1343481c357c4015" prot="public" static="no" mutable="no">
        <type><ref refid="struct_auto_u_t_f" kindref="compound">AutoUTF</ref>&lt; unsigned &gt; *</type>
        <definition>AutoUTF&lt;unsigned&gt;* Foo::autoutf</definition>
        <argsstring></argsstring>
        <name>autoutf</name>
        <qualifiedname>Foo::autoutf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="41" column="13" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1a6d0be345a665d2952c4c2f54b7a08907" prot="public" static="no" mutable="no">
        <type><ref refid="struct_transcoder" kindref="compound">Transcoder</ref>&lt; <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt;, <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt; &gt; *</type>
        <definition>Transcoder&lt;UTF8&lt;char&gt;, UTF8&lt;char&gt; &gt;* Foo::transcoder</definition>
        <argsstring></argsstring>
        <name>transcoder</name>
        <qualifiedname>Foo::transcoder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="42" column="16" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1a123641d561899f1b9b7445ee671177b9" prot="public" static="no" mutable="no">
        <type><ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref> *</type>
        <definition>CrtAllocator* Foo::crtallocator</definition>
        <argsstring></argsstring>
        <name>crtallocator</name>
        <qualifiedname>Foo::crtallocator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="45" column="18" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1a56b3f8b4a24ae0565fbbe8de62c180bf" prot="public" static="no" mutable="no">
        <type><ref refid="class_memory_pool_allocator" kindref="compound">MemoryPoolAllocator</ref>&lt; <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref> &gt; *</type>
        <definition>MemoryPoolAllocator&lt;CrtAllocator&gt;* Foo::memorypoolallocator</definition>
        <argsstring></argsstring>
        <name>memorypoolallocator</name>
        <qualifiedname>Foo::memorypoolallocator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="46" column="25" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1a659efc100e0eb26540b4546d1c60a11d" prot="public" static="no" mutable="no">
        <type><ref refid="fwd_8h_1a2d1473c3dd9ab6c975589b45436fe55e" kindref="member">StringStream</ref> *</type>
        <definition>StringStream* Foo::stringstream</definition>
        <argsstring></argsstring>
        <name>stringstream</name>
        <qualifiedname>Foo::stringstream</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="49" column="18" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1aa532f00fa249eef63d4bafba835d7bc5" prot="public" static="no" mutable="no">
        <type><ref refid="fwd_8h_1a87256fd77e335ea15cd195ed8c55e312" kindref="member">InsituStringStream</ref> *</type>
        <definition>InsituStringStream* Foo::insitustringstream</definition>
        <argsstring></argsstring>
        <name>insitustringstream</name>
        <qualifiedname>Foo::insitustringstream</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="50" column="24" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1a7a217935d39e8e4f5d696dc3ea456f9b" prot="public" static="no" mutable="no">
        <type><ref refid="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" kindref="member">StringBuffer</ref> *</type>
        <definition>StringBuffer* Foo::stringbuffer</definition>
        <argsstring></argsstring>
        <name>stringbuffer</name>
        <qualifiedname>Foo::stringbuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="53" column="18" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1a351bfa05d9088a3527c8b0f38c543e58" prot="public" static="no" mutable="no">
        <type><ref refid="fwd_8h_1a611aeb4e5d606f0b099c6408fd8e8e4d" kindref="member">MemoryBuffer</ref> *</type>
        <definition>MemoryBuffer* Foo::memorybuffer</definition>
        <argsstring></argsstring>
        <name>memorybuffer</name>
        <qualifiedname>Foo::memorybuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="62" column="18" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1af3f76c4999db2c997845f29da4e9a11b" prot="public" static="no" mutable="no">
        <type><ref refid="struct_memory_stream" kindref="compound">MemoryStream</ref> *</type>
        <definition>MemoryStream* Foo::memorystream</definition>
        <argsstring></argsstring>
        <name>memorystream</name>
        <qualifiedname>Foo::memorystream</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="65" column="18" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1aebfa4e32be3e3fcba101a92a47ab0fc3" prot="public" static="no" mutable="no">
        <type><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt; <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt;, void &gt; *</type>
        <definition>BaseReaderHandler&lt;UTF8&lt;char&gt;, void&gt;* Foo::basereaderhandler</definition>
        <argsstring></argsstring>
        <name>basereaderhandler</name>
        <qualifiedname>Foo::basereaderhandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="68" column="23" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1a663cb5f1f0305f21412e09b0aa0d022e" prot="public" static="no" mutable="no">
        <type><ref refid="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" kindref="member">Reader</ref> *</type>
        <definition>Reader* Foo::reader</definition>
        <argsstring></argsstring>
        <name>reader</name>
        <qualifiedname>Foo::reader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="69" column="12" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1aa3fefdf934244a8572dee24e865d3d62" prot="public" static="no" mutable="no">
        <type><ref refid="class_writer" kindref="compound">Writer</ref>&lt; <ref refid="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" kindref="member">StringBuffer</ref>, <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt;, <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt;, <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>, 0 &gt; *</type>
        <definition>Writer&lt;StringBuffer, UTF8&lt;char&gt;, UTF8&lt;char&gt;, CrtAllocator, 0&gt;* Foo::writer</definition>
        <argsstring></argsstring>
        <name>writer</name>
        <qualifiedname>Foo::writer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="72" column="12" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1aba8fe59d9a6a5474e2e1f444b46feee5" prot="public" static="no" mutable="no">
        <type><ref refid="class_pretty_writer" kindref="compound">PrettyWriter</ref>&lt; <ref refid="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" kindref="member">StringBuffer</ref>, <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt;, <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt;, <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>, 0 &gt; *</type>
        <definition>PrettyWriter&lt;StringBuffer, UTF8&lt;char&gt;, UTF8&lt;char&gt;, CrtAllocator, 0&gt;* Foo::prettywriter</definition>
        <argsstring></argsstring>
        <name>prettywriter</name>
        <qualifiedname>Foo::prettywriter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="75" column="18" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1aa421db30562573d6f11ea87bc746f8b4" prot="public" static="no" mutable="no">
        <type><ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">Value</ref> *</type>
        <definition>Value* Foo::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>Foo::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="78" column="11" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1a99ea693f1701ba60505e7c6ba85c74b0" prot="public" static="no" mutable="no">
        <type><ref refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" kindref="member">Document</ref> *</type>
        <definition>Document* Foo::document</definition>
        <argsstring></argsstring>
        <name>document</name>
        <qualifiedname>Foo::document</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="79" column="14" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1a80cbd61669d0dea714ae7061932da956" prot="public" static="no" mutable="no">
        <type><ref refid="fwd_8h_1a0e5c49dba7ec654cdda5735347c00397" kindref="member">Pointer</ref> *</type>
        <definition>Pointer* Foo::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>Foo::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="82" column="13" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1aa0e7a71aaa10fcbe3bc8564fc735a4ca" prot="public" static="no" mutable="no">
        <type><ref refid="fwd_8h_1a05c97278ec100471e77a4d678957701b" kindref="member">SchemaDocument</ref> *</type>
        <definition>SchemaDocument* Foo::schemadocument</definition>
        <argsstring></argsstring>
        <name>schemadocument</name>
        <qualifiedname>Foo::schemadocument</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="85" column="20" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_foo_1aeae9f65bd845178d4e60ad7cf52e5eb1" prot="public" static="no" mutable="no">
        <type><ref refid="fwd_8h_1a2c91a2e7dd109dba1803ed2280a2dfa4" kindref="member">SchemaValidator</ref> *</type>
        <definition>SchemaValidator* Foo::schemavalidator</definition>
        <argsstring></argsstring>
        <name>schemavalidator</name>
        <qualifiedname>Foo::schemavalidator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="86" column="21" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_foo_1a5c036d1b3561a0e1beffe8c6799a4276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Foo::Foo</definition>
        <argsstring>()</argsstring>
        <name>Foo</name>
        <qualifiedname>Foo::Foo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="29" column="5" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="106" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="struct_foo_1ab5d0e04c302f74429916d603e0fd8610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Foo::~Foo</definition>
        <argsstring>()</argsstring>
        <name>~Foo</name>
        <qualifiedname>Foo::~Foo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="30" column="5" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="166" bodyend="222"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>ASCII&lt; char &gt;</label>
        <link refid="struct_a_s_c_i_i"/>
      </node>
      <node id="10">
        <label>AutoUTF&lt; unsigned &gt;</label>
        <link refid="struct_auto_u_t_f"/>
      </node>
      <node id="24">
        <label>BaseReaderHandler&lt; UTF8&lt; char &gt;, void &gt;</label>
        <link refid="struct_base_reader_handler"/>
      </node>
      <node id="62">
        <label>BaseReaderHandler&lt; typename SchemaDocumentType::SchemaType::EncodingType &gt;</label>
        <link refid="struct_base_reader_handler"/>
      </node>
      <node id="12">
        <label>CrtAllocator</label>
        <link refid="class_crt_allocator"/>
      </node>
      <node id="1">
        <label>Foo</label>
        <link refid="struct_foo"/>
        <childnode refid="2" relation="usage">
          <edgelabel>utf8</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>utf16</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>utf16be</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>utf16le</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>utf32</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>utf32be</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>utf32le</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>ascii</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>autoutf</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>transcoder</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>crtallocator</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>memorypoolallocator</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>stringstream</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>insitustringstream</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>stringbuffer</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>memorybuffer</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>memorystream</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>basereaderhandler</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>reader</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>writer</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>prettywriter</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>document</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>pointer</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>schemadocument</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>schemavalidator</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>GenericDocument&lt; Encoding, Allocator, StackAllocator &gt;</label>
        <link refid="class_generic_document"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>kDefaultStackCapacity</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>stack_</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>parseResult_</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>GenericInsituStringStream&lt; Encoding &gt;</label>
        <link refid="struct_generic_insitu_string_stream"/>
      </node>
      <node id="39">
        <label>GenericMember&lt; Encoding, Allocator &gt;</label>
        <link refid="class_generic_member"/>
        <childnode refid="40" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>GenericMemoryBuffer&lt; Allocator &gt;</label>
        <link refid="struct_generic_memory_buffer"/>
        <childnode refid="14" relation="usage">
          <edgelabel>kDefaultCapacity</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>stack_</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>GenericPointer&lt; ValueType, Allocator &gt;</label>
        <link refid="class_generic_pointer"/>
        <childnode refid="12" relation="usage">
          <edgelabel>allocator</edgelabel>
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>tokens_</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>parseErrorOffset_</edgelabel>
          <edgelabel>tokenCount_</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>GenericPointer&lt; ValueType, Allocator &gt;::Token</label>
        <link refid="struct_generic_pointer_1_1_token"/>
      </node>
      <node id="25">
        <label>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;</label>
        <link refid="class_generic_reader"/>
        <childnode refid="14" relation="usage">
          <edgelabel>kDefaultStackCapacity</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>stack_</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>parseResult_</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>GenericSchemaDocument&lt; ValueT, Allocator &gt;</label>
        <link refid="class_generic_schema_document"/>
        <childnode refid="14" relation="usage">
          <edgelabel>kInitialSchemaMapSize</edgelabel>
          <edgelabel>kInitialSchemaRefSize</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>remoteProvider_</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>root_</edgelabel>
          <edgelabel>typeless_</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>schemaMap_</edgelabel>
          <edgelabel>schemaRef_</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>uri_</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>docId_</edgelabel>
        </childnode>
      </node>
      <node id="58">
        <label>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</label>
        <link refid="class_generic_schema_validator"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>kDefaultDocumentStackCapacity</edgelabel>
          <edgelabel>kDefaultSchemaStackCapacity</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>ownStateAllocator_</edgelabel>
          <edgelabel>stateAllocator_</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>documentStack_</edgelabel>
          <edgelabel>schemaStack_</edgelabel>
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>outputHandler_</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>currentError_</edgelabel>
          <edgelabel>error_</edgelabel>
          <edgelabel>missingDependents_</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>GenericStringBuffer&lt; Encoding, Allocator &gt;</label>
        <link refid="class_generic_string_buffer"/>
        <childnode refid="14" relation="usage">
          <edgelabel>kDefaultCapacity</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>stack_</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>GenericStringStream&lt; Encoding &gt;</label>
        <link refid="struct_generic_string_stream"/>
      </node>
      <node id="52">
        <label>GenericUri&lt; ValueType, AllocatorType &gt;</label>
        <link refid="class_generic_uri"/>
      </node>
      <node id="57">
        <label>GenericUri&lt; ValueType, CrtAllocator &gt;</label>
        <link refid="class_generic_uri"/>
        <childnode refid="12" relation="usage">
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>GenericValue&lt; Encoding, Allocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="32" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ArrayData</label>
        <link refid="struct_generic_value_1_1_array_data"/>
        <childnode refid="31" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Data</label>
        <link refid="union_generic_value_1_1_data"/>
        <childnode refid="33" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>ss</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>n</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>o</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>a</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Flag</label>
        <link refid="struct_generic_value_1_1_flag"/>
      </node>
      <node id="35">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number</label>
        <link refid="union_generic_value_1_1_number"/>
        <childnode refid="36" relation="usage">
          <edgelabel>i</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>u</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number::I</label>
        <link refid="struct_generic_value_1_1_number_1_1_i"/>
      </node>
      <node id="37">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number::U</label>
        <link refid="struct_generic_value_1_1_number_1_1_u"/>
      </node>
      <node id="38">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ObjectData</label>
        <link refid="struct_generic_value_1_1_object_data"/>
        <childnode refid="39" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ShortString</label>
        <link refid="struct_generic_value_1_1_short_string"/>
      </node>
      <node id="33">
        <label>GenericValue&lt; Encoding, Allocator &gt;::String</label>
        <link refid="struct_generic_value_1_1_string"/>
      </node>
      <node id="44">
        <label>GenericValue&lt; Encoding, RAPIDJSON_DEFAULT_ALLOCATOR &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="32" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>GenericValue&lt; EncodingType, AllocatorType &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="32" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="63">
        <label>GenericValue&lt; EncodingType, CrtAllocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="32" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>GenericValue&lt; rapidjson::Encoding, rapidjson::Allocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="32" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>IGenericRemoteSchemaDocumentProvider&lt; SchemaDocumentType &gt;</label>
        <link refid="class_i_generic_remote_schema_document_provider"/>
      </node>
      <node id="59">
        <label>internal::ISchemaStateFactory&lt; SchemaDocumentType::SchemaType &gt;</label>
        <link refid="classinternal_1_1_i_schema_state_factory"/>
      </node>
      <node id="61">
        <label>internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</label>
        <link refid="classinternal_1_1_i_validation_error_handler"/>
      </node>
      <node id="16">
        <label>MemoryPoolAllocator&lt; BaseAllocator &gt;::ChunkHeader</label>
        <link refid="struct_memory_pool_allocator_1_1_chunk_header"/>
        <childnode refid="14" relation="usage">
          <edgelabel>capacity</edgelabel>
          <edgelabel>size</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>MemoryPoolAllocator&lt; BaseAllocator &gt;::SharedData</label>
        <link refid="struct_memory_pool_allocator_1_1_shared_data"/>
        <childnode refid="16" relation="usage">
          <edgelabel>chunkHead</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>refcount</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>MemoryPoolAllocator&lt; CrtAllocator &gt;</label>
        <link refid="class_memory_pool_allocator"/>
        <childnode refid="14" relation="usage">
          <edgelabel>SIZEOF_CHUNK_HEADER</edgelabel>
          <edgelabel>SIZEOF_SHARED_DATA</edgelabel>
          <edgelabel>chunk_capacity_</edgelabel>
          <edgelabel>kDefaultChunkCapacity</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>baseAllocator_</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>shared_</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>MemoryStream</label>
        <link refid="struct_memory_stream"/>
        <childnode refid="14" relation="usage">
          <edgelabel>size_</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>ParseResult</label>
        <link refid="struct_parse_result"/>
        <childnode refid="14" relation="usage">
          <edgelabel>offset_</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>PrettyWriter&lt; GenericStringBuffer, UTF8&lt; char &gt;, UTF8&lt; char &gt;, CrtAllocator, 0 &gt;</label>
        <link refid="class_pretty_writer"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>internal::Stack&lt; CrtAllocator &gt;</label>
        <link refid="classinternal_1_1_stack"/>
        <childnode refid="12" relation="usage">
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>initialCapacity_</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>internal::Stack&lt; RAPIDJSON_DEFAULT_STACK_ALLOCATOR &gt;</label>
        <link refid="classinternal_1_1_stack"/>
        <childnode refid="14" relation="usage">
          <edgelabel>initialCapacity_</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>internal::Stack&lt; rapidjson::Allocator &gt;</label>
        <link refid="classinternal_1_1_stack"/>
        <childnode refid="21" relation="usage">
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>initialCapacity_</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>Transcoder&lt; UTF8&lt; char &gt;, UTF8&lt; char &gt; &gt;</label>
        <link refid="struct_transcoder"/>
      </node>
      <node id="3">
        <label>UTF16&lt; wchar_t &gt;</label>
        <link refid="struct_u_t_f16"/>
      </node>
      <node id="4">
        <label>UTF16BE&lt; wchar_t &gt;</label>
        <link refid="struct_u_t_f16_b_e"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>UTF16LE&lt; wchar_t &gt;</label>
        <link refid="struct_u_t_f16_l_e"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>UTF32&lt; unsigned &gt;</label>
        <link refid="struct_u_t_f32"/>
      </node>
      <node id="7">
        <label>UTF32BE&lt; unsigned &gt;</label>
        <link refid="struct_u_t_f32_b_e"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>UTF32LE&lt; unsigned &gt;</label>
        <link refid="struct_u_t_f32_l_e"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>UTF8&lt; char &gt;</label>
        <link refid="struct_u_t_f8"/>
      </node>
      <node id="28">
        <label>Writer&lt; GenericStringBuffer, UTF8&lt; char &gt;, UTF8&lt; char &gt;, CrtAllocator, 0 &gt;</label>
        <link refid="class_writer"/>
        <childnode refid="14" relation="usage">
          <edgelabel>kDefaultLevelDepth</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>os_</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>level_stack_</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>Writer&lt; GenericStringBuffer, UTF8&lt; char &gt;, UTF8&lt; char &gt;, CrtAllocator, writeFlags &gt;</label>
        <link refid="class_writer"/>
        <childnode refid="14" relation="usage">
          <edgelabel>kDefaultLevelDepth</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>os_</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>level_stack_</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>internal::GenericRegex&lt; Encoding, Allocator &gt;</label>
        <link refid="classinternal_1_1_generic_regex"/>
        <childnode refid="12" relation="usage">
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>ranges_</edgelabel>
          <edgelabel>states_</edgelabel>
        </childnode>
      </node>
      <node id="60">
        <label>internal::ISchemaValidator</label>
        <link refid="classinternal_1_1_i_schema_validator"/>
      </node>
      <node id="50">
        <label>internal::Schema&lt; SchemaDocumentType &gt;</label>
        <link refid="classinternal_1_1_schema"/>
        <childnode refid="51" relation="usage">
          <edgelabel>maximum_</edgelabel>
          <edgelabel>minimum_</edgelabel>
          <edgelabel>multipleOf_</edgelabel>
          <edgelabel>uri_</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>id_</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>additionalItemsSchema_</edgelabel>
          <edgelabel>additionalPropertiesSchema_</edgelabel>
          <edgelabel>itemsList_</edgelabel>
          <edgelabel>itemsTuple_</edgelabel>
          <edgelabel>not_</edgelabel>
          <edgelabel>typeless_</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>allOf_</edgelabel>
          <edgelabel>anyOf_</edgelabel>
          <edgelabel>oneOf_</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>properties_</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>patternProperties_</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>pattern_</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>internal::Schema&lt; SchemaDocumentType &gt;::PatternProperty</label>
        <link refid="structinternal_1_1_schema_1_1_pattern_property"/>
        <childnode refid="50" relation="usage">
          <edgelabel>schema</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>pattern</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>internal::Schema&lt; SchemaDocumentType &gt;::Property</label>
        <link refid="structinternal_1_1_schema_1_1_property"/>
        <childnode refid="51" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>dependenciesSchema</edgelabel>
          <edgelabel>schema</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>internal::Schema&lt; SchemaDocumentType &gt;::SchemaArray</label>
        <link refid="structinternal_1_1_schema_1_1_schema_array"/>
        <childnode refid="50" relation="usage">
          <edgelabel>schemas</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>Allocator</label>
        <link refid="classrapidjson_1_1_allocator"/>
      </node>
      <node id="14">
        <label>size_t</label>
      </node>
    </collaborationgraph>
    <location file="src/rapidjson/test/unittest/fwdtest.cpp" line="28" column="1" bodyfile="src/rapidjson/test/unittest/fwdtest.cpp" bodystart="28" bodyend="89"/>
    <listofallmembers>
      <member refid="struct_foo_1a379b2b35c1a8702178cce361eb568508" prot="public" virt="non-virtual"><scope>Foo</scope><name>ascii</name></member>
      <member refid="struct_foo_1acbeb6996d4b597ae1343481c357c4015" prot="public" virt="non-virtual"><scope>Foo</scope><name>autoutf</name></member>
      <member refid="struct_foo_1aebfa4e32be3e3fcba101a92a47ab0fc3" prot="public" virt="non-virtual"><scope>Foo</scope><name>basereaderhandler</name></member>
      <member refid="struct_foo_1a123641d561899f1b9b7445ee671177b9" prot="public" virt="non-virtual"><scope>Foo</scope><name>crtallocator</name></member>
      <member refid="struct_foo_1a99ea693f1701ba60505e7c6ba85c74b0" prot="public" virt="non-virtual"><scope>Foo</scope><name>document</name></member>
      <member refid="struct_foo_1a5c036d1b3561a0e1beffe8c6799a4276" prot="public" virt="non-virtual"><scope>Foo</scope><name>Foo</name></member>
      <member refid="struct_foo_1aa532f00fa249eef63d4bafba835d7bc5" prot="public" virt="non-virtual"><scope>Foo</scope><name>insitustringstream</name></member>
      <member refid="struct_foo_1a351bfa05d9088a3527c8b0f38c543e58" prot="public" virt="non-virtual"><scope>Foo</scope><name>memorybuffer</name></member>
      <member refid="struct_foo_1a56b3f8b4a24ae0565fbbe8de62c180bf" prot="public" virt="non-virtual"><scope>Foo</scope><name>memorypoolallocator</name></member>
      <member refid="struct_foo_1af3f76c4999db2c997845f29da4e9a11b" prot="public" virt="non-virtual"><scope>Foo</scope><name>memorystream</name></member>
      <member refid="struct_foo_1a80cbd61669d0dea714ae7061932da956" prot="public" virt="non-virtual"><scope>Foo</scope><name>pointer</name></member>
      <member refid="struct_foo_1aba8fe59d9a6a5474e2e1f444b46feee5" prot="public" virt="non-virtual"><scope>Foo</scope><name>prettywriter</name></member>
      <member refid="struct_foo_1a663cb5f1f0305f21412e09b0aa0d022e" prot="public" virt="non-virtual"><scope>Foo</scope><name>reader</name></member>
      <member refid="struct_foo_1aa0e7a71aaa10fcbe3bc8564fc735a4ca" prot="public" virt="non-virtual"><scope>Foo</scope><name>schemadocument</name></member>
      <member refid="struct_foo_1aeae9f65bd845178d4e60ad7cf52e5eb1" prot="public" virt="non-virtual"><scope>Foo</scope><name>schemavalidator</name></member>
      <member refid="struct_foo_1a7a217935d39e8e4f5d696dc3ea456f9b" prot="public" virt="non-virtual"><scope>Foo</scope><name>stringbuffer</name></member>
      <member refid="struct_foo_1a659efc100e0eb26540b4546d1c60a11d" prot="public" virt="non-virtual"><scope>Foo</scope><name>stringstream</name></member>
      <member refid="struct_foo_1a6d0be345a665d2952c4c2f54b7a08907" prot="public" virt="non-virtual"><scope>Foo</scope><name>transcoder</name></member>
      <member refid="struct_foo_1a6f425443f0529337b0749102c95e3a0a" prot="public" virt="non-virtual"><scope>Foo</scope><name>utf16</name></member>
      <member refid="struct_foo_1ad48b014a4f6832bb846b822382f941ce" prot="public" virt="non-virtual"><scope>Foo</scope><name>utf16be</name></member>
      <member refid="struct_foo_1af459df7434c8b942513fc8edd684febe" prot="public" virt="non-virtual"><scope>Foo</scope><name>utf16le</name></member>
      <member refid="struct_foo_1a82da10e57f68e56da0dfd215cbe7b925" prot="public" virt="non-virtual"><scope>Foo</scope><name>utf32</name></member>
      <member refid="struct_foo_1aef43473ce70845a4fc8370e8ade10d85" prot="public" virt="non-virtual"><scope>Foo</scope><name>utf32be</name></member>
      <member refid="struct_foo_1aca7c35c438272e5386ee96d6a74606e2" prot="public" virt="non-virtual"><scope>Foo</scope><name>utf32le</name></member>
      <member refid="struct_foo_1a0690d7a3e59020efcd0a2b593ad52203" prot="public" virt="non-virtual"><scope>Foo</scope><name>utf8</name></member>
      <member refid="struct_foo_1aa421db30562573d6f11ea87bc746f8b4" prot="public" virt="non-virtual"><scope>Foo</scope><name>value</name></member>
      <member refid="struct_foo_1aa3fefdf934244a8572dee24e865d3d62" prot="public" virt="non-virtual"><scope>Foo</scope><name>writer</name></member>
      <member refid="struct_foo_1ab5d0e04c302f74429916d603e0fd8610" prot="public" virt="non-virtual"><scope>Foo</scope><name>~Foo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
