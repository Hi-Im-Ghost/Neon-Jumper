<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_generic_member_iterator" kind="class" language="C++" prot="public">
    <compoundname>GenericMemberIterator</compoundname>
    <includes refid="document_8h" local="no">document.h</includes>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>Const</declname>
        <defname>Const</defname>
      </param>
      <param>
        <type>typename <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref></type>
      </param>
      <param>
        <type>typename <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>std::iterator_traits support</header>
      <memberdef kind="typedef" id="class_generic_member_iterator_1a79326e02032d06d80e09ded797501553" prot="public" static="no">
        <type><ref refid="class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584" kindref="member">ValueType</ref></type>
        <definition>typedef ValueType GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>GenericMemberIterator::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="204" column="28" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_member_iterator_1a7c3623bc81b06495fd3128398487e99e" prot="public" static="no">
        <type><ref refid="class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584" kindref="member">ValueType</ref> *</type>
        <definition>typedef ValueType* GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>GenericMemberIterator::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="205" column="27" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_member_iterator_1a182876d698903331bd0b11db6d1beeca" prot="public" static="no">
        <type><ref refid="class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584" kindref="member">ValueType</ref> &amp;</type>
        <definition>typedef ValueType&amp; GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>GenericMemberIterator::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="206" column="27" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_member_iterator_1ae60bbcbaec51d36eef299996543872e6" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>typedef std::ptrdiff_t GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>GenericMemberIterator::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="207" column="28" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_member_iterator_1a36cd90aef13c0cce916929f63fdb5c86" prot="public" static="no">
        <type>std::random_access_iterator_tag</type>
        <definition>typedef std::random_access_iterator_tag GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::iterator_category</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <qualifiedname>GenericMemberIterator::iterator_category</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="208" column="45" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29" prot="public" static="no">
        <type><ref refid="class_generic_member_iterator_1a7c3623bc81b06495fd3128398487e99e" kindref="member">pointer</ref></type>
        <definition>typedef pointer GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::Pointer</definition>
        <argsstring></argsstring>
        <name>Pointer</name>
        <qualifiedname>GenericMemberIterator::Pointer</qualifiedname>
        <briefdescription>
<para>Pointer to (const) <ref refid="class_generic_member" kindref="compound">GenericMember</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="212" column="29" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_member_iterator_1a8042a85a9e233d65de5b6c66d9a1109a" prot="public" static="no">
        <type><ref refid="class_generic_member_iterator_1a182876d698903331bd0b11db6d1beeca" kindref="member">reference</ref></type>
        <definition>typedef reference GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::Reference</definition>
        <argsstring></argsstring>
        <name>Reference</name>
        <qualifiedname>GenericMemberIterator::Reference</qualifiedname>
        <briefdescription>
<para>Reference to (const) <ref refid="class_generic_member" kindref="compound">GenericMember</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="214" column="29" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" prot="public" static="no">
        <type><ref refid="class_generic_member_iterator_1ae60bbcbaec51d36eef299996543872e6" kindref="member">difference_type</ref></type>
        <definition>typedef difference_type GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::DifferenceType</definition>
        <argsstring></argsstring>
        <name>DifferenceType</name>
        <qualifiedname>GenericMemberIterator::DifferenceType</qualifiedname>
        <briefdescription>
<para>Signed integer type (e.g. <computeroutput>ptrdiff_t</computeroutput>) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="216" column="29" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1a2708717d497a0aadacdf75900de4c5b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::GenericMemberIterator</definition>
        <argsstring>()</argsstring>
        <name>GenericMemberIterator</name>
        <qualifiedname>GenericMemberIterator::GenericMemberIterator</qualifiedname>
        <briefdescription>
<para>Default constructor (singular value) </para>
        </briefdescription>
        <detaileddescription>
<para>Creates an iterator pointing to no element. <simplesect kind="note"><para>All operations, except for comparisons, are undefined on such values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="222" column="5" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1a2697fd327a90654b0bf91c988e43f95e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::GenericMemberIterator</definition>
        <argsstring>(const NonConstIterator &amp;it)</argsstring>
        <name>GenericMemberIterator</name>
        <qualifiedname>GenericMemberIterator::GenericMemberIterator</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_member_iterator_1abc26eb06f2962765b11dcd06ce84ac02" kindref="member">NonConstIterator</ref> &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
<para>Iterator conversions to more const. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>(Non-const) iterator to copy from</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Allows the creation of an iterator from another <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref> that is &quot;less const&quot;. Especially, creating a non-constant iterator from a constant iterator are disabled: <itemizedlist>
<listitem><para>const -&gt; non-const (not ok) </para>
</listitem>
<listitem><para>const -&gt; const (ok) </para>
</listitem>
<listitem><para>non-const -&gt; const (ok) </para>
</listitem>
<listitem><para>non-const -&gt; non-const (ok)</para>
</listitem>
</itemizedlist>
<simplesect kind="note"><para>If the <computeroutput>Const</computeroutput> template parameter is already <computeroutput>false</computeroutput>, this constructor effectively defines a regular copy-constructor. Otherwise, the copy constructor is implicitly defined. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="240" column="5" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="240" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1a3106e0e66d8a692d9ff9f91b99421302" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref> &amp;</type>
        <definition>Iterator &amp; GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator=</definition>
        <argsstring>(const NonConstIterator &amp;it)</argsstring>
        <name>operator=</name>
        <qualifiedname>GenericMemberIterator::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_member_iterator_1abc26eb06f2962765b11dcd06ce84ac02" kindref="member">NonConstIterator</ref> &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="241" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="241" bodyend="241"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>dereference</header>
      <memberdef kind="variable" id="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" prot="private" static="no" mutable="no">
        <type><ref refid="class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29" kindref="member">Pointer</ref></type>
        <definition>Pointer GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::ptr_</definition>
        <argsstring></argsstring>
        <name>ptr_</name>
        <qualifiedname>GenericMemberIterator::ptr_</qualifiedname>
        <briefdescription>
<para>raw pointer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="288" column="13" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1a56ad403f7e7a35d6060931685d6cbbe8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_member_iterator_1a8042a85a9e233d65de5b6c66d9a1109a" kindref="member">Reference</ref></type>
        <definition>Reference GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <qualifiedname>GenericMemberIterator::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="276" column="15" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="276" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1abc95a8e52653a8baa2927b03239f4be9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29" kindref="member">Pointer</ref></type>
        <definition>Pointer GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <qualifiedname>GenericMemberIterator::operator-&gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="277" column="15" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="277" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1a41b59f1bd367a98ee5d1138cc81e98a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_member_iterator_1a8042a85a9e233d65de5b6c66d9a1109a" kindref="member">Reference</ref></type>
        <definition>Reference GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator[]</definition>
        <argsstring>(DifferenceType n) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>GenericMemberIterator::operator[]</qualifiedname>
        <param>
          <type><ref refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" kindref="member">DifferenceType</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="278" column="15" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="278" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1ae119ae8ed78dbd980f83d367f59a3c94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" kindref="member">DifferenceType</ref></type>
        <definition>DifferenceType GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator-</definition>
        <argsstring>(ConstIterator that) const</argsstring>
        <name>operator-</name>
        <qualifiedname>GenericMemberIterator::operator-</qualifiedname>
        <param>
          <type><ref refid="class_generic_member_iterator_1ae5be27a73dce0be58ee2776db896d591" kindref="member">ConstIterator</ref></type>
          <declname>that</declname>
        </param>
        <briefdescription>
<para>Distance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="282" column="20" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="282" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1a76c372cd90c8abff942ab054c4992c74" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::GenericMemberIterator</definition>
        <argsstring>(Pointer p)</argsstring>
        <name>GenericMemberIterator</name>
        <qualifiedname>GenericMemberIterator::GenericMemberIterator</qualifiedname>
        <param>
          <type><ref refid="class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29" kindref="member">Pointer</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Internal constructor from plain pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="286" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="286" bodyend="286"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>stepping</header>
      <memberdef kind="function" id="class_generic_member_iterator_1a37bbba2bf6f56aee43ccf3caf5ac51d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref> &amp;</type>
        <definition>Iterator &amp; GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <qualifiedname>GenericMemberIterator::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="245" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="245" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1ae413025561a25dbb7c95b93ff387cc55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref> &amp;</type>
        <definition>Iterator &amp; GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <qualifiedname>GenericMemberIterator::operator--</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="246" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1a83c8be6d960213ce32d68a880a8d9089" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref></type>
        <definition>Iterator GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <qualifiedname>GenericMemberIterator::operator++</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="247" column="15" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="247" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1a4606c8baec5ea2b5139a503f7caa5444" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref></type>
        <definition>Iterator GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <qualifiedname>GenericMemberIterator::operator--</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="248" column="15" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="248" bodyend="248"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>increment/decrement</header>
      <memberdef kind="function" id="class_generic_member_iterator_1a472098839cec785b43a005a23d7a284b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref></type>
        <definition>Iterator GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator+</definition>
        <argsstring>(DifferenceType n) const</argsstring>
        <name>operator+</name>
        <qualifiedname>GenericMemberIterator::operator+</qualifiedname>
        <param>
          <type><ref refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" kindref="member">DifferenceType</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="253" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="253" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1a343099509473934b40b9a4264c472721" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref></type>
        <definition>Iterator GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator-</definition>
        <argsstring>(DifferenceType n) const</argsstring>
        <name>operator-</name>
        <qualifiedname>GenericMemberIterator::operator-</qualifiedname>
        <param>
          <type><ref refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" kindref="member">DifferenceType</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="254" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="254" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1a6b86a449909e8611c449f428809eb237" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref> &amp;</type>
        <definition>Iterator &amp; GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator+=</definition>
        <argsstring>(DifferenceType n)</argsstring>
        <name>operator+=</name>
        <qualifiedname>GenericMemberIterator::operator+=</qualifiedname>
        <param>
          <type><ref refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" kindref="member">DifferenceType</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="256" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="256" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1aa3f9472c44eb8e0c040d24935bfa8e82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">Iterator</ref> &amp;</type>
        <definition>Iterator &amp; GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator-=</definition>
        <argsstring>(DifferenceType n)</argsstring>
        <name>operator-=</name>
        <qualifiedname>GenericMemberIterator::operator-=</qualifiedname>
        <param>
          <type><ref refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" kindref="member">DifferenceType</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="257" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="257" bodyend="257"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>relations</header>
      <memberdef kind="function" id="class_generic_member_iterator_1a79ec0aac9cd098fddd656b3ce55d0c0a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>Const_</declname>
            <defname>Const_</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator==</definition>
        <argsstring>(const GenericMemberIterator&lt; Const_, Encoding, Allocator &gt; &amp;that) const</argsstring>
        <name>operator==</name>
        <qualifiedname>GenericMemberIterator::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt; Const_, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt; &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="262" column="22" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="262" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1ad1d518be7ace72462fc77cd4c6f250e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>Const_</declname>
            <defname>Const_</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator!=</definition>
        <argsstring>(const GenericMemberIterator&lt; Const_, Encoding, Allocator &gt; &amp;that) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>GenericMemberIterator::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt; Const_, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt; &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="263" column="22" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1a1d6b406f68ff02515fdc3e0385057a12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>Const_</declname>
            <defname>Const_</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator&lt;=</definition>
        <argsstring>(const GenericMemberIterator&lt; Const_, Encoding, Allocator &gt; &amp;that) const</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>GenericMemberIterator::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt; Const_, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt; &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="264" column="17" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1ab6d9e8fce04a598f10453b3f722c78ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>Const_</declname>
            <defname>Const_</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator&gt;=</definition>
        <argsstring>(const GenericMemberIterator&lt; Const_, Encoding, Allocator &gt; &amp;that) const</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>GenericMemberIterator::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt; Const_, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt; &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="265" column="22" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="265" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1aaadf9036c5d4563cf00019ba840dd09a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>Const_</declname>
            <defname>Const_</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator&lt;</definition>
        <argsstring>(const GenericMemberIterator&lt; Const_, Encoding, Allocator &gt; &amp;that) const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>GenericMemberIterator::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt; Const_, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt; &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="266" column="17" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="266" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_member_iterator_1a1b2faefeb0d9bbc04bd02d69d25828f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>Const_</declname>
            <defname>Const_</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::operator&gt;</definition>
        <argsstring>(const GenericMemberIterator&lt; Const_, Encoding, Allocator &gt; &amp;that) const</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>GenericMemberIterator::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt; Const_, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt; &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="267" column="22" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="267" bodyend="267"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_generic_member_iterator_1ac0d50d12ba074e68837964244668c66b" prot="private" static="no">
        <type><ref refid="class_generic_member" kindref="compound">GenericMember</ref>&lt; <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;</type>
        <definition>typedef GenericMember&lt;Encoding,Allocator&gt; GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::PlainType</definition>
        <argsstring></argsstring>
        <name>PlainType</name>
        <qualifiedname>GenericMemberIterator::PlainType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="191" column="27" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584" prot="private" static="no">
        <type>internal::MaybeAddConst&lt; Const, <ref refid="class_generic_member_iterator_1ac0d50d12ba074e68837964244668c66b" kindref="member">PlainType</ref> &gt;<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref></type>
        <definition>typedef internal::MaybeAddConst&lt;Const,PlainType&gt;::Type GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::ValueType</definition>
        <argsstring></argsstring>
        <name>ValueType</name>
        <qualifiedname>GenericMemberIterator::ValueType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="192" column="53" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" prot="public" static="no">
        <type><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref></type>
        <definition>typedef GenericMemberIterator GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::Iterator</definition>
        <argsstring></argsstring>
        <name>Iterator</name>
        <qualifiedname>GenericMemberIterator::Iterator</qualifiedname>
        <briefdescription>
<para>Iterator type itself. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="196" column="35" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_member_iterator_1ae5be27a73dce0be58ee2776db896d591" prot="public" static="no">
        <type><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt; true, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;</type>
        <definition>typedef GenericMemberIterator&lt;true,Encoding,Allocator&gt; GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::ConstIterator</definition>
        <argsstring></argsstring>
        <name>ConstIterator</name>
        <qualifiedname>GenericMemberIterator::ConstIterator</qualifiedname>
        <briefdescription>
<para>Constant iterator type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="198" column="36" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_member_iterator_1abc26eb06f2962765b11dcd06ce84ac02" prot="public" static="no">
        <type><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt; false, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;</type>
        <definition>typedef GenericMemberIterator&lt;false,Encoding,Allocator&gt; GenericMemberIterator&lt; Const, Encoding, Allocator &gt;::NonConstIterator</definition>
        <argsstring></argsstring>
        <name>NonConstIterator</name>
        <qualifiedname>GenericMemberIterator::NonConstIterator</qualifiedname>
        <briefdescription>
<para>Non-constant iterator type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="200" column="35" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_generic_member_iterator_1a82bdd5798f1a5ac0e3e7ba4bd6938cfc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class GenericValue&lt; Encoding, Allocator &gt;</definition>
        <argsstring></argsstring>
        <name>GenericValue&lt; Encoding, Allocator &gt;</name>
        <qualifiedname>GenericMemberIterator::GenericValue&lt; Encoding, Allocator &gt;</qualifiedname>
        <param>
          <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="158" column="5" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_generic_member_iterator_1aa375aeb1ffac85cddc3a72a6c24ec6e1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
          </param>
          <param>
            <type>typename</type>
          </param>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class GenericMemberIterator</definition>
        <argsstring></argsstring>
        <name>GenericMemberIterator</name>
        <qualifiedname>GenericMemberIterator::GenericMemberIterator</qualifiedname>
        <param>
          <type><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="189" column="31" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>(Constant) member iterator for a JSON object value </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Const</parametername>
</parameternamelist>
<parameterdescription>
<para>Is this a constant iterator? </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Encoding</parametername>
</parameternamelist>
<parameterdescription>
<para>Encoding of the value. (Even non-string values need to have the same encoding in a document) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Allocator</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocator type for allocating memory of object, array and string.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This class implements a <ref refid="class_random" kindref="compound">Random</ref> Access Iterator for <ref refid="class_generic_member" kindref="compound">GenericMember</ref> elements of a <ref refid="class_generic_value" kindref="compound">GenericValue</ref>, see ISO/IEC 14882:2003(E) C++ standard, 24.1 [lib.iterator.requirements].</para>
<para><simplesect kind="note"><para>This iterator implementation is mainly intended to avoid implicit conversions from iterator values to <computeroutput>NULL</computeroutput>, e.g. from GenericValue::FindMember.</para>
</simplesect>
<simplesect kind="note"><para>Define <computeroutput>RAPIDJSON_NOMEMBERITERATORCLASS</computeroutput> to fall back to a pointer-based implementation, if your platform doesn&apos;t provide the C++ &lt;iterator&gt; header.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_generic_member" kindref="compound">GenericMember</ref>, <ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">GenericValue::MemberIterator</ref>, <ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">GenericValue::ConstMemberIterator</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="src/rapidjson/include/rapidjson/document.h" line="186" column="1" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="186" bodyend="289"/>
    <listofallmembers>
      <member refid="class_generic_member_iterator_1ae5be27a73dce0be58ee2776db896d591" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>ConstIterator</name></member>
      <member refid="class_generic_member_iterator_1ae60bbcbaec51d36eef299996543872e6" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>difference_type</name></member>
      <member refid="class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>DifferenceType</name></member>
      <member refid="class_generic_member_iterator_1aa375aeb1ffac85cddc3a72a6c24ec6e1" prot="private" virt="non-virtual"><scope>GenericMemberIterator</scope><name>GenericMemberIterator</name></member>
      <member refid="class_generic_member_iterator_1a2708717d497a0aadacdf75900de4c5b4" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>GenericMemberIterator</name></member>
      <member refid="class_generic_member_iterator_1a2697fd327a90654b0bf91c988e43f95e" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>GenericMemberIterator</name></member>
      <member refid="class_generic_member_iterator_1a76c372cd90c8abff942ab054c4992c74" prot="private" virt="non-virtual"><scope>GenericMemberIterator</scope><name>GenericMemberIterator</name></member>
      <member refid="class_generic_member_iterator_1a82bdd5798f1a5ac0e3e7ba4bd6938cfc" prot="private" virt="non-virtual"><scope>GenericMemberIterator</scope><name>GenericValue&lt; Encoding, Allocator &gt;</name></member>
      <member refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>Iterator</name></member>
      <member refid="class_generic_member_iterator_1a36cd90aef13c0cce916929f63fdb5c86" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>iterator_category</name></member>
      <member refid="class_generic_member_iterator_1abc26eb06f2962765b11dcd06ce84ac02" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>NonConstIterator</name></member>
      <member refid="class_generic_member_iterator_1ad1d518be7ace72462fc77cd4c6f250e2" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator!=</name></member>
      <member refid="class_generic_member_iterator_1a56ad403f7e7a35d6060931685d6cbbe8" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator*</name></member>
      <member refid="class_generic_member_iterator_1a472098839cec785b43a005a23d7a284b" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator+</name></member>
      <member refid="class_generic_member_iterator_1a37bbba2bf6f56aee43ccf3caf5ac51d0" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator++</name></member>
      <member refid="class_generic_member_iterator_1a83c8be6d960213ce32d68a880a8d9089" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator++</name></member>
      <member refid="class_generic_member_iterator_1a6b86a449909e8611c449f428809eb237" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator+=</name></member>
      <member refid="class_generic_member_iterator_1a343099509473934b40b9a4264c472721" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator-</name></member>
      <member refid="class_generic_member_iterator_1ae119ae8ed78dbd980f83d367f59a3c94" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator-</name></member>
      <member refid="class_generic_member_iterator_1ae413025561a25dbb7c95b93ff387cc55" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator--</name></member>
      <member refid="class_generic_member_iterator_1a4606c8baec5ea2b5139a503f7caa5444" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator--</name></member>
      <member refid="class_generic_member_iterator_1aa3f9472c44eb8e0c040d24935bfa8e82" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator-=</name></member>
      <member refid="class_generic_member_iterator_1abc95a8e52653a8baa2927b03239f4be9" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator-&gt;</name></member>
      <member refid="class_generic_member_iterator_1aaadf9036c5d4563cf00019ba840dd09a" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator&lt;</name></member>
      <member refid="class_generic_member_iterator_1a1d6b406f68ff02515fdc3e0385057a12" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator&lt;=</name></member>
      <member refid="class_generic_member_iterator_1a3106e0e66d8a692d9ff9f91b99421302" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator=</name></member>
      <member refid="class_generic_member_iterator_1a79ec0aac9cd098fddd656b3ce55d0c0a" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator==</name></member>
      <member refid="class_generic_member_iterator_1a1b2faefeb0d9bbc04bd02d69d25828f5" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator&gt;</name></member>
      <member refid="class_generic_member_iterator_1ab6d9e8fce04a598f10453b3f722c78ac" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator&gt;=</name></member>
      <member refid="class_generic_member_iterator_1a41b59f1bd367a98ee5d1138cc81e98a7" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>operator[]</name></member>
      <member refid="class_generic_member_iterator_1ac0d50d12ba074e68837964244668c66b" prot="private" virt="non-virtual"><scope>GenericMemberIterator</scope><name>PlainType</name></member>
      <member refid="class_generic_member_iterator_1a7c3623bc81b06495fd3128398487e99e" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>pointer</name></member>
      <member refid="class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>Pointer</name></member>
      <member refid="class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548" prot="private" virt="non-virtual"><scope>GenericMemberIterator</scope><name>ptr_</name></member>
      <member refid="class_generic_member_iterator_1a182876d698903331bd0b11db6d1beeca" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>reference</name></member>
      <member refid="class_generic_member_iterator_1a8042a85a9e233d65de5b6c66d9a1109a" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>Reference</name></member>
      <member refid="class_generic_member_iterator_1a79326e02032d06d80e09ded797501553" prot="public" virt="non-virtual"><scope>GenericMemberIterator</scope><name>value_type</name></member>
      <member refid="class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584" prot="private" virt="non-virtual"><scope>GenericMemberIterator</scope><name>ValueType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
