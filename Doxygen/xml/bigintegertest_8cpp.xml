<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="bigintegertest_8cpp" kind="file" language="C++">
    <compoundname>bigintegertest.cpp</compoundname>
    <includes refid="unittest_8h" local="yes">unittest.h</includes>
    <includes refid="biginteger_8h" local="yes">rapidjson/internal/biginteger.h</includes>
    <incdepgraph>
      <node id="5">
        <label>rapidjson/internal/biginteger.h</label>
        <link refid="biginteger_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/rapidjson/test/unittest/bigintegertest.cpp</label>
        <link refid="bigintegertest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>unittest.h</label>
        <link refid="unittest_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cassert</label>
      </node>
      <node id="7">
        <label>cstdlib</label>
      </node>
      <node id="8">
        <label>cstring</label>
      </node>
      <node id="3">
        <label>gtest/gtest.h</label>
      </node>
      <node id="4">
        <label>stdexcept</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacerapidjson_1_1internal">rapidjson::internal</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" prot="public" static="no">
        <name>BIGINTEGER_LITERAL</name>
        <param><defname>s</defname></param>
        <initializer>BigInteger(s, sizeof(s) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/bigintegertest.cpp" line="21" column="9" bodyfile="src/rapidjson/test/unittest/bigintegertest.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="bigintegertest_8cpp_1a4b0e2f3977ac5fd08d791bed31852e2a" prot="public" static="yes" mutable="no">
        <type>const BigInteger</type>
        <definition>const BigInteger kUint64Max</definition>
        <argsstring></argsstring>
        <name>kUint64Max</name>
        <initializer>= <ref refid="strtodtest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(&quot;18446744073709551615&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/bigintegertest.cpp" line="25" column="25" bodyfile="src/rapidjson/test/unittest/bigintegertest.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bigintegertest_8cpp_1abe86d9c218d8bfc6c78a83d8b551cb99" prot="public" static="yes" mutable="no">
        <type>const BigInteger</type>
        <definition>const BigInteger kTwo64</definition>
        <argsstring></argsstring>
        <name>kTwo64</name>
        <initializer>= <ref refid="strtodtest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(&quot;18446744073709551616&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/bigintegertest.cpp" line="26" column="25" bodyfile="src/rapidjson/test/unittest/bigintegertest.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const BigInteger</type>
        <definition>static const BigInteger kZero</definition>
        <argsstring>(0)</argsstring>
        <name>kZero</name>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/bigintegertest.cpp" line="23" column="25" declfile="src/rapidjson/test/unittest/bigintegertest.cpp" declline="23" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="bigintegertest_8cpp_1ad8e66020abc2faa30b2e127744afefd9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const BigInteger</type>
        <definition>static const BigInteger kOne</definition>
        <argsstring>(1)</argsstring>
        <name>kOne</name>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/bigintegertest.cpp" line="24" column="25" declfile="src/rapidjson/test/unittest/bigintegertest.cpp" declline="24" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="bigintegertest_8cpp_1aa8cf7efbc0acc1faf78ac414a6bdc697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(BigInteger, Constructor)</argsstring>
        <name>TEST</name>
        <param>
          <type>BigInteger</type>
        </param>
        <param>
          <type>Constructor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/bigintegertest.cpp" line="28" column="1" bodyfile="src/rapidjson/test/unittest/bigintegertest.cpp" bodystart="28" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="bigintegertest_8cpp_1adbf90ce017efe6df9513580a1e92adfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(BigInteger, AddUint64)</argsstring>
        <name>TEST</name>
        <param>
          <type>BigInteger</type>
        </param>
        <param>
          <type>AddUint64</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/bigintegertest.cpp" line="44" column="1" bodyfile="src/rapidjson/test/unittest/bigintegertest.cpp" bodystart="44" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="bigintegertest_8cpp_1a3593c420038e83831fcd23c1df6e32c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(BigInteger, MultiplyUint64)</argsstring>
        <name>TEST</name>
        <param>
          <type>BigInteger</type>
        </param>
        <param>
          <type>MultiplyUint64</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/bigintegertest.cpp" line="63" column="1" bodyfile="src/rapidjson/test/unittest/bigintegertest.cpp" bodystart="63" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="bigintegertest_8cpp_1aa9f8b4097ff348a7cc1ba276dac1d1d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(BigInteger, MultiplyUint32)</argsstring>
        <name>TEST</name>
        <param>
          <type>BigInteger</type>
        </param>
        <param>
          <type>MultiplyUint32</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/bigintegertest.cpp" line="85" column="1" bodyfile="src/rapidjson/test/unittest/bigintegertest.cpp" bodystart="85" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="bigintegertest_8cpp_1a056b4f0cf92be264641638a89d1bb022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(BigInteger, LeftShift)</argsstring>
        <name>TEST</name>
        <param>
          <type>BigInteger</type>
        </param>
        <param>
          <type>LeftShift</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/bigintegertest.cpp" line="107" column="1" bodyfile="src/rapidjson/test/unittest/bigintegertest.cpp" bodystart="107" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="bigintegertest_8cpp_1acc87e5f0c34e0c395cecdb2f3b2a00bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(BigInteger, Compare)</argsstring>
        <name>TEST</name>
        <param>
          <type>BigInteger</type>
        </param>
        <param>
          <type>Compare</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/bigintegertest.cpp" line="130" column="1" bodyfile="src/rapidjson/test/unittest/bigintegertest.cpp" bodystart="130" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://opensource.org/licenses/MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unittest_8h" kindref="compound">unittest.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="biginteger_8h" kindref="compound">rapidjson/internal/biginteger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">rapidjson::internal;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIGINTEGER_LITERAL(s)<sp/>BigInteger(s,<sp/>sizeof(s)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BigInteger<sp/><ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref>(0);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BigInteger<sp/><ref refid="bigintegertest_8cpp_1ad8e66020abc2faa30b2e127744afefd9" kindref="member">kOne</ref>(1);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BigInteger<sp/><ref refid="bigintegertest_8cpp_1a4b0e2f3977ac5fd08d791bed31852e2a" kindref="member">kUint64Max</ref><sp/>=<sp/><ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;18446744073709551615&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BigInteger<sp/><ref refid="bigintegertest_8cpp_1abe86d9c218d8bfc6c78a83d8b551cb99" kindref="member">kTwo64</ref><sp/>=<sp/><ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;18446744073709551616&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="bigintegertest_8cpp_1aa8cf7efbc0acc1faf78ac414a6bdc697" kindref="member">TEST</ref>(BigInteger,<sp/>Constructor)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref>.IsZero());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref><sp/>==<sp/><ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref><sp/>==<sp/><ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref><sp/>==<sp/><ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;00&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BigInteger<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>(123);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>==<sp/><ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;123&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>==<sp/><ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;0123&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(2u,<sp/><ref refid="bigintegertest_8cpp_1abe86d9c218d8bfc6c78a83d8b551cb99" kindref="member">kTwo64</ref>.GetCount());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0u,<sp/><ref refid="bigintegertest_8cpp_1abe86d9c218d8bfc6c78a83d8b551cb99" kindref="member">kTwo64</ref>.GetDigit(0));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(1u,<sp/><ref refid="bigintegertest_8cpp_1abe86d9c218d8bfc6c78a83d8b551cb99" kindref="member">kTwo64</ref>.GetDigit(1));</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="bigintegertest_8cpp_1aa8cf7efbc0acc1faf78ac414a6bdc697" kindref="member">TEST</ref>(BigInteger,<sp/>AddUint64)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>BigInteger<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/><ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>+=<sp/>0u;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref><sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>+=<sp/>1u;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad8e66020abc2faa30b2e127744afefd9" kindref="member">kOne</ref><sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>+=<sp/>1u;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(BigInteger(2)<sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(BigInteger(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0xFFFFFFFF))<sp/>==<sp/><ref refid="bigintegertest_8cpp_1a4b0e2f3977ac5fd08d791bed31852e2a" kindref="member">kUint64Max</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>BigInteger<sp/>b<sp/>=<sp/><ref refid="bigintegertest_8cpp_1a4b0e2f3977ac5fd08d791bed31852e2a" kindref="member">kUint64Max</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>+=<sp/>1u;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1abe86d9c218d8bfc6c78a83d8b551cb99" kindref="member">kTwo64</ref><sp/>==<sp/>b);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>+=<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0xFFFFFFFF);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;36893488147419103231&quot;</highlight><highlight class="normal">)<sp/>==<sp/>b);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="bigintegertest_8cpp_1aa8cf7efbc0acc1faf78ac414a6bdc697" kindref="member">TEST</ref>(BigInteger,<sp/>MultiplyUint64)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>BigInteger<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/><ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>*=<sp/></highlight><highlight class="keyword">static_cast<sp/>&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref><sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>*=<sp/></highlight><highlight class="keyword">static_cast<sp/>&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(123);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref><sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>BigInteger<sp/>b<sp/>=<sp/><ref refid="bigintegertest_8cpp_1ad8e66020abc2faa30b2e127744afefd9" kindref="member">kOne</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>*=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad8e66020abc2faa30b2e127744afefd9" kindref="member">kOne</ref><sp/>==<sp/>b);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>*=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref><sp/>==<sp/>b);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>BigInteger<sp/>c(123);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>*=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(456u);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(BigInteger(123u<sp/>*<sp/>456u)<sp/>==<sp/>c);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>*=<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0xFFFFFFFF);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;1034640981606221330982120&quot;</highlight><highlight class="normal">)<sp/>==<sp/>c);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>*=<sp/><ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0xFFFFFFFF);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;19085757395861596536664473018420572782123800&quot;</highlight><highlight class="normal">)<sp/>==<sp/>c);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="bigintegertest_8cpp_1aa8cf7efbc0acc1faf78ac414a6bdc697" kindref="member">TEST</ref>(BigInteger,<sp/>MultiplyUint32)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>BigInteger<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/><ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>*=<sp/></highlight><highlight class="keyword">static_cast<sp/>&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref><sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>*=<sp/></highlight><highlight class="keyword">static_cast<sp/>&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(123);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref><sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>BigInteger<sp/>b<sp/>=<sp/><ref refid="bigintegertest_8cpp_1ad8e66020abc2faa30b2e127744afefd9" kindref="member">kOne</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>*=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad8e66020abc2faa30b2e127744afefd9" kindref="member">kOne</ref><sp/>==<sp/>b);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>*=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref><sp/>==<sp/>b);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>BigInteger<sp/>c(123);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>*=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="stdint_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(456u);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(BigInteger(123u<sp/>*<sp/>456u)<sp/>==<sp/>c);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>*=<sp/>0xFFFFFFFFu;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;240896125641960&quot;</highlight><highlight class="normal">)<sp/>==<sp/>c);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>*=<sp/>0xFFFFFFFFu;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;1034640981124429079698200&quot;</highlight><highlight class="normal">)<sp/>==<sp/>c);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="bigintegertest_8cpp_1aa8cf7efbc0acc1faf78ac414a6bdc697" kindref="member">TEST</ref>(BigInteger,<sp/>LeftShift)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>BigInteger<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/><ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref><sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&lt;&lt;=<sp/>64;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref><sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>BigInteger(123);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&lt;&lt;=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(BigInteger(123)<sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(BigInteger(246)<sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&lt;&lt;=<sp/>64;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;4537899042132549697536&quot;</highlight><highlight class="normal">)<sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&lt;&lt;=<sp/>99;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;2876235222267216943024851750785644982682875244576768&quot;</highlight><highlight class="normal">)<sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&lt;&lt;=<sp/>64;<sp/></highlight><highlight class="comment">//<sp/>a.count_<sp/>!=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref><sp/>&lt;&lt;=<sp/>256;<sp/></highlight><highlight class="comment">//<sp/>interShift<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1" kindref="member">BIGINTEGER_LITERAL</ref>(</highlight><highlight class="stringliteral">&quot;2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936576&quot;</highlight><highlight class="normal">)<sp/>==<sp/><ref refid="pointer_8h_1aeeddce917cf130d62c370b8f216026dd" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="bigintegertest_8cpp_1aa8cf7efbc0acc1faf78ac414a6bdc697" kindref="member">TEST</ref>(BigInteger,<sp/>Compare)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0,<sp/><ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref>.Compare(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref>));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(1,<sp/><ref refid="bigintegertest_8cpp_1ad8e66020abc2faa30b2e127744afefd9" kindref="member">kOne</ref>.Compare(<ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref>));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(-1,<sp/><ref refid="bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99" kindref="member">kZero</ref>.Compare(<ref refid="bigintegertest_8cpp_1ad8e66020abc2faa30b2e127744afefd9" kindref="member">kOne</ref>));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0,<sp/><ref refid="bigintegertest_8cpp_1a4b0e2f3977ac5fd08d791bed31852e2a" kindref="member">kUint64Max</ref>.Compare(<ref refid="bigintegertest_8cpp_1a4b0e2f3977ac5fd08d791bed31852e2a" kindref="member">kUint64Max</ref>));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(0,<sp/><ref refid="bigintegertest_8cpp_1abe86d9c218d8bfc6c78a83d8b551cb99" kindref="member">kTwo64</ref>.Compare(<ref refid="bigintegertest_8cpp_1abe86d9c218d8bfc6c78a83d8b551cb99" kindref="member">kTwo64</ref>));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(-1,<sp/><ref refid="bigintegertest_8cpp_1a4b0e2f3977ac5fd08d791bed31852e2a" kindref="member">kUint64Max</ref>.Compare(<ref refid="bigintegertest_8cpp_1abe86d9c218d8bfc6c78a83d8b551cb99" kindref="member">kTwo64</ref>));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(1,<sp/><ref refid="bigintegertest_8cpp_1abe86d9c218d8bfc6c78a83d8b551cb99" kindref="member">kTwo64</ref>.Compare(<ref refid="bigintegertest_8cpp_1a4b0e2f3977ac5fd08d791bed31852e2a" kindref="member">kUint64Max</ref>));</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/rapidjson/test/unittest/bigintegertest.cpp"/>
  </compounddef>
</doxygen>
