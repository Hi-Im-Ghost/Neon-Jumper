<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="readme_8zh-cn_8md" kind="file" language="Markdown">
    <compoundname>readme.zh-cn.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">![RapidJSON<sp/>logo](doc/logo/rapidjson.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Release<sp/>version](https://img.shields.io/badge/release-v1.1.0-blue.svg)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>高效的<sp/>C++<sp/>JSON<sp/>解析／生成器，提供<sp/>SAX<sp/>及<sp/>DOM<sp/>风格<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>[RapidJSON<sp/>GitHub](https://github.com/Tencent/rapidjson/)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>RapidJSON<sp/>文档</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[English](http://rapidjson.org/)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[简体中文](http://rapidjson.org/zh-cn/)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[GitBook](https://www.gitbook.com/book/miloyip/rapidjson/details/zh-cn)<sp/>可下载<sp/>PDF/EPUB/MOBI，但不含<sp/>API<sp/>参考手册。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Build<sp/>状态</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/>[Linux][lin-link]<sp/>|<sp/>[Windows][win-link]<sp/>|<sp/>[Coveralls][cov-link]<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>:---------------:<sp/>|<sp/>:-----------------:<sp/>|<sp/>:-------------------:<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>![lin-badge]<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>![win-badge]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>![cov-badge]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[lin-badge]:<sp/>https://travis-ci.org/Tencent/rapidjson.svg?branch=master<sp/>&quot;Travis<sp/>build<sp/>status&quot;</highlight></codeline>
<codeline><highlight class="normal">[lin-link]:<sp/><sp/>https://travis-ci.org/Tencent/rapidjson<sp/>&quot;Travis<sp/>build<sp/>status&quot;</highlight></codeline>
<codeline><highlight class="normal">[win-badge]:<sp/>https://ci.appveyor.com/api/projects/status/l6qulgqahcayidrf/branch/master?svg=true<sp/>&quot;AppVeyor<sp/>build<sp/>status&quot;</highlight></codeline>
<codeline><highlight class="normal">[win-link]:<sp/><sp/>https://ci.appveyor.com/project/miloyip/rapidjson-0fdqj/branch/master<sp/>&quot;AppVeyor<sp/>build<sp/>status&quot;</highlight></codeline>
<codeline><highlight class="normal">[cov-badge]:<sp/>https://coveralls.io/repos/Tencent/rapidjson/badge.svg?branch=master<sp/>&quot;Coveralls<sp/>coverage&quot;</highlight></codeline>
<codeline><highlight class="normal">[cov-link]:<sp/><sp/>https://coveralls.io/r/Tencent/rapidjson?branch=master<sp/>&quot;Coveralls<sp/>coverage&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>简介</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">RapidJSON<sp/>是一个<sp/>C++<sp/>的<sp/>JSON<sp/>解析器及生成器。它的灵感来自<sp/>[RapidXml](http://rapidxml.sourceforge.net/)。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>RapidJSON<sp/>小而全。它同时支持<sp/>SAX<sp/>和<sp/>DOM<sp/>风格的<sp/>API。SAX<sp/>解析器只有约<sp/>500<sp/>行代码。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>RapidJSON<sp/>快。它的性能可与<sp/>`strlen()`<sp/>相比。可支持<sp/>SSE2/SSE4.2<sp/>加速。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>RapidJSON<sp/>独立。它不依赖于<sp/>BOOST<sp/>等外部库。它甚至不依赖于<sp/>STL。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>RapidJSON<sp/>对内存友好。在大部分<sp/>32/64<sp/>位机器上，每个<sp/>JSON<sp/>值只占<sp/>16<sp/>字节（除字符串外）。它预设使用一个快速的内存分配器，令分析器可以紧凑地分配内存。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>RapidJSON<sp/>对<sp/>Unicode<sp/>友好。它支持<sp/>UTF-8、UTF-16、UTF-32<sp/>(大端序／小端序)，并内部支持这些编码的检测、校验及转码。例如，RapidJSON<sp/>可以在分析一个<sp/>UTF-8<sp/>文件至<sp/>DOM<sp/>时，把当中的<sp/>JSON<sp/>字符串转码至<sp/>UTF-16。它也支持代理对（surrogate<sp/>pair）及<sp/>`&quot;\u0000&quot;`（空字符）。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">在<sp/>[这里](doc/features.zh-cn.md)<sp/>可读取更多特点。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">JSON（JavaScript<sp/>Object<sp/>Notation）是一个轻量的数据交换格式。RapidJSON<sp/>应该完全遵从<sp/>RFC7159/ECMA-404，并支持可选的放宽语法。<sp/>关于<sp/>JSON<sp/>的更多信息可参考：</highlight></codeline>
<codeline><highlight class="normal">*<sp/>[Introducing<sp/>JSON](http://json.org/)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>[RFC7159:<sp/>The<sp/>JavaScript<sp/>Object<sp/>Notation<sp/>(JSON)<sp/>Data<sp/>Interchange<sp/>Format](https://tools.ietf.org/html/rfc7159)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>[Standard<sp/>ECMA-404:<sp/>The<sp/>JSON<sp/>Data<sp/>Interchange<sp/>Format](https://www.ecma-international.org/publications/standards/Ecma-404.htm)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>v1.1<sp/>中的亮点<sp/>(2016-8-25)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>加入<sp/>[JSON<sp/>Pointer](doc/pointer.zh-cn.md)<sp/>功能，可更简单地访问及更改<sp/>DOM。</highlight></codeline>
<codeline><highlight class="normal">*<sp/>加入<sp/>[JSON<sp/>Schema](doc/schema.zh-cn.md)<sp/>功能，可在解析或生成<sp/>JSON<sp/>时进行校验。</highlight></codeline>
<codeline><highlight class="normal">*<sp/>加入<sp/>[放宽的<sp/>JSON<sp/>语法](doc/dom.zh-cn.md)<sp/>（注释、尾随逗号、NaN/Infinity）</highlight></codeline>
<codeline><highlight class="normal">*<sp/>使用<sp/>[C++11<sp/>范围<sp/>for<sp/>循环](doc/tutorial.zh-cn.md)<sp/>去遍历<sp/>array<sp/>和<sp/>object。</highlight></codeline>
<codeline><highlight class="normal">*<sp/>在<sp/>x86-64<sp/>架构下，缩减每个<sp/>`Value`<sp/>的内存开销从<sp/>24<sp/>字节至<sp/>16<sp/>字节。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">其他改动请参考<sp/>[change<sp/>log](CHANGELOG.md).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>兼容性</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">RapidJSON<sp/>是跨平台的。以下是一些曾测试的平台／编译器组合：</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Visual<sp/>C++<sp/>2008/2010/2013<sp/>在<sp/>Windows<sp/>(32/64-bit)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>GNU<sp/>C++<sp/>3.8.x<sp/>在<sp/>Cygwin</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Clang<sp/>3.4<sp/>在<sp/>Mac<sp/>OS<sp/>X<sp/>(32/64-bit)<sp/>及<sp/>iOS</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Clang<sp/>3.4<sp/>在<sp/>Android<sp/>NDK</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">用户也可以在他们的平台上生成及执行单元测试。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>安装</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">RapidJSON<sp/>是只有头文件的<sp/>C++<sp/>库。只需把<sp/>`include/rapidjson`<sp/>目录复制至系统或项目的<sp/>include<sp/>目录中。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">RapidJSON<sp/>依赖于以下软件：</highlight></codeline>
<codeline><highlight class="normal">*<sp/>[CMake](https://cmake.org/)<sp/>作为通用生成工具</highlight></codeline>
<codeline><highlight class="normal">*<sp/>(optional)<sp/>[Doxygen](http://www.doxygen.org)<sp/>用于生成文档</highlight></codeline>
<codeline><highlight class="normal">*<sp/>(optional)<sp/>[googletest](https://github.com/google/googletest)<sp/>用于单元及性能测试</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">生成测试及例子的步骤：</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>执行<sp/>`git<sp/>submodule<sp/>update<sp/>--init`<sp/>去获取<sp/>thirdparty<sp/>submodules<sp/>(google<sp/>test)。</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>在<sp/>rapidjson<sp/>目录下，建立一个<sp/>`build`<sp/>目录。</highlight></codeline>
<codeline><highlight class="normal">3.<sp/>在<sp/>`build`<sp/>目录下执行<sp/>`cmake<sp/>..`<sp/>命令以设置生成。Windows<sp/>用户可使用<sp/>cmake-gui<sp/>应用程序。</highlight></codeline>
<codeline><highlight class="normal">4.<sp/>在<sp/>Windows<sp/>下，编译生成在<sp/>build<sp/>目录中的<sp/>solution。在<sp/>Linux<sp/>下，于<sp/>build<sp/>目录运行<sp/>`make`。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">成功生成后，你会在<sp/>`bin`<sp/>的目录下找到编译后的测试及例子可执行文件。而生成的文档将位于<sp/>build<sp/>下的<sp/>`doc/html`<sp/>目录。要执行测试，请在<sp/>build<sp/>下执行<sp/>`make<sp/>test`<sp/>或<sp/>`ctest`。使用<sp/>`ctest<sp/>-V`<sp/>命令可获取详细的输出。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">我们也可以把程序库安装至全系统中，只要在具管理权限下从<sp/>build<sp/>目录执行<sp/>`make<sp/>install`<sp/>命令。这样会按系统的偏好设置安装所有文件。当安装<sp/>RapidJSON<sp/>后，其他的<sp/>CMake<sp/>项目需要使用它时，可以通过在<sp/>`CMakeLists.txt`<sp/>加入一句<sp/>`find_package(RapidJSON)`。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>用法一览</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">此简单例子解析一个<sp/>JSON<sp/>字符串至一个<sp/>document<sp/>(DOM)，对<sp/>DOM<sp/>作出简单修改，最终把<sp/>DOM<sp/>转换（stringify）至<sp/>JSON<sp/>字符串。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">~~~~~~~~~~cpp</highlight></codeline>
<codeline><highlight class="normal">//<sp/>rapidjson/example/simpledom/simpledom.cpp`</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;rapidjson/document.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;rapidjson/writer.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;rapidjson/stringbuffer.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;iostream&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">using<sp/>namespace<sp/>rapidjson;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">int<sp/>main()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>1.<sp/>把<sp/>JSON<sp/>解析至<sp/>DOM。</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>json<sp/>=<sp/>&quot;{\&quot;project\&quot;:\&quot;rapidjson\&quot;,\&quot;stars\&quot;:10}&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Document<sp/>d;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>d.Parse(json);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>2.<sp/>利用<sp/>DOM<sp/>作出修改。</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Value&amp;<sp/>s<sp/>=<sp/>d[&quot;stars&quot;];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>s.SetInt(s.GetInt()<sp/>+<sp/>1);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>3.<sp/>把<sp/>DOM<sp/>转换（stringify）成<sp/>JSON。</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>StringBuffer<sp/>buffer;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Writer&lt;StringBuffer&gt;<sp/>writer(buffer);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>d.Accept(writer);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Output<sp/>{&quot;project&quot;:&quot;rapidjson&quot;,&quot;stars&quot;:11}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>buffer.GetString()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">~~~~~~~~~~</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">注意此例子并没有处理潜在错误。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">下图展示执行过程。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![simpledom](doc/diagram/simpledom.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">还有许多<sp/>[例子](https://github.com/Tencent/rapidjson/tree/master/example)<sp/>可供参考：</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>DOM<sp/>API</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[tutorial](https://github.com/Tencent/rapidjson/blob/master/example/tutorial/tutorial.cpp):<sp/>DOM<sp/>API<sp/>的基本使用方法。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>SAX<sp/>API</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[simplereader](https://github.com/Tencent/rapidjson/blob/master/example/simplereader/simplereader.cpp):<sp/>使用<sp/>`Reader`<sp/>解析<sp/>JSON<sp/>时，打印所有<sp/>SAX<sp/>事件。</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[condense](https://github.com/Tencent/rapidjson/blob/master/example/condense/condense.cpp):<sp/>移除<sp/>JSON<sp/>中所有空白符的命令行工具。</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[pretty](https://github.com/Tencent/rapidjson/blob/master/example/pretty/pretty.cpp):<sp/>为<sp/>JSON<sp/>加入缩进与换行的命令行工具，当中使用了<sp/>`PrettyWriter`。</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[capitalize](https://github.com/Tencent/rapidjson/blob/master/example/capitalize/capitalize.cpp):<sp/>把<sp/>JSON<sp/>中所有字符串改为大写的命令行工具。</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[messagereader](https://github.com/Tencent/rapidjson/blob/master/example/messagereader/messagereader.cpp):<sp/>使用<sp/>SAX<sp/>API<sp/>去解析一个<sp/>JSON<sp/>报文。</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[serialize](https://github.com/Tencent/rapidjson/blob/master/example/serialize/serialize.cpp):<sp/>使用<sp/>SAX<sp/>API<sp/>去序列化<sp/>C++<sp/>对象，生成<sp/>JSON。</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[jsonx](https://github.com/Tencent/rapidjson/blob/master/example/jsonx/jsonx.cpp):<sp/>实现了一个<sp/>`JsonxWriter`，它能把<sp/>SAX<sp/>事件写成<sp/>[JSONx](https://www-01.ibm.com/support/knowledgecenter/SS9H2Y_7.1.0/com.ibm.dp.doc/json_jsonx.html)（一种<sp/>XML）格式。这个例子是把<sp/>JSON<sp/>输入转换成<sp/>JSONx<sp/>格式的命令行工具。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>Schema<sp/>API</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[schemavalidator](https://github.com/Tencent/rapidjson/blob/master/example/schemavalidator/schemavalidator.cpp):<sp/>使用<sp/>JSON<sp/>Schema<sp/>去校验<sp/>JSON<sp/>的命令行工具。</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>进阶</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[prettyauto](https://github.com/Tencent/rapidjson/blob/master/example/prettyauto/prettyauto.cpp):<sp/>[pretty](https://github.com/Tencent/rapidjson/blob/master/example/pretty/pretty.cpp)<sp/>的修改版本，可自动处理任何<sp/>UTF<sp/>编码的<sp/>JSON。</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[parsebyparts](https://github.com/Tencent/rapidjson/blob/master/example/parsebyparts/parsebyparts.cpp):<sp/>这例子中的<sp/>`AsyncDocumentParser`<sp/>类使用<sp/>C++<sp/>线程来逐段解析<sp/>JSON。</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[filterkey](https://github.com/Tencent/rapidjson/blob/master/example/filterkey/filterkey.cpp):<sp/>移取使用者指定的键值的命令行工具。</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>[filterkeydom](https://github.com/Tencent/rapidjson/blob/master/example/filterkey/filterkey.cpp):<sp/>如上的工具，但展示如何使用生成器（generator）去填充一个<sp/>`Document`。</highlight></codeline>
    </programlisting>
    <location file="src/rapidjson/readme.zh-cn.md"/>
  </compounddef>
</doxygen>
