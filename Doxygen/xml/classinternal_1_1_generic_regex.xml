<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classinternal_1_1_generic_regex" kind="class" language="C++" prot="public">
    <compoundname>internal::GenericRegex</compoundname>
    <includes refid="regex_8h" local="no">regex.h</includes>
    <innerclass refid="structinternal_1_1_generic_regex_1_1_frag" prot="private">internal::GenericRegex::Frag</innerclass>
    <innerclass refid="structinternal_1_1_generic_regex_1_1_range" prot="private">internal::GenericRegex::Range</innerclass>
    <innerclass refid="structinternal_1_1_generic_regex_1_1_state" prot="private">internal::GenericRegex::State</innerclass>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref></type>
      </param>
      <param>
        <type>typename <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref></type>
        <defval><ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673" prot="private" static="no" strong="no">
        <type></type>
        <name>Operator</name>
        <qualifiedname>internal::GenericRegex::Operator</qualifiedname>
        <enumvalue id="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ad4577594ddb5fee3be7138b0759c35b3" prot="private">
          <name>kZeroOrOne</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673aa4482f5484f4db6675095aaec3286e4f" prot="private">
          <name>kZeroOrMore</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a5640dadf6c1cff543463686f2f2903e3" prot="private">
          <name>kOneOrMore</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a989378c9dfab87e3faf7b5e7db8885a2" prot="private">
          <name>kConcatenation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a6c251a26f84dc6bc21717ef5fe8504d4" prot="private">
          <name>kAlternation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ae2f7e4cfde06337266fa1ac3a8b47d54" prot="private">
          <name>kLeftParenthesis</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="136" column="5" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="136" bodyend="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classinternal_1_1_generic_regex_1a8d0eb2f6a71868b2a8f03382b7836d30" prot="public" static="no">
        <type><ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref></type>
        <definition>typedef Encoding internal::GenericRegex&lt; Encoding, Allocator &gt;::EncodingType</definition>
        <argsstring></argsstring>
        <name>EncodingType</name>
        <qualifiedname>internal::GenericRegex::EncodingType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="112" column="22" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classinternal_1_1_generic_regex_1a44e1a86ec27e1c5628a7d91c8c3daace" prot="public" static="no">
        <type>Encoding::Ch</type>
        <definition>typedef Encoding::Ch internal::GenericRegex&lt; Encoding, Allocator &gt;::Ch</definition>
        <argsstring></argsstring>
        <name>Ch</name>
        <qualifiedname>internal::GenericRegex::Ch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="113" column="35" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classinternal_1_1_generic_regex_1a919008cc046ab9f1c09609f1fc143986" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
          </param>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class GenericRegexSearch</definition>
        <argsstring></argsstring>
        <name>GenericRegexSearch</name>
        <qualifiedname>internal::GenericRegex::GenericRegexSearch</qualifiedname>
        <param>
          <type><ref refid="classinternal_1_1_generic_regex_search" kindref="compound">GenericRegexSearch</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="114" column="30" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classinternal_1_1_generic_regex_1a1f3b72c56d5eab221ba46a473ff611dd" prot="private" static="yes" mutable="no">
        <type>const unsigned</type>
        <definition>const unsigned internal::GenericRegex&lt; Encoding, Allocator &gt;::kAnyCharacterClass</definition>
        <argsstring></argsstring>
        <name>kAnyCharacterClass</name>
        <qualifiedname>internal::GenericRegex::kAnyCharacterClass</qualifiedname>
        <initializer>= 0xFFFFFFFF</initializer>
        <briefdescription>
<para>For &apos;.&apos;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="145" column="27" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classinternal_1_1_generic_regex_1aec665a90fdb2372dbc18a6ca0971e886" prot="private" static="yes" mutable="no">
        <type>const unsigned</type>
        <definition>const unsigned internal::GenericRegex&lt; Encoding, Allocator &gt;::kRangeCharacterClass</definition>
        <argsstring></argsstring>
        <name>kRangeCharacterClass</name>
        <qualifiedname>internal::GenericRegex::kRangeCharacterClass</qualifiedname>
        <initializer>= 0xFFFFFFFE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="146" column="27" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classinternal_1_1_generic_regex_1ae435570506343e24811e588614f6842b" prot="private" static="yes" mutable="no">
        <type>const unsigned</type>
        <definition>const unsigned internal::GenericRegex&lt; Encoding, Allocator &gt;::kRangeNegationFlag</definition>
        <argsstring></argsstring>
        <name>kRangeNegationFlag</name>
        <qualifiedname>internal::GenericRegex::kRangeNegationFlag</qualifiedname>
        <initializer>= 0x80000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="147" column="27" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classinternal_1_1_generic_regex_1a12955d17d702f2fa9cf39421666c3ff3" prot="private" static="yes" mutable="no">
        <type>const unsigned</type>
        <definition>const unsigned internal::GenericRegex&lt; Encoding, Allocator &gt;::kInfinityQuantifier</definition>
        <argsstring></argsstring>
        <name>kInfinityQuantifier</name>
        <qualifiedname>internal::GenericRegex::kInfinityQuantifier</qualifiedname>
        <initializer>= ~0u</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="598" column="27" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="598" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classinternal_1_1_generic_regex_1a63f4d8c4e3d61fcd9f1489347708ded8" prot="private" static="no" mutable="no">
        <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> *</type>
        <definition>Allocator* internal::GenericRegex&lt; Encoding, Allocator &gt;::ownAllocator_</definition>
        <argsstring></argsstring>
        <name>ownAllocator_</name>
        <qualifiedname>internal::GenericRegex::ownAllocator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="590" column="15" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="590" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classinternal_1_1_generic_regex_1a2fb2543ae1c5ec68f891745fa69af0e3" prot="private" static="no" mutable="no">
        <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> *</type>
        <definition>Allocator* internal::GenericRegex&lt; Encoding, Allocator &gt;::allocator_</definition>
        <argsstring></argsstring>
        <name>allocator_</name>
        <qualifiedname>internal::GenericRegex::allocator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="591" column="15" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="591" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classinternal_1_1_generic_regex_1a5391b182b60bb8967dd0a6d99db9c9f0" prot="private" static="no" mutable="no">
        <type><ref refid="classinternal_1_1_stack" kindref="compound">Stack</ref>&lt; <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;</type>
        <definition>Stack&lt;Allocator&gt; internal::GenericRegex&lt; Encoding, Allocator &gt;::states_</definition>
        <argsstring></argsstring>
        <name>states_</name>
        <qualifiedname>internal::GenericRegex::states_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="592" column="11" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classinternal_1_1_generic_regex_1af94c64023502147345303d70ff594140" prot="private" static="no" mutable="no">
        <type><ref refid="classinternal_1_1_stack" kindref="compound">Stack</ref>&lt; <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;</type>
        <definition>Stack&lt;Allocator&gt; internal::GenericRegex&lt; Encoding, Allocator &gt;::ranges_</definition>
        <argsstring></argsstring>
        <name>ranges_</name>
        <qualifiedname>internal::GenericRegex::ranges_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="593" column="11" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classinternal_1_1_generic_regex_1a2af8c29234a2229b509fdf60cf265201" prot="private" static="no" mutable="no">
        <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
        <definition>SizeType internal::GenericRegex&lt; Encoding, Allocator &gt;::root_</definition>
        <argsstring></argsstring>
        <name>root_</name>
        <qualifiedname>internal::GenericRegex::root_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="594" column="14" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classinternal_1_1_generic_regex_1af47146f067e491bb9cb23b13a88a26db" prot="private" static="no" mutable="no">
        <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
        <definition>SizeType internal::GenericRegex&lt; Encoding, Allocator &gt;::stateCount_</definition>
        <argsstring></argsstring>
        <name>stateCount_</name>
        <qualifiedname>internal::GenericRegex::stateCount_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="595" column="14" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classinternal_1_1_generic_regex_1ad65c6144b7dc5b0441ef20dc4ef81619" prot="private" static="no" mutable="no">
        <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
        <definition>SizeType internal::GenericRegex&lt; Encoding, Allocator &gt;::rangeCount_</definition>
        <argsstring></argsstring>
        <name>rangeCount_</name>
        <qualifiedname>internal::GenericRegex::rangeCount_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="596" column="14" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classinternal_1_1_generic_regex_1ac99b045cc5250649ea3708bee95a56e8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool internal::GenericRegex&lt; Encoding, Allocator &gt;::anchorBegin_</definition>
        <argsstring></argsstring>
        <name>anchorBegin_</name>
        <qualifiedname>internal::GenericRegex::anchorBegin_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="601" column="10" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classinternal_1_1_generic_regex_1adbd19f8921ece1563d02e74f479d2e13" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool internal::GenericRegex&lt; Encoding, Allocator &gt;::anchorEnd_</definition>
        <argsstring></argsstring>
        <name>anchorEnd_</name>
        <qualifiedname>internal::GenericRegex::anchorEnd_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="602" column="10" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="602" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a35c3a49bc4545a991ab039858227df0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>internal::GenericRegex&lt; Encoding, Allocator &gt;::GenericRegex</definition>
        <argsstring>(const Ch *source, Allocator *allocator=0)</argsstring>
        <name>GenericRegex</name>
        <qualifiedname>internal::GenericRegex::GenericRegex</qualifiedname>
        <param>
          <type>const <ref refid="classinternal_1_1_generic_regex_1a44e1a86ec27e1c5628a7d91c8c3daace" kindref="member">Ch</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> *</type>
          <declname>allocator</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="116" column="5" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="116" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a6a4956c0391bccbf8580b2e047d5bc35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>internal::GenericRegex&lt; Encoding, Allocator &gt;::~GenericRegex</definition>
        <argsstring>()</argsstring>
        <name>~GenericRegex</name>
        <qualifiedname>internal::GenericRegex::~GenericRegex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="126" column="5" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a34ddb18fa3a2c70203d0fb740443c2a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool internal::GenericRegex&lt; Encoding, Allocator &gt;::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <qualifiedname>internal::GenericRegex::IsValid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="131" column="10" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="131" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1aea17c79a5d4d17a3b21ef86dda9fa0e3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structinternal_1_1_generic_regex_1_1_state" kindref="compound">State</ref> &amp;</type>
        <definition>State &amp; internal::GenericRegex&lt; Encoding, Allocator &gt;::GetState</definition>
        <argsstring>(SizeType index)</argsstring>
        <name>GetState</name>
        <qualifiedname>internal::GenericRegex::GetState</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="169" column="11" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1ada0efa1a7089e9d58376e3fc2821a234" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structinternal_1_1_generic_regex_1_1_state" kindref="compound">State</ref> &amp;</type>
        <definition>const State &amp; internal::GenericRegex&lt; Encoding, Allocator &gt;::GetState</definition>
        <argsstring>(SizeType index) const</argsstring>
        <name>GetState</name>
        <qualifiedname>internal::GenericRegex::GetState</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="174" column="17" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a7e05e1219867fdbe83cb4e1f6d4aed91" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structinternal_1_1_generic_regex_1_1_range" kindref="compound">Range</ref> &amp;</type>
        <definition>Range &amp; internal::GenericRegex&lt; Encoding, Allocator &gt;::GetRange</definition>
        <argsstring>(SizeType index)</argsstring>
        <name>GetRange</name>
        <qualifiedname>internal::GenericRegex::GetRange</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="179" column="11" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a7725f5a459796b58736b6cddcd19e335" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structinternal_1_1_generic_regex_1_1_range" kindref="compound">Range</ref> &amp;</type>
        <definition>const Range &amp; internal::GenericRegex&lt; Encoding, Allocator &gt;::GetRange</definition>
        <argsstring>(SizeType index) const</argsstring>
        <name>GetRange</name>
        <qualifiedname>internal::GenericRegex::GetRange</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="184" column="17" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a038af33f370a14f987fb79d78f0d1c75" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputStream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void internal::GenericRegex&lt; Encoding, Allocator &gt;::Parse</definition>
        <argsstring>(DecodedStream&lt; InputStream, Encoding &gt; &amp;ds)</argsstring>
        <name>Parse</name>
        <qualifiedname>internal::GenericRegex::Parse</qualifiedname>
        <param>
          <type><ref refid="classinternal_1_1_decoded_stream" kindref="compound">DecodedStream</ref>&lt; InputStream, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref> &gt; &amp;</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="190" column="10" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="190" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1ad57a48991e61750ef7426c48b1d3e51b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
        <definition>SizeType internal::GenericRegex&lt; Encoding, Allocator &gt;::NewState</definition>
        <argsstring>(SizeType out, SizeType out1, unsigned codepoint)</argsstring>
        <name>NewState</name>
        <qualifiedname>internal::GenericRegex::NewState</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>out1</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>codepoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="319" column="14" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="319" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a1a3ea65f584e0dba5815a1232f9a770e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void internal::GenericRegex&lt; Encoding, Allocator &gt;::PushOperand</definition>
        <argsstring>(Stack&lt; Allocator &gt; &amp;operandStack, unsigned codepoint)</argsstring>
        <name>PushOperand</name>
        <qualifiedname>internal::GenericRegex::PushOperand</qualifiedname>
        <param>
          <type><ref refid="classinternal_1_1_stack" kindref="compound">Stack</ref>&lt; <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt; &amp;</type>
          <declname>operandStack</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>codepoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="328" column="10" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a3b6d21989c3e41e33f6d2a7897ffdd6b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void internal::GenericRegex&lt; Encoding, Allocator &gt;::ImplicitConcatenation</definition>
        <argsstring>(Stack&lt; Allocator &gt; &amp;atomCountStack, Stack&lt; Allocator &gt; &amp;operatorStack)</argsstring>
        <name>ImplicitConcatenation</name>
        <qualifiedname>internal::GenericRegex::ImplicitConcatenation</qualifiedname>
        <param>
          <type><ref refid="classinternal_1_1_stack" kindref="compound">Stack</ref>&lt; <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt; &amp;</type>
          <declname>atomCountStack</declname>
        </param>
        <param>
          <type><ref refid="classinternal_1_1_stack" kindref="compound">Stack</ref>&lt; <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt; &amp;</type>
          <declname>operatorStack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="333" column="10" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="333" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a96b270e845e58787b624604531598517" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
        <definition>SizeType internal::GenericRegex&lt; Encoding, Allocator &gt;::Append</definition>
        <argsstring>(SizeType l1, SizeType l2)</argsstring>
        <name>Append</name>
        <qualifiedname>internal::GenericRegex::Append</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>l1</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="339" column="14" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="339" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a90c5c230de4794560971c48e15861f8e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void internal::GenericRegex&lt; Encoding, Allocator &gt;::Patch</definition>
        <argsstring>(SizeType l, SizeType s)</argsstring>
        <name>Patch</name>
        <qualifiedname>internal::GenericRegex::Patch</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="347" column="10" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="347" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool internal::GenericRegex&lt; Encoding, Allocator &gt;::Eval</definition>
        <argsstring>(Stack&lt; Allocator &gt; &amp;operandStack, Operator op)</argsstring>
        <name>Eval</name>
        <qualifiedname>internal::GenericRegex::Eval</qualifiedname>
        <param>
          <type><ref refid="classinternal_1_1_stack" kindref="compound">Stack</ref>&lt; <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt; &amp;</type>
          <declname>operandStack</declname>
        </param>
        <param>
          <type><ref refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673" kindref="member">Operator</ref></type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="354" column="10" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="354" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a71f934ac6c4b2b4f63b0c5fc68797933" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool internal::GenericRegex&lt; Encoding, Allocator &gt;::EvalQuantifier</definition>
        <argsstring>(Stack&lt; Allocator &gt; &amp;operandStack, unsigned n, unsigned m)</argsstring>
        <name>EvalQuantifier</name>
        <qualifiedname>internal::GenericRegex::EvalQuantifier</qualifiedname>
        <param>
          <type><ref refid="classinternal_1_1_stack" kindref="compound">Stack</ref>&lt; <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt; &amp;</type>
          <declname>operandStack</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>n</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="411" column="10" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="411" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a44a907caf47179a3f0edcf46a4be8b2f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void internal::GenericRegex&lt; Encoding, Allocator &gt;::CloneTopOperand</definition>
        <argsstring>(Stack&lt; Allocator &gt; &amp;operandStack)</argsstring>
        <name>CloneTopOperand</name>
        <qualifiedname>internal::GenericRegex::CloneTopOperand</qualifiedname>
        <param>
          <type><ref refid="classinternal_1_1_stack" kindref="compound">Stack</ref>&lt; <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt; &amp;</type>
          <declname>operandStack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="452" column="10" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="452" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a16d0bf927741c666f46eed1c66f04150" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputStream</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool internal::GenericRegex&lt; Encoding, Allocator &gt;::ParseUnsigned</definition>
        <argsstring>(DecodedStream&lt; InputStream, Encoding &gt; &amp;ds, unsigned *u)</argsstring>
        <name>ParseUnsigned</name>
        <qualifiedname>internal::GenericRegex::ParseUnsigned</qualifiedname>
        <param>
          <type><ref refid="classinternal_1_1_decoded_stream" kindref="compound">DecodedStream</ref>&lt; InputStream, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref> &gt; &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="468" column="10" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="468" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1aa7336514ba21536ec90aaf2188581c1e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputStream</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool internal::GenericRegex&lt; Encoding, Allocator &gt;::ParseRange</definition>
        <argsstring>(DecodedStream&lt; InputStream, Encoding &gt; &amp;ds, SizeType *range)</argsstring>
        <name>ParseRange</name>
        <qualifiedname>internal::GenericRegex::ParseRange</qualifiedname>
        <param>
          <type><ref refid="classinternal_1_1_decoded_stream" kindref="compound">DecodedStream</ref>&lt; InputStream, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref> &gt; &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref> *</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="482" column="10" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="482" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a868d6e44d0782e9fbdd476243daa578f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
        <definition>SizeType internal::GenericRegex&lt; Encoding, Allocator &gt;::NewRange</definition>
        <argsstring>(unsigned codepoint)</argsstring>
        <name>NewRange</name>
        <qualifiedname>internal::GenericRegex::NewRange</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>codepoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="554" column="14" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="554" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1ae46593a63a93b8bc34d044800777b72d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputStream</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool internal::GenericRegex&lt; Encoding, Allocator &gt;::CharacterEscape</definition>
        <argsstring>(DecodedStream&lt; InputStream, Encoding &gt; &amp;ds, unsigned *escapedCodepoint)</argsstring>
        <name>CharacterEscape</name>
        <qualifiedname>internal::GenericRegex::CharacterEscape</qualifiedname>
        <param>
          <type><ref refid="classinternal_1_1_decoded_stream" kindref="compound">DecodedStream</ref>&lt; InputStream, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref> &gt; &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>escapedCodepoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="562" column="10" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="562" bodyend="588"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classinternal_1_1_generic_regex_1a064e15b8c9c222a07e143ec5847c6ec6" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
        <definition>static SizeType internal::GenericRegex&lt; Encoding, Allocator &gt;::Min</definition>
        <argsstring>(SizeType a, SizeType b)</argsstring>
        <name>Min</name>
        <qualifiedname>internal::GenericRegex::Min</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="450" column="21" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="450" bodyend="450"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Regular expression engine with subset of ECMAscript grammar. </para>
    </briefdescription>
    <detaileddescription>
<para>Supported regular expression syntax:<itemizedlist>
<listitem><para><computeroutput>ab</computeroutput> Concatenation</para>
</listitem><listitem><para><computeroutput>a|b</computeroutput> Alternation</para>
</listitem><listitem><para><computeroutput>a</computeroutput>? Zero or one</para>
</listitem><listitem><para><computeroutput>a*</computeroutput> Zero or more</para>
</listitem><listitem><para><computeroutput>a+</computeroutput> One or more</para>
</listitem><listitem><para><computeroutput>a{3}</computeroutput> Exactly 3 times</para>
</listitem><listitem><para><computeroutput>a{3</computeroutput>,} At least 3 times</para>
</listitem><listitem><para><computeroutput>a{3</computeroutput>,5} 3 to 5 times</para>
</listitem><listitem><para><computeroutput></computeroutput>(ab) Grouping</para>
</listitem><listitem><para><computeroutput>^a</computeroutput> At the beginning</para>
</listitem><listitem><para><computeroutput>a$</computeroutput> At the end</para>
</listitem><listitem><para><computeroutput></computeroutput>. Any character</para>
</listitem><listitem><para><computeroutput></computeroutput>[abc] Character classes</para>
</listitem><listitem><para><computeroutput></computeroutput>[a-c] Character class range</para>
</listitem><listitem><para><computeroutput></computeroutput>[a-z0-9_] Character class combination</para>
</listitem><listitem><para><computeroutput></computeroutput>[^abc] Negated character classes</para>
</listitem><listitem><para><computeroutput></computeroutput>[^a-c] Negated character class range</para>
</listitem><listitem><para><computeroutput></computeroutput>[<bold></bold>] Backspace (U+0008)</para>
</listitem><listitem><para><computeroutput>\</computeroutput>| \\ ... Escape characters</para>
</listitem><listitem><para><computeroutput>\f</computeroutput> Form feed (U+000C)</para>
</listitem><listitem><para><computeroutput>\n</computeroutput> Line feed (U+000A)</para>
</listitem><listitem><para><computeroutput>\r</computeroutput> Carriage return (U+000D)</para>
</listitem><listitem><para><computeroutput>\t</computeroutput> Tab (U+0009)</para>
</listitem><listitem><para><computeroutput>\v</computeroutput> Vertical tab (U+000B)</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>This is a Thompson NFA engine, implemented with reference to Cox, Russ. &quot;Regular Expression Matching Can Be Simple And Fast (but is slow in Java, Perl, PHP, Python, Ruby,...).&quot;, <ulink url="https://swtch.com/~rsc/regexp/regexp1.html">https://swtch.com/~rsc/regexp/regexp1.html</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>CrtAllocator</label>
        <link refid="class_crt_allocator"/>
      </node>
      <node id="3">
        <label>internal::Stack&lt; rapidjson::Allocator &gt;</label>
        <link refid="classinternal_1_1_stack"/>
        <childnode refid="4" relation="usage">
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>initialCapacity_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>internal::GenericRegex&lt; Encoding, Allocator &gt;</label>
        <link refid="classinternal_1_1_generic_regex"/>
        <childnode refid="2" relation="usage">
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>ranges_</edgelabel>
          <edgelabel>states_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Allocator</label>
        <link refid="classrapidjson_1_1_allocator"/>
      </node>
      <node id="5">
        <label>size_t</label>
      </node>
    </collaborationgraph>
    <location file="src/rapidjson/include/rapidjson/internal/regex.h" line="110" column="1" bodyfile="src/rapidjson/include/rapidjson/internal/regex.h" bodystart="110" bodyend="603"/>
    <listofallmembers>
      <member refid="classinternal_1_1_generic_regex_1a2fb2543ae1c5ec68f891745fa69af0e3" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>allocator_</name></member>
      <member refid="classinternal_1_1_generic_regex_1ac99b045cc5250649ea3708bee95a56e8" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>anchorBegin_</name></member>
      <member refid="classinternal_1_1_generic_regex_1adbd19f8921ece1563d02e74f479d2e13" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>anchorEnd_</name></member>
      <member refid="classinternal_1_1_generic_regex_1a96b270e845e58787b624604531598517" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>Append</name></member>
      <member refid="classinternal_1_1_generic_regex_1a44e1a86ec27e1c5628a7d91c8c3daace" prot="public" virt="non-virtual"><scope>internal::GenericRegex</scope><name>Ch</name></member>
      <member refid="classinternal_1_1_generic_regex_1ae46593a63a93b8bc34d044800777b72d" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>CharacterEscape</name></member>
      <member refid="classinternal_1_1_generic_regex_1a44a907caf47179a3f0edcf46a4be8b2f" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>CloneTopOperand</name></member>
      <member refid="classinternal_1_1_generic_regex_1a8d0eb2f6a71868b2a8f03382b7836d30" prot="public" virt="non-virtual"><scope>internal::GenericRegex</scope><name>EncodingType</name></member>
      <member refid="classinternal_1_1_generic_regex_1a0cc7e9e0fa434ded7ed37de54c49ce26" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>Eval</name></member>
      <member refid="classinternal_1_1_generic_regex_1a71f934ac6c4b2b4f63b0c5fc68797933" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>EvalQuantifier</name></member>
      <member refid="classinternal_1_1_generic_regex_1a35c3a49bc4545a991ab039858227df0f" prot="public" virt="non-virtual"><scope>internal::GenericRegex</scope><name>GenericRegex</name></member>
      <member refid="classinternal_1_1_generic_regex_1a919008cc046ab9f1c09609f1fc143986" prot="public" virt="non-virtual"><scope>internal::GenericRegex</scope><name>GenericRegexSearch</name></member>
      <member refid="classinternal_1_1_generic_regex_1a7e05e1219867fdbe83cb4e1f6d4aed91" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>GetRange</name></member>
      <member refid="classinternal_1_1_generic_regex_1a7725f5a459796b58736b6cddcd19e335" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>GetRange</name></member>
      <member refid="classinternal_1_1_generic_regex_1aea17c79a5d4d17a3b21ef86dda9fa0e3" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>GetState</name></member>
      <member refid="classinternal_1_1_generic_regex_1ada0efa1a7089e9d58376e3fc2821a234" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>GetState</name></member>
      <member refid="classinternal_1_1_generic_regex_1a3b6d21989c3e41e33f6d2a7897ffdd6b" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>ImplicitConcatenation</name></member>
      <member refid="classinternal_1_1_generic_regex_1a34ddb18fa3a2c70203d0fb740443c2a8" prot="public" virt="non-virtual"><scope>internal::GenericRegex</scope><name>IsValid</name></member>
      <member refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a6c251a26f84dc6bc21717ef5fe8504d4" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>kAlternation</name></member>
      <member refid="classinternal_1_1_generic_regex_1a1f3b72c56d5eab221ba46a473ff611dd" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>kAnyCharacterClass</name></member>
      <member refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a989378c9dfab87e3faf7b5e7db8885a2" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>kConcatenation</name></member>
      <member refid="classinternal_1_1_generic_regex_1a12955d17d702f2fa9cf39421666c3ff3" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>kInfinityQuantifier</name></member>
      <member refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ae2f7e4cfde06337266fa1ac3a8b47d54" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>kLeftParenthesis</name></member>
      <member refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673a5640dadf6c1cff543463686f2f2903e3" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>kOneOrMore</name></member>
      <member refid="classinternal_1_1_generic_regex_1aec665a90fdb2372dbc18a6ca0971e886" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>kRangeCharacterClass</name></member>
      <member refid="classinternal_1_1_generic_regex_1ae435570506343e24811e588614f6842b" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>kRangeNegationFlag</name></member>
      <member refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673aa4482f5484f4db6675095aaec3286e4f" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>kZeroOrMore</name></member>
      <member refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673ad4577594ddb5fee3be7138b0759c35b3" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>kZeroOrOne</name></member>
      <member refid="classinternal_1_1_generic_regex_1a064e15b8c9c222a07e143ec5847c6ec6" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>Min</name></member>
      <member refid="classinternal_1_1_generic_regex_1a868d6e44d0782e9fbdd476243daa578f" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>NewRange</name></member>
      <member refid="classinternal_1_1_generic_regex_1ad57a48991e61750ef7426c48b1d3e51b" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>NewState</name></member>
      <member refid="classinternal_1_1_generic_regex_1acd9c0338546415c6d6dabdb76f8be673" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>Operator</name></member>
      <member refid="classinternal_1_1_generic_regex_1a63f4d8c4e3d61fcd9f1489347708ded8" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>ownAllocator_</name></member>
      <member refid="classinternal_1_1_generic_regex_1a038af33f370a14f987fb79d78f0d1c75" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>Parse</name></member>
      <member refid="classinternal_1_1_generic_regex_1aa7336514ba21536ec90aaf2188581c1e" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>ParseRange</name></member>
      <member refid="classinternal_1_1_generic_regex_1a16d0bf927741c666f46eed1c66f04150" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>ParseUnsigned</name></member>
      <member refid="classinternal_1_1_generic_regex_1a90c5c230de4794560971c48e15861f8e" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>Patch</name></member>
      <member refid="classinternal_1_1_generic_regex_1a1a3ea65f584e0dba5815a1232f9a770e" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>PushOperand</name></member>
      <member refid="classinternal_1_1_generic_regex_1ad65c6144b7dc5b0441ef20dc4ef81619" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>rangeCount_</name></member>
      <member refid="classinternal_1_1_generic_regex_1af94c64023502147345303d70ff594140" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>ranges_</name></member>
      <member refid="classinternal_1_1_generic_regex_1a2af8c29234a2229b509fdf60cf265201" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>root_</name></member>
      <member refid="classinternal_1_1_generic_regex_1af47146f067e491bb9cb23b13a88a26db" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>stateCount_</name></member>
      <member refid="classinternal_1_1_generic_regex_1a5391b182b60bb8967dd0a6d99db9c9f0" prot="private" virt="non-virtual"><scope>internal::GenericRegex</scope><name>states_</name></member>
      <member refid="classinternal_1_1_generic_regex_1a6a4956c0391bccbf8580b2e047d5bc35" prot="public" virt="non-virtual"><scope>internal::GenericRegex</scope><name>~GenericRegex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
