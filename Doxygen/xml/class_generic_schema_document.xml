<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_generic_schema_document" kind="class" language="C++" prot="public">
    <compoundname>GenericSchemaDocument</compoundname>
    <includes refid="schema_8h" local="no">schema.h</includes>
    <innerclass refid="struct_generic_schema_document_1_1_schema_entry" prot="private">GenericSchemaDocument::SchemaEntry</innerclass>
    <templateparamlist>
      <param>
        <type>typename ValueT</type>
      </param>
      <param>
        <type>typename <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref></type>
        <defval><ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" prot="public" static="no">
        <type>ValueT</type>
        <definition>typedef ValueT GenericSchemaDocument&lt; ValueT, Allocator &gt;::ValueType</definition>
        <argsstring></argsstring>
        <name>ValueType</name>
        <qualifiedname>GenericSchemaDocument::ValueType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1621" column="20" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_document_1aa53ca323efce50f88aea6fa0d03e9785" prot="public" static="no">
        <type><ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">IGenericRemoteSchemaDocumentProvider</ref>&lt; <ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref> &gt;</type>
        <definition>typedef IGenericRemoteSchemaDocumentProvider&lt;GenericSchemaDocument&gt; GenericSchemaDocument&lt; ValueT, Allocator &gt;::IRemoteSchemaDocumentProviderType</definition>
        <argsstring></argsstring>
        <name>IRemoteSchemaDocumentProviderType</name>
        <qualifiedname>GenericSchemaDocument::IRemoteSchemaDocumentProviderType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1622" column="50" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_document_1ac0d88adf8c86917d8bc9563ffdab6a6d" prot="public" static="no">
        <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref></type>
        <definition>typedef Allocator GenericSchemaDocument&lt; ValueT, Allocator &gt;::AllocatorType</definition>
        <argsstring></argsstring>
        <name>AllocatorType</name>
        <qualifiedname>GenericSchemaDocument::AllocatorType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1623" column="23" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_document_1ad0293c28c9ffe80ab1f8ec86efee35c8" prot="public" static="no">
        <type><ref refid="class_generic_value_1a28c2cb8d04d12566c1af37597a46d209" kindref="member">ValueType::EncodingType</ref></type>
        <definition>typedef ValueType::EncodingType GenericSchemaDocument&lt; ValueT, Allocator &gt;::EncodingType</definition>
        <argsstring></argsstring>
        <name>EncodingType</name>
        <qualifiedname>GenericSchemaDocument::EncodingType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1624" column="46" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_document_1ab1dec56a78b29649eb8e4b85b101ec7c" prot="public" static="no">
        <type>EncodingType::Ch</type>
        <definition>typedef EncodingType::Ch GenericSchemaDocument&lt; ValueT, Allocator &gt;::Ch</definition>
        <argsstring></argsstring>
        <name>Ch</name>
        <qualifiedname>GenericSchemaDocument::Ch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1625" column="39" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" prot="public" static="no">
        <type><ref refid="classinternal_1_1_schema" kindref="compound">internal::Schema</ref>&lt; <ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref> &gt;</type>
        <definition>typedef internal::Schema&lt;GenericSchemaDocument&gt; GenericSchemaDocument&lt; ValueT, Allocator &gt;::SchemaType</definition>
        <argsstring></argsstring>
        <name>SchemaType</name>
        <qualifiedname>GenericSchemaDocument::SchemaType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1626" column="30" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" prot="public" static="no">
        <type><ref refid="class_generic_pointer" kindref="compound">GenericPointer</ref>&lt; <ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;</type>
        <definition>typedef GenericPointer&lt;ValueType, Allocator&gt; GenericSchemaDocument&lt; ValueT, Allocator &gt;::PointerType</definition>
        <argsstring></argsstring>
        <name>PointerType</name>
        <qualifiedname>GenericSchemaDocument::PointerType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1627" column="28" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_document_1af017bc68811efaabb9925b6db03fa3d5" prot="public" static="no">
        <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref refid="class_generic_schema_document_1ad0293c28c9ffe80ab1f8ec86efee35c8" kindref="member">EncodingType</ref>, <ref refid="class_generic_schema_document_1ac0d88adf8c86917d8bc9563ffdab6a6d" kindref="member">AllocatorType</ref> &gt;</type>
        <definition>typedef GenericValue&lt;EncodingType, AllocatorType&gt; GenericSchemaDocument&lt; ValueT, Allocator &gt;::SValue</definition>
        <argsstring></argsstring>
        <name>SValue</name>
        <qualifiedname>GenericSchemaDocument::SValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1628" column="26" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1628" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" prot="public" static="no">
        <type><ref refid="class_generic_uri" kindref="compound">GenericUri</ref>&lt; <ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;</type>
        <definition>typedef GenericUri&lt;ValueType, Allocator&gt; GenericSchemaDocument&lt; ValueT, Allocator &gt;::UriType</definition>
        <argsstring></argsstring>
        <name>UriType</name>
        <qualifiedname>GenericSchemaDocument::UriType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1629" column="24" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1629" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_generic_schema_document_1a2d829a5745e7d28aa3b1e33366b9861d" prot="private" static="no">
        <type>const <ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref> *</type>
        <definition>typedef const PointerType* GenericSchemaDocument&lt; ValueT, Allocator &gt;::SchemaRefPtr</definition>
        <argsstring></argsstring>
        <name>SchemaRefPtr</name>
        <qualifiedname>GenericSchemaDocument::SchemaRefPtr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1726" column="31" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1726" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_generic_schema_document_1a706511849688d9245fc37109f02a03c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class internal::Schema&lt; GenericSchemaDocument &gt;</definition>
        <argsstring></argsstring>
        <name>internal::Schema&lt; GenericSchemaDocument &gt;</name>
        <qualifiedname>GenericSchemaDocument::Schema&lt; GenericSchemaDocument &gt;</qualifiedname>
        <param>
          <type><ref refid="classinternal_1_1_schema" kindref="compound">internal::Schema</ref>&lt; <ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1629" column="24" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_generic_schema_document_1afcc03e6ba8f1a819e1a028c31ad38347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
          </param>
          <param>
            <type>typename</type>
          </param>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class GenericSchemaValidator</definition>
        <argsstring></argsstring>
        <name>GenericSchemaValidator</name>
        <qualifiedname>GenericSchemaDocument::GenericSchemaValidator</qualifiedname>
        <param>
          <type><ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1632" column="18" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1632" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_generic_schema_document_1a3b0a57801ee25f2ba84ce61770291c33" prot="private" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t GenericSchemaDocument&lt; ValueT, Allocator &gt;::kInitialSchemaMapSize</definition>
        <argsstring></argsstring>
        <name>kInitialSchemaMapSize</name>
        <qualifiedname>GenericSchemaDocument::kInitialSchemaMapSize</qualifiedname>
        <initializer>= 64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1951" column="25" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1951" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_document_1a5a3e961495b724dc65682d6a0a681d03" prot="private" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t GenericSchemaDocument&lt; ValueT, Allocator &gt;::kInitialSchemaRefSize</definition>
        <argsstring></argsstring>
        <name>kInitialSchemaRefSize</name>
        <qualifiedname>GenericSchemaDocument::kInitialSchemaRefSize</qualifiedname>
        <initializer>= 64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1952" column="25" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1952" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_generic_schema_document_1ae71c9925eaf2f51f26ce1083d3f4edf4" prot="private" static="no" mutable="no">
        <type><ref refid="class_generic_schema_document_1aa53ca323efce50f88aea6fa0d03e9785" kindref="member">IRemoteSchemaDocumentProviderType</ref> *</type>
        <definition>IRemoteSchemaDocumentProviderType* GenericSchemaDocument&lt; ValueT, Allocator &gt;::remoteProvider_</definition>
        <argsstring></argsstring>
        <name>remoteProvider_</name>
        <qualifiedname>GenericSchemaDocument::remoteProvider_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1954" column="39" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1954" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_document_1a8a7df889c7e1deab679c1ee165ba59f0" prot="private" static="no" mutable="no">
        <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> *</type>
        <definition>Allocator* GenericSchemaDocument&lt; ValueT, Allocator &gt;::allocator_</definition>
        <argsstring></argsstring>
        <name>allocator_</name>
        <qualifiedname>GenericSchemaDocument::allocator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1955" column="15" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1955" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_document_1a95ba649b2911b91297321093876f1cab" prot="private" static="no" mutable="no">
        <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> *</type>
        <definition>Allocator* GenericSchemaDocument&lt; ValueT, Allocator &gt;::ownAllocator_</definition>
        <argsstring></argsstring>
        <name>ownAllocator_</name>
        <qualifiedname>GenericSchemaDocument::ownAllocator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1956" column="15" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1956" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_document_1a50ee80c40478d090c98900d4e6949737" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref> *</type>
        <definition>const SchemaType* GenericSchemaDocument&lt; ValueT, Allocator &gt;::root_</definition>
        <argsstring></argsstring>
        <name>root_</name>
        <qualifiedname>GenericSchemaDocument::root_</qualifiedname>
        <briefdescription>
<para>Root schema. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1957" column="22" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1957" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_document_1a7393ecd4d607c1f81ce9eac5becf92a8" prot="private" static="no" mutable="no">
        <type><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref> *</type>
        <definition>SchemaType* GenericSchemaDocument&lt; ValueT, Allocator &gt;::typeless_</definition>
        <argsstring></argsstring>
        <name>typeless_</name>
        <qualifiedname>GenericSchemaDocument::typeless_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1958" column="16" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1958" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_document_1a75a97c9f8cd1cc8cd67f3b6364d93744" prot="private" static="no" mutable="no">
        <type><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack</ref>&lt; <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;</type>
        <definition>internal::Stack&lt;Allocator&gt; GenericSchemaDocument&lt; ValueT, Allocator &gt;::schemaMap_</definition>
        <argsstring></argsstring>
        <name>schemaMap_</name>
        <qualifiedname>GenericSchemaDocument::schemaMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1959" column="21" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1959" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_document_1a0c3ee68d07de1c96f1954ad66c6e6d23" prot="private" static="no" mutable="no">
        <type><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack</ref>&lt; <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;</type>
        <definition>internal::Stack&lt;Allocator&gt; GenericSchemaDocument&lt; ValueT, Allocator &gt;::schemaRef_</definition>
        <argsstring></argsstring>
        <name>schemaRef_</name>
        <qualifiedname>GenericSchemaDocument::schemaRef_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1960" column="21" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1960" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_document_1a912d4d364b21b12c4cfce5fba8f983a4" prot="private" static="no" mutable="no">
        <type><ref refid="class_generic_schema_document_1af017bc68811efaabb9925b6db03fa3d5" kindref="member">SValue</ref></type>
        <definition>SValue GenericSchemaDocument&lt; ValueT, Allocator &gt;::uri_</definition>
        <argsstring></argsstring>
        <name>uri_</name>
        <qualifiedname>GenericSchemaDocument::uri_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1961" column="12" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1961" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_schema_document_1ab6b6e5654c0563a3ece3ae7a970c0f0f" prot="private" static="no" mutable="no">
        <type><ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref></type>
        <definition>UriType GenericSchemaDocument&lt; ValueT, Allocator &gt;::docId_</definition>
        <argsstring></argsstring>
        <name>docId_</name>
        <qualifiedname>GenericSchemaDocument::docId_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1962" column="13" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1962" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_generic_schema_document_1a302a3c608c137d5542105c8298bfba1f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericSchemaDocument&lt; ValueT, Allocator &gt;::GenericSchemaDocument</definition>
        <argsstring>(const ValueType &amp;document, const Ch *uri=0, SizeType uriLength=0, IRemoteSchemaDocumentProviderType *remoteProvider=0, Allocator *allocator=0, const PointerType &amp;pointer=PointerType())</argsstring>
        <name>GenericSchemaDocument</name>
        <qualifiedname>GenericSchemaDocument::GenericSchemaDocument</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref> &amp;</type>
          <declname>document</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1ab1dec56a78b29649eb8e4b85b101ec7c" kindref="member">Ch</ref> *</type>
          <declname>uri</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>uriLength</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="class_generic_schema_document_1aa53ca323efce50f88aea6fa0d03e9785" kindref="member">IRemoteSchemaDocumentProviderType</ref> *</type>
          <declname>remoteProvider</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> *</type>
          <declname>allocator</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref> &amp;</type>
          <declname>pointer</declname>
          <defval><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>()</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Compile a JSON document into schema document.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>document</parametername>
</parameternamelist>
<parameterdescription>
<para>A JSON document as source. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The base URI of this schema document for purposes of violation reporting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uriLength</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of <computeroutput>name</computeroutput>, in code points. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>remoteProvider</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional remote schema document provider for resolving remote reference. Can be null. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocator</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional allocator instance for allocating memory. Can be null. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional JSON pointer to the start of the schema document </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1645" column="14" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1645" bodyend="1680"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_document_1a6a54dfd1aec0f560f7e47e08f3fcb8f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericSchemaDocument&lt; ValueT, Allocator &gt;::~GenericSchemaDocument</definition>
        <argsstring>()</argsstring>
        <name>~GenericSchemaDocument</name>
        <qualifiedname>GenericSchemaDocument::~GenericSchemaDocument</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1703" column="5" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1703" bodyend="1713"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_document_1aab0203c06e65d944a8a03517d84de3cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_generic_schema_document_1af017bc68811efaabb9925b6db03fa3d5" kindref="member">SValue</ref> &amp;</type>
        <definition>const SValue &amp; GenericSchemaDocument&lt; ValueT, Allocator &gt;::GetURI</definition>
        <argsstring>() const</argsstring>
        <name>GetURI</name>
        <qualifiedname>GenericSchemaDocument::GetURI</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1715" column="18" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1715" bodyend="1715"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_document_1a6a0b2b360df728077bb5d3779f97e73d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref> &amp;</type>
        <definition>const SchemaType &amp; GenericSchemaDocument&lt; ValueT, Allocator &gt;::GetRoot</definition>
        <argsstring>() const</argsstring>
        <name>GetRoot</name>
        <qualifiedname>GenericSchemaDocument::GetRoot</qualifiedname>
        <briefdescription>
<para>Get the root schema. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1718" column="22" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1718" bodyend="1718"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_generic_schema_document_1ae5e4d5f87964ea7bfda2df824416d6da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GenericSchemaDocument&lt; ValueT, Allocator &gt;::GenericSchemaDocument</definition>
        <argsstring>(const GenericSchemaDocument &amp;)</argsstring>
        <name>GenericSchemaDocument</name>
        <qualifiedname>GenericSchemaDocument::GenericSchemaDocument</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Prohibit copying. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1722" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_document_1a9be58d02422911b109680135ee41e6e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref> &amp;</type>
        <definition>GenericSchemaDocument &amp; GenericSchemaDocument&lt; ValueT, Allocator &gt;::operator=</definition>
        <argsstring>(const GenericSchemaDocument &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>GenericSchemaDocument::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Prohibit assignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1724" column="27"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_document_1a8f07ad5a43a7b70ecdaf362463544f25" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaDocument&lt; ValueT, Allocator &gt;::CreateSchemaRecursive</definition>
        <argsstring>(const SchemaType **schema, const PointerType &amp;pointer, const ValueType &amp;v, const ValueType &amp;document, const UriType &amp;id)</argsstring>
        <name>CreateSchemaRecursive</name>
        <qualifiedname>GenericSchemaDocument::CreateSchemaRecursive</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref> **</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref> &amp;</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref> &amp;</type>
          <declname>document</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1742" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1742" bodyend="1752"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_document_1a1a3625dab59f8e995063f61ba9560c14" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref> &amp;</type>
        <definition>const UriType &amp; GenericSchemaDocument&lt; ValueT, Allocator &gt;::CreateSchema</definition>
        <argsstring>(const SchemaType **schema, const PointerType &amp;pointer, const ValueType &amp;v, const ValueType &amp;document, const UriType &amp;id)</argsstring>
        <name>CreateSchema</name>
        <qualifiedname>GenericSchemaDocument::CreateSchema</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref> **</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref> &amp;</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref> &amp;</type>
          <declname>document</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1755" column="19" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1755" bodyend="1777"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_document_1a3debb209124c74e4498334a42f6f0244" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaDocument&lt; ValueT, Allocator &gt;::HandleRefSchema</definition>
        <argsstring>(const PointerType &amp;source, const SchemaType **schema, const ValueType &amp;v, const ValueType &amp;document, const UriType &amp;id)</argsstring>
        <name>HandleRefSchema</name>
        <qualifiedname>GenericSchemaDocument::HandleRefSchema</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref> **</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref> &amp;</type>
          <declname>document</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1781" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1781" bodyend="1875"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_document_1a17f4365fd1d205a259cfef33962bd409" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref> *</type>
        <definition>ValueType * GenericSchemaDocument&lt; ValueT, Allocator &gt;::FindId</definition>
        <argsstring>(const ValueType &amp;doc, const UriType &amp;finduri, PointerType &amp;resptr, const UriType &amp;baseuri, bool full, const PointerType &amp;here=PointerType()) const</argsstring>
        <name>FindId</name>
        <qualifiedname>GenericSchemaDocument::FindId</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" kindref="member">ValueType</ref> &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref> &amp;</type>
          <declname>finduri</declname>
        </param>
        <param>
          <type><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref> &amp;</type>
          <declname>resptr</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" kindref="member">UriType</ref> &amp;</type>
          <declname>baseuri</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>full</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref> &amp;</type>
          <declname>here</declname>
          <defval><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref>()</defval>
        </param>
        <briefdescription>
<para>Find the first subschema with a resolved &apos;id&apos; that matches the specified URI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1881" column="15" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1881" bodyend="1916"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_document_1a36fa45023cbd5caada24ea7fed87202a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericSchemaDocument&lt; ValueT, Allocator &gt;::AddSchemaRefs</definition>
        <argsstring>(SchemaType *schema)</argsstring>
        <name>AddSchemaRefs</name>
        <qualifiedname>GenericSchemaDocument::AddSchemaRefs</qualifiedname>
        <param>
          <type><ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref> *</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1919" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1919" bodyend="1925"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_document_1ab3c0518a161f39dea52280e5ebb97e51" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GenericSchemaDocument&lt; ValueT, Allocator &gt;::IsCyclicRef</definition>
        <argsstring>(const PointerType &amp;pointer) const</argsstring>
        <name>IsCyclicRef</name>
        <qualifiedname>GenericSchemaDocument::IsCyclicRef</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref> &amp;</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1928" column="10" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1928" bodyend="1933"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_document_1a2f69b7ddf26093678c953016374d7bfa" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref> *</type>
        <definition>const SchemaType * GenericSchemaDocument&lt; ValueT, Allocator &gt;::GetSchema</definition>
        <argsstring>(const PointerType &amp;pointer) const</argsstring>
        <name>GetSchema</name>
        <qualifiedname>GenericSchemaDocument::GetSchema</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref> &amp;</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1935" column="22" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1935" bodyend="1940"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_document_1ad359e04187039fe6e61b279383e7360e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" kindref="member">PointerType</ref></type>
        <definition>PointerType GenericSchemaDocument&lt; ValueT, Allocator &gt;::GetPointer</definition>
        <argsstring>(const SchemaType *schema) const</argsstring>
        <name>GetPointer</name>
        <qualifiedname>GenericSchemaDocument::GetPointer</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref> *</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1942" column="17" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1942" bodyend="1947"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_schema_document_1a12afbdb45444193445f1c75bfa63c1d8" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" kindref="member">SchemaType</ref> *</type>
        <definition>const SchemaType * GenericSchemaDocument&lt; ValueT, Allocator &gt;::GetTypeless</definition>
        <argsstring>() const</argsstring>
        <name>GetTypeless</name>
        <qualifiedname>GenericSchemaDocument::GetTypeless</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/schema.h" line="1949" column="22" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1949" bodyend="1949"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>JSON schema document. </para>
    </briefdescription>
    <detaileddescription>
<para>A JSON schema document is a compiled version of a JSON schema. It is basically a tree of <ref refid="classinternal_1_1_schema" kindref="compound">internal::Schema</ref>.</para>
<para><simplesect kind="note"><para>This is an immutable class (i.e. its instance cannot be modified after construction). </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueT</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of JSON value (e.g. <computeroutput>Value</computeroutput> ), which also determine the encoding. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Allocator</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocator type for allocating memory of this document. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>CrtAllocator</label>
        <link refid="class_crt_allocator"/>
      </node>
      <node id="14">
        <label>GenericMember&lt; Encoding, Allocator &gt;</label>
        <link refid="class_generic_member"/>
        <childnode refid="15" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>GenericSchemaDocument&lt; ValueT, Allocator &gt;</label>
        <link refid="class_generic_schema_document"/>
        <childnode refid="2" relation="usage">
          <edgelabel>kInitialSchemaMapSize</edgelabel>
          <edgelabel>kInitialSchemaRefSize</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>remoteProvider_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>root_</edgelabel>
          <edgelabel>typeless_</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>schemaMap_</edgelabel>
          <edgelabel>schemaRef_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>uri_</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>docId_</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>GenericUri&lt; ValueType, AllocatorType &gt;</label>
        <link refid="class_generic_uri"/>
      </node>
      <node id="26">
        <label>GenericUri&lt; ValueType, CrtAllocator &gt;</label>
        <link refid="class_generic_uri"/>
        <childnode refid="4" relation="usage">
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>GenericValue&lt; Encoding, Allocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="7" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ArrayData</label>
        <link refid="struct_generic_value_1_1_array_data"/>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Data</label>
        <link refid="union_generic_value_1_1_data"/>
        <childnode refid="8" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>ss</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>n</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>o</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>a</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Flag</label>
        <link refid="struct_generic_value_1_1_flag"/>
      </node>
      <node id="10">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number</label>
        <link refid="union_generic_value_1_1_number"/>
        <childnode refid="11" relation="usage">
          <edgelabel>i</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>u</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number::I</label>
        <link refid="struct_generic_value_1_1_number_1_1_i"/>
      </node>
      <node id="12">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number::U</label>
        <link refid="struct_generic_value_1_1_number_1_1_u"/>
      </node>
      <node id="13">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ObjectData</label>
        <link refid="struct_generic_value_1_1_object_data"/>
        <childnode refid="14" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ShortString</label>
        <link refid="struct_generic_value_1_1_short_string"/>
      </node>
      <node id="8">
        <label>GenericValue&lt; Encoding, Allocator &gt;::String</label>
        <link refid="struct_generic_value_1_1_string"/>
      </node>
      <node id="6">
        <label>GenericValue&lt; EncodingType, AllocatorType &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="7" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>GenericValue&lt; rapidjson::Encoding, rapidjson::Allocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="7" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>IGenericRemoteSchemaDocumentProvider&lt; SchemaDocumentType &gt;</label>
        <link refid="class_i_generic_remote_schema_document_provider"/>
      </node>
      <node id="24">
        <label>internal::Stack&lt; rapidjson::Allocator &gt;</label>
        <link refid="classinternal_1_1_stack"/>
        <childnode refid="25" relation="usage">
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>initialCapacity_</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>internal::GenericRegex&lt; Encoding, Allocator &gt;</label>
        <link refid="classinternal_1_1_generic_regex"/>
        <childnode refid="4" relation="usage">
          <edgelabel>allocator_</edgelabel>
          <edgelabel>ownAllocator_</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>ranges_</edgelabel>
          <edgelabel>states_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>internal::Schema&lt; SchemaDocumentType &gt;</label>
        <link refid="classinternal_1_1_schema"/>
        <childnode refid="6" relation="usage">
          <edgelabel>maximum_</edgelabel>
          <edgelabel>minimum_</edgelabel>
          <edgelabel>multipleOf_</edgelabel>
          <edgelabel>uri_</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>id_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>additionalItemsSchema_</edgelabel>
          <edgelabel>additionalPropertiesSchema_</edgelabel>
          <edgelabel>itemsList_</edgelabel>
          <edgelabel>itemsTuple_</edgelabel>
          <edgelabel>not_</edgelabel>
          <edgelabel>typeless_</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>allOf_</edgelabel>
          <edgelabel>anyOf_</edgelabel>
          <edgelabel>oneOf_</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>properties_</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>patternProperties_</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>pattern_</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>internal::Schema&lt; SchemaDocumentType &gt;::PatternProperty</label>
        <link refid="structinternal_1_1_schema_1_1_pattern_property"/>
        <childnode refid="5" relation="usage">
          <edgelabel>schema</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>pattern</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>internal::Schema&lt; SchemaDocumentType &gt;::Property</label>
        <link refid="structinternal_1_1_schema_1_1_property"/>
        <childnode refid="6" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>dependenciesSchema</edgelabel>
          <edgelabel>schema</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>internal::Schema&lt; SchemaDocumentType &gt;::SchemaArray</label>
        <link refid="structinternal_1_1_schema_1_1_schema_array"/>
        <childnode refid="5" relation="usage">
          <edgelabel>schemas</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>Allocator</label>
        <link refid="classrapidjson_1_1_allocator"/>
      </node>
      <node id="2">
        <label>size_t</label>
      </node>
    </collaborationgraph>
    <location file="src/rapidjson/include/rapidjson/schema.h" line="1619" column="1" bodyfile="src/rapidjson/include/rapidjson/schema.h" bodystart="1619" bodyend="1963"/>
    <listofallmembers>
      <member refid="class_generic_schema_document_1a36fa45023cbd5caada24ea7fed87202a" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>AddSchemaRefs</name></member>
      <member refid="class_generic_schema_document_1a8a7df889c7e1deab679c1ee165ba59f0" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>allocator_</name></member>
      <member refid="class_generic_schema_document_1ac0d88adf8c86917d8bc9563ffdab6a6d" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>AllocatorType</name></member>
      <member refid="class_generic_schema_document_1ab1dec56a78b29649eb8e4b85b101ec7c" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>Ch</name></member>
      <member refid="class_generic_schema_document_1a1a3625dab59f8e995063f61ba9560c14" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>CreateSchema</name></member>
      <member refid="class_generic_schema_document_1a8f07ad5a43a7b70ecdaf362463544f25" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>CreateSchemaRecursive</name></member>
      <member refid="class_generic_schema_document_1ab6b6e5654c0563a3ece3ae7a970c0f0f" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>docId_</name></member>
      <member refid="class_generic_schema_document_1ad0293c28c9ffe80ab1f8ec86efee35c8" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>EncodingType</name></member>
      <member refid="class_generic_schema_document_1a17f4365fd1d205a259cfef33962bd409" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>FindId</name></member>
      <member refid="class_generic_schema_document_1a302a3c608c137d5542105c8298bfba1f" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>GenericSchemaDocument</name></member>
      <member refid="class_generic_schema_document_1ae5e4d5f87964ea7bfda2df824416d6da" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>GenericSchemaDocument</name></member>
      <member refid="class_generic_schema_document_1afcc03e6ba8f1a819e1a028c31ad38347" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>GenericSchemaValidator</name></member>
      <member refid="class_generic_schema_document_1ad359e04187039fe6e61b279383e7360e" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>GetPointer</name></member>
      <member refid="class_generic_schema_document_1a6a0b2b360df728077bb5d3779f97e73d" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>GetRoot</name></member>
      <member refid="class_generic_schema_document_1a2f69b7ddf26093678c953016374d7bfa" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>GetSchema</name></member>
      <member refid="class_generic_schema_document_1a12afbdb45444193445f1c75bfa63c1d8" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>GetTypeless</name></member>
      <member refid="class_generic_schema_document_1aab0203c06e65d944a8a03517d84de3cd" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>GetURI</name></member>
      <member refid="class_generic_schema_document_1a3debb209124c74e4498334a42f6f0244" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>HandleRefSchema</name></member>
      <member refid="class_generic_schema_document_1a706511849688d9245fc37109f02a03c4" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>internal::Schema&lt; GenericSchemaDocument &gt;</name></member>
      <member refid="class_generic_schema_document_1aa53ca323efce50f88aea6fa0d03e9785" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>IRemoteSchemaDocumentProviderType</name></member>
      <member refid="class_generic_schema_document_1ab3c0518a161f39dea52280e5ebb97e51" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>IsCyclicRef</name></member>
      <member refid="class_generic_schema_document_1a3b0a57801ee25f2ba84ce61770291c33" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>kInitialSchemaMapSize</name></member>
      <member refid="class_generic_schema_document_1a5a3e961495b724dc65682d6a0a681d03" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>kInitialSchemaRefSize</name></member>
      <member refid="class_generic_schema_document_1a9be58d02422911b109680135ee41e6e9" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>operator=</name></member>
      <member refid="class_generic_schema_document_1a95ba649b2911b91297321093876f1cab" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>ownAllocator_</name></member>
      <member refid="class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>PointerType</name></member>
      <member refid="class_generic_schema_document_1ae71c9925eaf2f51f26ce1083d3f4edf4" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>remoteProvider_</name></member>
      <member refid="class_generic_schema_document_1a50ee80c40478d090c98900d4e6949737" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>root_</name></member>
      <member refid="class_generic_schema_document_1a75a97c9f8cd1cc8cd67f3b6364d93744" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>schemaMap_</name></member>
      <member refid="class_generic_schema_document_1a0c3ee68d07de1c96f1954ad66c6e6d23" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>schemaRef_</name></member>
      <member refid="class_generic_schema_document_1a2d829a5745e7d28aa3b1e33366b9861d" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>SchemaRefPtr</name></member>
      <member refid="class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>SchemaType</name></member>
      <member refid="class_generic_schema_document_1af017bc68811efaabb9925b6db03fa3d5" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>SValue</name></member>
      <member refid="class_generic_schema_document_1a7393ecd4d607c1f81ce9eac5becf92a8" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>typeless_</name></member>
      <member refid="class_generic_schema_document_1a912d4d364b21b12c4cfce5fba8f983a4" prot="private" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>uri_</name></member>
      <member refid="class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>UriType</name></member>
      <member refid="class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>ValueType</name></member>
      <member refid="class_generic_schema_document_1a6a54dfd1aec0f560f7e47e08f3fcb8f1" prot="public" virt="non-virtual"><scope>GenericSchemaDocument</scope><name>~GenericSchemaDocument</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
