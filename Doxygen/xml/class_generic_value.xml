<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_generic_value" kind="class" language="C++" prot="public">
    <compoundname>GenericValue</compoundname>
    <includes refid="document_8h" local="no">document.h</includes>
    <innerclass refid="struct_generic_value_1_1_array_data" prot="public">GenericValue::ArrayData</innerclass>
    <innerclass refid="union_generic_value_1_1_data" prot="public">GenericValue::Data</innerclass>
    <innerclass refid="struct_generic_value_1_1_flag" prot="public">GenericValue::Flag</innerclass>
    <innerclass refid="union_generic_value_1_1_number" prot="public">GenericValue::Number</innerclass>
    <innerclass refid="struct_generic_value_1_1_object_data" prot="public">GenericValue::ObjectData</innerclass>
    <innerclass refid="struct_generic_value_1_1_short_string" prot="public">GenericValue::ShortString</innerclass>
    <innerclass refid="struct_generic_value_1_1_string" prot="public">GenericValue::String</innerclass>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref></type>
      </param>
      <param>
        <type>typename <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref></type>
        <defval><ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga04a88f0b2db9091006eb7fc6deb6077b" kindref="member">RAPIDJSON_DEFAULT_ALLOCATOR</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Assignment operators</header>
      <memberdef kind="enum" id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3c" prot="public" static="no" strong="no">
        <type></type>
        <name>@0</name>
        <qualifiedname>GenericValue::@0</qualifiedname>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac48966386b231124da7c3fb870e237ee" prot="public">
          <name>kBoolFlag</name>
          <initializer>= 0x0008</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79" prot="public">
          <name>kNumberFlag</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb" prot="public">
          <name>kIntFlag</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce" prot="public">
          <name>kUintFlag</name>
          <initializer>= 0x0040</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a" prot="public">
          <name>kInt64Flag</name>
          <initializer>= 0x0080</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94" prot="public">
          <name>kUint64Flag</name>
          <initializer>= 0x0100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c" prot="public">
          <name>kDoubleFlag</name>
          <initializer>= 0x0200</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf3bf3661275a38c86addba900c52dccb" prot="public">
          <name>kStringFlag</name>
          <initializer>= 0x0400</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10ef921aef1773bc1f88796bf1828f92" prot="public">
          <name>kCopyFlag</name>
          <initializer>= 0x0800</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae58a76d504c6a67566aebfa4a6bd2e55" prot="public">
          <name>kInlineStrFlag</name>
          <initializer>= 0x1000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d" prot="public">
          <name>kNullFlag</name>
          <initializer>= kNullType</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca75dbcdbacc82f9379c602f0b6c41cf07" prot="public">
          <name>kTrueFlag</name>
          <initializer>= static_cast&lt;int&gt;(kTrueType) | static_cast&lt;int&gt;(kBoolFlag)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca66d3877b074bb1a0455a6f6d3f7f91a3" prot="public">
          <name>kFalseFlag</name>
          <initializer>= static_cast&lt;int&gt;(kFalseType) | static_cast&lt;int&gt;(kBoolFlag)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cacfe8b720220d0a2e378683367386cbaf" prot="public">
          <name>kNumberIntFlag</name>
          <initializer>= static_cast&lt;int&gt;(kNumberType) | static_cast&lt;int&gt;(kNumberFlag | kIntFlag | kInt64Flag)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae8c6c6286edf9c309e77af0ea0cf039c" prot="public">
          <name>kNumberUintFlag</name>
          <initializer>= static_cast&lt;int&gt;(kNumberType) | static_cast&lt;int&gt;(kNumberFlag | kUintFlag | kUint64Flag | kInt64Flag)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cad117eb41bb8015a76aadf6149bbd8ce5" prot="public">
          <name>kNumberInt64Flag</name>
          <initializer>= static_cast&lt;int&gt;(kNumberType) | static_cast&lt;int&gt;(kNumberFlag | kInt64Flag)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caaa1ee6a546d4db67f4bdef41d1f54f02" prot="public">
          <name>kNumberUint64Flag</name>
          <initializer>= static_cast&lt;int&gt;(kNumberType) | static_cast&lt;int&gt;(kNumberFlag | kUint64Flag)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca29bc91c155577923abd8f19aa050058b" prot="public">
          <name>kNumberDoubleFlag</name>
          <initializer>= static_cast&lt;int&gt;(kNumberType) | static_cast&lt;int&gt;(kNumberFlag | kDoubleFlag)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cab7805b1908fd181afc8d70fe07b17e18" prot="public">
          <name>kNumberAnyFlag</name>
          <initializer>= static_cast&lt;int&gt;(kNumberType) | static_cast&lt;int&gt;(kNumberFlag | kIntFlag | kInt64Flag | kUintFlag | kUint64Flag | kDoubleFlag)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca5d26a84f26833eafd0028c0102a388a9" prot="public">
          <name>kConstStringFlag</name>
          <initializer>= static_cast&lt;int&gt;(kStringType) | static_cast&lt;int&gt;(kStringFlag)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10c83f7f191dce81bb0273adc0d838de" prot="public">
          <name>kCopyStringFlag</name>
          <initializer>= static_cast&lt;int&gt;(kStringType) | static_cast&lt;int&gt;(kStringFlag | kCopyFlag)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caca24fa09485fa10b17071509a985ff01" prot="public">
          <name>kShortStringFlag</name>
          <initializer>= static_cast&lt;int&gt;(kStringType) | static_cast&lt;int&gt;(kStringFlag | kCopyFlag | kInlineStrFlag)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c" prot="public">
          <name>kObjectFlag</name>
          <initializer>= kObjectType</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47" prot="public">
          <name>kArrayFlag</name>
          <initializer>= kArrayType</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca793e0bc40e0abe1ed8bcb3e6fbba65c2" prot="public">
          <name>kTypeMask</name>
          <initializer>= 0x07</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="1976" column="5" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="1976" bodyend="2006"/>
      </memberdef>
      <memberdef kind="friend" id="class_generic_value_1ab05bc9e52e201a2867ea5bac141ee1ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
          </param>
          <param>
            <type>typename</type>
          </param>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class GenericDocument</definition>
        <argsstring></argsstring>
        <name>GenericDocument</name>
        <qualifiedname>GenericValue::GenericDocument</qualifiedname>
        <param>
          <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="1974" column="31" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="1974" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_value_1a188f57bdb1923c1fefe74baa995871a3" prot="public" static="yes" mutable="no">
        <type>const <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
        <definition>const SizeType GenericValue&lt; Encoding, Allocator &gt;::kDefaultArrayCapacity</definition>
        <argsstring></argsstring>
        <name>kDefaultArrayCapacity</name>
        <qualifiedname>GenericValue::kDefaultArrayCapacity</qualifiedname>
        <initializer>= <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga10ba0ee06d0ac2803d0f2290d46b19f7" kindref="member">RAPIDJSON_VALUE_DEFAULT_ARRAY_CAPACITY</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2008" column="27" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2008" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_value_1a284d018914629aed9a4bd97fe2dc5899" prot="public" static="yes" mutable="no">
        <type>const <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
        <definition>const SizeType GenericValue&lt; Encoding, Allocator &gt;::kDefaultObjectCapacity</definition>
        <argsstring></argsstring>
        <name>kDefaultObjectCapacity</name>
        <qualifiedname>GenericValue::kDefaultObjectCapacity</qualifiedname>
        <initializer>= <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5c88aa612939b592d15d3fc4bdf54272" kindref="member">RAPIDJSON_VALUE_DEFAULT_OBJECT_CAPACITY</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2009" column="27" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" prot="public" static="no" mutable="no">
        <type><ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref></type>
        <definition>Data GenericValue&lt; Encoding, Allocator &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>GenericValue::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2466" column="10" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref> &amp;</type>
        <definition>GenericValue &amp; GenericValue&lt; Encoding, Allocator &gt;::operator=</definition>
        <argsstring>(GenericValue &amp;rhs) RAPIDJSON_NOEXCEPT</argsstring>
        <name>operator=</name>
        <qualifiedname>GenericValue::operator=</qualifiedname>
        <param>
          <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assignment with move semantics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Source of the assignment. It will become a null value after assignment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="921" column="18" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="921" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a2b7837d3adb6c0ad184269826ea78e97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref> &amp;</type>
        <definition>GenericValue &amp; GenericValue&lt; Encoding, Allocator &gt;::operator=</definition>
        <argsstring>(StringRefType str) RAPIDJSON_NOEXCEPT</argsstring>
        <name>operator=</name>
        <qualifiedname>GenericValue::operator=</qualifiedname>
        <param>
          <type><ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref></type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Assignment of constant string reference (no copy) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant string reference to be assigned </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This overload is needed to avoid clashes with the generic primitive type assignment overload below. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>, operator=(T) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="946" column="18" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="946" bodyend="949"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::RAPIDJSON_DISABLEIF_RETURN</definition>
        <argsstring>((internal::IsPointer&lt; T &gt;),(GenericValue &amp;)) operator</argsstring>
        <name>RAPIDJSON_DISABLEIF_RETURN</name>
        <qualifiedname>GenericValue::RAPIDJSON_DISABLEIF_RETURN</qualifiedname>
        <param>
          <type>(internal::IsPointer&lt; <ref refid="writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref> &gt;)</type>
        </param>
        <param>
          <type>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref> &amp;)</type>
        </param>
        <briefdescription>
<para>Assignment with primitive types. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Either <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>, <computeroutput>int</computeroutput>, <computeroutput>unsigned</computeroutput>, <computeroutput>int64_t</computeroutput>, <computeroutput>uint64_t</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be assigned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The source type <computeroutput>T</computeroutput> explicitly disallows all pointer types, especially (<computeroutput>const</computeroutput>) <ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>*. This helps avoiding implicitly referencing character strings with insufficient lifetime, use SetString(const Ch*, Allocator&amp;) (for copying) or <ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef()</ref> (to explicitly mark the pointer as constant) instead. All other pointer types would implicitly convert to <computeroutput>bool</computeroutput>, use SetBool() instead. Set boolean value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="964" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1af182f2ccbcd962d2a28f92407622e9a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>RAPIDJSON_FORCEINLINE const <ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref> *</type>
        <definition>RAPIDJSON_FORCEINLINE const Ch * GenericValue&lt; Encoding, Allocator &gt;::GetStringPointer</definition>
        <argsstring>() const</argsstring>
        <name>GetStringPointer</name>
        <qualifiedname>GenericValue::GetStringPointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2099" column="36" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2099" bodyend="2099"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1ab3e8833927fb1454585e8692200dbb93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RAPIDJSON_FORCEINLINE const <ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref> *</type>
        <definition>RAPIDJSON_FORCEINLINE const Ch * GenericValue&lt; Encoding, Allocator &gt;::SetStringPointer</definition>
        <argsstring>(const Ch *str)</argsstring>
        <name>SetStringPointer</name>
        <qualifiedname>GenericValue::SetStringPointer</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2100" column="36" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2100" bodyend="2100"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>RAPIDJSON_FORCEINLINE <ref refid="class_generic_value" kindref="compound">GenericValue</ref> *</type>
        <definition>RAPIDJSON_FORCEINLINE GenericValue * GenericValue&lt; Encoding, Allocator &gt;::GetElementsPointer</definition>
        <argsstring>() const</argsstring>
        <name>GetElementsPointer</name>
        <qualifiedname>GenericValue::GetElementsPointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2101" column="40" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2101" bodyend="2101"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a1ccc6e15fa49f0c30eab8e8f7f9418f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RAPIDJSON_FORCEINLINE <ref refid="class_generic_value" kindref="compound">GenericValue</ref> *</type>
        <definition>RAPIDJSON_FORCEINLINE GenericValue * GenericValue&lt; Encoding, Allocator &gt;::SetElementsPointer</definition>
        <argsstring>(GenericValue *elements)</argsstring>
        <name>SetElementsPointer</name>
        <qualifiedname>GenericValue::SetElementsPointer</qualifiedname>
        <param>
          <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref> *</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2102" column="40" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2102" bodyend="2102"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>RAPIDJSON_FORCEINLINE <ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref> *</type>
        <definition>RAPIDJSON_FORCEINLINE Member * GenericValue&lt; Encoding, Allocator &gt;::GetMembersPointer</definition>
        <argsstring>() const</argsstring>
        <name>GetMembersPointer</name>
        <qualifiedname>GenericValue::GetMembersPointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2103" column="34" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2103" bodyend="2103"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a634a87972649943604153708ca9aefb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RAPIDJSON_FORCEINLINE <ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref> *</type>
        <definition>RAPIDJSON_FORCEINLINE Member * GenericValue&lt; Encoding, Allocator &gt;::SetMembersPointer</definition>
        <argsstring>(Member *members)</argsstring>
        <name>SetMembersPointer</name>
        <qualifiedname>GenericValue::SetMembersPointer</qualifiedname>
        <param>
          <type><ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref> *</type>
          <declname>members</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2104" column="34" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2104" bodyend="2104"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1ae0d58cf0ac7a4d1aca47f8a18ba8cdfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RAPIDJSON_FORCEINLINE <ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref> *</type>
        <definition>RAPIDJSON_FORCEINLINE Member * GenericValue&lt; Encoding, Allocator &gt;::DoAllocMembers</definition>
        <argsstring>(SizeType capacity, Allocator &amp;allocator)</argsstring>
        <name>DoAllocMembers</name>
        <qualifiedname>GenericValue::DoAllocMembers</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>capacity</declname>
        </param>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &amp;</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2253" column="34" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2253" bodyend="2255"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a37e400c98968dec21293861983db9b06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericValue&lt; Encoding, Allocator &gt;::DoReserveMembers</definition>
        <argsstring>(SizeType newCapacity, Allocator &amp;allocator)</argsstring>
        <name>DoReserveMembers</name>
        <qualifiedname>GenericValue::DoReserveMembers</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>newCapacity</declname>
        </param>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &amp;</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2257" column="10" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2257" bodyend="2264"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a62e070232ca1bab936de08b8dbf41a5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SourceAllocator</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref></type>
        <definition>MemberIterator GenericValue&lt; Encoding, Allocator &gt;::DoFindMember</definition>
        <argsstring>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;name)</argsstring>
        <name>DoFindMember</name>
        <qualifiedname>GenericValue::DoFindMember</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, SourceAllocator &gt; &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2267" column="20" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2267" bodyend="2273"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a4e2fbcde9054e87b591f79e6202a80d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericValue&lt; Encoding, Allocator &gt;::DoClearMembers</definition>
        <argsstring>()</argsstring>
        <name>DoClearMembers</name>
        <qualifiedname>GenericValue::DoClearMembers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2275" column="10" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2275" bodyend="2279"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1aab3a51f8207a44ad87a1f8b0bbf53fe9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericValue&lt; Encoding, Allocator &gt;::DoFreeMembers</definition>
        <argsstring>()</argsstring>
        <name>DoFreeMembers</name>
        <qualifiedname>GenericValue::DoFreeMembers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2281" column="10" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2281" bodyend="2285"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a741c527ec9552ec0a7dce92f7b22d1c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericValue&lt; Encoding, Allocator &gt;::DoAddMember</definition>
        <argsstring>(GenericValue &amp;name, GenericValue &amp;value, Allocator &amp;allocator)</argsstring>
        <name>DoAddMember</name>
        <qualifiedname>GenericValue::DoAddMember</qualifiedname>
        <param>
          <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &amp;</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2289" column="10" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2289" bodyend="2303"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a6db9c0ed0d2417d00b135195e3546f50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref></type>
        <definition>MemberIterator GenericValue&lt; Encoding, Allocator &gt;::DoRemoveMember</definition>
        <argsstring>(MemberIterator m)</argsstring>
        <name>DoRemoveMember</name>
        <qualifiedname>GenericValue::DoRemoveMember</qualifiedname>
        <param>
          <type><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2305" column="20" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2305" bodyend="2327"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a786fc0f1116ef209216884b13f814158" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">MemberIterator</ref></type>
        <definition>MemberIterator GenericValue&lt; Encoding, Allocator &gt;::DoEraseMembers</definition>
        <argsstring>(ConstMemberIterator first, ConstMemberIterator last)</argsstring>
        <name>DoEraseMembers</name>
        <qualifiedname>GenericValue::DoEraseMembers</qualifiedname>
        <param>
          <type><ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">ConstMemberIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2329" column="20" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2329" bodyend="2361"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a17e90627a90a4e97e8425e0ca4a22cbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SourceAllocator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void GenericValue&lt; Encoding, Allocator &gt;::DoCopyMembers</definition>
        <argsstring>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;rhs, Allocator &amp;allocator, bool copyConstStrings)</argsstring>
        <name>DoCopyMembers</name>
        <qualifiedname>GenericValue::DoCopyMembers</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, SourceAllocator &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &amp;</type>
          <declname>allocator</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copyConstStrings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2364" column="10" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2364" bodyend="2384"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a8f5f309065479de40a16cf28a340da65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericValue&lt; Encoding, Allocator &gt;::SetArrayRaw</definition>
        <argsstring>(GenericValue *values, SizeType count, Allocator &amp;allocator)</argsstring>
        <name>SetArrayRaw</name>
        <qualifiedname>GenericValue::SetArrayRaw</qualifiedname>
        <param>
          <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref> *</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &amp;</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2387" column="10" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2387" bodyend="2397"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a26c8ec7d68858df1038506df7fcff22d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericValue&lt; Encoding, Allocator &gt;::SetObjectRaw</definition>
        <argsstring>(Member *members, SizeType count, Allocator &amp;allocator)</argsstring>
        <name>SetObjectRaw</name>
        <qualifiedname>GenericValue::SetObjectRaw</qualifiedname>
        <param>
          <type><ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref> *</type>
          <declname>members</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &amp;</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
<para>Initialize this value as object with initial data, without calling destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2400" column="10" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2400" bodyend="2417"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericValue&lt; Encoding, Allocator &gt;::SetStringRaw</definition>
        <argsstring>(StringRefType s) RAPIDJSON_NOEXCEPT</argsstring>
        <name>SetStringRaw</name>
        <qualifiedname>GenericValue::SetStringRaw</qualifiedname>
        <param>
          <type><ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Initialize this value as constant string, without calling destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2420" column="10" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2420" bodyend="2424"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1ad3d91db36dfdbfc1af40a79aae07723c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericValue&lt; Encoding, Allocator &gt;::SetStringRaw</definition>
        <argsstring>(StringRefType s, Allocator &amp;allocator)</argsstring>
        <name>SetStringRaw</name>
        <qualifiedname>GenericValue::SetStringRaw</qualifiedname>
        <param>
          <type><ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &amp;</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
<para>Initialize this value as copy string with initial data, without calling destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2427" column="10" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2427" bodyend="2441"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GenericValue&lt; Encoding, Allocator &gt;::RawAssign</definition>
        <argsstring>(GenericValue &amp;rhs) RAPIDJSON_NOEXCEPT</argsstring>
        <name>RawAssign</name>
        <qualifiedname>GenericValue::RawAssign</qualifiedname>
        <param>
          <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assignment without calling destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2444" column="10" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2444" bodyend="2448"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1ad4d088dc601d99fea9d16300a7ec7ee1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SourceAllocator</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GenericValue&lt; Encoding, Allocator &gt;::StringEqual</definition>
        <argsstring>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;rhs) const</argsstring>
        <name>StringEqual</name>
        <qualifiedname>GenericValue::StringEqual</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, SourceAllocator &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2451" column="10" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2451" bodyend="2464"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a28f6eb49f5d6d5a56d0bea696b89961d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RAPIDJSON_FORCEINLINE const <ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref> *</type>
        <definition>static RAPIDJSON_FORCEINLINE const Ch * GenericValue&lt; Encoding, Allocator &gt;::DataString</definition>
        <argsstring>(const Data &amp;data)</argsstring>
        <name>DataString</name>
        <qualifiedname>GenericValue::DataString</qualifiedname>
        <param>
          <type>const <ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2092" column="43" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2092" bodyend="2094"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a1373c36e6bdffc6ed79143f47c1024ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RAPIDJSON_FORCEINLINE <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
        <definition>static RAPIDJSON_FORCEINLINE SizeType GenericValue&lt; Encoding, Allocator &gt;::DataStringLength</definition>
        <argsstring>(const Data &amp;data)</argsstring>
        <name>DataStringLength</name>
        <qualifiedname>GenericValue::DataStringLength</qualifiedname>
        <param>
          <type>const <ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="2095" column="43" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="2095" bodyend="2097"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructors and destructor.</header>
      <memberdef kind="function" id="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>() RAPIDJSON_NOEXCEPT</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <briefdescription>
<para>Default constructor creates a null value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="690" column="5" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="690" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a83c8f84b8e61f2f40414b703b75aea61" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(Type type) RAPIDJSON_NOEXCEPT</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type><ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Constructor with JSON value type. </para>
        </briefdescription>
        <detaileddescription>
<para>This creates a Value of specified type with default content. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Default content for number is zero. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="720" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="720" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a76c68b72723a06045776dbd425f9e8b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SourceAllocator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;rhs, Allocator &amp;allocator, bool copyConstStrings=false)</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, SourceAllocator &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &amp;</type>
          <declname>allocator</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copyConstStrings</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Explicit copy constructor (with allocator) </para>
        </briefdescription>
        <detaileddescription>
<para>Creates a copy of a Value by using the given Allocator <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>SourceAllocator</parametername>
</parameternamelist>
<parameterdescription>
<para>allocator of <computeroutput>rhs</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to copy from (read-only) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allocator</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocator for allocating copied elements and buffers. Commonly use <ref refid="class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6" kindref="member">GenericDocument::GetAllocator()</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copyConstStrings</parametername>
</parameternamelist>
<parameterdescription>
<para>Force copying of constant strings (e.g. referencing an in-situ buffer) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>CopyFrom() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="742" column="5" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="742" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a0f6a0394bfffaedde88e433b2265194c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(T b, RAPIDJSON_ENABLEIF((internal::IsSame&lt; bool, T &gt;))) RAPIDJSON_NOEXCEPT</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type><ref refid="writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>RAPIDJSON_ENABLEIF((internal::IsSame&lt; bool, <ref refid="writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref> &gt;))</type>
        </param>
        <briefdescription>
<para>Constructor for boolean value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This constructor is limited to <emphasis>real</emphasis> boolean values and rejects implicitly converted types like arbitrary pointers. Use an explicit cast to <computeroutput>bool</computeroutput>, if you want to construct a boolean JSON value in such cases. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="781" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="781" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1aafc754ade38421c179f5c8933ecbaf45" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(int i) RAPIDJSON_NOEXCEPT</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Constructor for int value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="792" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="792" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a972bff6c56ac3d04622ff7fad8d98331" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(unsigned u) RAPIDJSON_NOEXCEPT</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Constructor for unsigned value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="798" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="798" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a964b69f1d2596f75ded5421b6db01a14" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(int64_t i64) RAPIDJSON_NOEXCEPT</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type><ref refid="stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6" kindref="member">int64_t</ref></type>
          <declname>i64</declname>
        </param>
        <briefdescription>
<para>Constructor for int64_t value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="804" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="804" bodyend="816"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1ad04805a57f5050c8e04be469ba64d6f3" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(uint64_t u64) RAPIDJSON_NOEXCEPT</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type><ref refid="stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>u64</declname>
        </param>
        <briefdescription>
<para>Constructor for uint64_t value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="819" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="819" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a267d05b7e98c3507908eaf085fe41155" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(double d) RAPIDJSON_NOEXCEPT</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Constructor for double value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="831" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="831" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1acad11ab781251634a3c079aa64a6d283" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(float f) RAPIDJSON_NOEXCEPT</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Constructor for float value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="834" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="834" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a4d9af98141360cd801daab4ed1ca2c91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(const Ch *s, SizeType length) RAPIDJSON_NOEXCEPT</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Constructor for constant string (i.e. do not make a copy of string) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="837" column="5" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="837" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1abb2887958974fef1b2b5c8e32cc72ddb" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(StringRefType s) RAPIDJSON_NOEXCEPT</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type><ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">StringRefType</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Constructor for constant string (i.e. do not make a copy of string) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="840" column="14" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="840" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a9ec2c7cda8c8845acfa3565c6b1b4e10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(const Ch *s, SizeType length, Allocator &amp;allocator)</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &amp;</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
<para>Constructor for copy-string (i.e. do make a copy of string) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="843" column="5" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="843" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a9b72b2e3347d4cd77b16c3b45e8decf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(const Ch *s, Allocator &amp;allocator)</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &amp;</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
<para>Constructor for copy-string (i.e. do make a copy of string) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="846" column="5" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="846" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a953052ef91e54aabe9bdb9f9eaebf6cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(Array a) RAPIDJSON_NOEXCEPT</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type><ref refid="class_generic_value_1a149e12992b8f6064c865a4cf55981b89" kindref="member">Array</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Constructor for Array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>An array obtained by <computeroutput>GetArray()</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><computeroutput>Array</computeroutput> is always pass-by-value. </para>
</simplesect>
<simplesect kind="note"><para>the source array is moved into this value and the sourec array becomes empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="861" column="5" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="861" bodyend="864"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a9c294e56f4ab940f845f7c171b183483" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(Object o) RAPIDJSON_NOEXCEPT</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type><ref refid="class_generic_value_1aee3606d69d411ce0d98f29639585989b" kindref="member">Object</ref></type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Constructor for Object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o</parametername>
</parameternamelist>
<parameterdescription>
<para>An object obtained by <computeroutput>GetObject()</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><computeroutput>Object</computeroutput> is always pass-by-value. </para>
</simplesect>
<simplesect kind="note"><para>the source object is moved into this value and the sourec object becomes empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="872" column="5" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="872" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::~GenericValue</definition>
        <argsstring>()</argsstring>
        <name>~GenericValue</name>
        <qualifiedname>GenericValue::~GenericValue</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Need to destruct elements of array, members of object, or copy-string. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="880" column="5" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="880" bodyend="911"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_value_1ac5bfd54b6bdea215716df69c501d5cf3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GenericValue&lt; Encoding, Allocator &gt;::GenericValue</definition>
        <argsstring>(const GenericValue &amp;rhs)</argsstring>
        <name>GenericValue</name>
        <qualifiedname>GenericValue::GenericValue</qualifiedname>
        <param>
          <type>const <ref refid="class_generic_value" kindref="compound">GenericValue</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy constructor is not permitted. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="701" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" prot="public" static="no">
        <type><ref refid="class_generic_member" kindref="compound">GenericMember</ref>&lt; <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;</type>
        <definition>typedef GenericMember&lt;Encoding, Allocator&gt; GenericValue&lt; Encoding, Allocator &gt;::Member</definition>
        <argsstring></argsstring>
        <name>Member</name>
        <qualifiedname>GenericValue::Member</qualifiedname>
        <briefdescription>
<para>Name-value pair in an object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="671" column="27" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_value_1a28c2cb8d04d12566c1af37597a46d209" prot="public" static="no">
        <type><ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref></type>
        <definition>typedef Encoding GenericValue&lt; Encoding, Allocator &gt;::EncodingType</definition>
        <argsstring></argsstring>
        <name>EncodingType</name>
        <qualifiedname>GenericValue::EncodingType</qualifiedname>
        <briefdescription>
<para>Encoding type from template parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="672" column="22" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="672" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1" prot="public" static="no">
        <type><ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref></type>
        <definition>typedef Allocator GenericValue&lt; Encoding, Allocator &gt;::AllocatorType</definition>
        <argsstring></argsstring>
        <name>AllocatorType</name>
        <qualifiedname>GenericValue::AllocatorType</qualifiedname>
        <briefdescription>
<para>Allocator type from template parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="673" column="23" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="673" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" prot="public" static="no">
        <type>Encoding::Ch</type>
        <definition>typedef Encoding::Ch GenericValue&lt; Encoding, Allocator &gt;::Ch</definition>
        <argsstring></argsstring>
        <name>Ch</name>
        <qualifiedname>GenericValue::Ch</qualifiedname>
        <briefdescription>
<para>Character type derived from Encoding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="674" column="35" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="674" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" prot="public" static="no">
        <type><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&lt; <ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref> &gt;</type>
        <definition>typedef GenericStringRef&lt;Ch&gt; GenericValue&lt; Encoding, Allocator &gt;::StringRefType</definition>
        <argsstring></argsstring>
        <name>StringRefType</name>
        <qualifiedname>GenericValue::StringRefType</qualifiedname>
        <briefdescription>
<para>Reference to a constant string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="675" column="30" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="675" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_value_1a349b8faae61edc42b4289726820be439" prot="public" static="no">
        <type><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt; false, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;::Iterator</type>
        <definition>typedef GenericMemberIterator&lt;false,Encoding,Allocator&gt;::Iterator GenericValue&lt; Encoding, Allocator &gt;::MemberIterator</definition>
        <argsstring></argsstring>
        <name>MemberIterator</name>
        <qualifiedname>GenericValue::MemberIterator</qualifiedname>
        <briefdescription>
<para>Member iterator for iterating in object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="676" column="55" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" prot="public" static="no">
        <type><ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>&lt; true, <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;::Iterator</type>
        <definition>typedef GenericMemberIterator&lt;true,Encoding,Allocator&gt;::Iterator GenericValue&lt; Encoding, Allocator &gt;::ConstMemberIterator</definition>
        <argsstring></argsstring>
        <name>ConstMemberIterator</name>
        <qualifiedname>GenericValue::ConstMemberIterator</qualifiedname>
        <briefdescription>
<para>Constant member iterator for iterating in object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="677" column="55" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" prot="public" static="no">
        <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref> *</type>
        <definition>typedef GenericValue* GenericValue&lt; Encoding, Allocator &gt;::ValueIterator</definition>
        <argsstring></argsstring>
        <name>ValueIterator</name>
        <qualifiedname>GenericValue::ValueIterator</qualifiedname>
        <briefdescription>
<para>Value iterator for iterating in array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="678" column="26" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" prot="public" static="no">
        <type>const <ref refid="class_generic_value" kindref="compound">GenericValue</ref> *</type>
        <definition>typedef const GenericValue* GenericValue&lt; Encoding, Allocator &gt;::ConstValueIterator</definition>
        <argsstring></argsstring>
        <name>ConstValueIterator</name>
        <qualifiedname>GenericValue::ConstValueIterator</qualifiedname>
        <briefdescription>
<para>Constant value iterator for iterating in array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="679" column="32" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" prot="public" static="no">
        <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref refid="classrapidjson_1_1_encoding" kindref="compound">Encoding</ref>, <ref refid="classrapidjson_1_1_allocator" kindref="compound">Allocator</ref> &gt;</type>
        <definition>typedef GenericValue&lt;Encoding, Allocator&gt; GenericValue&lt; Encoding, Allocator &gt;::ValueType</definition>
        <argsstring></argsstring>
        <name>ValueType</name>
        <qualifiedname>GenericValue::ValueType</qualifiedname>
        <briefdescription>
<para>Value type of itself. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="680" column="26" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="680" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_value_1a149e12992b8f6064c865a4cf55981b89" prot="public" static="no">
        <type><ref refid="class_generic_array" kindref="compound">GenericArray</ref>&lt; false, <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref> &gt;</type>
        <definition>typedef GenericArray&lt;false, ValueType&gt; GenericValue&lt; Encoding, Allocator &gt;::Array</definition>
        <argsstring></argsstring>
        <name>Array</name>
        <qualifiedname>GenericValue::Array</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="681" column="26" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_value_1a8f1d2728de56600b5f3df596e2a8a181" prot="public" static="no">
        <type><ref refid="class_generic_array" kindref="compound">GenericArray</ref>&lt; true, <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref> &gt;</type>
        <definition>typedef GenericArray&lt;true, ValueType&gt; GenericValue&lt; Encoding, Allocator &gt;::ConstArray</definition>
        <argsstring></argsstring>
        <name>ConstArray</name>
        <qualifiedname>GenericValue::ConstArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="682" column="26" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="682" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_value_1aee3606d69d411ce0d98f29639585989b" prot="public" static="no">
        <type><ref refid="class_generic_object" kindref="compound">GenericObject</ref>&lt; false, <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref> &gt;</type>
        <definition>typedef GenericObject&lt;false, ValueType&gt; GenericValue&lt; Encoding, Allocator &gt;::Object</definition>
        <argsstring></argsstring>
        <name>Object</name>
        <qualifiedname>GenericValue::Object</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="683" column="27" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="683" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e" prot="public" static="no">
        <type><ref refid="class_generic_object" kindref="compound">GenericObject</ref>&lt; true, <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref> &gt;</type>
        <definition>typedef GenericObject&lt;true, ValueType&gt; GenericValue&lt; Encoding, Allocator &gt;::ConstObject</definition>
        <argsstring></argsstring>
        <name>ConstObject</name>
        <qualifiedname>GenericValue::ConstObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/include/rapidjson/document.h" line="684" column="27" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="684" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a JSON value. Use Value for <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref> encoding and default allocator. </para>
    </briefdescription>
    <detaileddescription>
<para>A JSON value can be one of 7 types. This class is a variant type supporting these types.</para>
<para>Use the Value if <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref> and default allocator</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Encoding</parametername>
</parameternamelist>
<parameterdescription>
<para>Encoding of the value. (Even non-string values need to have the same encoding in a document) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Allocator</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocator type for allocating memory of object, array and string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>GenericMember&lt; Encoding, Allocator &gt;</label>
        <link refid="class_generic_member"/>
        <childnode refid="10" relation="usage">
          <edgelabel>name</edgelabel>
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>GenericValue&lt; Encoding, Allocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="2" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ArrayData</label>
        <link refid="struct_generic_value_1_1_array_data"/>
        <childnode refid="12" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Data</label>
        <link refid="union_generic_value_1_1_data"/>
        <childnode refid="3" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>ss</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>n</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>o</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>a</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Flag</label>
        <link refid="struct_generic_value_1_1_flag"/>
      </node>
      <node id="5">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number</label>
        <link refid="union_generic_value_1_1_number"/>
        <childnode refid="6" relation="usage">
          <edgelabel>i</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>u</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number::I</label>
        <link refid="struct_generic_value_1_1_number_1_1_i"/>
      </node>
      <node id="7">
        <label>GenericValue&lt; Encoding, Allocator &gt;::Number::U</label>
        <link refid="struct_generic_value_1_1_number_1_1_u"/>
      </node>
      <node id="8">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ObjectData</label>
        <link refid="struct_generic_value_1_1_object_data"/>
        <childnode refid="9" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>GenericValue&lt; Encoding, Allocator &gt;::ShortString</label>
        <link refid="struct_generic_value_1_1_short_string"/>
      </node>
      <node id="3">
        <label>GenericValue&lt; Encoding, Allocator &gt;::String</label>
        <link refid="struct_generic_value_1_1_string"/>
      </node>
      <node id="1">
        <label>GenericValue&lt; Encoding, Allocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="2" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>GenericValue&lt; rapidjson::Encoding, rapidjson::Allocator &gt;</label>
        <link refid="class_generic_value"/>
        <childnode refid="2" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/rapidjson/include/rapidjson/document.h" line="668" column="1" bodyfile="src/rapidjson/include/rapidjson/document.h" bodystart="668" bodyend="2467"/>
    <listofallmembers>
      <member refid="class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>AllocatorType</name></member>
      <member refid="class_generic_value_1a149e12992b8f6064c865a4cf55981b89" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>Array</name></member>
      <member refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>Ch</name></member>
      <member refid="class_generic_value_1a8f1d2728de56600b5f3df596e2a8a181" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>ConstArray</name></member>
      <member refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>ConstMemberIterator</name></member>
      <member refid="class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>ConstObject</name></member>
      <member refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>ConstValueIterator</name></member>
      <member refid="class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>data_</name></member>
      <member refid="class_generic_value_1a28f6eb49f5d6d5a56d0bea696b89961d" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>DataString</name></member>
      <member refid="class_generic_value_1a1373c36e6bdffc6ed79143f47c1024ee" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>DataStringLength</name></member>
      <member refid="class_generic_value_1a741c527ec9552ec0a7dce92f7b22d1c6" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>DoAddMember</name></member>
      <member refid="class_generic_value_1ae0d58cf0ac7a4d1aca47f8a18ba8cdfd" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>DoAllocMembers</name></member>
      <member refid="class_generic_value_1a4e2fbcde9054e87b591f79e6202a80d6" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>DoClearMembers</name></member>
      <member refid="class_generic_value_1a17e90627a90a4e97e8425e0ca4a22cbb" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>DoCopyMembers</name></member>
      <member refid="class_generic_value_1a786fc0f1116ef209216884b13f814158" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>DoEraseMembers</name></member>
      <member refid="class_generic_value_1a62e070232ca1bab936de08b8dbf41a5d" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>DoFindMember</name></member>
      <member refid="class_generic_value_1aab3a51f8207a44ad87a1f8b0bbf53fe9" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>DoFreeMembers</name></member>
      <member refid="class_generic_value_1a6db9c0ed0d2417d00b135195e3546f50" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>DoRemoveMember</name></member>
      <member refid="class_generic_value_1a37e400c98968dec21293861983db9b06" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>DoReserveMembers</name></member>
      <member refid="class_generic_value_1a28c2cb8d04d12566c1af37597a46d209" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>EncodingType</name></member>
      <member refid="class_generic_value_1ab05bc9e52e201a2867ea5bac141ee1ae" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericDocument</name></member>
      <member refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1ac5bfd54b6bdea215716df69c501d5cf3" prot="private" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a83c8f84b8e61f2f40414b703b75aea61" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a76c68b72723a06045776dbd425f9e8b6" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a0f6a0394bfffaedde88e433b2265194c" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1aafc754ade38421c179f5c8933ecbaf45" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a972bff6c56ac3d04622ff7fad8d98331" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a964b69f1d2596f75ded5421b6db01a14" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1ad04805a57f5050c8e04be469ba64d6f3" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a267d05b7e98c3507908eaf085fe41155" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1acad11ab781251634a3c079aa64a6d283" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a4d9af98141360cd801daab4ed1ca2c91" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1abb2887958974fef1b2b5c8e32cc72ddb" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a9ec2c7cda8c8845acfa3565c6b1b4e10" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a9b72b2e3347d4cd77b16c3b45e8decf1" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a953052ef91e54aabe9bdb9f9eaebf6cc" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a9c294e56f4ab940f845f7c171b183483" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GenericValue</name></member>
      <member refid="class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GetElementsPointer</name></member>
      <member refid="class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GetMembersPointer</name></member>
      <member refid="class_generic_value_1af182f2ccbcd962d2a28f92407622e9a9" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>GetStringPointer</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kArrayFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac48966386b231124da7c3fb870e237ee" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kBoolFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca5d26a84f26833eafd0028c0102a388a9" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kConstStringFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10ef921aef1773bc1f88796bf1828f92" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kCopyFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10c83f7f191dce81bb0273adc0d838de" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kCopyStringFlag</name></member>
      <member refid="class_generic_value_1a188f57bdb1923c1fefe74baa995871a3" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kDefaultArrayCapacity</name></member>
      <member refid="class_generic_value_1a284d018914629aed9a4bd97fe2dc5899" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kDefaultObjectCapacity</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kDoubleFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca66d3877b074bb1a0455a6f6d3f7f91a3" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kFalseFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae58a76d504c6a67566aebfa4a6bd2e55" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kInlineStrFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kInt64Flag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kIntFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kNullFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cab7805b1908fd181afc8d70fe07b17e18" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kNumberAnyFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca29bc91c155577923abd8f19aa050058b" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kNumberDoubleFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kNumberFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cad117eb41bb8015a76aadf6149bbd8ce5" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kNumberInt64Flag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cacfe8b720220d0a2e378683367386cbaf" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kNumberIntFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caaa1ee6a546d4db67f4bdef41d1f54f02" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kNumberUint64Flag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae8c6c6286edf9c309e77af0ea0cf039c" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kNumberUintFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kObjectFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caca24fa09485fa10b17071509a985ff01" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kShortStringFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf3bf3661275a38c86addba900c52dccb" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kStringFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca75dbcdbacc82f9379c602f0b6c41cf07" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kTrueFlag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca793e0bc40e0abe1ed8bcb3e6fbba65c2" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kTypeMask</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kUint64Flag</name></member>
      <member refid="class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>kUintFlag</name></member>
      <member refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>Member</name></member>
      <member refid="class_generic_value_1a349b8faae61edc42b4289726820be439" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>MemberIterator</name></member>
      <member refid="class_generic_value_1aee3606d69d411ce0d98f29639585989b" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>Object</name></member>
      <member refid="class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>operator=</name></member>
      <member refid="class_generic_value_1a2b7837d3adb6c0ad184269826ea78e97" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>operator=</name></member>
      <member refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>RAPIDJSON_DISABLEIF_RETURN</name></member>
      <member refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>RawAssign</name></member>
      <member refid="class_generic_value_1a8f5f309065479de40a16cf28a340da65" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>SetArrayRaw</name></member>
      <member refid="class_generic_value_1a1ccc6e15fa49f0c30eab8e8f7f9418f2" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>SetElementsPointer</name></member>
      <member refid="class_generic_value_1a634a87972649943604153708ca9aefb7" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>SetMembersPointer</name></member>
      <member refid="class_generic_value_1a26c8ec7d68858df1038506df7fcff22d" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>SetObjectRaw</name></member>
      <member refid="class_generic_value_1ab3e8833927fb1454585e8692200dbb93" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>SetStringPointer</name></member>
      <member refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>SetStringRaw</name></member>
      <member refid="class_generic_value_1ad3d91db36dfdbfc1af40a79aae07723c" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>SetStringRaw</name></member>
      <member refid="class_generic_value_1ad4d088dc601d99fea9d16300a7ec7ee1" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>StringEqual</name></member>
      <member refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>StringRefType</name></member>
      <member refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>ValueIterator</name></member>
      <member refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>ValueType</name></member>
      <member refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" prot="public" virt="non-virtual"><scope>GenericValue</scope><name>~GenericValue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
