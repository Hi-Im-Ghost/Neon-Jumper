<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_assert_exception" kind="class" language="C++" prot="public">
    <compoundname>AssertException</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::logic_error</basecompoundref>
    <includes refid="unittest_8h" local="no">unittest.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_assert_exception_1ac95b6779576904bf5932c1f7e72300c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>AssertException::AssertException</definition>
        <argsstring>(const char *w)</argsstring>
        <name>AssertException</name>
        <qualifiedname>AssertException::AssertException</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/unittest.h" line="111" column="5" bodyfile="src/rapidjson/test/unittest/unittest.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_assert_exception_1a1a5812bbbb81bd04d4352e3413a5946f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>AssertException::AssertException</definition>
        <argsstring>(const AssertException &amp;rhs)</argsstring>
        <name>AssertException</name>
        <qualifiedname>AssertException::AssertException</qualifiedname>
        <param>
          <type>const <ref refid="class_assert_exception" kindref="compound">AssertException</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/unittest.h" line="112" column="5" bodyfile="src/rapidjson/test/unittest/unittest.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_assert_exception_1aba869a44de1c69d593d16d39039bd35c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>AssertException::~AssertException</definition>
        <argsstring>()</argsstring>
        <name>~AssertException</name>
        <qualifiedname>AssertException::~AssertException</qualifiedname>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/unittest.h" line="113" column="13" bodyfile="src/rapidjson/test/unittest/unittest.cpp" bodystart="25" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>AssertException</label>
        <link refid="class_assert_exception"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::logic_error</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>AssertException</label>
        <link refid="class_assert_exception"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::logic_error</label>
      </node>
    </collaborationgraph>
    <location file="src/rapidjson/test/unittest/unittest.h" line="109" column="1" bodyfile="src/rapidjson/test/unittest/unittest.h" bodystart="109" bodyend="114"/>
    <listofallmembers>
      <member refid="class_assert_exception_1ac95b6779576904bf5932c1f7e72300c6" prot="public" virt="non-virtual"><scope>AssertException</scope><name>AssertException</name></member>
      <member refid="class_assert_exception_1a1a5812bbbb81bd04d4352e3413a5946f" prot="public" virt="non-virtual"><scope>AssertException</scope><name>AssertException</name></member>
      <member refid="class_assert_exception_1aba869a44de1c69d593d16d39039bd35c" prot="public" virt="virtual"><scope>AssertException</scope><name>~AssertException</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
