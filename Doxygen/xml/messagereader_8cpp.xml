<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="messagereader_8cpp" kind="file" language="C++">
    <compoundname>messagereader.cpp</compoundname>
    <includes refid="reader_8h" local="yes">rapidjson/reader.h</includes>
    <includes refid="en_8h" local="yes">rapidjson/error/en.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">map</includes>
    <incdepgraph>
      <node id="1">
        <label>src/rapidjson/example/messagereader/messagereader.cpp</label>
        <link refid="messagereader_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>encodedstream.h</label>
        <link refid="encodedstream_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>encodings.h</label>
        <link refid="encodings_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>rapidjson/error/en.h</label>
        <link refid="en_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>biginteger.h</label>
        <link refid="biginteger_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>internal/clzll.h</label>
        <link refid="clzll_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>diyfp.h</label>
        <link refid="diyfp_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ieee754.h</label>
        <link refid="ieee754_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>internal/meta.h</label>
        <link refid="meta_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>pow10.h</label>
        <link refid="pow10_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>internal/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>internal/strtod.h</label>
        <link refid="strtod_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>swap.h</label>
        <link refid="swap_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>memorystream.h</label>
        <link refid="memorystream_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>rapidjson/reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stream.h</label>
        <link refid="stream_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cassert</label>
      </node>
      <node id="24">
        <label>climits</label>
      </node>
      <node id="17">
        <label>cstddef</label>
      </node>
      <node id="5">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>cstring</label>
      </node>
      <node id="27">
        <label>iostream</label>
      </node>
      <node id="22">
        <label>limits</label>
      </node>
      <node id="29">
        <label>map</label>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
      <node id="28">
        <label>string</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_message_handler" prot="public">MessageHandler</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="messagereader_8cpp_1ae2c5980b5eb04369faa7f72447e6d664" prot="public" static="no">
        <type>map&lt; string, string &gt;</type>
        <definition>typedef map&lt;string, string&gt; MessageMap</definition>
        <argsstring></argsstring>
        <name>MessageMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/messagereader/messagereader.cpp" line="13" column="13" bodyfile="src/rapidjson/example/messagereader/messagereader.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="messagereader_8cpp_1a5cd118312f7d5b3983499e2934611ebf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ParseMessages</definition>
        <argsstring>(const char *json, MessageMap &amp;messages)</argsstring>
        <name>ParseMessages</name>
        <param>
          <type>const char *</type>
          <declname>json</declname>
        </param>
        <param>
          <type><ref refid="messagereader_8cpp_1ae2c5980b5eb04369faa7f72447e6d664" kindref="member">MessageMap</ref> &amp;</type>
          <declname>messages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/messagereader/messagereader.cpp" line="75" column="13" bodyfile="src/rapidjson/example/messagereader/messagereader.cpp" bodystart="75" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="messagereader_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/messagereader/messagereader.cpp" line="89" column="5" bodyfile="src/rapidjson/example/messagereader/messagereader.cpp" bodystart="89" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Reading<sp/>a<sp/>message<sp/>JSON<sp/>with<sp/>Reader<sp/>(SAX-style<sp/>API).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>JSON<sp/>should<sp/>be<sp/>an<sp/>object<sp/>with<sp/>key-string<sp/>pairs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reader_8h" kindref="compound">rapidjson/reader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="en_8h" kindref="compound">rapidjson/error/en.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerapidjson" kindref="compound">rapidjson</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>map&lt;string,<sp/>string&gt;<sp/><ref refid="messagereader_8cpp_1ae2c5980b5eb04369faa7f72447e6d664" kindref="member">MessageMap</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight></codeline>
<codeline lineno="17"><highlight class="normal">RAPIDJSON_DIAG_OFF(effc++)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight></codeline>
<codeline lineno="22"><highlight class="normal">RAPIDJSON_DIAG_OFF(</highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">-</highlight><highlight class="keyword">enum</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="struct_message_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_message_handler" kindref="compound">MessageHandler</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt;UTF8&lt;&gt;,<sp/>MessageHandler&gt;<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_message_handler_1a4f6165a34fa3a4de7021e7e5cd7fd4f6" kindref="member">MessageHandler</ref>()<sp/>:<sp/><ref refid="struct_message_handler_1a628b5a49349a2027c84ffb4f6249fa51" kindref="member">messages_</ref>(),<sp/><ref refid="struct_message_handler_1a927d3ae4618ed37e3904ff673fdd3768" kindref="member">state_</ref>(<ref refid="struct_message_handler_1a704e2a1bc5f7a4644998112cba61db2ca43d4b1361a039d9a3223b2407ed5b506" kindref="member">kExpectObjectStart</ref>),<sp/><ref refid="struct_message_handler_1a7a61cf6c752b8829eb9c058341617c69" kindref="member">name_</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_message_handler_1a3d7e691831748287252e10ced02061f5" kindref="member">StartObject</ref>()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="struct_message_handler_1a927d3ae4618ed37e3904ff673fdd3768" kindref="member">state_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="struct_message_handler_1a704e2a1bc5f7a4644998112cba61db2ca43d4b1361a039d9a3223b2407ed5b506" kindref="member">kExpectObjectStart</ref>:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_message_handler_1a927d3ae4618ed37e3904ff673fdd3768" kindref="member">state_</ref><sp/>=<sp/><ref refid="struct_message_handler_1a704e2a1bc5f7a4644998112cba61db2ca70008d18048772c50a2226a6e592c7db" kindref="member">kExpectNameOrObjectEnd</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_message_handler_1ab9de0f0bd0666b805563cb3f86ef3fc0" kindref="member">String</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="struct_message_handler_1a927d3ae4618ed37e3904ff673fdd3768" kindref="member">state_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="struct_message_handler_1a704e2a1bc5f7a4644998112cba61db2ca70008d18048772c50a2226a6e592c7db" kindref="member">kExpectNameOrObjectEnd</ref>:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_message_handler_1a7a61cf6c752b8829eb9c058341617c69" kindref="member">name_</ref><sp/>=<sp/>string(str,<sp/>length);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_message_handler_1a927d3ae4618ed37e3904ff673fdd3768" kindref="member">state_</ref><sp/>=<sp/><ref refid="struct_message_handler_1a704e2a1bc5f7a4644998112cba61db2ca6f46eb7d062c953ecb1a28a471908568" kindref="member">kExpectValue</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="struct_message_handler_1a704e2a1bc5f7a4644998112cba61db2ca6f46eb7d062c953ecb1a28a471908568" kindref="member">kExpectValue</ref>:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_message_handler_1a628b5a49349a2027c84ffb4f6249fa51" kindref="member">messages_</ref>.insert(MessageMap::value_type(<ref refid="struct_message_handler_1a7a61cf6c752b8829eb9c058341617c69" kindref="member">name_</ref>,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(str,<sp/>length)));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_message_handler_1a927d3ae4618ed37e3904ff673fdd3768" kindref="member">state_</ref><sp/>=<sp/><ref refid="struct_message_handler_1a704e2a1bc5f7a4644998112cba61db2ca70008d18048772c50a2226a6e592c7db" kindref="member">kExpectNameOrObjectEnd</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_message_handler_1ab423864fd5ca806d4211c03acbdad67b" kindref="member">EndObject</ref>(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_message_handler_1a927d3ae4618ed37e3904ff673fdd3768" kindref="member">state_</ref><sp/>==<sp/><ref refid="struct_message_handler_1a704e2a1bc5f7a4644998112cba61db2ca70008d18048772c50a2226a6e592c7db" kindref="member">kExpectNameOrObjectEnd</ref>;<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_message_handler_1a3ab79ae50d26d5b3fb62a9bab58c21bb" kindref="member">Default</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>All<sp/>other<sp/>events<sp/>are<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="messagereader_8cpp_1ae2c5980b5eb04369faa7f72447e6d664" kindref="member">MessageMap</ref><sp/><ref refid="struct_message_handler_1a628b5a49349a2027c84ffb4f6249fa51" kindref="member">messages_</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="struct_message_handler_1a704e2a1bc5f7a4644998112cba61db2c" kindref="member">State</ref><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_message_handler_1a704e2a1bc5f7a4644998112cba61db2ca43d4b1361a039d9a3223b2407ed5b506" kindref="member">kExpectObjectStart</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_message_handler_1a704e2a1bc5f7a4644998112cba61db2ca70008d18048772c50a2226a6e592c7db" kindref="member">kExpectNameOrObjectEnd</ref>,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_message_handler_1a704e2a1bc5f7a4644998112cba61db2ca6f46eb7d062c953ecb1a28a471908568" kindref="member">kExpectValue</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}<ref refid="struct_message_handler_1a927d3ae4618ed37e3904ff673fdd3768" kindref="member">state_</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_message_handler_1a7a61cf6c752b8829eb9c058341617c69" kindref="member">name_</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">RAPIDJSON_DIAG_POP</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">RAPIDJSON_DIAG_POP</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParseMessages(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json,<sp/><ref refid="messagereader_8cpp_1ae2c5980b5eb04369faa7f72447e6d664" kindref="member">MessageMap</ref>&amp;<sp/>messages)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_reader" kindref="compound">Reader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_message_handler" kindref="compound">MessageHandler</ref><sp/>handler;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref><sp/>ss(json);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader.<ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">Parse</ref>(ss,<sp/>handler))</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>messages.swap(handler.<ref refid="struct_message_handler_1a628b5a49349a2027c84ffb4f6249fa51" kindref="member">messages_</ref>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>change<sp/>it<sp/>if<sp/>success.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7" kindref="member">ParseErrorCode</ref><sp/>e<sp/>=<sp/>reader.<ref refid="class_generic_reader_1a937bf90919f50e1c370b312cee5833e8" kindref="member">GetParseErrorCode</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>o<sp/>=<sp/>reader.<ref refid="class_generic_reader_1ae9008523ccd06d839a57335835cb4091" kindref="member">GetErrorOffset</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga28835eb93d2c3c07bbea13515eb31415" kindref="member">GetParseError_En</ref>(e)<sp/>&lt;&lt;<sp/>endl;;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>offset<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>o<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>near<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>string(json).substr(o,<sp/>10)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;...&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="messagereader_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="messagereader_8cpp_1ae2c5980b5eb04369faa7f72447e6d664" kindref="member">MessageMap</ref><sp/>messages;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;greeting\&quot;<sp/>:<sp/>\&quot;Hello!\&quot;,<sp/>\&quot;farewell\&quot;<sp/>:<sp/>\&quot;bye-bye!\&quot;<sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>json1<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ParseMessages(json1,<sp/>messages);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MessageMap::const_iterator<sp/>itr<sp/>=<sp/>messages.begin();<sp/>itr<sp/>!=<sp/>messages.end();<sp/>++itr)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>itr-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>itr-&gt;second<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parse<sp/>a<sp/>JSON<sp/>with<sp/>invalid<sp/>schema.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>\&quot;greeting\&quot;<sp/>:<sp/>\&quot;Hello!\&quot;,<sp/>\&quot;farewell\&quot;<sp/>:<sp/>\&quot;bye-bye!\&quot;,<sp/>\&quot;foo\&quot;<sp/>:<sp/>{}<sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>json2<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>ParseMessages(json2,<sp/>messages);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/rapidjson/example/messagereader/messagereader.cpp"/>
  </compounddef>
</doxygen>
