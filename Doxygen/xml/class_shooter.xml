<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_shooter" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Shooter</compoundname>
    <derivedcompoundref refid="class_player" prot="public" virt="non-virtual">Player</derivedcompoundref>
    <includes refid="_shooter_8h" local="no">Shooter.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_shooter_1acc9c0cf2ad3787d94a5791e2a05ae107" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="class_projectile" kindref="compound">Projectile</ref> * &gt;</type>
        <definition>std::list&lt;Projectile*&gt; Shooter::projectileList</definition>
        <argsstring></argsstring>
        <name>projectileList</name>
        <qualifiedname>Shooter::projectileList</qualifiedname>
        <briefdescription>
<para>Lista wystrzelonych przez ten obiekt pocisków. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/Shooter.h" line="12" column="15" bodyfile="src/modules/Shooter.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_shooter_1a32c7198c6509792cb7281da21dd4e2ab" prot="protected" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Shooter::shootingPoint</definition>
        <argsstring></argsstring>
        <name>shootingPoint</name>
        <qualifiedname>Shooter::shootingPoint</qualifiedname>
        <briefdescription>
<para>Pozycja z której obiekt wykonuje strzał </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/Shooter.h" line="16" column="18" bodyfile="src/modules/Shooter.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_shooter_1ad5b87e6e7cfbe84d4f2787a575aba816" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float Shooter::shootingCooldown</definition>
        <argsstring></argsstring>
        <name>shootingCooldown</name>
        <qualifiedname>Shooter::shootingCooldown</qualifiedname>
        <briefdescription>
<para>Odstęp czasowy pomiędzy strzałami. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/Shooter.h" line="18" column="11" bodyfile="src/modules/Shooter.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_shooter_1aa2d08f6a1f98d5da51748a3e7784999f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Shooter::shoot</definition>
        <argsstring>()=0</argsstring>
        <name>shoot</name>
        <qualifiedname>Shooter::shoot</qualifiedname>
        <reimplementedby refid="class_player_1a14a11ab2c2d986763f7c901c6bcce38a">shoot</reimplementedby>
        <briefdescription>
<para>Wykonuje strzał </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/Shooter.h" line="21" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_shooter_1a0b8ba43cde1eaf758225a93e489ab06f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shooter::addToList</definition>
        <argsstring>(Projectile *projectile)</argsstring>
        <name>addToList</name>
        <qualifiedname>Shooter::addToList</qualifiedname>
        <param>
          <type><ref refid="class_projectile" kindref="compound">Projectile</ref> *</type>
          <declname>projectile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dodaje podany pocisk do listy pocisków &apos;projectileList&apos; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>projectile</parametername>
</parameternamelist>
<parameterdescription>
<para>Odniesienie do pocisku, który należy dodać do listy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/Shooter.h" line="26" column="10" bodyfile="src/modules/Shooter.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_shooter_1a5e16af875520610c3bac9dbeae635ef7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shooter::removeFromList</definition>
        <argsstring>(Projectile *projectile)</argsstring>
        <name>removeFromList</name>
        <qualifiedname>Shooter::removeFromList</qualifiedname>
        <param>
          <type><ref refid="class_projectile" kindref="compound">Projectile</ref> *</type>
          <declname>projectile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Usuwa podany pocisk z listy &apos;projectileList&apos; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>projectile</parametername>
</parameternamelist>
<parameterdescription>
<para>Odniesienie do pocisku, który należy usunąć z listy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/Shooter.h" line="31" column="10" bodyfile="src/modules/Shooter.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_shooter_1a0905439266568a30d70e57793bb281dc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shooter::renderProjectiles</definition>
        <argsstring>(sf::RenderTarget &amp;window)</argsstring>
        <name>renderProjectiles</name>
        <qualifiedname>Shooter::renderProjectiles</qualifiedname>
        <param>
          <type>sf::RenderTarget &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Renderowanie pocisków na podanym oknie <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>Okno na którym mają być renderowane pociski </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/Shooter.h" line="37" column="10" bodyfile="src/modules/Shooter.cpp" bodystart="3" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="class_shooter_1a26068f026f6c75c16479822eaa8cc38e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shooter::updateProjectiles</definition>
        <argsstring>(float deltaTime)</argsstring>
        <name>updateProjectiles</name>
        <qualifiedname>Shooter::updateProjectiles</qualifiedname>
        <param>
          <type>float</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Odświeżanie logiki pocisków <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deltaTime</parametername>
</parameternamelist>
<parameterdescription>
<para>Czas pomiędzy klatkami aplikacji </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/Shooter.h" line="42" column="10" bodyfile="src/modules/Shooter.cpp" bodystart="9" bodyend="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_shooter_1a3838adc2010436b8872f8f08f2f99eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Shooter::checkIsProjectileColliding</definition>
        <argsstring>(const sf::RectangleShape &amp;recShape)</argsstring>
        <name>checkIsProjectileColliding</name>
        <qualifiedname>Shooter::checkIsProjectileColliding</qualifiedname>
        <param>
          <type>const sf::RectangleShape &amp;</type>
          <declname>recShape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sprawdza, czy jakikolwiek pocisk z listy koliduje z podanym kształtem, a jeżeli tak, to od razu usuwa go z listy <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recShape</parametername>
</parameternamelist>
<parameterdescription>
<para>Kształt na którym testowana jest kolizja z pociskami </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true - jeżeli którykolwiek z pocisków trafił w podany kształt, false - jeżeli kolizja nie zachodzi </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/Shooter.h" line="50" column="10" bodyfile="src/modules/Shooter.cpp" bodystart="25" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Player</label>
        <link refid="class_player"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Shooter</label>
        <link refid="class_shooter"/>
      </node>
    </inheritancegraph>
    <location file="src/modules/Shooter.h" line="9" column="1" bodyfile="src/modules/Shooter.h" bodystart="9" bodyend="51"/>
    <listofallmembers>
      <member refid="class_shooter_1a0b8ba43cde1eaf758225a93e489ab06f" prot="protected" virt="non-virtual"><scope>Shooter</scope><name>addToList</name></member>
      <member refid="class_shooter_1a3838adc2010436b8872f8f08f2f99eb6" prot="public" virt="non-virtual"><scope>Shooter</scope><name>checkIsProjectileColliding</name></member>
      <member refid="class_shooter_1acc9c0cf2ad3787d94a5791e2a05ae107" prot="private" virt="non-virtual"><scope>Shooter</scope><name>projectileList</name></member>
      <member refid="class_shooter_1a5e16af875520610c3bac9dbeae635ef7" prot="protected" virt="non-virtual"><scope>Shooter</scope><name>removeFromList</name></member>
      <member refid="class_shooter_1a0905439266568a30d70e57793bb281dc" prot="protected" virt="non-virtual"><scope>Shooter</scope><name>renderProjectiles</name></member>
      <member refid="class_shooter_1aa2d08f6a1f98d5da51748a3e7784999f" prot="protected" virt="pure-virtual"><scope>Shooter</scope><name>shoot</name></member>
      <member refid="class_shooter_1ad5b87e6e7cfbe84d4f2787a575aba816" prot="protected" virt="non-virtual"><scope>Shooter</scope><name>shootingCooldown</name></member>
      <member refid="class_shooter_1a32c7198c6509792cb7281da21dd4e2ab" prot="protected" virt="non-virtual"><scope>Shooter</scope><name>shootingPoint</name></member>
      <member refid="class_shooter_1a26068f026f6c75c16479822eaa8cc38e" prot="protected" virt="non-virtual"><scope>Shooter</scope><name>updateProjectiles</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
