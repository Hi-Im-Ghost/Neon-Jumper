<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_layer" kind="class" language="C++" prot="public">
    <compoundname>Layer</compoundname>
    <includes refid="_layer_8h" local="no">Layer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_layer_1a5de0967a414a49f20a027a55d0adeb49" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; Layer::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <qualifiedname>Layer::data</qualifiedname>
        <briefdescription>
<para>Wektor który przechowuje informacje o występieniach na mapie danej warstwy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="62" column="17" bodyfile="src/Layer.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_layer_1a6a0bc24033339368a0ca9747485f0053" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Layer::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <qualifiedname>Layer::height</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca wysokość </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="64" column="9" bodyfile="src/Layer.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_layer_1ad8c4d484a5efce0cbbd0cf81b3958d17" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Layer::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <qualifiedname>Layer::id</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="66" column="9" bodyfile="src/Layer.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_layer_1a318dcce8317fa52680c9693d65ec64bb" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Layer::image</definition>
        <argsstring></argsstring>
        <name>image</name>
        <qualifiedname>Layer::image</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca ściezke do obrazka. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="68" column="17" bodyfile="src/Layer.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_layer_1a2071349b5667273725ae7f05a42db7a6" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Layer::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>Layer::name</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca nazwe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="70" column="17" bodyfile="src/Layer.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_layer_1a335b0615d255a1163f1728a9809423e2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Layer::opacity</definition>
        <argsstring></argsstring>
        <name>opacity</name>
        <qualifiedname>Layer::opacity</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca przezroczystość </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="72" column="9" bodyfile="src/Layer.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_layer_1aa31ddf3517c458664780ba5fd3d427cb" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Layer::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>Layer::type</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca informacje o typie. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="74" column="17" bodyfile="src/Layer.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_layer_1af6cf29dc19f963e16c516a3b2d5c30f9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Layer::visible</definition>
        <argsstring></argsstring>
        <name>visible</name>
        <qualifiedname>Layer::visible</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca informacje o widoczności. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="76" column="10" bodyfile="src/Layer.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_layer_1a724d3020ddbe5f9280caa325541e70a3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Layer::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <qualifiedname>Layer::width</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca szerokość </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="78" column="9" bodyfile="src/Layer.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_layer_1a17b2eeefeefd903159b8a847fee1c7dd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Layer::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>Layer::x</qualifiedname>
        <briefdescription>
<para>Zmienna przechowujaca współrzędną x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="80" column="9" bodyfile="src/Layer.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_layer_1ab687faee2a5f65aecc77f26b25b29a5c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Layer::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>Layer::y</qualifiedname>
        <briefdescription>
<para>Zmienna przechowująca współrzędną y. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="82" column="9" bodyfile="src/Layer.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_layer_1a8c6e8887425ca40694692169f300de3c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_layer_object" kindref="compound">LayerObject</ref> &gt;</type>
        <definition>std::vector&lt;LayerObject&gt; Layer::objects</definition>
        <argsstring></argsstring>
        <name>objects</name>
        <qualifiedname>Layer::objects</qualifiedname>
        <briefdescription>
<para>Wektor który przechowuje obiekty warstwy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="84" column="17" bodyfile="src/Layer.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_layer_1a8f623c7c4737dc29ecc86978d243ac6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Layer::Layer</definition>
        <argsstring>()</argsstring>
        <name>Layer</name>
        <qualifiedname>Layer::Layer</qualifiedname>
        <briefdescription>
<para>Konstruktor pusty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="29" column="5" bodyfile="src/Layer.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1a582167f70d2ae94bc90c5986661475a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Layer::Layer</definition>
        <argsstring>(rapidjson::Value &amp;value)</argsstring>
        <name>Layer</name>
        <qualifiedname>Layer::Layer</qualifiedname>
        <param>
          <type><ref refid="fwd_8h_1a887ce50b3fe61c5e9cfd9b9506548dd9" kindref="member">rapidjson::Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Konstruktor który przyjmuje sparsowane wartości z json&apos;a. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="31" column="5" bodyfile="src/Layer.cpp" bodystart="3" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1a1b1ba4804451dfe6cc357194e42762ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Layer::~Layer</definition>
        <argsstring>()</argsstring>
        <name>~Layer</name>
        <qualifiedname>Layer::~Layer</qualifiedname>
        <briefdescription>
<para>Destruktor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="33" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1abd8ad603c5223d39187225e1fce2ac72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; Layer::getData</definition>
        <argsstring>()</argsstring>
        <name>getData</name>
        <qualifiedname>Layer::getData</qualifiedname>
        <briefdescription>
<para>Służy do zwracania informacji o miejscach wystąpienia na mapie danej warstwy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="36" column="17" bodyfile="src/Layer.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1a974c0866509db4c131f8f38d281fbcd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Layer::getHeight</definition>
        <argsstring>()</argsstring>
        <name>getHeight</name>
        <qualifiedname>Layer::getHeight</qualifiedname>
        <briefdescription>
<para>Zwraca wysokość warstwy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="38" column="9" bodyfile="src/Layer.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1a818d3ab6d8176de677ca5a476ec72e88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Layer::getId</definition>
        <argsstring>()</argsstring>
        <name>getId</name>
        <qualifiedname>Layer::getId</qualifiedname>
        <briefdescription>
<para>Zwraca id warstwy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="40" column="9" bodyfile="src/Layer.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1a03296398e674b6ed9e4e893653f0434b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Layer::getImage</definition>
        <argsstring>()</argsstring>
        <name>getImage</name>
        <qualifiedname>Layer::getImage</qualifiedname>
        <briefdescription>
<para>Zwraca sciezke do obrazka. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="42" column="17" bodyfile="src/Layer.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1a1f981903fa03cd45b44aa68042ac809a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Layer::getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <qualifiedname>Layer::getName</qualifiedname>
        <briefdescription>
<para>Zwraca nazwe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="44" column="17" bodyfile="src/Layer.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1ab49da526ffa214b3d1efe59531843979" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Layer::getOpacity</definition>
        <argsstring>()</argsstring>
        <name>getOpacity</name>
        <qualifiedname>Layer::getOpacity</qualifiedname>
        <briefdescription>
<para>Zwraca informacje o przezroczystości. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="46" column="9" bodyfile="src/Layer.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1afbdf075a35996b080e67a5bb8129adb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Layer::getType</definition>
        <argsstring>()</argsstring>
        <name>getType</name>
        <qualifiedname>Layer::getType</qualifiedname>
        <briefdescription>
<para>Zwraca informacje o typie. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="48" column="17" bodyfile="src/Layer.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1a79e172a9898791194b47d581e7d7f7ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Layer::isVisible</definition>
        <argsstring>()</argsstring>
        <name>isVisible</name>
        <qualifiedname>Layer::isVisible</qualifiedname>
        <briefdescription>
<para>Zwraca informacje o widoczności. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="50" column="10" bodyfile="src/Layer.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1a39e3b346235715e15d99a0a8ac95e0a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Layer::getWidth</definition>
        <argsstring>()</argsstring>
        <name>getWidth</name>
        <qualifiedname>Layer::getWidth</qualifiedname>
        <briefdescription>
<para>Zwraca szerokość warstwy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="52" column="9" bodyfile="src/Layer.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1aede3ba05e099573525f65420168664cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Layer::getX</definition>
        <argsstring>()</argsstring>
        <name>getX</name>
        <qualifiedname>Layer::getX</qualifiedname>
        <briefdescription>
<para>Zwraca współrzędną x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="54" column="9" bodyfile="src/Layer.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1a72ca6f6610005d666795a64599f37d0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Layer::getY</definition>
        <argsstring>()</argsstring>
        <name>getY</name>
        <qualifiedname>Layer::getY</qualifiedname>
        <briefdescription>
<para>Zwraca współrzędną y. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="56" column="9" bodyfile="src/Layer.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_layer_1ab48a21d96242142516cecfca51fd37d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_layer_object" kindref="compound">LayerObject</ref> &gt;</type>
        <definition>std::vector&lt; LayerObject &gt; Layer::getObjects</definition>
        <argsstring>()</argsstring>
        <name>getObjects</name>
        <qualifiedname>Layer::getObjects</qualifiedname>
        <briefdescription>
<para>Zwraca obiekty występujące w warstwie. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Layer.h" line="58" column="17" bodyfile="src/Layer.h" bodystart="58" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Layer.h" line="26" column="1" bodyfile="src/Layer.h" bodystart="26" bodyend="85"/>
    <listofallmembers>
      <member refid="class_layer_1a5de0967a414a49f20a027a55d0adeb49" prot="private" virt="non-virtual"><scope>Layer</scope><name>data</name></member>
      <member refid="class_layer_1abd8ad603c5223d39187225e1fce2ac72" prot="public" virt="non-virtual"><scope>Layer</scope><name>getData</name></member>
      <member refid="class_layer_1a974c0866509db4c131f8f38d281fbcd1" prot="public" virt="non-virtual"><scope>Layer</scope><name>getHeight</name></member>
      <member refid="class_layer_1a818d3ab6d8176de677ca5a476ec72e88" prot="public" virt="non-virtual"><scope>Layer</scope><name>getId</name></member>
      <member refid="class_layer_1a03296398e674b6ed9e4e893653f0434b" prot="public" virt="non-virtual"><scope>Layer</scope><name>getImage</name></member>
      <member refid="class_layer_1a1f981903fa03cd45b44aa68042ac809a" prot="public" virt="non-virtual"><scope>Layer</scope><name>getName</name></member>
      <member refid="class_layer_1ab48a21d96242142516cecfca51fd37d3" prot="public" virt="non-virtual"><scope>Layer</scope><name>getObjects</name></member>
      <member refid="class_layer_1ab49da526ffa214b3d1efe59531843979" prot="public" virt="non-virtual"><scope>Layer</scope><name>getOpacity</name></member>
      <member refid="class_layer_1afbdf075a35996b080e67a5bb8129adb6" prot="public" virt="non-virtual"><scope>Layer</scope><name>getType</name></member>
      <member refid="class_layer_1a39e3b346235715e15d99a0a8ac95e0a7" prot="public" virt="non-virtual"><scope>Layer</scope><name>getWidth</name></member>
      <member refid="class_layer_1aede3ba05e099573525f65420168664cd" prot="public" virt="non-virtual"><scope>Layer</scope><name>getX</name></member>
      <member refid="class_layer_1a72ca6f6610005d666795a64599f37d0d" prot="public" virt="non-virtual"><scope>Layer</scope><name>getY</name></member>
      <member refid="class_layer_1a6a0bc24033339368a0ca9747485f0053" prot="private" virt="non-virtual"><scope>Layer</scope><name>height</name></member>
      <member refid="class_layer_1ad8c4d484a5efce0cbbd0cf81b3958d17" prot="private" virt="non-virtual"><scope>Layer</scope><name>id</name></member>
      <member refid="class_layer_1a318dcce8317fa52680c9693d65ec64bb" prot="private" virt="non-virtual"><scope>Layer</scope><name>image</name></member>
      <member refid="class_layer_1a79e172a9898791194b47d581e7d7f7ca" prot="public" virt="non-virtual"><scope>Layer</scope><name>isVisible</name></member>
      <member refid="class_layer_1a8f623c7c4737dc29ecc86978d243ac6f" prot="public" virt="non-virtual"><scope>Layer</scope><name>Layer</name></member>
      <member refid="class_layer_1a582167f70d2ae94bc90c5986661475a6" prot="public" virt="non-virtual"><scope>Layer</scope><name>Layer</name></member>
      <member refid="class_layer_1a2071349b5667273725ae7f05a42db7a6" prot="private" virt="non-virtual"><scope>Layer</scope><name>name</name></member>
      <member refid="class_layer_1a8c6e8887425ca40694692169f300de3c" prot="private" virt="non-virtual"><scope>Layer</scope><name>objects</name></member>
      <member refid="class_layer_1a335b0615d255a1163f1728a9809423e2" prot="private" virt="non-virtual"><scope>Layer</scope><name>opacity</name></member>
      <member refid="class_layer_1aa31ddf3517c458664780ba5fd3d427cb" prot="private" virt="non-virtual"><scope>Layer</scope><name>type</name></member>
      <member refid="class_layer_1af6cf29dc19f963e16c516a3b2d5c30f9" prot="private" virt="non-virtual"><scope>Layer</scope><name>visible</name></member>
      <member refid="class_layer_1a724d3020ddbe5f9280caa325541e70a3" prot="private" virt="non-virtual"><scope>Layer</scope><name>width</name></member>
      <member refid="class_layer_1a17b2eeefeefd903159b8a847fee1c7dd" prot="private" virt="non-virtual"><scope>Layer</scope><name>x</name></member>
      <member refid="class_layer_1ab687faee2a5f65aecc77f26b25b29a5c" prot="private" virt="non-virtual"><scope>Layer</scope><name>y</name></member>
      <member refid="class_layer_1a1b1ba4804451dfe6cc357194e42762ae" prot="public" virt="non-virtual"><scope>Layer</scope><name>~Layer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
