<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_encoded_stream_test" kind="class" language="C++" prot="public">
    <compoundname>EncodedStreamTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">testing::Test</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_encoded_stream_test_1a9993d0eb182be2cbd055982f91308d92" prot="protected" static="no" mutable="no">
        <type>char *</type>
        <definition>char* EncodedStreamTest::json_</definition>
        <argsstring></argsstring>
        <name>json_</name>
        <qualifiedname>EncodedStreamTest::json_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="248" column="10" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_encoded_stream_test_1aef69c9f1ff714588697ac92712d75fe8" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t EncodedStreamTest::length_</definition>
        <argsstring></argsstring>
        <name>length_</name>
        <qualifiedname>EncodedStreamTest::length_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="249" column="12" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_encoded_stream_test_1a4fb1db529dc40d4c22c7fd7e6a7e1a9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>EncodedStreamTest::EncodedStreamTest</definition>
        <argsstring>()</argsstring>
        <name>EncodedStreamTest</name>
        <qualifiedname>EncodedStreamTest::EncodedStreamTest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="27" column="5" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_encoded_stream_test_1a6e1548cdd4fb0011d694d06b9622d52d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>EncodedStreamTest::~EncodedStreamTest</definition>
        <argsstring>()</argsstring>
        <name>~EncodedStreamTest</name>
        <qualifiedname>EncodedStreamTest::~EncodedStreamTest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="28" column="13" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="252" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_encoded_stream_test_1a6391699c63484acc7a12e3b32634e2f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void EncodedStreamTest::SetUp</definition>
        <argsstring>()</argsstring>
        <name>SetUp</name>
        <qualifiedname>EncodedStreamTest::SetUp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="30" column="18" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_encoded_stream_test_1a443e88ebf2abd3b18393c0e0e7c13ad0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void EncodedStreamTest::TearDown</definition>
        <argsstring>()</argsstring>
        <name>TearDown</name>
        <qualifiedname>EncodedStreamTest::TearDown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="34" column="18" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_encoded_stream_test_1a7237cafbb8ee5224a6ddb802bc31d6eb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EncodedStreamTest::EncodedStreamTest</definition>
        <argsstring>(const EncodedStreamTest &amp;)</argsstring>
        <name>EncodedStreamTest</name>
        <qualifiedname>EncodedStreamTest::EncodedStreamTest</qualifiedname>
        <param>
          <type>const <ref refid="class_encoded_stream_test" kindref="compound">EncodedStreamTest</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_encoded_stream_test_1a9ac8712f3d05a5b4d9e8cc37a9d16602" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_encoded_stream_test" kindref="compound">EncodedStreamTest</ref> &amp;</type>
        <definition>EncodedStreamTest &amp; EncodedStreamTest::operator=</definition>
        <argsstring>(const EncodedStreamTest &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>EncodedStreamTest::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_encoded_stream_test" kindref="compound">EncodedStreamTest</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="41" column="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_encoded_stream_test_1a63ccacf7cafb587e0f1537fc39b6064e" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FILE *</type>
        <definition>static FILE * EncodedStreamTest::Open</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>Open</name>
        <qualifiedname>EncodedStreamTest::Open</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="44" column="17" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="44" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_encoded_stream_test_1ad5dd00dbc8a9590e139b0f7727abb05a" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>static char * EncodedStreamTest::ReadFile</definition>
        <argsstring>(const char *filename, bool appendPath, size_t *outLength)</argsstring>
        <name>ReadFile</name>
        <qualifiedname>EncodedStreamTest::ReadFile</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>appendPath</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>outLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="62" column="17" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="62" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_encoded_stream_test_1ad9c567df62408555b30f49bdbb606fc3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FileEncoding</type>
          </param>
          <param>
            <type>typename MemoryEncoding</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void EncodedStreamTest::TestEncodedInputStream</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>TestEncodedInputStream</name>
        <qualifiedname>EncodedStreamTest::TestEncodedInputStream</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="81" column="10" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="81" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_encoded_stream_test_1a981d5de5d0aefd288c4a97d9dc6590f7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void EncodedStreamTest::TestAutoUTFInputStream</definition>
        <argsstring>(const char *filename, bool expectHasBOM)</argsstring>
        <name>TestAutoUTFInputStream</name>
        <qualifiedname>EncodedStreamTest::TestAutoUTFInputStream</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>expectHasBOM</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="121" column="10" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="121" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_encoded_stream_test_1a43892c37663f564147577e286d60937a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FileEncoding</type>
          </param>
          <param>
            <type>typename MemoryEncoding</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void EncodedStreamTest::TestEncodedOutputStream</definition>
        <argsstring>(const char *expectedFilename, bool putBOM)</argsstring>
        <name>TestEncodedOutputStream</name>
        <qualifiedname>EncodedStreamTest::TestEncodedOutputStream</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>expectedFilename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>putBOM</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="163" column="10" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="163" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_encoded_stream_test_1a246bc170b7a10468b5da7eb7dfeba46c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void EncodedStreamTest::TestAutoUTFOutputStream</definition>
        <argsstring>(UTFType type, bool putBOM, const char *expectedFilename)</argsstring>
        <name>TestAutoUTFOutputStream</name>
        <qualifiedname>EncodedStreamTest::TestAutoUTFOutputStream</qualifiedname>
        <param>
          <type><ref refid="encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58" kindref="member">UTFType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>putBOM</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expectedFilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="196" column="10" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="196" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_encoded_stream_test_1a0d45e4d5f8a44d23903dc6a0dee7eaa5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EncodedStreamTest::CompareFile</definition>
        <argsstring>(const char *filename, const char *expectedFilename)</argsstring>
        <name>CompareFile</name>
        <qualifiedname>EncodedStreamTest::CompareFile</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expectedFilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="230" column="10" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="230" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_encoded_stream_test_1a1db7e5969dec8780a8e641876befc272" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool EncodedStreamTest::CompareBufferFile</definition>
        <argsstring>(const char *actualBuffer, size_t actualLength, const char *expectedFilename)</argsstring>
        <name>CompareBufferFile</name>
        <qualifiedname>EncodedStreamTest::CompareBufferFile</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>actualBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>actualLength</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expectedFilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="240" column="10" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="240" bodyend="246"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>EncodedStreamTest</label>
        <link refid="class_encoded_stream_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>testing::Test</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>EncodedStreamTest</label>
        <link refid="class_encoded_stream_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>length_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>size_t</label>
      </node>
      <node id="2">
        <label>testing::Test</label>
      </node>
    </collaborationgraph>
    <location file="src/rapidjson/test/unittest/encodedstreamtest.cpp" line="25" column="1" bodyfile="src/rapidjson/test/unittest/encodedstreamtest.cpp" bodystart="25" bodyend="250"/>
    <listofallmembers>
      <member refid="class_encoded_stream_test_1a1db7e5969dec8780a8e641876befc272" prot="protected" virt="non-virtual"><scope>EncodedStreamTest</scope><name>CompareBufferFile</name></member>
      <member refid="class_encoded_stream_test_1a0d45e4d5f8a44d23903dc6a0dee7eaa5" prot="protected" virt="non-virtual"><scope>EncodedStreamTest</scope><name>CompareFile</name></member>
      <member refid="class_encoded_stream_test_1a4fb1db529dc40d4c22c7fd7e6a7e1a9b" prot="public" virt="non-virtual"><scope>EncodedStreamTest</scope><name>EncodedStreamTest</name></member>
      <member refid="class_encoded_stream_test_1a7237cafbb8ee5224a6ddb802bc31d6eb" prot="private" virt="non-virtual"><scope>EncodedStreamTest</scope><name>EncodedStreamTest</name></member>
      <member refid="class_encoded_stream_test_1a9993d0eb182be2cbd055982f91308d92" prot="protected" virt="non-virtual"><scope>EncodedStreamTest</scope><name>json_</name></member>
      <member refid="class_encoded_stream_test_1aef69c9f1ff714588697ac92712d75fe8" prot="protected" virt="non-virtual"><scope>EncodedStreamTest</scope><name>length_</name></member>
      <member refid="class_encoded_stream_test_1a63ccacf7cafb587e0f1537fc39b6064e" prot="protected" virt="non-virtual"><scope>EncodedStreamTest</scope><name>Open</name></member>
      <member refid="class_encoded_stream_test_1a9ac8712f3d05a5b4d9e8cc37a9d16602" prot="private" virt="non-virtual"><scope>EncodedStreamTest</scope><name>operator=</name></member>
      <member refid="class_encoded_stream_test_1ad5dd00dbc8a9590e139b0f7727abb05a" prot="protected" virt="non-virtual"><scope>EncodedStreamTest</scope><name>ReadFile</name></member>
      <member refid="class_encoded_stream_test_1a6391699c63484acc7a12e3b32634e2f7" prot="public" virt="virtual"><scope>EncodedStreamTest</scope><name>SetUp</name></member>
      <member refid="class_encoded_stream_test_1a443e88ebf2abd3b18393c0e0e7c13ad0" prot="public" virt="virtual"><scope>EncodedStreamTest</scope><name>TearDown</name></member>
      <member refid="class_encoded_stream_test_1a981d5de5d0aefd288c4a97d9dc6590f7" prot="protected" virt="non-virtual"><scope>EncodedStreamTest</scope><name>TestAutoUTFInputStream</name></member>
      <member refid="class_encoded_stream_test_1a246bc170b7a10468b5da7eb7dfeba46c" prot="protected" virt="non-virtual"><scope>EncodedStreamTest</scope><name>TestAutoUTFOutputStream</name></member>
      <member refid="class_encoded_stream_test_1ad9c567df62408555b30f49bdbb606fc3" prot="protected" virt="non-virtual"><scope>EncodedStreamTest</scope><name>TestEncodedInputStream</name></member>
      <member refid="class_encoded_stream_test_1a43892c37663f564147577e286d60937a" prot="protected" virt="non-virtual"><scope>EncodedStreamTest</scope><name>TestEncodedOutputStream</name></member>
      <member refid="class_encoded_stream_test_1a6e1548cdd4fb0011d694d06b9622d52d" prot="public" virt="virtual"><scope>EncodedStreamTest</scope><name>~EncodedStreamTest</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
