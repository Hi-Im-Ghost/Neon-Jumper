<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="archiver_8cpp" kind="file" language="C++">
    <compoundname>archiver.cpp</compoundname>
    <includes refid="archiver_8h" local="yes">archiver.h</includes>
    <includes local="no">cassert</includes>
    <includes local="no">stack</includes>
    <includes refid="document_8h" local="yes">rapidjson/document.h</includes>
    <includes refid="prettywriter_8h" local="yes">rapidjson/prettywriter.h</includes>
    <includes refid="stringbuffer_8h" local="yes">rapidjson/stringbuffer.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/rapidjson/example/archiver/archiver.cpp</label>
        <link refid="archiver_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>archiver.h</label>
        <link refid="archiver_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>allocators.h</label>
        <link refid="allocators_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>rapidjson/document.h</label>
        <link refid="document_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>encodedstream.h</label>
        <link refid="encodedstream_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>encodings.h</label>
        <link refid="encodings_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>error/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>biginteger.h</label>
        <link refid="biginteger_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>internal/clzll.h</label>
        <link refid="clzll_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>diyfp.h</label>
        <link refid="diyfp_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>internal/dtoa.h</label>
        <link refid="dtoa_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ieee754.h</label>
        <link refid="ieee754_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>itoa.h</label>
        <link refid="itoa_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>internal/meta.h</label>
        <link refid="meta_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>pow10.h</label>
        <link refid="pow10_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>internal/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>internal/strfunc.h</label>
        <link refid="strfunc_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>internal/strtod.h</label>
        <link refid="strtod_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>swap.h</label>
        <link refid="swap_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>memorystream.h</label>
        <link refid="memorystream_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>rapidjson/prettywriter.h</label>
        <link refid="prettywriter_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>rapidjson.h</label>
        <link refid="rapidjson_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>stream.h</label>
        <link refid="stream_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>stringbuffer.h</label>
        <link refid="stringbuffer_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>writer.h</label>
        <link refid="writer_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="28">
        <label>climits</label>
      </node>
      <node id="3">
        <label>cstddef</label>
      </node>
      <node id="11">
        <label>cstdlib</label>
      </node>
      <node id="12">
        <label>cstring</label>
      </node>
      <node id="31">
        <label>cwchar</label>
      </node>
      <node id="33">
        <label>iterator</label>
      </node>
      <node id="26">
        <label>limits</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="32">
        <label>new</label>
      </node>
      <node id="6">
        <label>stack</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_json_reader_stack_item" prot="public">JsonReaderStackItem</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="archiver_8cpp_1a149b55eb821bfd8722c37788381acd09" prot="public" static="no">
        <name>DOCUMENT</name>
        <initializer>reinterpret_cast&lt;<ref refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" kindref="member">Document</ref>*&gt;(mDocument)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archiver.cpp" line="26" column="9" bodyfile="src/rapidjson/example/archiver/archiver.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="archiver_8cpp_1a2cc8f2d83039de1aef6590f9782921ee" prot="public" static="no">
        <name>STACK</name>
        <initializer>(reinterpret_cast&lt;<ref refid="archiver_8cpp_1ae895071c91568125917165b3aa4a9708" kindref="member">JsonReaderStack</ref>*&gt;(mStack))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archiver.cpp" line="27" column="9" bodyfile="src/rapidjson/example/archiver/archiver.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" prot="public" static="no">
        <name>TOP</name>
        <initializer>(<ref refid="archiver_8cpp_1a2cc8f2d83039de1aef6590f9782921ee" kindref="member">STACK</ref>-&gt;top())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archiver.cpp" line="28" column="9" bodyfile="src/rapidjson/example/archiver/archiver.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" prot="public" static="no">
        <name>CURRENT</name>
        <initializer>(*<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">TOP.value</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archiver.cpp" line="29" column="9" bodyfile="src/rapidjson/example/archiver/archiver.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="archiver_8cpp_1a092368cb0c35415b27ffe320e390e82b" prot="public" static="no">
        <name>WRITER</name>
        <initializer>reinterpret_cast&lt;<ref refid="class_pretty_writer" kindref="compound">PrettyWriter</ref>&lt;<ref refid="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" kindref="member">StringBuffer</ref>&gt;*&gt;(mWriter)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archiver.cpp" line="213" column="9" bodyfile="src/rapidjson/example/archiver/archiver.cpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="archiver_8cpp_1aa57974323bef0262551029d83546b8e9" prot="public" static="no">
        <name>STREAM</name>
        <initializer>reinterpret_cast&lt;<ref refid="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" kindref="member">StringBuffer</ref>*&gt;(mStream)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archiver.cpp" line="214" column="9" bodyfile="src/rapidjson/example/archiver/archiver.cpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="archiver_8cpp_1ae895071c91568125917165b3aa4a9708" prot="public" static="no">
        <type>std::stack&lt; <ref refid="struct_json_reader_stack_item" kindref="compound">JsonReaderStackItem</ref> &gt;</type>
        <definition>typedef std::stack&lt;JsonReaderStackItem&gt; JsonReaderStack</definition>
        <argsstring></argsstring>
        <name>JsonReaderStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rapidjson/example/archiver/archiver.cpp" line="24" column="20" bodyfile="src/rapidjson/example/archiver/archiver.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="archiver_8h" kindref="compound">archiver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stack&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="document_8h" kindref="compound">rapidjson/document.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="prettywriter_8h" kindref="compound">rapidjson/prettywriter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stringbuffer_8h" kindref="compound">rapidjson/stringbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerapidjson" kindref="compound">rapidjson</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="struct_json_reader_stack_item" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_json_reader_stack_item" kindref="compound">JsonReaderStackItem</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84b" kindref="member">State</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84ba10ec2367e219f3362c89b7827378fcf2" kindref="member">BeforeStart</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84bae70fa0797c3380eb79ebe9891ba5ceba" kindref="member">Started</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84bac7d47991adc39d56c513ceef870cb1c5" kindref="member">Closed</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_reader_stack_item_1a4a12d84e3f931ed0a80bd5eab2cf3c55" kindref="member">JsonReaderStackItem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">Value</ref>*<sp/><ref refid="struct_json_reader_stack_item_1afcfc0316d2ce6dc94fe717eaee47d1e5" kindref="member">value</ref>,<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84b" kindref="member">State</ref><sp/><ref refid="struct_json_reader_stack_item_1a466090e1c5041303191ad97ea2d95ce2" kindref="member">state</ref>)<sp/>:<sp/><ref refid="struct_json_reader_stack_item_1afcfc0316d2ce6dc94fe717eaee47d1e5" kindref="member">value</ref>(<ref refid="struct_json_reader_stack_item_1afcfc0316d2ce6dc94fe717eaee47d1e5" kindref="member">value</ref>),<sp/><ref refid="struct_json_reader_stack_item_1a466090e1c5041303191ad97ea2d95ce2" kindref="member">state</ref>(<ref refid="struct_json_reader_stack_item_1a466090e1c5041303191ad97ea2d95ce2" kindref="member">state</ref>),<sp/><ref refid="struct_json_reader_stack_item_1afc277464cf461da2fc0b7a9bf779219b" kindref="member">index</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">Value</ref>*<sp/><ref refid="struct_json_reader_stack_item_1afcfc0316d2ce6dc94fe717eaee47d1e5" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84b" kindref="member">State</ref><sp/><ref refid="struct_json_reader_stack_item_1a466090e1c5041303191ad97ea2d95ce2" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref><sp/><ref refid="struct_json_reader_stack_item_1afc277464cf461da2fc0b7a9bf779219b" kindref="member">index</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>array<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::stack&lt;JsonReaderStackItem&gt;<sp/><ref refid="archiver_8cpp_1ae895071c91568125917165b3aa4a9708" kindref="member">JsonReaderStack</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DOCUMENT<sp/>reinterpret_cast&lt;Document*&gt;(mDocument)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK<sp/>(reinterpret_cast&lt;JsonReaderStack*&gt;(mStack))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOP<sp/>(STACK-&gt;top())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CURRENT<sp/>(*TOP.value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="class_json_reader_1a6606d8c5985be77bd8c145c36abdcc8a" kindref="member">JsonReader::JsonReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetest_8cpp_1a04e873a45a18dab42dc9a0eba4f3deee" kindref="member">json</ref>)<sp/>:<sp/>mDocument(),<sp/>mStack(),<sp/>mError(false)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>mDocument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" kindref="member">Document</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a149b55eb821bfd8722c37788381acd09" kindref="member">DOCUMENT</ref>-&gt;Parse(<ref refid="namespacetest_8cpp_1a04e873a45a18dab42dc9a0eba4f3deee" kindref="member">json</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="archiver_8cpp_1a149b55eb821bfd8722c37788381acd09" kindref="member">DOCUMENT</ref>-&gt;HasParseError())</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mError<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mStack<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="archiver_8cpp_1ae895071c91568125917165b3aa4a9708" kindref="member">JsonReaderStack</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a2cc8f2d83039de1aef6590f9782921ee" kindref="member">STACK</ref>-&gt;push(<ref refid="struct_json_reader_stack_item_1a4a12d84e3f931ed0a80bd5eab2cf3c55" kindref="member">JsonReaderStackItem</ref>(<ref refid="archiver_8cpp_1a149b55eb821bfd8722c37788381acd09" kindref="member">DOCUMENT</ref>,<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84ba10ec2367e219f3362c89b7827378fcf2" kindref="member">JsonReaderStackItem::BeforeStart</ref>));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="class_json_reader_1a328c859a306bfe59ee7a103586b1619a" kindref="member">JsonReader::~JsonReader</ref>()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="archiver_8cpp_1a149b55eb821bfd8722c37788381acd09" kindref="member">DOCUMENT</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="archiver_8cpp_1a2cc8f2d83039de1aef6590f9782921ee" kindref="member">STACK</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Archive<sp/>concept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="class_json_reader" kindref="compound">JsonReader</ref>&amp;<sp/><ref refid="class_json_reader_1af4d4cdc4f7c61cad2b538c10ff365828" kindref="member">JsonReader::StartObject</ref>()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.IsObject()<sp/>&amp;&amp;<sp/><ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.state<sp/>==<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84ba10ec2367e219f3362c89b7827378fcf2" kindref="member">JsonReaderStackItem::BeforeStart</ref>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.state<sp/>=<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84bae70fa0797c3380eb79ebe9891ba5ceba" kindref="member">JsonReaderStackItem::Started</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="class_json_reader" kindref="compound">JsonReader</ref>&amp;<sp/><ref refid="class_json_reader_1a7f3d3ebf4b2b2feb1b96642804eefdf4" kindref="member">JsonReader::EndObject</ref>()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.IsObject()<sp/>&amp;&amp;<sp/><ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.state<sp/>==<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84bae70fa0797c3380eb79ebe9891ba5ceba" kindref="member">JsonReaderStackItem::Started</ref>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1acea7a602f3cf7db0efaa024d836c7d4b" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="class_json_reader" kindref="compound">JsonReader</ref>&amp;<sp/><ref refid="class_json_reader_1aac2abcffd65cc5b538c2b5e79a3c4e56" kindref="member">JsonReader::Member</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.IsObject()<sp/>&amp;&amp;<sp/><ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.state<sp/>==<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84bae70fa0797c3380eb79ebe9891ba5ceba" kindref="member">JsonReaderStackItem::Started</ref>)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_member_iterator" kindref="compound">Value::ConstMemberIterator</ref><sp/>memberItr<sp/>=<sp/><ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.FindMember(name);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memberItr<sp/>!=<sp/><ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.MemberEnd())<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a2cc8f2d83039de1aef6590f9782921ee" kindref="member">STACK</ref>-&gt;push(<ref refid="struct_json_reader_stack_item" kindref="compound">JsonReaderStackItem</ref>(&amp;memberItr-&gt;value,<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84ba10ec2367e219f3362c89b7827378fcf2" kindref="member">JsonReaderStackItem::BeforeStart</ref>));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_reader_1a2aa30506e4bd5edd882252d9e9a26a69" kindref="member">JsonReader::HasMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>&amp;&amp;<sp/><ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.IsObject()<sp/>&amp;&amp;<sp/><ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.state<sp/>==<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84bae70fa0797c3380eb79ebe9891ba5ceba" kindref="member">JsonReaderStackItem::Started</ref>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.HasMember(name);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="class_json_reader" kindref="compound">JsonReader</ref>&amp;<sp/><ref refid="class_json_reader_1a3b3ccc8ba94677a49c738600b4746efe" kindref="member">JsonReader::StartArray</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.IsArray()<sp/>&amp;&amp;<sp/><ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.state<sp/>==<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84ba10ec2367e219f3362c89b7827378fcf2" kindref="member">JsonReaderStackItem::BeforeStart</ref>)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.state<sp/>=<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84bae70fa0797c3380eb79ebe9891ba5ceba" kindref="member">JsonReaderStackItem::Started</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*size<sp/>=<sp/><ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.Size();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.Empty())<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">Value</ref>*<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref><sp/>=<sp/>&amp;<ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>[<ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.index];</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a2cc8f2d83039de1aef6590f9782921ee" kindref="member">STACK</ref>-&gt;push(<ref refid="struct_json_reader_stack_item" kindref="compound">JsonReaderStackItem</ref>(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84ba10ec2367e219f3362c89b7827378fcf2" kindref="member">JsonReaderStackItem::BeforeStart</ref>));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.state<sp/>=<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84bac7d47991adc39d56c513ceef870cb1c5" kindref="member">JsonReaderStackItem::Closed</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><ref refid="class_json_reader" kindref="compound">JsonReader</ref>&amp;<sp/><ref refid="class_json_reader_1a123ea8c466a6a9b0647168b0494aac98" kindref="member">JsonReader::EndArray</ref>()<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.IsArray()<sp/>&amp;&amp;<sp/><ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.state<sp/>==<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84bac7d47991adc39d56c513ceef870cb1c5" kindref="member">JsonReaderStackItem::Closed</ref>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1acea7a602f3cf7db0efaa024d836c7d4b" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="class_json_reader" kindref="compound">JsonReader</ref>&amp;<sp/><ref refid="class_json_reader_1a8a5856ab4923dd1f3444bfeb5051f9e0" kindref="member">JsonReader::operator&amp;</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.IsBool())<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/><ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.GetBool();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1acea7a602f3cf7db0efaa024d836c7d4b" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="class_json_reader" kindref="compound">JsonReader</ref>&amp;<sp/><ref refid="class_json_reader_1a8a5856ab4923dd1f3444bfeb5051f9e0" kindref="member">JsonReader::operator&amp;</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">&amp;<sp/>u)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.IsUint())<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/><ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.GetUint();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1acea7a602f3cf7db0efaa024d836c7d4b" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="class_json_reader" kindref="compound">JsonReader</ref>&amp;<sp/><ref refid="class_json_reader_1a8a5856ab4923dd1f3444bfeb5051f9e0" kindref="member">JsonReader::operator&amp;</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.IsInt())<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/><ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.GetInt();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1acea7a602f3cf7db0efaa024d836c7d4b" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="class_json_reader" kindref="compound">JsonReader</ref>&amp;<sp/><ref refid="class_json_reader_1a8a5856ab4923dd1f3444bfeb5051f9e0" kindref="member">JsonReader::operator&amp;</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.IsNumber())<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/><ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.GetDouble();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1acea7a602f3cf7db0efaa024d836c7d4b" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="class_json_reader" kindref="compound">JsonReader</ref>&amp;<sp/><ref refid="class_json_reader_1a8a5856ab4923dd1f3444bfeb5051f9e0" kindref="member">JsonReader::operator&amp;</ref>(std::string&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.IsString())<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.GetString();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1acea7a602f3cf7db0efaa024d836c7d4b" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><ref refid="class_json_reader" kindref="compound">JsonReader</ref>&amp;<sp/><ref refid="class_json_reader_1af36c05eb087b1e452996fc72d6302b3e" kindref="member">JsonReader::SetNull</ref>()<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>for<sp/>JsonWriter<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_json_reader_1acea7a602f3cf7db0efaa024d836c7d4b" kindref="member">JsonReader::Next</ref>()<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!<ref refid="archiver_8cpp_1a2cc8f2d83039de1aef6590f9782921ee" kindref="member">STACK</ref>-&gt;empty());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a2cc8f2d83039de1aef6590f9782921ee" kindref="member">STACK</ref>-&gt;pop();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="archiver_8cpp_1a2cc8f2d83039de1aef6590f9782921ee" kindref="member">STACK</ref>-&gt;empty()<sp/>&amp;&amp;<sp/><ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.IsArray())<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.state<sp/>==<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84bae70fa0797c3380eb79ebe9891ba5ceba" kindref="member">JsonReaderStackItem::Started</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>means<sp/>reading<sp/>array<sp/>item<sp/>pass<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.index<sp/>&lt;<sp/><ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>.Size()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_value" kindref="compound">Value</ref>*<sp/><ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref><sp/>=<sp/>&amp;<ref refid="archiver_8cpp_1a1f957b762e025dae67967a36c86dcfc1" kindref="member">CURRENT</ref>[++<ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.index];</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a2cc8f2d83039de1aef6590f9782921ee" kindref="member">STACK</ref>-&gt;push(<ref refid="struct_json_reader_stack_item" kindref="compound">JsonReaderStackItem</ref>(<ref refid="pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce" kindref="member">value</ref>,<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84ba10ec2367e219f3362c89b7827378fcf2" kindref="member">JsonReaderStackItem::BeforeStart</ref>));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1afc0eef637f1016e8786e45e106a4881e" kindref="member">TOP</ref>.state<sp/>=<sp/><ref refid="struct_json_reader_stack_item_1a8991221ff1014c18a98f7e77b95dc84bac7d47991adc39d56c513ceef870cb1c5" kindref="member">JsonReaderStackItem::Closed</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_json_reader_1adf5020f5ed68d7b9baa21986d05fda90" kindref="member">mError</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>DOCUMENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>CURRENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="comment">//<sp/>JsonWriter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WRITER<sp/>reinterpret_cast&lt;PrettyWriter&lt;StringBuffer&gt;*&gt;(mWriter)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STREAM<sp/>reinterpret_cast&lt;StringBuffer*&gt;(mStream)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="class_json_writer_1ac236bb60b9ae908fd178baff276df0c8" kindref="member">JsonWriter::JsonWriter</ref>()<sp/>:<sp/>mWriter(),<sp/>mStream()<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>mStream<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" kindref="member">StringBuffer</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>mWriter<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_pretty_writer" kindref="compound">PrettyWriter&lt;StringBuffer&gt;</ref>(*<ref refid="archiver_8cpp_1aa57974323bef0262551029d83546b8e9" kindref="member">STREAM</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><ref refid="class_json_writer_1ac6555dd3dfadc937848046a58bd5f974" kindref="member">JsonWriter::~JsonWriter</ref>()<sp/>{<sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="archiver_8cpp_1a092368cb0c35415b27ffe320e390e82b" kindref="member">WRITER</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="archiver_8cpp_1aa57974323bef0262551029d83546b8e9" kindref="member">STREAM</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_json_writer_1a69d5a42b3c5a94f5f05bb48d2489b281" kindref="member">JsonWriter::GetString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="archiver_8cpp_1aa57974323bef0262551029d83546b8e9" kindref="member">STREAM</ref>-&gt;GetString();</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><ref refid="class_json_writer" kindref="compound">JsonWriter</ref>&amp;<sp/><ref refid="class_json_writer_1ad70866aacab1b7581d13ec47e666be84" kindref="member">JsonWriter::StartObject</ref>()<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a092368cb0c35415b27ffe320e390e82b" kindref="member">WRITER</ref>-&gt;StartObject();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><ref refid="class_json_writer" kindref="compound">JsonWriter</ref>&amp;<sp/><ref refid="class_json_writer_1a9c7be30ac963ee742375247fe4111744" kindref="member">JsonWriter::EndObject</ref>()<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a092368cb0c35415b27ffe320e390e82b" kindref="member">WRITER</ref>-&gt;EndObject();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><ref refid="class_json_writer" kindref="compound">JsonWriter</ref>&amp;<sp/><ref refid="class_json_writer_1a4daf2f3c12e647e400c22021645a27ef" kindref="member">JsonWriter::Member</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a092368cb0c35415b27ffe320e390e82b" kindref="member">WRITER</ref>-&gt;String(name,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(strlen(name)));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_json_writer_1adc9059e1fcc3a0c7db01d83f4e2993e5" kindref="member">JsonWriter::HasMember</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>for<sp/>JsonReader<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><ref refid="class_json_writer" kindref="compound">JsonWriter</ref>&amp;<sp/><ref refid="class_json_writer_1a932a385a8acfcbef01d340648b483fce" kindref="member">JsonWriter::StartArray</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a092368cb0c35415b27ffe320e390e82b" kindref="member">WRITER</ref>-&gt;StartArray();<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><ref refid="class_json_writer" kindref="compound">JsonWriter</ref>&amp;<sp/><ref refid="class_json_writer_1ab62266adeeaf740eb07d3e2986e970d7" kindref="member">JsonWriter::EndArray</ref>()<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a092368cb0c35415b27ffe320e390e82b" kindref="member">WRITER</ref>-&gt;EndArray();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><ref refid="class_json_writer" kindref="compound">JsonWriter</ref>&amp;<sp/><ref refid="class_json_writer_1a1df4abfba1f7fe03ad1f98ffeed2d56d" kindref="member">JsonWriter::operator&amp;</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a092368cb0c35415b27ffe320e390e82b" kindref="member">WRITER</ref>-&gt;Bool(b);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><ref refid="class_json_writer" kindref="compound">JsonWriter</ref>&amp;<sp/><ref refid="class_json_writer_1a1df4abfba1f7fe03ad1f98ffeed2d56d" kindref="member">JsonWriter::operator&amp;</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">&amp;<sp/>u)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a092368cb0c35415b27ffe320e390e82b" kindref="member">WRITER</ref>-&gt;Uint(u);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><ref refid="class_json_writer" kindref="compound">JsonWriter</ref>&amp;<sp/><ref refid="class_json_writer_1a1df4abfba1f7fe03ad1f98ffeed2d56d" kindref="member">JsonWriter::operator&amp;</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a092368cb0c35415b27ffe320e390e82b" kindref="member">WRITER</ref>-&gt;Int(i);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><ref refid="class_json_writer" kindref="compound">JsonWriter</ref>&amp;<sp/><ref refid="class_json_writer_1a1df4abfba1f7fe03ad1f98ffeed2d56d" kindref="member">JsonWriter::operator&amp;</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a092368cb0c35415b27ffe320e390e82b" kindref="member">WRITER</ref>-&gt;Double(d);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><ref refid="class_json_writer" kindref="compound">JsonWriter</ref>&amp;<sp/><ref refid="class_json_writer_1a1df4abfba1f7fe03ad1f98ffeed2d56d" kindref="member">JsonWriter::operator&amp;</ref>(std::string&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a092368cb0c35415b27ffe320e390e82b" kindref="member">WRITER</ref>-&gt;String(s.c_str(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(s.size()));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><ref refid="class_json_writer" kindref="compound">JsonWriter</ref>&amp;<sp/><ref refid="class_json_writer_1a346169b807a73fc75d86119ee8f2b06c" kindref="member">JsonWriter::SetNull</ref>()<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="archiver_8cpp_1a092368cb0c35415b27ffe320e390e82b" kindref="member">WRITER</ref>-&gt;Null();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STREAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>WRITER</highlight></codeline>
    </programlisting>
    <location file="src/rapidjson/example/archiver/archiver.cpp"/>
  </compounddef>
</doxygen>
