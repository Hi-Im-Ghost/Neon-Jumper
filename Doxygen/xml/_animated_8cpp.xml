<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_animated_8cpp" kind="file" language="C++">
    <compoundname>Animated.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="_animated_8h" local="yes">Animated.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/modules/Animated.cpp</label>
        <link refid="_animated_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Animated.h</label>
        <link refid="_animated_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SFML/Graphics.hpp</label>
      </node>
      <node id="5">
        <label>SFML/System/Clock.hpp</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_animated_8h" kindref="compound">Animated.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_animated_1a72005d589aed57e4661825032986346c" kindref="member">Animated::animate</ref>(sf::Sprite<sp/>&amp;sprite,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noWait)<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>sf::IntRect<sp/>currFrame<sp/>=<sp/>sprite.getTextureRect();</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>x<sp/>=<sp/>currFrame.width<sp/>*<sp/>(currFrameNumber<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>y<sp/>=<sp/>currFrame.height<sp/>*<sp/>(animRow<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(animClock.getElapsedTime().asSeconds()<sp/>&gt;=<sp/>frameIntervalTime)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Next<sp/>frame</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currFrameNumber++;</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(currFrameNumber<sp/>&lt;=<sp/>maxFrameNumber)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>currFrame.width;</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(loop)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currFrameNumber<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currFrameNumber<sp/>=<sp/>maxFrameNumber;</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currFrame<sp/>=<sp/>sf::IntRect(x,<sp/>y,<sp/>currFrame.width,<sp/>currFrame.height);</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprite.setTextureRect(currFrame);</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Restart<sp/>clock</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animClock.restart();</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*/</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_animClock.getElapsedTime().asSeconds()<sp/>&gt;<sp/>frameIntervalTime<sp/>||<sp/>noWait)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setFrame(sprite);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_animClock.restart();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Animated::setFrame(sf::Sprite&amp;<sp/>sprite)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>sprite.setTextureRect(sf::IntRect(</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_frameOrigin.x<sp/>+<sp/>(<sp/>(<ref refid="class_animated_1ab0734224d6f30a675322dfd7be78693d" kindref="member">_bIsFlipped</ref>)<sp/>?<sp/>_frameSize.x<sp/>:<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_frameOrigin.y,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_frameSize.x<sp/>*<sp/>(<sp/>(<ref refid="class_animated_1ab0734224d6f30a675322dfd7be78693d" kindref="member">_bIsFlipped</ref>)<sp/>?<sp/>-1<sp/>:<sp/>1<sp/>),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_frameSize.y)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>_frameOrigin.x<sp/>+=<sp/>_frameSize.x;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_frameOrigin.x<sp/>&gt;=<sp/>_frameSize.x<sp/>*<sp/>_maxFrameNumber)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_frameOrigin.x<sp/>=<sp/>_startingX;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_animated_1a11a766414913f383e89df00b0fb88179" kindref="member">Animated::setAnimValues</ref>(sf::Vector2i<sp/>frameOrigin,<sp/>sf::Vector2i<sp/>frameSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameCount,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>intervalTime,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLooping)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>_frameOrigin<sp/>=<sp/>frameOrigin;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>_frameSize<sp/>=<sp/>frameSize;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>_maxFrameNumber<sp/>=<sp/>frameCount;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>_startingX<sp/>=<sp/>frameOrigin.x;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>frameIntervalTime<sp/>=<sp/>intervalTime;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>_bLooping<sp/>=<sp/>isLooping;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_animated_1a81fd919be841d41a23f27909e2ebdb1a" kindref="member">Animated::switchAnimation</ref>(Animation<sp/>newAnimation)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(newAnimation)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_animated_1a1f2b6a8597e3a5fb5c1d1d8a28d587fba4be1f25948cbb0724e96f2b75e354c47" kindref="member">IDLE</ref>:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_currAnim<sp/>=<sp/><ref refid="class_animated_1a1f2b6a8597e3a5fb5c1d1d8a28d587fba4be1f25948cbb0724e96f2b75e354c47" kindref="member">IDLE</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_animated_1a1f2b6a8597e3a5fb5c1d1d8a28d587fba068868841d5d16c4f643105c1ee80831" kindref="member">WALK</ref>:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_currAnim<sp/>=<sp/><ref refid="class_animated_1a1f2b6a8597e3a5fb5c1d1d8a28d587fba068868841d5d16c4f643105c1ee80831" kindref="member">WALK</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_animated_1a1f2b6a8597e3a5fb5c1d1d8a28d587fba71c9a846352c128a0509dd271be15964" kindref="member">JUMP</ref>:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_currAnim<sp/>=<sp/><ref refid="class_animated_1a1f2b6a8597e3a5fb5c1d1d8a28d587fba71c9a846352c128a0509dd271be15964" kindref="member">JUMP</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_animated_1a1f2b6a8597e3a5fb5c1d1d8a28d587fba33c4e60ae5c29beb7265fa30891026e7" kindref="member">FALL</ref>:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_currAnim<sp/>=<sp/><ref refid="class_animated_1a1f2b6a8597e3a5fb5c1d1d8a28d587fba33c4e60ae5c29beb7265fa30891026e7" kindref="member">FALL</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/modules/Animated.cpp"/>
  </compounddef>
</doxygen>
