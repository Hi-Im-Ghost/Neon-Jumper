<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__load_map_8h_source" xml:lang="en-US">
<title>LoadMap.h</title>
<indexterm><primary>src/LoadMap.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;TREES_JSON_LOADMAP_H</emphasis>
2 <emphasis role="preprocessor">#define&#32;TREES_JSON_LOADMAP_H</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__map_8h">Map.h</link>&quot;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__tile_set_8h">TileSet.h</link>&quot;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__tile_map_8h">TileMap.h</link>&quot;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
12 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_load_map">LoadMap</link>&#32;{
13 <emphasis role="keyword">private</emphasis>:
15 &#32;&#32;&#32;&#32;sf::Texture&#32;bg;
17 &#32;&#32;&#32;&#32;sf::Sprite&#32;bgSpr;
19 &#32;&#32;&#32;&#32;std::vector&lt;TileMap&gt;&#32;tilemap_render;
20 
22 &#32;&#32;&#32;&#32;<link linkend="_class_layer">Layer</link>&#32;solidLayer;
24 &#32;&#32;&#32;&#32;<link linkend="_class_layer">Layer</link>&#32;damageLayer;
25 
26 <emphasis role="keyword">public</emphasis>:
28 &#32;&#32;&#32;&#32;<link linkend="_class_load_map_1ae780842a81d47d2463f40bf561fbdfa7">LoadMap</link>(std::string&#32;mapFileName);
30 &#32;&#32;&#32;&#32;std::ifstream&#32;<link linkend="_class_load_map_1ae3d1eb7e8e3f5748430e1189d72a3849">readFile</link>(std::string);
32 &#32;&#32;&#32;&#32;<link linkend="_class_tile_set">TileSet</link>&#32;<link linkend="_class_load_map_1aae3bcc5f28ae22b7cda5ae6785b04a4c">findTileSet</link>(<link linkend="_class_layer">Layer</link>&amp;,&#32;std::vector&lt;TileSet&gt;&amp;);
33 
35 &#32;&#32;&#32;&#32;<link linkend="_class_layer">Layer</link>&#32;<link linkend="_class_load_map_1a1c887ad2112bf7d749d0254309c1ab73">getSolidLayer</link>();
37 &#32;&#32;&#32;&#32;<link linkend="_class_layer">Layer</link>&#32;<link linkend="_class_load_map_1a21f5bf47590f84c73e4850a20acad787">getDamageLayer</link>();
38 
40 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_load_map_1a7020a11fa9a16e73ff62bbdd93d2db8c">draw</link>(sf::RenderTarget&amp;&#32;window);
41 
42 };
43 
44 
45 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//TREES_JSON_LOADMAP_H</emphasis>
</programlisting></section>
