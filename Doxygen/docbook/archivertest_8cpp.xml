<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_archivertest_8cpp" xml:lang="en-US">
<title>src/rapidjson/example/archiver/archivertest.cpp File Reference</title>
<indexterm><primary>src/rapidjson/example/archiver/archivertest.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;archiver.h&quot;
#include &lt;iostream&gt;
#include &lt;vector&gt;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_student">Student</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_group">Group</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_shape">Shape</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_circle">Circle</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_box">Box</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_canvas">Canvas</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </para><para><link linkend="_class_archiver">Archiver</link> &amp; <link linkend="_archivertest_8cpp_1a228adf99d45c4d34b9699fddc0050321">operator&amp;</link> (<link linkend="_class_archiver">Archiver</link> &amp;ar, <link linkend="_struct_student">Student</link> &amp;s)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_archivertest_8cpp_1a07bff4b34ee18e927d9e711b6aef336f">operator&lt;&lt;</link> (std::ostream &amp;os, const <link linkend="_struct_student">Student</link> &amp;s)</para>
</listitem>
            <listitem><para>void <link linkend="_archivertest_8cpp_1a1440a7779ac56f47a3f355ce4a8c7da0">test1</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </para><para><link linkend="_class_archiver">Archiver</link> &amp; <link linkend="_archivertest_8cpp_1aa9f8d187a44a0d9114d97d40cda5be2b">operator&amp;</link> (<link linkend="_class_archiver">Archiver</link> &amp;ar, <link linkend="_struct_group">Group</link> &amp;g)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_archivertest_8cpp_1ae256975f96ff58f1b3ba60f4ec716b9f">operator&lt;&lt;</link> (std::ostream &amp;os, const <link linkend="_struct_group">Group</link> &amp;g)</para>
</listitem>
            <listitem><para>void <link linkend="_archivertest_8cpp_1a0283886819c7c140a023582b7269e2d0">test2</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </para><para><link linkend="_class_archiver">Archiver</link> &amp; <link linkend="_archivertest_8cpp_1abbaa4a3bf18ee5cda37be6ec9f43449f">operator&amp;</link> (<link linkend="_class_archiver">Archiver</link> &amp;ar, <link linkend="_class_shape">Shape</link> &amp;s)</para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </para><para><link linkend="_class_archiver">Archiver</link> &amp; <link linkend="_archivertest_8cpp_1a6d2ced6c7a4c1268e2751373daeea3ec">operator&amp;</link> (<link linkend="_class_archiver">Archiver</link> &amp;ar, <link linkend="_class_circle">Circle</link> &amp;c)</para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </para><para><link linkend="_class_archiver">Archiver</link> &amp; <link linkend="_archivertest_8cpp_1aee7a0ca62f7a4898a0fd17926586396a">operator&amp;</link> (<link linkend="_class_archiver">Archiver</link> &amp;ar, <link linkend="_class_box">Box</link> &amp;b)</para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </para><para><link linkend="_class_archiver">Archiver</link> &amp; <link linkend="_archivertest_8cpp_1ada50dee8547db1b95bb52426b208673b">operator&amp;</link> (<link linkend="_class_archiver">Archiver</link> &amp;ar, <link linkend="_class_shape">Shape</link> *&amp;shape)</para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </para><para><link linkend="_class_archiver">Archiver</link> &amp; <link linkend="_archivertest_8cpp_1a47db321e893b59b20080b4c364552844">operator&amp;</link> (<link linkend="_class_archiver">Archiver</link> &amp;ar, <link linkend="_class_canvas">Canvas</link> &amp;c)</para>
</listitem>
            <listitem><para>void <link linkend="_archivertest_8cpp_1a6d0455dd5c30adda100e95f0423c786e">test3</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_archivertest_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_archivertest_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4"/><section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>archivertest.cpp</secondary></indexterm>
<indexterm><primary>archivertest.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main ( )</computeroutput></para></section>
<anchor xml:id="_archivertest_8cpp_1aee7a0ca62f7a4898a0fd17926586396a"/><section>
    <title>operator&amp;()<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>operator&amp;</primary><secondary>archivertest.cpp</secondary></indexterm>
<indexterm><primary>archivertest.cpp</primary><secondary>operator&amp;</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_archiver">Archiver</link> &amp; operator&amp; (<link linkend="_class_archiver">Archiver</link> &amp; ar, <link linkend="_class_box">Box</link> &amp; b)</computeroutput></para></section>
<anchor xml:id="_archivertest_8cpp_1a47db321e893b59b20080b4c364552844"/><section>
    <title>operator&amp;()<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>operator&amp;</primary><secondary>archivertest.cpp</secondary></indexterm>
<indexterm><primary>archivertest.cpp</primary><secondary>operator&amp;</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_archiver">Archiver</link> &amp; operator&amp; (<link linkend="_class_archiver">Archiver</link> &amp; ar, <link linkend="_class_canvas">Canvas</link> &amp; c)</computeroutput></para></section>
<anchor xml:id="_archivertest_8cpp_1a6d2ced6c7a4c1268e2751373daeea3ec"/><section>
    <title>operator&amp;()<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>operator&amp;</primary><secondary>archivertest.cpp</secondary></indexterm>
<indexterm><primary>archivertest.cpp</primary><secondary>operator&amp;</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_archiver">Archiver</link> &amp; operator&amp; (<link linkend="_class_archiver">Archiver</link> &amp; ar, <link linkend="_class_circle">Circle</link> &amp; c)</computeroutput></para></section>
<anchor xml:id="_archivertest_8cpp_1aa9f8d187a44a0d9114d97d40cda5be2b"/><section>
    <title>operator&amp;()<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>operator&amp;</primary><secondary>archivertest.cpp</secondary></indexterm>
<indexterm><primary>archivertest.cpp</primary><secondary>operator&amp;</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_archiver">Archiver</link> &amp; operator&amp; (<link linkend="_class_archiver">Archiver</link> &amp; ar, <link linkend="_struct_group">Group</link> &amp; g)</computeroutput></para></section>
<anchor xml:id="_archivertest_8cpp_1abbaa4a3bf18ee5cda37be6ec9f43449f"/><section>
    <title>operator&amp;()<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>operator&amp;</primary><secondary>archivertest.cpp</secondary></indexterm>
<indexterm><primary>archivertest.cpp</primary><secondary>operator&amp;</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_archiver">Archiver</link> &amp; operator&amp; (<link linkend="_class_archiver">Archiver</link> &amp; ar, <link linkend="_class_shape">Shape</link> &amp; s)</computeroutput></para></section>
<anchor xml:id="_archivertest_8cpp_1ada50dee8547db1b95bb52426b208673b"/><section>
    <title>operator&amp;()<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>operator&amp;</primary><secondary>archivertest.cpp</secondary></indexterm>
<indexterm><primary>archivertest.cpp</primary><secondary>operator&amp;</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_archiver">Archiver</link> &amp; operator&amp; (<link linkend="_class_archiver">Archiver</link> &amp; ar, <link linkend="_class_shape">Shape</link> *&amp; shape)</computeroutput></para></section>
<anchor xml:id="_archivertest_8cpp_1a228adf99d45c4d34b9699fddc0050321"/><section>
    <title>operator&amp;()<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>operator&amp;</primary><secondary>archivertest.cpp</secondary></indexterm>
<indexterm><primary>archivertest.cpp</primary><secondary>operator&amp;</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_class_archiver">Archiver</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_archiver">Archiver</link> &amp; operator&amp; (<link linkend="_class_archiver">Archiver</link> &amp; ar, <link linkend="_struct_student">Student</link> &amp; s)</computeroutput></para></section>
<anchor xml:id="_archivertest_8cpp_1ae256975f96ff58f1b3ba60f4ec716b9f"/><section>
    <title>operator&lt;&lt;()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>archivertest.cpp</secondary></indexterm>
<indexterm><primary>archivertest.cpp</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream &amp; operator&lt;&lt; (std::ostream &amp; os, const <link linkend="_struct_group">Group</link> &amp; g)</computeroutput></para></section>
<anchor xml:id="_archivertest_8cpp_1a07bff4b34ee18e927d9e711b6aef336f"/><section>
    <title>operator&lt;&lt;()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>archivertest.cpp</secondary></indexterm>
<indexterm><primary>archivertest.cpp</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream &amp; operator&lt;&lt; (std::ostream &amp; os, const <link linkend="_struct_student">Student</link> &amp; s)</computeroutput></para></section>
<anchor xml:id="_archivertest_8cpp_1a1440a7779ac56f47a3f355ce4a8c7da0"/><section>
    <title>test1()</title>
<indexterm><primary>test1</primary><secondary>archivertest.cpp</secondary></indexterm>
<indexterm><primary>archivertest.cpp</primary><secondary>test1</secondary></indexterm>
<para><computeroutput>void test1 ( )</computeroutput></para></section>
<anchor xml:id="_archivertest_8cpp_1a0283886819c7c140a023582b7269e2d0"/><section>
    <title>test2()</title>
<indexterm><primary>test2</primary><secondary>archivertest.cpp</secondary></indexterm>
<indexterm><primary>archivertest.cpp</primary><secondary>test2</secondary></indexterm>
<para><computeroutput>void test2 ( )</computeroutput></para></section>
<anchor xml:id="_archivertest_8cpp_1a6d0455dd5c30adda100e95f0423c786e"/><section>
    <title>test3()</title>
<indexterm><primary>test3</primary><secondary>archivertest.cpp</secondary></indexterm>
<indexterm><primary>archivertest.cpp</primary><secondary>test3</secondary></indexterm>
<para><computeroutput>void test3 ( )</computeroutput></para></section>
</section>
</section>
