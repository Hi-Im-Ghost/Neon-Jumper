<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_generic_uri" xml:lang="en-US">
<title>GenericUri&lt; ValueType, Allocator &gt; Class Template Reference</title>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;uri.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">ValueType::Ch</link> <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_uri_1ae9e702382446e760e66e45872567b59e">GenericUri</link> (<link linkend="_classrapidjson_1_1_allocator">Allocator</link> *allocator=0)</para>

<para>Constructors. </para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri_1a188f7f9d11aac1c7647e6f43e05fcbd4">GenericUri</link> (const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> *uri, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> *allocator=0)</para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri_1a2077917cd430c4893a3eee2fc5133727">GenericUri</link> (const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> *uri, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> *allocator=0)</para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; </para><para><link linkend="_class_generic_uri_1ae0d105ae4ae9a2edc6489835f3bf62a5">GenericUri</link> (const <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &amp;uri, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> *allocator=0)</para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri_1a701930adaab51f0da0b2fba64bb67b25">GenericUri</link> (const <link linkend="_class_generic_uri">GenericUri</link> &amp;rhs)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri_1a233ee45aeaeb5ee3a6ccea5a720d67b2">GenericUri</link> (const <link linkend="_class_generic_uri">GenericUri</link> &amp;rhs, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> *allocator)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri_1a6479d97f05ba77b27f06778ce17590d0">~GenericUri</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri">GenericUri</link> &amp; <link linkend="_class_generic_uri_1adbd9d4a3a05a34aed0b05a016110b54e">operator=</link> (const <link linkend="_class_generic_uri">GenericUri</link> &amp;rhs)</para>

<para>Assignment operator. </para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; </para><para>void <link linkend="_class_generic_uri_1ae3d2e835bd683e41720379260c2f1e04">Get</link> (<link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &amp;uri, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &amp;allocator)</para>

<para>Getters. </para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1a77129c5d1d6510eca7cc3623ffa6cf96">GetString</link> () const</para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri_1ad8f54ebb7d47030b4b0900b6987d76f7">GetStringLength</link> () const</para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1aa01f0e6bc010e7f41e91f11351b7a1a4">GetBaseString</link> () const</para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri_1a87075603b398cc925d04180343443aca">GetBaseStringLength</link> () const</para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1a797383c9f123cf1069686255d26e01b5">GetSchemeString</link> () const</para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri_1ac3337c9af8f61c56301e2c51b9c03183">GetSchemeStringLength</link> () const</para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1a0be548d5419bede81146a6fcf4729773">GetAuthString</link> () const</para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri_1a6c7e9223173511e2c8addf0a5fbb4719">GetAuthStringLength</link> () const</para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1a0233d4141f2e1f9bf74f8af179df006a">GetPathString</link> () const</para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri_1a7d6e5a13cb64cb5b65439bfd9ea82674">GetPathStringLength</link> () const</para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1aea760c8dcff37c9237929e235cd5b1e5">GetQueryString</link> () const</para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri_1a6ef50d8c3d2d57ce653d88f0fb6297ce">GetQueryStringLength</link> () const</para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1aa1aa1a55c2582da765a9526b6a6fd08f">GetFragString</link> () const</para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri_1a808ac934c8cb8aaf57f63b216a40a9b9">GetFragStringLength</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_uri_1aa2a0b3b540a2736ba253feddf848ff46">operator==</link> (const <link linkend="_class_generic_uri">GenericUri</link> &amp;rhs) const</para>

<para>Equality operators. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_uri_1af220805902de60eda9f4286c017c9c95">operator!=</link> (const <link linkend="_class_generic_uri">GenericUri</link> &amp;rhs) const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_uri_1a1a35d339917489a66064d21642788aab">Match</link> (const <link linkend="_class_generic_uri">GenericUri</link> &amp;uri, bool full=true) const</para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri">GenericUri</link> <link linkend="_class_generic_uri_1a7de4b3a28c8046f2293658bc9c0b44e1">Resolve</link> (const <link linkend="_class_generic_uri">GenericUri</link> &amp;baseuri, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> *allocator=0)</para>

<para>Resolve this URI against another (base) URI in accordance with URI resolution rules. </para>
</listitem>
            <listitem><para><link linkend="_classrapidjson_1_1_allocator">Allocator</link> &amp; <link linkend="_class_generic_uri_1a35243f85b101434281df864d36af4cb8">GetAllocator</link> ()</para>

<para>Get the allocator of this <link linkend="_class_generic_uri">GenericUri</link>. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>std::size_t <link linkend="_class_generic_uri_1a408da6c9ee1bdbc8502ea9bcabf6ab72">Allocate</link> (std::size_t len)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_uri_1adf9b1230a24c35979fb6d2ce4ba0a705">Free</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_uri_1a8e1b49e53460e21b8aebfdf203d985d6">Parse</link> (const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> *uri, std::size_t len)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_uri_1ad367483b60312ed435f952ad18da1650">SetBase</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_uri_1a23fa250dbf260506ca9137de13a56361">SetUri</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1a5677aa39a7770c109ece5f189bff732a">CopyPart</link> (<link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> *to, <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> *from, std::size_t len)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_uri_1ab3eb283c9e6e004451430bd9c7580ec8">RemoveDotSegments</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1a41d10afd782236002b18b8cb681a2e3f">uri_</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1a0f4b06d9f60105fe6f47f16b0a258bc2">base_</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1a0a7f212c8f2c7a4d50bb855d6f85db7e">scheme_</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1a639baa36906d6b2b8fe035e225fc2723">auth_</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1a234d1bbd4ad0aa541ddb112324112c0c">path_</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1a4e48c494a9ce691cf1e582110d591a5a">query_</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri_1a0776231ad42838ccb66484fa12fa80ac">frag_</link></para>
</listitem>
            <listitem><para><link linkend="_classrapidjson_1_1_allocator">Allocator</link> * <link linkend="_class_generic_uri_1a7dfc227fe6ffd380d4f9f69dc7ecc3b1">allocator_</link></para>

<para>The current allocator. It is either user-supplied or equal to ownAllocator_. </para>
</listitem>
            <listitem><para><link linkend="_classrapidjson_1_1_allocator">Allocator</link> * <link linkend="_class_generic_uri_1af17ffab721cedc6db5ad2000bb13a06e">ownAllocator_</link></para>

<para>Allocator owned by this Uri. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">ValueType::Ch</link> <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Ch</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_generic_uri_1ae9e702382446e760e66e45872567b59e"/><section>
    <title>GenericUri()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>GenericUri</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GenericUri</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;<link linkend="_class_generic_uri">::GenericUri</link> (<link linkend="_classrapidjson_1_1_allocator">Allocator</link> * allocator = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructors. </para>
</para>
</section>
<anchor xml:id="_class_generic_uri_1a188f7f9d11aac1c7647e6f43e05fcbd4"/><section>
    <title>GenericUri()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>GenericUri</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GenericUri</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;<link linkend="_class_generic_uri">::GenericUri</link> (const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * uri, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> * allocator = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a2077917cd430c4893a3eee2fc5133727"/><section>
    <title>GenericUri()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>GenericUri</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GenericUri</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;<link linkend="_class_generic_uri">::GenericUri</link> (const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * uri, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> * allocator = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1ae0d105ae4ae9a2edc6489835f3bf62a5"/><section>
    <title>GenericUri()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>GenericUri</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GenericUri</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;<link linkend="_class_generic_uri">::GenericUri</link> (const <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &amp; uri, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> * allocator = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a701930adaab51f0da0b2fba64bb67b25"/><section>
    <title>GenericUri()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>GenericUri</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GenericUri</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;<link linkend="_class_generic_uri">::GenericUri</link> (const <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; &amp; rhs)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
<anchor xml:id="_class_generic_uri_1a233ee45aeaeb5ee3a6ccea5a720d67b2"/><section>
    <title>GenericUri()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>GenericUri</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GenericUri</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;<link linkend="_class_generic_uri">::GenericUri</link> (const <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; &amp; rhs, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> * allocator)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
</section>
<anchor xml:id="_class_generic_uri_1a6479d97f05ba77b27f06778ce17590d0"/><section>
    <title>~GenericUri()</title>
<indexterm><primary>~GenericUri</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>~GenericUri</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::~<link linkend="_class_generic_uri">GenericUri</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Destructor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_generic_uri_1a408da6c9ee1bdbc8502ea9bcabf6ab72"/><section>
    <title>Allocate()</title>
<indexterm><primary>Allocate</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>Allocate</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>std::size_t <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Allocate (std::size_t len)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a5677aa39a7770c109ece5f189bff732a"/><section>
    <title>CopyPart()</title>
<indexterm><primary>CopyPart</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>CopyPart</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::CopyPart (<link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * to, <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * from, std::size_t len)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1adf9b1230a24c35979fb6d2ce4ba0a705"/><section>
    <title>Free()</title>
<indexterm><primary>Free</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>Free</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Free ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1ae3d2e835bd683e41720379260c2f1e04"/><section>
    <title>Get()</title>
<indexterm><primary>Get</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>Get</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Get (<link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &amp; uri, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &amp; allocator)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Getters. </para>
</para>
</section>
<anchor xml:id="_class_generic_uri_1a35243f85b101434281df864d36af4cb8"/><section>
    <title>GetAllocator()</title>
<indexterm><primary>GetAllocator</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetAllocator</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_classrapidjson_1_1_allocator">Allocator</link> &amp; <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetAllocator ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get the allocator of this <link linkend="_class_generic_uri">GenericUri</link>. </para>
</para>
</section>
<anchor xml:id="_class_generic_uri_1a0be548d5419bede81146a6fcf4729773"/><section>
    <title>GetAuthString()</title>
<indexterm><primary>GetAuthString</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetAuthString</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetAuthString ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a6c7e9223173511e2c8addf0a5fbb4719"/><section>
    <title>GetAuthStringLength()</title>
<indexterm><primary>GetAuthStringLength</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetAuthStringLength</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetAuthStringLength ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1aa01f0e6bc010e7f41e91f11351b7a1a4"/><section>
    <title>GetBaseString()</title>
<indexterm><primary>GetBaseString</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetBaseString</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetBaseString ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a87075603b398cc925d04180343443aca"/><section>
    <title>GetBaseStringLength()</title>
<indexterm><primary>GetBaseStringLength</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetBaseStringLength</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetBaseStringLength ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1aa1aa1a55c2582da765a9526b6a6fd08f"/><section>
    <title>GetFragString()</title>
<indexterm><primary>GetFragString</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetFragString</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetFragString ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a808ac934c8cb8aaf57f63b216a40a9b9"/><section>
    <title>GetFragStringLength()</title>
<indexterm><primary>GetFragStringLength</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetFragStringLength</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetFragStringLength ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a0233d4141f2e1f9bf74f8af179df006a"/><section>
    <title>GetPathString()</title>
<indexterm><primary>GetPathString</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetPathString</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetPathString ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a7d6e5a13cb64cb5b65439bfd9ea82674"/><section>
    <title>GetPathStringLength()</title>
<indexterm><primary>GetPathStringLength</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetPathStringLength</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetPathStringLength ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1aea760c8dcff37c9237929e235cd5b1e5"/><section>
    <title>GetQueryString()</title>
<indexterm><primary>GetQueryString</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetQueryString</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetQueryString ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a6ef50d8c3d2d57ce653d88f0fb6297ce"/><section>
    <title>GetQueryStringLength()</title>
<indexterm><primary>GetQueryStringLength</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetQueryStringLength</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetQueryStringLength ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a797383c9f123cf1069686255d26e01b5"/><section>
    <title>GetSchemeString()</title>
<indexterm><primary>GetSchemeString</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetSchemeString</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetSchemeString ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1ac3337c9af8f61c56301e2c51b9c03183"/><section>
    <title>GetSchemeStringLength()</title>
<indexterm><primary>GetSchemeStringLength</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetSchemeStringLength</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetSchemeStringLength ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a77129c5d1d6510eca7cc3623ffa6cf96"/><section>
    <title>GetString()</title>
<indexterm><primary>GetString</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetString</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetString ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1ad8f54ebb7d47030b4b0900b6987d76f7"/><section>
    <title>GetStringLength()</title>
<indexterm><primary>GetStringLength</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>GetStringLength</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetStringLength ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a1a35d339917489a66064d21642788aab"/><section>
    <title>Match()</title>
<indexterm><primary>Match</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>Match</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Match (const <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; &amp; uri, bool full = <computeroutput>true</computeroutput>
) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1af220805902de60eda9f4286c017c9c95"/><section>
    <title>operator!=()</title>
<indexterm><primary>operator!=</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::operator!= (const <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; &amp; rhs) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1adbd9d4a3a05a34aed0b05a016110b54e"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri">GenericUri</link> &amp; <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::operator= (const <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; &amp; rhs)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Assignment operator. </para>
</para>
</section>
<anchor xml:id="_class_generic_uri_1aa2a0b3b540a2736ba253feddf848ff46"/><section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::operator== (const <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; &amp; rhs) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Equality operators. </para>
</para>
</section>
<anchor xml:id="_class_generic_uri_1a8e1b49e53460e21b8aebfdf203d985d6"/><section>
    <title>Parse()</title>
<indexterm><primary>Parse</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>Parse</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Parse (const <link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link> * uri, std::size_t len)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1ab3eb283c9e6e004451430bd9c7580ec8"/><section>
    <title>RemoveDotSegments()</title>
<indexterm><primary>RemoveDotSegments</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>RemoveDotSegments</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::RemoveDotSegments ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a7de4b3a28c8046f2293658bc9c0b44e1"/><section>
    <title>Resolve()</title>
<indexterm><primary>Resolve</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>Resolve</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri">GenericUri</link> <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Resolve (const <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; &amp; baseuri, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> * allocator = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Resolve this URI against another (base) URI in accordance with URI resolution rules. </para>
</para>
</section>
<anchor xml:id="_class_generic_uri_1ad367483b60312ed435f952ad18da1650"/><section>
    <title>SetBase()</title>
<indexterm><primary>SetBase</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>SetBase</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::SetBase ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a23fa250dbf260506ca9137de13a56361"/><section>
    <title>SetUri()</title>
<indexterm><primary>SetUri</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>SetUri</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::SetUri ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_generic_uri_1a7dfc227fe6ffd380d4f9f69dc7ecc3b1"/><section>
    <title>allocator_</title>
<indexterm><primary>allocator_</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>allocator_</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_classrapidjson_1_1_allocator">Allocator</link>* <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::allocator_<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>The current allocator. It is either user-supplied or equal to ownAllocator_. </para>
</para>
</section>
<anchor xml:id="_class_generic_uri_1a639baa36906d6b2b8fe035e225fc2723"/><section>
    <title>auth_</title>
<indexterm><primary>auth_</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>auth_</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link>* <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::auth_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a0f4b06d9f60105fe6f47f16b0a258bc2"/><section>
    <title>base_</title>
<indexterm><primary>base_</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>base_</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link>* <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::base_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a0776231ad42838ccb66484fa12fa80ac"/><section>
    <title>frag_</title>
<indexterm><primary>frag_</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>frag_</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link>* <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::frag_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1af17ffab721cedc6db5ad2000bb13a06e"/><section>
    <title>ownAllocator_</title>
<indexterm><primary>ownAllocator_</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>ownAllocator_</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_classrapidjson_1_1_allocator">Allocator</link>* <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::ownAllocator_<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Allocator owned by this Uri. </para>
</para>
</section>
<anchor xml:id="_class_generic_uri_1a234d1bbd4ad0aa541ddb112324112c0c"/><section>
    <title>path_</title>
<indexterm><primary>path_</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>path_</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link>* <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::path_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a4e48c494a9ce691cf1e582110d591a5a"/><section>
    <title>query_</title>
<indexterm><primary>query_</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>query_</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link>* <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::query_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a0a7f212c8f2c7a4d50bb855d6f85db7e"/><section>
    <title>scheme_</title>
<indexterm><primary>scheme_</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>scheme_</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link>* <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::scheme_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_uri_1a41d10afd782236002b18b8cb681a2e3f"/><section>
    <title>uri_</title>
<indexterm><primary>uri_</primary><secondary>GenericUri&lt; ValueType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericUri&lt; ValueType, Allocator &gt;</primary><secondary>uri_</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_uri_1a20d0602cff62211d89bc4b25963beeee">Ch</link>* <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::uri_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_uri_8h">uri.h</link></section>
</section>
