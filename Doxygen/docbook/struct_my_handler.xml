<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_my_handler" xml:lang="en-US">
<title>MyHandler Struct Reference</title>
<indexterm><primary>MyHandler</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_my_handler_1ae759f5e534afb5cb99a4fefb3d04f2d4">MyHandler</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a73b14891ee0ab44fc336b3e2044e3153">Null</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a29eeca8918d0966a0551adb23c8a2b15">Bool</link> (bool b)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1aa7cda8307f15dd8f4a09947e527d56cf">Int</link> (int i)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a469684e51df996bab87e0c22c0ea64fd">Uint</link> (unsigned u)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a5676446b090d3c71386aec6a39dbb188">Int64</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> i)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a87b2d8341b4e3a38d405a89fe0d848ad">Uint64</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> u)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a5ff39ea10f682eab1943480b020c6f5a">Double</link> (double d)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a4e16a5a38de99a5d3b54992f3fbe2452">RawNumber</link> (const char *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a5f46e8498869668d70e23453126a7b12">String</link> (const char *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1afc0da4321f0a06e3cd351e573c435ffe">StartObject</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1afca1a3a16289baf03128fa7d63081526">Key</link> (const char *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a3eb4011dcba95939e5f08e71c1596395">EndObject</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> memberCount)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a1e794a6439658520bda0de14f661fc50">StartArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a8654e16efc52d41397ce1a9af98bcb80">EndArray</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> elementCount)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a73b14891ee0ab44fc336b3e2044e3153">Null</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a29eeca8918d0966a0551adb23c8a2b15">Bool</link> (bool b)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1aa7cda8307f15dd8f4a09947e527d56cf">Int</link> (int i)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a469684e51df996bab87e0c22c0ea64fd">Uint</link> (unsigned u)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a5676446b090d3c71386aec6a39dbb188">Int64</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> i)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a87b2d8341b4e3a38d405a89fe0d848ad">Uint64</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> u)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a5ff39ea10f682eab1943480b020c6f5a">Double</link> (double d)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a2c0d1c7a2957aa8928830fa08b7d4c2e">RawNumber</link> (const char *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a168c2fa7ab156114627ccb0c563859ac">String</link> (const char *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1afc0da4321f0a06e3cd351e573c435ffe">StartObject</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1ace0885a04c3506790df44ec4ac542a1a">Key</link> (const char *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a3eb4011dcba95939e5f08e71c1596395">EndObject</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> memberCount)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a1e794a6439658520bda0de14f661fc50">StartArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_my_handler_1a8654e16efc52d41397ce1a9af98bcb80">EndArray</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> elementCount)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>const char * <link linkend="_struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971">type</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc">data</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_my_handler_1ae8e0885913f15a0219cef12847f548b0">MyHandler</link> (const <link linkend="_struct_my_handler">MyHandler</link> &amp;noCopyConstruction)</para>
</listitem>
            <listitem><para><link linkend="_struct_my_handler">MyHandler</link> &amp; <link linkend="_struct_my_handler_1af8b7601c8128c3c196bbbd1030701188">operator=</link> (const <link linkend="_struct_my_handler">MyHandler</link> &amp;noAssignment)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_my_handler_1ae759f5e534afb5cb99a4fefb3d04f2d4"/><section>
    <title>MyHandler()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>MyHandler</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>MyHandler</secondary></indexterm>
<para><computeroutput>MyHandler::MyHandler ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1ae8e0885913f15a0219cef12847f548b0"/><section>
    <title>MyHandler()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>MyHandler</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>MyHandler</secondary></indexterm>
<para><computeroutput>MyHandler::MyHandler (const <link linkend="_struct_my_handler">MyHandler</link> &amp; noCopyConstruction)<computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_my_handler_1a29eeca8918d0966a0551adb23c8a2b15"/><section>
    <title>Bool()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Bool</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Bool</secondary></indexterm>
<para><computeroutput>bool MyHandler::Bool (bool b)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a29eeca8918d0966a0551adb23c8a2b15"/><section>
    <title>Bool()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Bool</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Bool</secondary></indexterm>
<para><computeroutput>bool MyHandler::Bool (bool b)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a5ff39ea10f682eab1943480b020c6f5a"/><section>
    <title>Double()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Double</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Double</secondary></indexterm>
<para><computeroutput>bool MyHandler::Double (double d)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a5ff39ea10f682eab1943480b020c6f5a"/><section>
    <title>Double()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Double</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Double</secondary></indexterm>
<para><computeroutput>bool MyHandler::Double (double d)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a8654e16efc52d41397ce1a9af98bcb80"/><section>
    <title>EndArray()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>EndArray</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>EndArray</secondary></indexterm>
<para><computeroutput>bool MyHandler::EndArray (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> elementCount)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a8654e16efc52d41397ce1a9af98bcb80"/><section>
    <title>EndArray()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>EndArray</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>EndArray</secondary></indexterm>
<para><computeroutput>bool MyHandler::EndArray (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> elementCount)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a3eb4011dcba95939e5f08e71c1596395"/><section>
    <title>EndObject()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>EndObject</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>EndObject</secondary></indexterm>
<para><computeroutput>bool MyHandler::EndObject (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> memberCount)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a3eb4011dcba95939e5f08e71c1596395"/><section>
    <title>EndObject()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>EndObject</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>EndObject</secondary></indexterm>
<para><computeroutput>bool MyHandler::EndObject (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> memberCount)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1aa7cda8307f15dd8f4a09947e527d56cf"/><section>
    <title>Int()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Int</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Int</secondary></indexterm>
<para><computeroutput>bool MyHandler::Int (int i)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1aa7cda8307f15dd8f4a09947e527d56cf"/><section>
    <title>Int()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Int</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Int</secondary></indexterm>
<para><computeroutput>bool MyHandler::Int (int i)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a5676446b090d3c71386aec6a39dbb188"/><section>
    <title>Int64()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Int64</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Int64</secondary></indexterm>
<para><computeroutput>bool MyHandler::Int64 (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> i)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a5676446b090d3c71386aec6a39dbb188"/><section>
    <title>Int64()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Int64</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Int64</secondary></indexterm>
<para><computeroutput>bool MyHandler::Int64 (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> i)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1ace0885a04c3506790df44ec4ac542a1a"/><section>
    <title>Key()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Key</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Key</secondary></indexterm>
<para><computeroutput>bool MyHandler::Key (const char * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1afca1a3a16289baf03128fa7d63081526"/><section>
    <title>Key()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Key</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Key</secondary></indexterm>
<para><computeroutput>bool MyHandler::Key (const char * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a73b14891ee0ab44fc336b3e2044e3153"/><section>
    <title>Null()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Null</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Null</secondary></indexterm>
<para><computeroutput>bool MyHandler::Null ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a73b14891ee0ab44fc336b3e2044e3153"/><section>
    <title>Null()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Null</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Null</secondary></indexterm>
<para><computeroutput>bool MyHandler::Null ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1af8b7601c8128c3c196bbbd1030701188"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_struct_my_handler">MyHandler</link> &amp; MyHandler::operator= (const <link linkend="_struct_my_handler">MyHandler</link> &amp; noAssignment)<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a2c0d1c7a2957aa8928830fa08b7d4c2e"/><section>
    <title>RawNumber()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>RawNumber</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>RawNumber</secondary></indexterm>
<para><computeroutput>bool MyHandler::RawNumber (const char * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a4e16a5a38de99a5d3b54992f3fbe2452"/><section>
    <title>RawNumber()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>RawNumber</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>RawNumber</secondary></indexterm>
<para><computeroutput>bool MyHandler::RawNumber (const char * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a1e794a6439658520bda0de14f661fc50"/><section>
    <title>StartArray()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>StartArray</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>StartArray</secondary></indexterm>
<para><computeroutput>bool MyHandler::StartArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a1e794a6439658520bda0de14f661fc50"/><section>
    <title>StartArray()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>StartArray</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>StartArray</secondary></indexterm>
<para><computeroutput>bool MyHandler::StartArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1afc0da4321f0a06e3cd351e573c435ffe"/><section>
    <title>StartObject()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>StartObject</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>StartObject</secondary></indexterm>
<para><computeroutput>bool MyHandler::StartObject ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1afc0da4321f0a06e3cd351e573c435ffe"/><section>
    <title>StartObject()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>StartObject</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>StartObject</secondary></indexterm>
<para><computeroutput>bool MyHandler::StartObject ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a168c2fa7ab156114627ccb0c563859ac"/><section>
    <title>String()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>String</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>String</secondary></indexterm>
<para><computeroutput>bool MyHandler::String (const char * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a5f46e8498869668d70e23453126a7b12"/><section>
    <title>String()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>String</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>String</secondary></indexterm>
<para><computeroutput>bool MyHandler::String (const char * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a469684e51df996bab87e0c22c0ea64fd"/><section>
    <title>Uint()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Uint</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Uint</secondary></indexterm>
<para><computeroutput>bool MyHandler::Uint (unsigned u)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a469684e51df996bab87e0c22c0ea64fd"/><section>
    <title>Uint()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Uint</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Uint</secondary></indexterm>
<para><computeroutput>bool MyHandler::Uint (unsigned u)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a87b2d8341b4e3a38d405a89fe0d848ad"/><section>
    <title>Uint64()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Uint64</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Uint64</secondary></indexterm>
<para><computeroutput>bool MyHandler::Uint64 (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> u)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a87b2d8341b4e3a38d405a89fe0d848ad"/><section>
    <title>Uint64()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Uint64</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>Uint64</secondary></indexterm>
<para><computeroutput>bool MyHandler::Uint64 (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> u)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_my_handler_1a408932a0e3cc57b0d997cd9b0801fefc"/><section>
    <title>data</title>
<indexterm><primary>data</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>data</secondary></indexterm>
<para><computeroutput>std::string MyHandler::data</computeroutput></para></section>
<anchor xml:id="_struct_my_handler_1a5ddbe6be6982b231315cdfae9e839971"/><section>
    <title>type</title>
<indexterm><primary>type</primary><secondary>MyHandler</secondary></indexterm>
<indexterm><primary>MyHandler</primary><secondary>type</secondary></indexterm>
<para><computeroutput>const char* MyHandler::type</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
src/rapidjson/example/simplepullreader/<link linkend="_simplepullreader_8cpp">simplepullreader.cpp</link>src/rapidjson/example/simplereader/<link linkend="_simplereader_8cpp">simplereader.cpp</link></section>
</section>
