<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_student" xml:lang="en-US">
<title>Student Struct Reference</title>
<indexterm><primary>Student</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_student_1af9168cedbfa5565cf0b20c1a9d3f5c9d">Student</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_student_1a606fc3f2ba0a2b539265b1403ad0d2f8">Student</link> (const std::string <link linkend="_struct_student_1a9aeb48a925f370292564def17482f0ec">name</link>, unsigned <link linkend="_struct_student_1a8fbfd10bbc9707931f6d03819f438f9a">age</link>, double <link linkend="_struct_student_1a3678b8d546afa6efa6120e22c51f49c3">height</link>, bool <link linkend="_struct_student_1af95604458295ad1c3e8fcb100b44ef57">canSwim</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>std::string <link linkend="_struct_student_1a9aeb48a925f370292564def17482f0ec">name</link></para>
</listitem>
            <listitem><para>unsigned <link linkend="_struct_student_1a8fbfd10bbc9707931f6d03819f438f9a">age</link></para>
</listitem>
            <listitem><para>double <link linkend="_struct_student_1a3678b8d546afa6efa6120e22c51f49c3">height</link></para>
</listitem>
            <listitem><para>bool <link linkend="_struct_student_1af95604458295ad1c3e8fcb100b44ef57">canSwim</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_student_1af9168cedbfa5565cf0b20c1a9d3f5c9d"/><section>
    <title>Student()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Student</primary><secondary>Student</secondary></indexterm>
<indexterm><primary>Student</primary><secondary>Student</secondary></indexterm>
<para><computeroutput>Student::Student ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_student_1a606fc3f2ba0a2b539265b1403ad0d2f8"/><section>
    <title>Student()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Student</primary><secondary>Student</secondary></indexterm>
<indexterm><primary>Student</primary><secondary>Student</secondary></indexterm>
<para><computeroutput>Student::Student (const std::string name, unsigned age, double height, bool canSwim)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_student_1a8fbfd10bbc9707931f6d03819f438f9a"/><section>
    <title>age</title>
<indexterm><primary>age</primary><secondary>Student</secondary></indexterm>
<indexterm><primary>Student</primary><secondary>age</secondary></indexterm>
<para><computeroutput>unsigned Student::age</computeroutput></para></section>
<anchor xml:id="_struct_student_1af95604458295ad1c3e8fcb100b44ef57"/><section>
    <title>canSwim</title>
<indexterm><primary>canSwim</primary><secondary>Student</secondary></indexterm>
<indexterm><primary>Student</primary><secondary>canSwim</secondary></indexterm>
<para><computeroutput>bool Student::canSwim</computeroutput></para></section>
<anchor xml:id="_struct_student_1a3678b8d546afa6efa6120e22c51f49c3"/><section>
    <title>height</title>
<indexterm><primary>height</primary><secondary>Student</secondary></indexterm>
<indexterm><primary>Student</primary><secondary>height</secondary></indexterm>
<para><computeroutput>double Student::height</computeroutput></para></section>
<anchor xml:id="_struct_student_1a9aeb48a925f370292564def17482f0ec"/><section>
    <title>name</title>
<indexterm><primary>name</primary><secondary>Student</secondary></indexterm>
<indexterm><primary>Student</primary><secondary>name</secondary></indexterm>
<para><computeroutput>std::string Student::name</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
src/rapidjson/example/archiver/<link linkend="_archivertest_8cpp">archivertest.cpp</link></section>
</section>
