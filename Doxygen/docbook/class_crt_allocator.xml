<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_crt_allocator" xml:lang="en-US">
<title>CrtAllocator Class Reference</title>
<indexterm><primary>CrtAllocator</primary></indexterm>
<para>

<para>C-runtime library allocator. </para>
 
</para>
<para>
<computeroutput>#include &lt;allocators.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void * <link linkend="_class_crt_allocator_1ae9b348831bee2b1b52b736c2d3921bad">Malloc</link> (size_t size)</para>
</listitem>
            <listitem><para>void * <link linkend="_class_crt_allocator_1a54b9a20354ba249613d332a7b445575d">Realloc</link> (void *originalPtr, size_t originalSize, size_t newSize)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_crt_allocator_1ae65fb1b4e1272d05e003be57feac68a6">operator==</link> (const <link linkend="_class_crt_allocator">CrtAllocator</link> &amp;) const RAPIDJSON_NOEXCEPT</para>
</listitem>
            <listitem><para>bool <link linkend="_class_crt_allocator_1a1fb8ca99a43c939595e5c0b548d7532c">operator!=</link> (const <link linkend="_class_crt_allocator">CrtAllocator</link> &amp;) const RAPIDJSON_NOEXCEPT</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static void <link linkend="_class_crt_allocator_1aa09ed06f0decbedcaaa2c2a417820a79">Free</link> (void *ptr) RAPIDJSON_NOEXCEPT</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>static const bool <link linkend="_class_crt_allocator_1ac7df8398c529290f0cd5950d9492f524">kNeedFree</link> = true</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>C-runtime library allocator. </para>



<para>This class is just wrapper for standard C library memory routines. <note><title>Note</title>

<para>implements Allocator concept </para>
</note>
</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_crt_allocator_1aa09ed06f0decbedcaaa2c2a417820a79"/><section>
    <title>Free()</title>
<indexterm><primary>Free</primary><secondary>CrtAllocator</secondary></indexterm>
<indexterm><primary>CrtAllocator</primary><secondary>Free</secondary></indexterm>
<para><computeroutput>static void CrtAllocator::Free (void * ptr)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_crt_allocator_1ae9b348831bee2b1b52b736c2d3921bad"/><section>
    <title>Malloc()</title>
<indexterm><primary>Malloc</primary><secondary>CrtAllocator</secondary></indexterm>
<indexterm><primary>CrtAllocator</primary><secondary>Malloc</secondary></indexterm>
<para><computeroutput>void * CrtAllocator::Malloc (size_t size)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_crt_allocator_1a1fb8ca99a43c939595e5c0b548d7532c"/><section>
    <title>operator!=()</title>
<indexterm><primary>operator!=</primary><secondary>CrtAllocator</secondary></indexterm>
<indexterm><primary>CrtAllocator</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput>bool CrtAllocator::operator!= (const <link linkend="_class_crt_allocator">CrtAllocator</link> &amp; ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_crt_allocator_1ae65fb1b4e1272d05e003be57feac68a6"/><section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>CrtAllocator</secondary></indexterm>
<indexterm><primary>CrtAllocator</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput>bool CrtAllocator::operator== (const <link linkend="_class_crt_allocator">CrtAllocator</link> &amp; ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_crt_allocator_1a54b9a20354ba249613d332a7b445575d"/><section>
    <title>Realloc()</title>
<indexterm><primary>Realloc</primary><secondary>CrtAllocator</secondary></indexterm>
<indexterm><primary>CrtAllocator</primary><secondary>Realloc</secondary></indexterm>
<para><computeroutput>void * CrtAllocator::Realloc (void * originalPtr, size_t originalSize, size_t newSize)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_crt_allocator_1ac7df8398c529290f0cd5950d9492f524"/><section>
    <title>kNeedFree</title>
<indexterm><primary>kNeedFree</primary><secondary>CrtAllocator</secondary></indexterm>
<indexterm><primary>CrtAllocator</primary><secondary>kNeedFree</secondary></indexterm>
<para><computeroutput>const bool CrtAllocator::kNeedFree = true<computeroutput>[static]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_allocators_8h">allocators.h</link></section>
</section>
