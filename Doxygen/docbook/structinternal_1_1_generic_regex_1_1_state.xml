<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structinternal_1_1_generic_regex_1_1_state" xml:lang="en-US">
<title>internal::GenericRegex&lt; Encoding, Allocator &gt;::State Struct Reference</title>
<indexterm><primary>internal::GenericRegex&lt; Encoding, Allocator &gt;::State</primary></indexterm>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_structinternal_1_1_generic_regex_1_1_state_1a2db0ecd5296137b4e27a8bdb9b9b3a36">out</link></para>

<para>Equals to kInvalid for matching state. </para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_structinternal_1_1_generic_regex_1_1_state_1a018baa62233a52e87df7dac21dcfefc7">out1</link></para>

<para>Equals to non-kInvalid for split. </para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_structinternal_1_1_generic_regex_1_1_state_1a4f994da3eb09d3d86ad7dbfec4dd5c1c">rangeStart</link></para>
</listitem>
            <listitem><para>unsigned <link linkend="_structinternal_1_1_generic_regex_1_1_state_1ab085a481f7a18c4a70d4cc534a72a23e">codepoint</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_structinternal_1_1_generic_regex_1_1_state_1ab085a481f7a18c4a70d4cc534a72a23e"/><section>
    <title>codepoint</title>
<indexterm><primary>codepoint</primary><secondary>internal::GenericRegex&lt; Encoding, Allocator &gt;::State</secondary></indexterm>
<indexterm><primary>internal::GenericRegex&lt; Encoding, Allocator &gt;::State</primary><secondary>codepoint</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>unsigned <link linkend="_classinternal_1_1_generic_regex">internal::GenericRegex</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::State::codepoint</computeroutput></para></section>
<anchor xml:id="_structinternal_1_1_generic_regex_1_1_state_1a2db0ecd5296137b4e27a8bdb9b9b3a36"/><section>
    <title>out</title>
<indexterm><primary>out</primary><secondary>internal::GenericRegex&lt; Encoding, Allocator &gt;::State</secondary></indexterm>
<indexterm><primary>internal::GenericRegex&lt; Encoding, Allocator &gt;::State</primary><secondary>out</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_classinternal_1_1_generic_regex">internal::GenericRegex</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::State::out</computeroutput></para><para>

<para>Equals to kInvalid for matching state. </para>
</para>
</section>
<anchor xml:id="_structinternal_1_1_generic_regex_1_1_state_1a018baa62233a52e87df7dac21dcfefc7"/><section>
    <title>out1</title>
<indexterm><primary>out1</primary><secondary>internal::GenericRegex&lt; Encoding, Allocator &gt;::State</secondary></indexterm>
<indexterm><primary>internal::GenericRegex&lt; Encoding, Allocator &gt;::State</primary><secondary>out1</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_classinternal_1_1_generic_regex">internal::GenericRegex</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::State::out1</computeroutput></para><para>

<para>Equals to non-kInvalid for split. </para>
</para>
</section>
<anchor xml:id="_structinternal_1_1_generic_regex_1_1_state_1a4f994da3eb09d3d86ad7dbfec4dd5c1c"/><section>
    <title>rangeStart</title>
<indexterm><primary>rangeStart</primary><secondary>internal::GenericRegex&lt; Encoding, Allocator &gt;::State</secondary></indexterm>
<indexterm><primary>internal::GenericRegex&lt; Encoding, Allocator &gt;::State</primary><secondary>rangeStart</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_classinternal_1_1_generic_regex">internal::GenericRegex</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::State::rangeStart</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
src/rapidjson/include/rapidjson/internal/<link linkend="_regex_8h">regex.h</link></section>
</section>
