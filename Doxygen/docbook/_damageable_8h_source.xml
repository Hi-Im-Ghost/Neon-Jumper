<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__damageable_8h_source" xml:lang="en-US">
<title>Damageable.h</title>
<indexterm><primary>src/modules/Damageable.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;TREES_JSON_DAMAGEABLE_H</emphasis>
2 <emphasis role="preprocessor">#define&#32;TREES_JSON_DAMAGEABLE_H</emphasis>
3 
7 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_damageable">Damageable</link>&#32;{
8 <emphasis role="keyword">private</emphasis>:
10 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hp;
12 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxHP;
14 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_bIsInvincible&#32;=&#32;<emphasis role="keyword">false</emphasis>;
16 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;invTime;
17 
18 <emphasis role="keyword">protected</emphasis>:
20 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_damageable_1a277b1ab8be1a6de8af7869ec1e8b7c41">updateInvincibilityTimer</link>(<emphasis role="keywordtype">float</emphasis>&#32;deltaTime);
21 
22 <emphasis role="keyword">public</emphasis>:
24 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_damageable_1a11ef6567fa56532a64ef1f59a298b1dc">takeDamage</link>(<emphasis role="keywordtype">int</emphasis>&#32;damage);
26 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_damageable_1a74b39da9a9983afddeed50e74ef838a2">setMaxHP</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;newMax);
28 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_damageable_1a2babc0ff0f6b3e78440c71291c727e44">getMaxHP</link>()&#32;<emphasis role="keyword">const</emphasis>;
30 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_damageable_1a85c9ee9faee9f45d76e2a8bf8345670d">setHP</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;newHP);
32 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_damageable_1a3c6239facd5bd44ded1a93b657706dae">getHP</link>()&#32;<emphasis role="keyword">const</emphasis>;
34 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_damageable_1aaca986bb54bb1d762837c0ed30362725">getIsInvincible</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;_bIsInvincible;}
36 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_damageable_1a125647c54da3ac37588acf783a1bc27e">isDead</link>();
37 };
38 
39 
40 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//TREES_JSON_DAMAGEABLE_H</emphasis>
</programlisting></section>
