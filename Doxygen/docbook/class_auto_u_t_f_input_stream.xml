<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_auto_u_t_f_input_stream" xml:lang="en-US">
<title>AutoUTFInputStream&lt; CharType, InputByteStream &gt; Class Template Reference</title>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary></indexterm>
<para>

<para>Input stream wrapper with dynamically bound encoding and automatic encoding detection. </para>
 
</para>
<para>
<computeroutput>#include &lt;encodedstream.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef CharType <link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_auto_u_t_f_input_stream_1a83837fced0971ba26dd9a8ec1575abb0">AutoUTFInputStream</link> (InputByteStream &amp;is, <link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> type=<link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58a7fd9945f1c494a4a4ee9446017e790f1">kUTF8</link>)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> <link linkend="_class_auto_u_t_f_input_stream_1ad8e8b71e852db11a841fbba40431c5d1">GetType</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_auto_u_t_f_input_stream_1a8831def623c28a3ec1d59b75abe5b20e">HasBOM</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link> <link linkend="_class_auto_u_t_f_input_stream_1a616fbe24878a2026fbc7743acb50438c">Peek</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link> <link linkend="_class_auto_u_t_f_input_stream_1a652cd1ae8bd848a5ecce4efa1ebd0f38">Take</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_auto_u_t_f_input_stream_1a6b847c75309e4ed36957f232b9ce88d1">Tell</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_auto_u_t_f_input_stream_1a5ea730d1ab715f58ce4f9e3dcd77810a">Put</link> (<link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_class_auto_u_t_f_input_stream_1aecc08f52794d761fc1b729907a83dcf8">Flush</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link> * <link linkend="_class_auto_u_t_f_input_stream_1a5ed99e5f59547e83575b7f65cb4ea643">PutBegin</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_auto_u_t_f_input_stream_1a41bd66602f82d344383792feac34f9f7">PutEnd</link> (<link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link> *)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Types    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link>(* <link linkend="_class_auto_u_t_f_input_stream_1a106a0af4b098cc88e1dba285b8f563ae">TakeFunc</link>) (InputByteStream &amp;is)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_auto_u_t_f_input_stream_1a74f5efc9cfc9e9978d81a3282abf17da">RAPIDJSON_STATIC_ASSERT</link> (sizeof(typename InputByteStream::Ch)==1)</para>
</listitem>
            <listitem><para><link linkend="_class_auto_u_t_f_input_stream_1a54001615e50304edf4a4ac1b2931f5d7">AutoUTFInputStream</link> (const <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link> &amp; <link linkend="_class_auto_u_t_f_input_stream_1a6e4e37102334a8a055787e59209ea012">operator=</link> (const <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link> &amp;)</para>
</listitem>
            <listitem><para>void <link linkend="_class_auto_u_t_f_input_stream_1ae7ec4841acf560cdaee9204d6ad5dec8">DetectType</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>InputByteStream * <link linkend="_class_auto_u_t_f_input_stream_1aee206b352000902d02dac147761a61dc">is_</link></para>
</listitem>
            <listitem><para><link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> <link linkend="_class_auto_u_t_f_input_stream_1aef307895f82bc15a7a37ded277aefe2e">type_</link></para>
</listitem>
            <listitem><para><link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link> <link linkend="_class_auto_u_t_f_input_stream_1a1b89f7dca4c3c462347bf7bc066a2fe1">current_</link></para>
</listitem>
            <listitem><para><link linkend="_class_auto_u_t_f_input_stream_1a106a0af4b098cc88e1dba285b8f563ae">TakeFunc</link> <link linkend="_class_auto_u_t_f_input_stream_1a8996755d783dcae9049d9f1ad96391fb">takeFunc_</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_auto_u_t_f_input_stream_1ac329c186f5b0dc82433effecaaf1bf46">hasBOM_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename CharType, typename InputByteStream&gt;
class AutoUTFInputStream&lt; CharType, InputByteStream &gt;</title></simplesect>

<para>Input stream wrapper with dynamically bound encoding and automatic encoding detection. </para>



<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>CharType</entry><entry>
<para>Type of character for reading. </para>
</entry>
                            </row>
                            <row>
<entry>InputByteStream</entry><entry>
<para>type of input byte stream to be wrapped. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput>typedef CharType <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::Ch</computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a106a0af4b098cc88e1dba285b8f563ae"/><section>
    <title>TakeFunc</title>
<indexterm><primary>TakeFunc</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>TakeFunc</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link>(* <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::TakeFunc) (InputByteStream &amp;is)<computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a83837fced0971ba26dd9a8ec1575abb0"/><section>
    <title>AutoUTFInputStream()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>AutoUTFInputStream</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>AutoUTFInputStream</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;<link linkend="_class_auto_u_t_f_input_stream">::AutoUTFInputStream</link> (InputByteStream &amp; is, <link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> type = <computeroutput><link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58a7fd9945f1c494a4a4ee9446017e790f1">kUTF8</link></computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>is</entry><entry>
<para>input stream to be wrapped. </para>
</entry>
                            </row>
                            <row>
<entry>type</entry><entry>
<para>UTF encoding type if it is not detected from the stream. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a54001615e50304edf4a4ac1b2931f5d7"/><section>
    <title>AutoUTFInputStream()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>AutoUTFInputStream</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>AutoUTFInputStream</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;<link linkend="_class_auto_u_t_f_input_stream">::AutoUTFInputStream</link> (const <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_auto_u_t_f_input_stream_1ae7ec4841acf560cdaee9204d6ad5dec8"/><section>
    <title>DetectType()</title>
<indexterm><primary>DetectType</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>DetectType</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput>void <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::DetectType ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1aecc08f52794d761fc1b729907a83dcf8"/><section>
    <title>Flush()</title>
<indexterm><primary>Flush</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>Flush</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput>void <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::Flush ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1ad8e8b71e852db11a841fbba40431c5d1"/><section>
    <title>GetType()</title>
<indexterm><primary>GetType</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>GetType</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::GetType ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a8831def623c28a3ec1d59b75abe5b20e"/><section>
    <title>HasBOM()</title>
<indexterm><primary>HasBOM</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>HasBOM</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::HasBOM ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a6e4e37102334a8a055787e59209ea012"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link> &amp; <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::operator= (const <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a616fbe24878a2026fbc7743acb50438c"/><section>
    <title>Peek()</title>
<indexterm><primary>Peek</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>Peek</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link> <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::Peek ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a5ea730d1ab715f58ce4f9e3dcd77810a"/><section>
    <title>Put()</title>
<indexterm><primary>Put</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>Put</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput>void <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::Put (<link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a5ed99e5f59547e83575b7f65cb4ea643"/><section>
    <title>PutBegin()</title>
<indexterm><primary>PutBegin</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>PutBegin</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link> * <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::PutBegin ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a41bd66602f82d344383792feac34f9f7"/><section>
    <title>PutEnd()</title>
<indexterm><primary>PutEnd</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>PutEnd</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::PutEnd (<link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link> * )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a74f5efc9cfc9e9978d81a3282abf17da"/><section>
    <title>RAPIDJSON_STATIC_ASSERT()</title>
<indexterm><primary>RAPIDJSON_STATIC_ASSERT</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>RAPIDJSON_STATIC_ASSERT</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::RAPIDJSON_STATIC_ASSERT (sizeof(typename InputByteStream::Ch)  = <computeroutput>=1</computeroutput>
)<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a652cd1ae8bd848a5ecce4efa1ebd0f38"/><section>
    <title>Take()</title>
<indexterm><primary>Take</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>Take</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link> <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::Take ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a6b847c75309e4ed36957f232b9ce88d1"/><section>
    <title>Tell()</title>
<indexterm><primary>Tell</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>Tell</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::Tell ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a1b89f7dca4c3c462347bf7bc066a2fe1"/><section>
    <title>current_</title>
<indexterm><primary>current_</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>current_</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_input_stream_1a3bb3eb46f2c20404a7ac21963cfe348f">Ch</link> <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::current_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1ac329c186f5b0dc82433effecaaf1bf46"/><section>
    <title>hasBOM_</title>
<indexterm><primary>hasBOM_</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>hasBOM_</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::hasBOM_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1aee206b352000902d02dac147761a61dc"/><section>
    <title>is_</title>
<indexterm><primary>is_</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>is_</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput>InputByteStream* <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::is_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1a8996755d783dcae9049d9f1ad96391fb"/><section>
    <title>takeFunc_</title>
<indexterm><primary>takeFunc_</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>takeFunc_</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_input_stream_1a106a0af4b098cc88e1dba285b8f563ae">TakeFunc</link> <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::takeFunc_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_input_stream_1aef307895f82bc15a7a37ded277aefe2e"/><section>
    <title>type_</title>
<indexterm><primary>type_</primary><secondary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFInputStream&lt; CharType, InputByteStream &gt;</primary><secondary>type_</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> <link linkend="_class_auto_u_t_f_input_stream">AutoUTFInputStream</link>&lt; CharType, InputByteStream &gt;::type_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_encodedstream_8h">encodedstream.h</link></section>
</section>
