<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_map" xml:lang="en-US">
<title>Map Class Reference</title>
<indexterm><primary>Map</primary></indexterm>
<para>
<computeroutput>#include &lt;Map.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_map_1ac63a69baabe2c549b51ef0507c6a7a8b">Map</link> (std::string mapa)</para>

<para>Konstruktor który parsuje przekazana w parametrze mape. </para>
</listitem>
            <listitem><para><link linkend="_class_map_1aa403fbe09394ccf39747588f5168e3b2">~Map</link> ()</para>

<para>Destruktor. </para>
</listitem>
            <listitem><para>int <link linkend="_class_map_1a2b09c8875af2efb711fc3a022e70427d">getHeight</link> ()</para>

<para>Zwraca wysokość </para>
</listitem>
            <listitem><para>bool <link linkend="_class_map_1a6e7241617514fc7b227d8cb96d30c81a">isInfinite</link> ()</para>

<para>Sprawdza czy wystepuje niesokonczoność </para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_layer">Layer</link> &gt; <link linkend="_class_map_1a3ff0c79b25f70af9cee6f555a53bfd4d">getLayers</link> ()</para>

<para>Zwraca poszczególne warstwy. </para>
</listitem>
            <listitem><para>int <link linkend="_class_map_1a6b1292daca7ef375968f073718c402ca">getNextLayerId</link> ()</para>

<para>Zwaraca nastepne id warstwy. </para>
</listitem>
            <listitem><para>int <link linkend="_class_map_1aacb2f9d02095076e61774bf8df62a970">getNextObjectId</link> ()</para>

<para>Zwraca nastepny id obiektu. </para>
</listitem>
            <listitem><para>std::string <link linkend="_class_map_1a7ae44d1c43fc376de7355ffae6550ae7">getOrientation</link> ()</para>

<para>Zwraca informacje o orientacji. </para>
</listitem>
            <listitem><para>std::string <link linkend="_class_map_1ab0768cad264812a3db223c893fa69ba5">getRenderOrder</link> ()</para>

<para>Zwraca informacje o renderowaniu. </para>
</listitem>
            <listitem><para>std::string <link linkend="_class_map_1ad90c3028202a393e68cb1ae07f23960a">getTiledVersion</link> ()</para>

<para>Zwraca informacje o wersji. </para>
</listitem>
            <listitem><para>int <link linkend="_class_map_1afd173f72cb063592a0daa853a3be9d9e">getTileHeight</link> ()</para>

<para>Zwraca informacje o wysokosci kafelka. </para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_tile_set_map">TileSetMap</link> &gt; <link linkend="_class_map_1a1e601f4ffaf9104214971e12b3b4de17">getTileSetMap</link> ()</para>

<para>Zwraca kafelki mapy. </para>
</listitem>
            <listitem><para>int <link linkend="_class_map_1ab9209a0b619dbd3721335bd414968b6c">getTileWidth</link> ()</para>

<para>Zwraca szerokosc kafelka. </para>
</listitem>
            <listitem><para>std::string <link linkend="_class_map_1a4b04d446d3c661a985874ace350853b9">getType</link> ()</para>

<para>Zwraca informacje o typie. </para>
</listitem>
            <listitem><para>float <link linkend="_class_map_1ad8563d64d89efd1be0694edc54abb2ab">getVersion</link> ()</para>

<para>Zwraca informacje o uzytej wersji zapisu. </para>
</listitem>
            <listitem><para>int <link linkend="_class_map_1afd34d12227676b3cebeed9f5fae2508f">getWidth</link> ()</para>

<para>Zwraca szerokość </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_map_1ac63a69baabe2c549b51ef0507c6a7a8b"/><section>
    <title>Map()</title>
<indexterm><primary>Map</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>Map</secondary></indexterm>
<para><computeroutput>Map::Map (std::string mapa)</computeroutput></para><para>

<para>Konstruktor który parsuje przekazana w parametrze mape. </para>
</para>
</section>
<anchor xml:id="_class_map_1aa403fbe09394ccf39747588f5168e3b2"/><section>
    <title>~Map()</title>
<indexterm><primary>~Map</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>~Map</secondary></indexterm>
<para><computeroutput>Map::~Map ( )<computeroutput>[default]</computeroutput></computeroutput></para><para>

<para>Destruktor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_map_1a2b09c8875af2efb711fc3a022e70427d"/><section>
    <title>getHeight()</title>
<indexterm><primary>getHeight</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>getHeight</secondary></indexterm>
<para><computeroutput>int Map::getHeight ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca wysokość </para>
</para>
</section>
<anchor xml:id="_class_map_1a3ff0c79b25f70af9cee6f555a53bfd4d"/><section>
    <title>getLayers()</title>
<indexterm><primary>getLayers</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>getLayers</secondary></indexterm>
<para><computeroutput>std::vector&lt; <link linkend="_class_layer">Layer</link> &gt; Map::getLayers ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca poszczególne warstwy. </para>
</para>
</section>
<anchor xml:id="_class_map_1a6b1292daca7ef375968f073718c402ca"/><section>
    <title>getNextLayerId()</title>
<indexterm><primary>getNextLayerId</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>getNextLayerId</secondary></indexterm>
<para><computeroutput>int Map::getNextLayerId ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwaraca nastepne id warstwy. </para>
</para>
</section>
<anchor xml:id="_class_map_1aacb2f9d02095076e61774bf8df62a970"/><section>
    <title>getNextObjectId()</title>
<indexterm><primary>getNextObjectId</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>getNextObjectId</secondary></indexterm>
<para><computeroutput>int Map::getNextObjectId ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca nastepny id obiektu. </para>
</para>
</section>
<anchor xml:id="_class_map_1a7ae44d1c43fc376de7355ffae6550ae7"/><section>
    <title>getOrientation()</title>
<indexterm><primary>getOrientation</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>getOrientation</secondary></indexterm>
<para><computeroutput>std::string Map::getOrientation ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca informacje o orientacji. </para>
</para>
</section>
<anchor xml:id="_class_map_1ab0768cad264812a3db223c893fa69ba5"/><section>
    <title>getRenderOrder()</title>
<indexterm><primary>getRenderOrder</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>getRenderOrder</secondary></indexterm>
<para><computeroutput>std::string Map::getRenderOrder ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca informacje o renderowaniu. </para>
</para>
</section>
<anchor xml:id="_class_map_1ad90c3028202a393e68cb1ae07f23960a"/><section>
    <title>getTiledVersion()</title>
<indexterm><primary>getTiledVersion</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>getTiledVersion</secondary></indexterm>
<para><computeroutput>std::string Map::getTiledVersion ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca informacje o wersji. </para>
</para>
</section>
<anchor xml:id="_class_map_1afd173f72cb063592a0daa853a3be9d9e"/><section>
    <title>getTileHeight()</title>
<indexterm><primary>getTileHeight</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>getTileHeight</secondary></indexterm>
<para><computeroutput>int Map::getTileHeight ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca informacje o wysokosci kafelka. </para>
</para>
</section>
<anchor xml:id="_class_map_1a1e601f4ffaf9104214971e12b3b4de17"/><section>
    <title>getTileSetMap()</title>
<indexterm><primary>getTileSetMap</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>getTileSetMap</secondary></indexterm>
<para><computeroutput>std::vector&lt; <link linkend="_class_tile_set_map">TileSetMap</link> &gt; Map::getTileSetMap ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca kafelki mapy. </para>
</para>
</section>
<anchor xml:id="_class_map_1ab9209a0b619dbd3721335bd414968b6c"/><section>
    <title>getTileWidth()</title>
<indexterm><primary>getTileWidth</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>getTileWidth</secondary></indexterm>
<para><computeroutput>int Map::getTileWidth ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca szerokosc kafelka. </para>
</para>
</section>
<anchor xml:id="_class_map_1a4b04d446d3c661a985874ace350853b9"/><section>
    <title>getType()</title>
<indexterm><primary>getType</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>getType</secondary></indexterm>
<para><computeroutput>std::string Map::getType ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca informacje o typie. </para>
</para>
</section>
<anchor xml:id="_class_map_1ad8563d64d89efd1be0694edc54abb2ab"/><section>
    <title>getVersion()</title>
<indexterm><primary>getVersion</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>getVersion</secondary></indexterm>
<para><computeroutput>float Map::getVersion ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca informacje o uzytej wersji zapisu. </para>
</para>
</section>
<anchor xml:id="_class_map_1afd34d12227676b3cebeed9f5fae2508f"/><section>
    <title>getWidth()</title>
<indexterm><primary>getWidth</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>getWidth</secondary></indexterm>
<para><computeroutput>int Map::getWidth ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca szerokość </para>
</para>
</section>
<anchor xml:id="_class_map_1a6e7241617514fc7b227d8cb96d30c81a"/><section>
    <title>isInfinite()</title>
<indexterm><primary>isInfinite</primary><secondary>Map</secondary></indexterm>
<indexterm><primary>Map</primary><secondary>isInfinite</secondary></indexterm>
<para><computeroutput>bool Map::isInfinite ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Sprawdza czy wystepuje niesokonczoność </para>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/<link linkend="__map_8h">Map.h</link>src/<link linkend="__map_8cpp">Map.cpp</link></section>
</section>
