<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_schema_8h" xml:lang="en-US">
<title>src/rapidjson/include/rapidjson/schema.h File Reference</title>
<indexterm><primary>src/rapidjson/include/rapidjson/schema.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;document.h&quot;
#include &quot;pointer.h&quot;
#include &quot;stringbuffer.h&quot;
#include &quot;error/en.h&quot;
#include &quot;uri.h&quot;
#include &lt;cmath&gt;
#include &quot;internal/regex.h&quot;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classinternal_1_1_i_schema_validator">internal::ISchemaValidator</link></para>
</listitem>
            <listitem><para>class <link linkend="_classinternal_1_1_i_schema_state_factory">internal::ISchemaStateFactory&lt; SchemaType &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler&lt; SchemaType &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_classinternal_1_1_hasher">internal::Hasher&lt; Encoding, Allocator &gt;</link></para>
</listitem>
            <listitem><para>union <link linkend="_unioninternal_1_1_hasher_1_1_number_1_1_u">internal::Hasher&lt; Encoding, Allocator &gt;::Number::U</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structinternal_1_1_schema_validation_context">internal::SchemaValidationContext&lt; SchemaDocumentType &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_classinternal_1_1_schema">internal::Schema&lt; SchemaDocumentType &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structinternal_1_1_token_helper">internal::TokenHelper&lt; Stack, Ch &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structinternal_1_1_token_helper_3_01_stack_00_01char_01_4">internal::TokenHelper&lt; Stack, char &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_i_generic_remote_schema_document_provider">IGenericRemoteSchemaDocumentProvider&lt; SchemaDocumentType &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_generic_schema_document">GenericSchemaDocument&lt; ValueT, Allocator &gt;</link></para>

<para>JSON schema document. </para>
</listitem>
            <listitem><para>class <link linkend="_class_generic_schema_validator">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link></para>

<para>JSON <link linkend="_class_schema">Schema</link> Validator. </para>
</listitem>
            <listitem><para>class <link linkend="_class_schema_validating_reader">SchemaValidatingReader&lt; parseFlags, InputStream, SourceEncoding, SchemaDocumentType, StackAllocator &gt;</link></para>

<para>A helper class for parsing with validation. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespaceinternal">internal</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_schema_8h_1a6b8264e3ff82da125826f173a42c67e9">RAPIDJSON_SCHEMA_USE_INTERNALREGEX</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_schema_8h_1a9486b808605189c7ee677bb41d52f368">RAPIDJSON_SCHEMA_USE_STDREGEX</link>   0</para>
</listitem>
            <listitem><para>#define <link linkend="_schema_8h_1a67269b1317b737ca47bcf5636091db1e">RAPIDJSON_SCHEMA_HAS_REGEX</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_schema_8h_1a40c690b6fd0b7ae8d8484b613255cc72">RAPIDJSON_SCHEMA_VERBOSE</link>   0</para>
</listitem>
            <listitem><para>#define <link linkend="_schema_8h_1a876f2526fe0190b8c5b44dfc77c5b259">RAPIDJSON_INVALID_KEYWORD_VERBOSE</link>(keyword)</para>
</listitem>
            <listitem><para>#define <link linkend="_schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4">RAPIDJSON_INVALID_KEYWORD_RETURN</link>(code)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga8d06f2d50592811d2890b45243b8adcc">RAPIDJSON_VALIDATE_DEFAULT_FLAGS</link>   <link linkend="_schema_8h_1a380a56f9b589025b27a565de4c4a2942a6479c4dbb9ae91ad95b4e6876a96cfa4">kValidateNoFlags</link></para>

<para>User-defined kValidateDefaultFlags definition. </para>
</listitem>
            <listitem><para>#define <link linkend="_schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb">RAPIDJSON_STRING_</link>(name, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb">RAPIDJSON_STRING_</link>(name, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_schema_8h_1a722c98cfe486c35d086ea33144f4a3b8">RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_</link>()</para>
</listitem>
            <listitem><para>#define <link linkend="_schema_8h_1a25701b28a823cc7621f1e01ae7031007">RAPIDJSON_SCHEMA_HANDLE_BEGIN_</link>(method,  arg1)</para>
</listitem>
            <listitem><para>#define <link linkend="_schema_8h_1af17aaed9cdb88ac6faa2b7ca7029da63">RAPIDJSON_SCHEMA_HANDLE_PARALLEL_</link>(method,  arg2)</para>
</listitem>
            <listitem><para>#define <link linkend="_schema_8h_1ab1cb400ef08159e3e417f03c8adefaff">RAPIDJSON_SCHEMA_HANDLE_END_</link>(method,  arg2)</para>
</listitem>
            <listitem><para>#define <link linkend="_schema_8h_1a8c347782f5ba7abab760e5dbc5795c41">RAPIDJSON_SCHEMA_HANDLE_VALUE_</link>(method,  arg1,  arg2)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; <link linkend="_document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481">Value</link> &gt; <link linkend="_schema_8h_1a49355f280272b969cfd756ef556935c4">SchemaDocument</link></para>

<para><link linkend="_class_generic_schema_document">GenericSchemaDocument</link> using Value type. </para>
</listitem>
            <listitem><para>typedef <link linkend="_class_i_generic_remote_schema_document_provider">IGenericRemoteSchemaDocumentProvider</link>&lt; <link linkend="_fwd_8h_1a05c97278ec100471e77a4d678957701b">SchemaDocument</link> &gt; <link linkend="_schema_8h_1afec32b8c8d16360397849fd8bcd28441">IRemoteSchemaDocumentProvider</link></para>

<para><link linkend="_class_i_generic_remote_schema_document_provider">IGenericRemoteSchemaDocumentProvider</link> using SchemaDocument. </para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; <link linkend="_fwd_8h_1a05c97278ec100471e77a4d678957701b">SchemaDocument</link> &gt; <link linkend="_schema_8h_1a09740efe5c13e9c508a4f067d85aa8c0">SchemaValidator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_schema_8h_1a380a56f9b589025b27a565de4c4a2942">ValidateFlag</link> { <link linkend="_schema_8h_1a380a56f9b589025b27a565de4c4a2942a6479c4dbb9ae91ad95b4e6876a96cfa4">kValidateNoFlags</link> = 0
, <link linkend="_schema_8h_1a380a56f9b589025b27a565de4c4a2942ab0d30a1c30a84eb96f5dda97abbde002">kValidateContinueOnErrorFlag</link> = 1
, <link linkend="_schema_8h_1a380a56f9b589025b27a565de4c4a2942a70564fe50c13963b485000be542c52c9">kValidateDefaultFlags</link> = RAPIDJSON_VALIDATE_DEFAULT_FLAGS
 }</para>

<para>Combination of validate flags. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_schema_8h_1ad55d09b65c641aa4aeaa1190912f20a4"/><section>
    <title>RAPIDJSON_INVALID_KEYWORD_RETURN</title>
<indexterm><primary>RAPIDJSON_INVALID_KEYWORD_RETURN</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>RAPIDJSON_INVALID_KEYWORD_RETURN</secondary></indexterm>
<para><computeroutput>#define RAPIDJSON_INVALID_KEYWORD_RETURN( code)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">RAPIDJSON_MULTILINEMACRO_BEGIN\
&#32;&#32;&#32;&#32;context.invalidCode&#32;=&#32;code;\
&#32;&#32;&#32;&#32;context.invalidKeyword&#32;=&#32;SchemaType::GetValidateErrorKeyword(code).GetString();\
&#32;&#32;&#32;&#32;RAPIDJSON_INVALID_KEYWORD_VERBOSE(context.invalidKeyword);\
&#32;&#32;&#32;&#32;return&#32;<emphasis role="keyword">false</emphasis>;\
RAPIDJSON_MULTILINEMACRO_END
</programlisting></section>
<anchor xml:id="_schema_8h_1a876f2526fe0190b8c5b44dfc77c5b259"/><section>
    <title>RAPIDJSON_INVALID_KEYWORD_VERBOSE</title>
<indexterm><primary>RAPIDJSON_INVALID_KEYWORD_VERBOSE</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>RAPIDJSON_INVALID_KEYWORD_VERBOSE</secondary></indexterm>
<para><computeroutput>#define RAPIDJSON_INVALID_KEYWORD_VERBOSE( keyword)</computeroutput></para></section>
<anchor xml:id="_schema_8h_1a25701b28a823cc7621f1e01ae7031007"/><section>
    <title>RAPIDJSON_SCHEMA_HANDLE_BEGIN_</title>
<indexterm><primary>RAPIDJSON_SCHEMA_HANDLE_BEGIN_</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>RAPIDJSON_SCHEMA_HANDLE_BEGIN_</secondary></indexterm>
<para><computeroutput>#define RAPIDJSON_SCHEMA_HANDLE_BEGIN_( method,  arg1)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!valid_)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;\
&#32;&#32;&#32;&#32;if&#32;((!BeginValue()&#32;&amp;&amp;&#32;!GetContinueOnErrors())&#32;||&#32;(!CurrentSchema().method&#32;arg1&#32;&amp;&amp;&#32;!GetContinueOnErrors()))&#32;{\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_();\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;valid_&#32;=&#32;<emphasis role="keyword">false</emphasis>;\
&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_schema_8h_1a722c98cfe486c35d086ea33144f4a3b8"/><section>
    <title>RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_</title>
<indexterm><primary>RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_</secondary></indexterm>
<para><computeroutput>#define RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_( )</computeroutput></para></section>
<anchor xml:id="_schema_8h_1ab1cb400ef08159e3e417f03c8adefaff"/><section>
    <title>RAPIDJSON_SCHEMA_HANDLE_END_</title>
<indexterm><primary>RAPIDJSON_SCHEMA_HANDLE_END_</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>RAPIDJSON_SCHEMA_HANDLE_END_</secondary></indexterm>
<para><computeroutput>#define RAPIDJSON_SCHEMA_HANDLE_END_( method,  arg2)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;valid_&#32;=&#32;(EndValue()&#32;||&#32;GetContinueOnErrors())&#32;&amp;&amp;&#32;(!outputHandler_&#32;||&#32;outputHandler_-&gt;method&#32;arg2);\
&#32;&#32;&#32;&#32;return&#32;valid_;
</programlisting></section>
<anchor xml:id="_schema_8h_1af17aaed9cdb88ac6faa2b7ca7029da63"/><section>
    <title>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_</title>
<indexterm><primary>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_</secondary></indexterm>
<para><computeroutput>#define RAPIDJSON_SCHEMA_HANDLE_PARALLEL_( method,  arg2)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(Context*&#32;context&#32;=&#32;schemaStack_.template&#32;Bottom&lt;Context&gt;();&#32;context&#32;!=&#32;schemaStack_.template&#32;End&lt;Context&gt;();&#32;context++)&#32;{\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(context-&gt;hasher)\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static_cast&lt;HasherType*&gt;(context-&gt;hasher)-&gt;method&#32;arg2;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(context-&gt;validators)\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;i_&#32;=&#32;0;&#32;i_&#32;&lt;&#32;context-&gt;validatorCount;&#32;i_++)\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>*<emphasis role="keyword">&gt;</emphasis>(context-&gt;validators[i_])-&gt;method&#32;arg2;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(context-&gt;patternPropertiesValidators)\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;i_&#32;=&#32;0;&#32;i_&#32;&lt;&#32;context-&gt;patternPropertiesValidatorCount;&#32;i_++)\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>*<emphasis role="keyword">&gt;</emphasis>(context-&gt;patternPropertiesValidators[i_])-&gt;method&#32;arg2;\
&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_schema_8h_1a8c347782f5ba7abab760e5dbc5795c41"/><section>
    <title>RAPIDJSON_SCHEMA_HANDLE_VALUE_</title>
<indexterm><primary>RAPIDJSON_SCHEMA_HANDLE_VALUE_</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>RAPIDJSON_SCHEMA_HANDLE_VALUE_</secondary></indexterm>
<para><computeroutput>#define RAPIDJSON_SCHEMA_HANDLE_VALUE_( method,  arg1,  arg2)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="_schema_8h_1a25701b28a823cc7621f1e01ae7031007">RAPIDJSON_SCHEMA_HANDLE_BEGIN_</link>&#32;&#32;&#32;(method,&#32;arg1);\
&#32;&#32;&#32;&#32;RAPIDJSON_SCHEMA_HANDLE_PARALLEL_(method,&#32;arg2);\
&#32;&#32;&#32;&#32;RAPIDJSON_SCHEMA_HANDLE_END_&#32;&#32;&#32;&#32;&#32;(method,&#32;arg2)
</programlisting></section>
<anchor xml:id="_schema_8h_1a67269b1317b737ca47bcf5636091db1e"/><section>
    <title>RAPIDJSON_SCHEMA_HAS_REGEX</title>
<indexterm><primary>RAPIDJSON_SCHEMA_HAS_REGEX</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>RAPIDJSON_SCHEMA_HAS_REGEX</secondary></indexterm>
<para><computeroutput>#define RAPIDJSON_SCHEMA_HAS_REGEX   1</computeroutput></para></section>
<anchor xml:id="_schema_8h_1a6b8264e3ff82da125826f173a42c67e9"/><section>
    <title>RAPIDJSON_SCHEMA_USE_INTERNALREGEX</title>
<indexterm><primary>RAPIDJSON_SCHEMA_USE_INTERNALREGEX</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>RAPIDJSON_SCHEMA_USE_INTERNALREGEX</secondary></indexterm>
<para><computeroutput>#define RAPIDJSON_SCHEMA_USE_INTERNALREGEX   1</computeroutput></para></section>
<anchor xml:id="_schema_8h_1a9486b808605189c7ee677bb41d52f368"/><section>
    <title>RAPIDJSON_SCHEMA_USE_STDREGEX</title>
<indexterm><primary>RAPIDJSON_SCHEMA_USE_STDREGEX</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>RAPIDJSON_SCHEMA_USE_STDREGEX</secondary></indexterm>
<para><computeroutput>#define RAPIDJSON_SCHEMA_USE_STDREGEX   0</computeroutput></para></section>
<anchor xml:id="_schema_8h_1a40c690b6fd0b7ae8d8484b613255cc72"/><section>
    <title>RAPIDJSON_SCHEMA_VERBOSE</title>
<indexterm><primary>RAPIDJSON_SCHEMA_VERBOSE</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>RAPIDJSON_SCHEMA_VERBOSE</secondary></indexterm>
<para><computeroutput>#define RAPIDJSON_SCHEMA_VERBOSE   0</computeroutput></para></section>
<anchor xml:id="_schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb"/><section>
    <title>RAPIDJSON_STRING_<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>RAPIDJSON_STRING_</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>RAPIDJSON_STRING_</secondary></indexterm>
<para><computeroutput>#define RAPIDJSON_STRING_( name,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;Get##name##String()&#32;{\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keyword">const</emphasis>&#32;Ch&#32;s[]&#32;=&#32;{&#32;__VA_ARGS__,&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>&#32;};\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&#32;v(s,&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link><emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">sizeof</emphasis>(s)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(Ch)&#32;-&#32;1));\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;v;\
&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb"/><section>
    <title>RAPIDJSON_STRING_<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>RAPIDJSON_STRING_</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>RAPIDJSON_STRING_</secondary></indexterm>
<para><computeroutput>#define RAPIDJSON_STRING_( name,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;StringRefType&amp;&#32;Get##name##String()&#32;{\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keyword">const</emphasis>&#32;Ch&#32;s[]&#32;=&#32;{&#32;__VA_ARGS__,&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>&#32;};\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;<emphasis role="keyword">const</emphasis>&#32;StringRefType&#32;v(s,&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link><emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">sizeof</emphasis>(s)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(Ch)&#32;-&#32;1));&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;v;\
&#32;&#32;&#32;&#32;}
</programlisting></section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_schema_8h_1afec32b8c8d16360397849fd8bcd28441"/><section>
    <title>IRemoteSchemaDocumentProvider</title>
<indexterm><primary>IRemoteSchemaDocumentProvider</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>IRemoteSchemaDocumentProvider</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_class_i_generic_remote_schema_document_provider">IGenericRemoteSchemaDocumentProvider</link>&lt;<link linkend="_fwd_8h_1a05c97278ec100471e77a4d678957701b">SchemaDocument</link>&gt; <link linkend="_fwd_8h_1afec32b8c8d16360397849fd8bcd28441">IRemoteSchemaDocumentProvider</link></computeroutput></para><para>

<para><link linkend="_class_i_generic_remote_schema_document_provider">IGenericRemoteSchemaDocumentProvider</link> using SchemaDocument. </para>
</para>
</section>
<anchor xml:id="_schema_8h_1a49355f280272b969cfd756ef556935c4"/><section>
    <title>SchemaDocument</title>
<indexterm><primary>SchemaDocument</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>SchemaDocument</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt;<link linkend="_document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481">Value</link>&gt; <link linkend="_fwd_8h_1a05c97278ec100471e77a4d678957701b">SchemaDocument</link></computeroutput></para><para>

<para><link linkend="_class_generic_schema_document">GenericSchemaDocument</link> using Value type. </para>
</para>
</section>
<anchor xml:id="_schema_8h_1a09740efe5c13e9c508a4f067d85aa8c0"/><section>
    <title>SchemaValidator</title>
<indexterm><primary>SchemaValidator</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>SchemaValidator</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt;<link linkend="_fwd_8h_1a05c97278ec100471e77a4d678957701b">SchemaDocument</link>&gt; <link linkend="_fwd_8h_1a2c91a2e7dd109dba1803ed2280a2dfa4">SchemaValidator</link></computeroutput></para></section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_schema_8h_1a380a56f9b589025b27a565de4c4a2942"/><section>
    <title>ValidateFlag</title>
<indexterm><primary>ValidateFlag</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>ValidateFlag</secondary></indexterm>
<para><computeroutput>enum <link linkend="_schema_8h_1a380a56f9b589025b27a565de4c4a2942">ValidateFlag</link></computeroutput></para><para>

<para>Combination of validate flags. </para>
</para>

<para><formalpara><title>See also</title>

<para></para>
</formalpara>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>kValidateNoFlags</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>kValidateNoFlags</secondary></indexterm>
<anchor xml:id="_schema_8h_1a380a56f9b589025b27a565de4c4a2942a6479c4dbb9ae91ad95b4e6876a96cfa4"/>kValidateNoFlags</entry><entry>
<para>No flags are set. </para>
</entry></row><row><entry><indexterm><primary>kValidateContinueOnErrorFlag</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>kValidateContinueOnErrorFlag</secondary></indexterm>
<anchor xml:id="_schema_8h_1a380a56f9b589025b27a565de4c4a2942ab0d30a1c30a84eb96f5dda97abbde002"/>kValidateContinueOnErrorFlag</entry><entry>
<para>Don&apos;t stop after first validation error. </para>
</entry></row><row><entry><indexterm><primary>kValidateDefaultFlags</primary><secondary>schema.h</secondary></indexterm>
<indexterm><primary>schema.h</primary><secondary>kValidateDefaultFlags</secondary></indexterm>
<anchor xml:id="_schema_8h_1a380a56f9b589025b27a565de4c4a2942a70564fe50c13963b485000be542c52c9"/>kValidateDefaultFlags</entry><entry>
<para>Default validate flags. Can be customized by defining RAPIDJSON_VALIDATE_DEFAULT_FLAGS. </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
</section>
