<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_filewritestream_8h_source" xml:lang="en-US">
<title>filewritestream.h</title>
<indexterm><primary>src/rapidjson/include/rapidjson/filewritestream.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Tencent&#32;is&#32;pleased&#32;to&#32;support&#32;the&#32;open&#32;source&#32;community&#32;by&#32;making&#32;RapidJSON&#32;available.</emphasis>
2 <emphasis role="comment">//&#32;</emphasis>
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2015&#32;THL&#32;A29&#32;Limited,&#32;a&#32;Tencent&#32;company,&#32;and&#32;Milo&#32;Yip.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;Licensed&#32;under&#32;the&#32;MIT&#32;License&#32;(the&#32;&quot;License&quot;);&#32;you&#32;may&#32;not&#32;use&#32;this&#32;file&#32;except</emphasis>
6 <emphasis role="comment">//&#32;in&#32;compliance&#32;with&#32;the&#32;License.&#32;You&#32;may&#32;obtain&#32;a&#32;copy&#32;of&#32;the&#32;License&#32;at</emphasis>
7 <emphasis role="comment">//</emphasis>
8 <emphasis role="comment">//&#32;http://opensource.org/licenses/MIT</emphasis>
9 <emphasis role="comment">//</emphasis>
10 <emphasis role="comment">//&#32;Unless&#32;required&#32;by&#32;applicable&#32;law&#32;or&#32;agreed&#32;to&#32;in&#32;writing,&#32;software&#32;distributed&#32;</emphasis>
11 <emphasis role="comment">//&#32;under&#32;the&#32;License&#32;is&#32;distributed&#32;on&#32;an&#32;&quot;AS&#32;IS&quot;&#32;BASIS,&#32;WITHOUT&#32;WARRANTIES&#32;OR&#32;</emphasis>
12 <emphasis role="comment">//&#32;CONDITIONS&#32;OF&#32;ANY&#32;KIND,&#32;either&#32;express&#32;or&#32;implied.&#32;See&#32;the&#32;License&#32;for&#32;the&#32;</emphasis>
13 <emphasis role="comment">//&#32;specific&#32;language&#32;governing&#32;permissions&#32;and&#32;limitations&#32;under&#32;the&#32;License.</emphasis>
14 
15 <emphasis role="preprocessor">#ifndef&#32;RAPIDJSON_FILEWRITESTREAM_H_</emphasis>
16 <emphasis role="preprocessor">#define&#32;RAPIDJSON_FILEWRITESTREAM_H_</emphasis>
17 
18 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_stream_8h">stream.h</link>&quot;</emphasis>
19 <emphasis role="preprocessor">#include&#32;&lt;cstdio&gt;</emphasis>
20 
21 <emphasis role="preprocessor">#ifdef&#32;__clang__</emphasis>
22 RAPIDJSON_DIAG_PUSH
23 RAPIDJSON_DIAG_OFF(unreachable-code)
24 <emphasis role="preprocessor">#endif</emphasis>
25 
26 <link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc">RAPIDJSON_NAMESPACE_BEGIN</link>
27 
29 
32 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_file_write_stream">FileWriteStream</link>&#32;{
33 <emphasis role="keyword">public</emphasis>:
34 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_class_file_write_stream_1abc16aeb69ad4176263ddfcb837fb7b49">Ch</link>;&#32;&#32;&#32;&#32;
35 
36 &#32;&#32;&#32;&#32;<link linkend="_class_file_write_stream_1a553ea3e7377a7f7cace2daa3cc90e1a1">FileWriteStream</link>(std::FILE*&#32;fp,&#32;<emphasis role="keywordtype">char</emphasis>*&#32;buffer,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bufferSize)&#32;:&#32;<link linkend="_class_file_write_stream_1aac23a58bdaa601d276c57b5bcf5b0246">fp_</link>(fp),&#32;<link linkend="_class_file_write_stream_1a6a1f0fed15eb38f22935f11af493972f">buffer_</link>(buffer),&#32;<link linkend="_class_file_write_stream_1a1f30d1c653f30ca6e069cefb80881c75">bufferEnd_</link>(buffer&#32;+&#32;bufferSize),&#32;<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>(<link linkend="_class_file_write_stream_1a6a1f0fed15eb38f22935f11af493972f">buffer_</link>)&#32;{&#32;
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_file_write_stream_1aac23a58bdaa601d276c57b5bcf5b0246">fp_</link>&#32;!=&#32;0);
38 &#32;&#32;&#32;&#32;}
39 
40 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_file_write_stream_1af6a6061d0accd939fa475b9b34427d85">Put</link>(<emphasis role="keywordtype">char</emphasis>&#32;c)&#32;{&#32;
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>&#32;&gt;=&#32;<link linkend="_class_file_write_stream_1a1f30d1c653f30ca6e069cefb80881c75">bufferEnd_</link>)
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_file_write_stream_1a939fbf183ba36464c5e0837df4329d37">Flush</link>();
43 
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>++&#32;=&#32;c;
45 &#32;&#32;&#32;&#32;}
46 
47 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_file_write_stream_1ad9ec108b24316a2c1c83c6ddc75d308a">PutN</link>(<emphasis role="keywordtype">char</emphasis>&#32;c,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;n)&#32;{
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;avail&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">size_t</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_file_write_stream_1a1f30d1c653f30ca6e069cefb80881c75">bufferEnd_</link>&#32;-&#32;<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>);
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(n&#32;&gt;&#32;avail)&#32;{
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memset(<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>,&#32;c,&#32;avail);
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>&#32;+=&#32;avail;
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_file_write_stream_1a939fbf183ba36464c5e0837df4329d37">Flush</link>();
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;-=&#32;avail;
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;avail&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">size_t</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_file_write_stream_1a1f30d1c653f30ca6e069cefb80881c75">bufferEnd_</link>&#32;-&#32;<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>);
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
56 
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;&gt;&#32;0)&#32;{
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memset(<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>,&#32;c,&#32;n);
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>&#32;+=&#32;n;
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
61 &#32;&#32;&#32;&#32;}
62 
63 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_file_write_stream_1a939fbf183ba36464c5e0837df4329d37">Flush</link>()&#32;{
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>&#32;!=&#32;<link linkend="_class_file_write_stream_1a6a1f0fed15eb38f22935f11af493972f">buffer_</link>)&#32;{
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;result&#32;=&#32;std::fwrite(<link linkend="_class_file_write_stream_1a6a1f0fed15eb38f22935f11af493972f">buffer_</link>,&#32;1,&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">size_t</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>&#32;-&#32;<link linkend="_class_file_write_stream_1a6a1f0fed15eb38f22935f11af493972f">buffer_</link>),&#32;<link linkend="_class_file_write_stream_1aac23a58bdaa601d276c57b5bcf5b0246">fp_</link>);
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(result&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">size_t</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>&#32;-&#32;<link linkend="_class_file_write_stream_1a6a1f0fed15eb38f22935f11af493972f">buffer_</link>))&#32;{
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;failure&#32;deliberately&#32;ignored&#32;at&#32;this&#32;time</emphasis>
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;added&#32;to&#32;avoid&#32;warn_unused_result&#32;build&#32;errors</emphasis>
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>&#32;=&#32;<link linkend="_class_file_write_stream_1a6a1f0fed15eb38f22935f11af493972f">buffer_</link>;
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
72 &#32;&#32;&#32;&#32;}
73 
74 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Not&#32;implemented</emphasis>
75 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_class_file_write_stream_1ab556c7e26346ddff0e579a53c09c3a13">Peek</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<emphasis role="keyword">false</emphasis>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;}
76 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_class_file_write_stream_1ac927a0ae09a85eaba58a74ceb04b40ed">Take</link>()&#32;{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<emphasis role="keyword">false</emphasis>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;}
77 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_class_file_write_stream_1a06272de32d6ac4d10c9bd5deb79a0234">Tell</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<emphasis role="keyword">false</emphasis>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;}
78 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_class_file_write_stream_1a3805559e228703c94d1165f0653e1f64">PutBegin</link>()&#32;{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<emphasis role="keyword">false</emphasis>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;}
79 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_class_file_write_stream_1a54b14047e4c998db0594290605f8f0dc">PutEnd</link>(<emphasis role="keywordtype">char</emphasis>*)&#32;{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<emphasis role="keyword">false</emphasis>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;}
80 
81 <emphasis role="keyword">private</emphasis>:
82 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prohibit&#32;copy&#32;constructor&#32;&amp;&#32;assignment&#32;operator.</emphasis>
83 &#32;&#32;&#32;&#32;<link linkend="_class_file_write_stream_1a62cc69f885b946b6bc2935f40c970cbb">FileWriteStream</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_file_write_stream">FileWriteStream</link>&amp;);
84 &#32;&#32;&#32;&#32;<link linkend="_class_file_write_stream">FileWriteStream</link>&amp;&#32;<link linkend="_class_file_write_stream_1a41ed06dc63f576bbab6dd323c6f4056c">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_file_write_stream">FileWriteStream</link>&amp;);
85 
86 &#32;&#32;&#32;&#32;std::FILE*&#32;<link linkend="_class_file_write_stream_1aac23a58bdaa601d276c57b5bcf5b0246">fp_</link>;
87 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_class_file_write_stream_1a6a1f0fed15eb38f22935f11af493972f">buffer_</link>;
88 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_class_file_write_stream_1a1f30d1c653f30ca6e069cefb80881c75">bufferEnd_</link>;
89 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link>;
90 };
91 
93 <emphasis role="keyword">template</emphasis>&lt;&gt;
94 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_filewritestream_8h_1a5c9b0f0e6249be2acf7f3505c295c132">PutN</link>(<link linkend="_class_file_write_stream">FileWriteStream</link>&amp;&#32;stream,&#32;<emphasis role="keywordtype">char</emphasis>&#32;c,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;n)&#32;{
95 &#32;&#32;&#32;&#32;stream.<link linkend="_class_file_write_stream_1ad9ec108b24316a2c1c83c6ddc75d308a">PutN</link>(c,&#32;n);
96 }
97 
98 <link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1">RAPIDJSON_NAMESPACE_END</link>
99 
100 <emphasis role="preprocessor">#ifdef&#32;__clang__</emphasis>
101 RAPIDJSON_DIAG_POP
102 <emphasis role="preprocessor">#endif</emphasis>
103 
104 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RAPIDJSON_FILESTREAM_H_</emphasis>
</programlisting></section>
