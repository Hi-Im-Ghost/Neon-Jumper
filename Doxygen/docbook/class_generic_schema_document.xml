<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_generic_schema_document" xml:lang="en-US">
<title>GenericSchemaDocument&lt; ValueT, Allocator &gt; Class Template Reference</title>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary></indexterm>
<para>

<para>JSON schema document. </para>
 
</para>
<para>
<computeroutput>#include &lt;schema.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_generic_schema_document_1_1_schema_entry">SchemaEntry</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef ValueT <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_i_generic_remote_schema_document_provider">IGenericRemoteSchemaDocumentProvider</link>&lt; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link> &gt; <link linkend="_class_generic_schema_document_1aa53ca323efce50f88aea6fa0d03e9785">IRemoteSchemaDocumentProviderType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_classrapidjson_1_1_allocator">Allocator</link> <link linkend="_class_generic_schema_document_1ac0d88adf8c86917d8bc9563ffdab6a6d">AllocatorType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_value_1a28c2cb8d04d12566c1af37597a46d209">ValueType::EncodingType</link> <link linkend="_class_generic_schema_document_1ad0293c28c9ffe80ab1f8ec86efee35c8">EncodingType</link></para>
</listitem>
            <listitem><para>typedef EncodingType::Ch <link linkend="_class_generic_schema_document_1ab1dec56a78b29649eb8e4b85b101ec7c">Ch</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_classinternal_1_1_schema">internal::Schema</link>&lt; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link> &gt; <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_pointer">GenericPointer</link>&lt; <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_class_generic_schema_document_1ad0293c28c9ffe80ab1f8ec86efee35c8">EncodingType</link>, <link linkend="_class_generic_schema_document_1ac0d88adf8c86917d8bc9563ffdab6a6d">AllocatorType</link> &gt; <link linkend="_class_generic_schema_document_1af017bc68811efaabb9925b6db03fa3d5">SValue</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_uri">GenericUri</link>&lt; <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; <link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_schema_document_1a302a3c608c137d5542105c8298bfba1f">GenericSchemaDocument</link> (const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp;document, const <link linkend="_class_generic_schema_document_1ab1dec56a78b29649eb8e4b85b101ec7c">Ch</link> *uri=0, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> uriLength=0, <link linkend="_class_generic_schema_document_1aa53ca323efce50f88aea6fa0d03e9785">IRemoteSchemaDocumentProviderType</link> *remoteProvider=0, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> *allocator=0, const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp;<link linkend="_pointer_8h_1aae1f8d263916ad71bd415381591549c0">pointer</link>=<link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link>())</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_class_generic_schema_document_1a6a54dfd1aec0f560f7e47e08f3fcb8f1">~GenericSchemaDocument</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_schema_document_1af017bc68811efaabb9925b6db03fa3d5">SValue</link> &amp; <link linkend="_class_generic_schema_document_1aab0203c06e65d944a8a03517d84de3cd">GetURI</link> () const</para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> &amp; <link linkend="_class_generic_schema_document_1a6a0b2b360df728077bb5d3779f97e73d">GetRoot</link> () const</para>

<para>Get the root schema. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Types    </title>
        <itemizedlist>
            <listitem><para>typedef const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> * <link linkend="_class_generic_schema_document_1a2d829a5745e7d28aa3b1e33366b9861d">SchemaRefPtr</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_schema_document_1ae5e4d5f87964ea7bfda2df824416d6da">GenericSchemaDocument</link> (const <link linkend="_class_generic_schema_document">GenericSchemaDocument</link> &amp;)</para>

<para>Prohibit copying. </para>
</listitem>
            <listitem><para><link linkend="_class_generic_schema_document">GenericSchemaDocument</link> &amp; <link linkend="_class_generic_schema_document_1a9be58d02422911b109680135ee41e6e9">operator=</link> (const <link linkend="_class_generic_schema_document">GenericSchemaDocument</link> &amp;)</para>

<para>Prohibit assignment. </para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_document_1a8f07ad5a43a7b70ecdaf362463544f25">CreateSchemaRecursive</link> (const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> **schema, const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp;<link linkend="_pointer_8h_1aae1f8d263916ad71bd415381591549c0">pointer</link>, const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp;v, const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp;document, const <link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> &amp;id)</para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> &amp; <link linkend="_class_generic_schema_document_1a1a3625dab59f8e995063f61ba9560c14">CreateSchema</link> (const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> **schema, const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp;<link linkend="_pointer_8h_1aae1f8d263916ad71bd415381591549c0">pointer</link>, const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp;v, const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp;document, const <link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> &amp;id)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_document_1a3debb209124c74e4498334a42f6f0244">HandleRefSchema</link> (const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp;<link linkend="_pointer_8h_1adb82dfe18535e9a30aa97d275f82bd55">source</link>, const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> **schema, const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp;v, const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp;document, const <link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> &amp;id)</para>
</listitem>
            <listitem><para><link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> * <link linkend="_class_generic_schema_document_1a17f4365fd1d205a259cfef33962bd409">FindId</link> (const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp;doc, const <link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> &amp;finduri, <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp;resptr, const <link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> &amp;baseuri, bool full, const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp;here=<link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link>()) const</para>

<para>Find the first subschema with a resolved &apos;id&apos; that matches the specified URI. </para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_document_1a36fa45023cbd5caada24ea7fed87202a">AddSchemaRefs</link> (<link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> *schema)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_document_1ab3c0518a161f39dea52280e5ebb97e51">IsCyclicRef</link> (const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp;<link linkend="_pointer_8h_1aae1f8d263916ad71bd415381591549c0">pointer</link>) const</para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> * <link linkend="_class_generic_schema_document_1a2f69b7ddf26093678c953016374d7bfa">GetSchema</link> (const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp;<link linkend="_pointer_8h_1aae1f8d263916ad71bd415381591549c0">pointer</link>) const</para>
</listitem>
            <listitem><para><link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> <link linkend="_class_generic_schema_document_1ad359e04187039fe6e61b279383e7360e">GetPointer</link> (const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> *schema) const</para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> * <link linkend="_class_generic_schema_document_1a12afbdb45444193445f1c75bfa63c1d8">GetTypeless</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_schema_document_1aa53ca323efce50f88aea6fa0d03e9785">IRemoteSchemaDocumentProviderType</link> * <link linkend="_class_generic_schema_document_1ae71c9925eaf2f51f26ce1083d3f4edf4">remoteProvider_</link></para>
</listitem>
            <listitem><para><link linkend="_classrapidjson_1_1_allocator">Allocator</link> * <link linkend="_class_generic_schema_document_1a8a7df889c7e1deab679c1ee165ba59f0">allocator_</link></para>
</listitem>
            <listitem><para><link linkend="_classrapidjson_1_1_allocator">Allocator</link> * <link linkend="_class_generic_schema_document_1a95ba649b2911b91297321093876f1cab">ownAllocator_</link></para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> * <link linkend="_class_generic_schema_document_1a50ee80c40478d090c98900d4e6949737">root_</link></para>

<para>Root schema. </para>
</listitem>
            <listitem><para><link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> * <link linkend="_class_generic_schema_document_1a7393ecd4d607c1f81ce9eac5becf92a8">typeless_</link></para>
</listitem>
            <listitem><para><link linkend="_classinternal_1_1_stack">internal::Stack</link>&lt; <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; <link linkend="_class_generic_schema_document_1a75a97c9f8cd1cc8cd67f3b6364d93744">schemaMap_</link></para>
</listitem>
            <listitem><para><link linkend="_classinternal_1_1_stack">internal::Stack</link>&lt; <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; <link linkend="_class_generic_schema_document_1a0c3ee68d07de1c96f1954ad66c6e6d23">schemaRef_</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_schema_document_1af017bc68811efaabb9925b6db03fa3d5">SValue</link> <link linkend="_class_generic_schema_document_1a912d4d364b21b12c4cfce5fba8f983a4">uri_</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> <link linkend="_class_generic_schema_document_1ab6b6e5654c0563a3ece3ae7a970c0f0f">docId_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Private Attributes    </title>
        <itemizedlist>
            <listitem><para>static const size_t <link linkend="_class_generic_schema_document_1a3b0a57801ee25f2ba84ce61770291c33">kInitialSchemaMapSize</link> = 64</para>
</listitem>
            <listitem><para>static const size_t <link linkend="_class_generic_schema_document_1a5a3e961495b724dc65682d6a0a681d03">kInitialSchemaRefSize</link> = 64</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_generic_schema_document_1a706511849688d9245fc37109f02a03c4">internal::Schema&lt; GenericSchemaDocument &gt;</link></para>
</listitem>
            <listitem><para>template&lt;typename , typename , typename &gt; </para><para>class <link linkend="_class_generic_schema_document_1afcc03e6ba8f1a819e1a028c31ad38347">GenericSchemaValidator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename ValueT, typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> = CrtAllocator&gt;
class GenericSchemaDocument&lt; ValueT, Allocator &gt;</title></simplesect>

<para>JSON schema document. </para>



<para>A JSON schema document is a compiled version of a JSON schema. It is basically a tree of <link linkend="_classinternal_1_1_schema">internal::Schema</link>.</para>

<para><note><title>Note</title>

<para>This is an immutable class (i.e. its instance cannot be modified after construction). </para>
</note>

                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ValueT</entry><entry>
<para>Type of JSON value (e.g. <computeroutput>Value</computeroutput> ), which also determine the encoding. </para>
</entry>
                            </row>
                            <row>
<entry>Allocator</entry><entry>
<para>Allocator type for allocating memory of this document. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_generic_schema_document_1ac0d88adf8c86917d8bc9563ffdab6a6d"/><section>
    <title>AllocatorType</title>
<indexterm><primary>AllocatorType</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>AllocatorType</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_classrapidjson_1_1_allocator">Allocator</link> <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::AllocatorType</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1ab1dec56a78b29649eb8e4b85b101ec7c"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef EncodingType::Ch <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Ch</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1ad0293c28c9ffe80ab1f8ec86efee35c8"/><section>
    <title>EncodingType</title>
<indexterm><primary>EncodingType</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>EncodingType</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_value_1a28c2cb8d04d12566c1af37597a46d209">ValueType::EncodingType</link> <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::EncodingType</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1aa53ca323efce50f88aea6fa0d03e9785"/><section>
    <title>IRemoteSchemaDocumentProviderType</title>
<indexterm><primary>IRemoteSchemaDocumentProviderType</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>IRemoteSchemaDocumentProviderType</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_i_generic_remote_schema_document_provider">IGenericRemoteSchemaDocumentProvider</link>&lt;<link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&gt; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::IRemoteSchemaDocumentProviderType</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747"/><section>
    <title>PointerType</title>
<indexterm><primary>PointerType</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>PointerType</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_pointer">GenericPointer</link>&lt;<link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link>&gt; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::PointerType</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a2d829a5745e7d28aa3b1e33366b9861d"/><section>
    <title>SchemaRefPtr</title>
<indexterm><primary>SchemaRefPtr</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>SchemaRefPtr</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link>* <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::SchemaRefPtr<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895"/><section>
    <title>SchemaType</title>
<indexterm><primary>SchemaType</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>SchemaType</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_classinternal_1_1_schema">internal::Schema</link>&lt;<link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&gt; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::SchemaType</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1af017bc68811efaabb9925b6db03fa3d5"/><section>
    <title>SValue</title>
<indexterm><primary>SValue</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>SValue</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_value">GenericValue</link>&lt;<link linkend="_class_generic_schema_document_1ad0293c28c9ffe80ab1f8ec86efee35c8">EncodingType</link>, <link linkend="_class_generic_schema_document_1ac0d88adf8c86917d8bc9563ffdab6a6d">AllocatorType</link>&gt; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::SValue</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c"/><section>
    <title>UriType</title>
<indexterm><primary>UriType</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>UriType</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_uri">GenericUri</link>&lt;<link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link>&gt; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::UriType</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a"/><section>
    <title>ValueType</title>
<indexterm><primary>ValueType</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>ValueType</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef ValueT <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;<link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">::ValueType</link></computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_generic_schema_document_1a302a3c608c137d5542105c8298bfba1f"/><section>
    <title>GenericSchemaDocument()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GenericSchemaDocument</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>GenericSchemaDocument</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;<link linkend="_class_generic_schema_document">::GenericSchemaDocument</link> (const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp; document, const <link linkend="_class_generic_schema_document_1ab1dec56a78b29649eb8e4b85b101ec7c">Ch</link> * uri = <computeroutput>0</computeroutput>
, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> uriLength = <computeroutput>0</computeroutput>
, <link linkend="_class_generic_schema_document_1aa53ca323efce50f88aea6fa0d03e9785">IRemoteSchemaDocumentProviderType</link> * remoteProvider = <computeroutput>0</computeroutput>
, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> * allocator = <computeroutput>0</computeroutput>
, const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp; pointer = <computeroutput><link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link>()</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>Compile a JSON document into schema document.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>document</entry><entry>
<para>A JSON document as source. </para>
</entry>
                            </row>
                            <row>
<entry>uri</entry><entry>
<para>The base URI of this schema document for purposes of violation reporting. </para>
</entry>
                            </row>
                            <row>
<entry>uriLength</entry><entry>
<para>Length of <computeroutput>name</computeroutput>, in code points. </para>
</entry>
                            </row>
                            <row>
<entry>remoteProvider</entry><entry>
<para>An optional remote schema document provider for resolving remote reference. Can be null. </para>
</entry>
                            </row>
                            <row>
<entry>allocator</entry><entry>
<para>An optional allocator instance for allocating memory. Can be null. </para>
</entry>
                            </row>
                            <row>
<entry>pointer</entry><entry>
<para>An optional JSON pointer to the start of the schema document </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_generic_schema_document_1a6a54dfd1aec0f560f7e47e08f3fcb8f1"/><section>
    <title>~GenericSchemaDocument()</title>
<indexterm><primary>~GenericSchemaDocument</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>~GenericSchemaDocument</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::~<link linkend="_class_generic_schema_document">GenericSchemaDocument</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Destructor. </para>
</para>
</section>
<anchor xml:id="_class_generic_schema_document_1ae5e4d5f87964ea7bfda2df824416d6da"/><section>
    <title>GenericSchemaDocument()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GenericSchemaDocument</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>GenericSchemaDocument</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;<link linkend="_class_generic_schema_document">::GenericSchemaDocument</link> (const <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Prohibit copying. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_generic_schema_document_1a36fa45023cbd5caada24ea7fed87202a"/><section>
    <title>AddSchemaRefs()</title>
<indexterm><primary>AddSchemaRefs</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>AddSchemaRefs</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::AddSchemaRefs (<link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> * schema)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a1a3625dab59f8e995063f61ba9560c14"/><section>
    <title>CreateSchema()</title>
<indexterm><primary>CreateSchema</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>CreateSchema</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> &amp; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::CreateSchema (const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> ** schema, const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp; pointer, const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp; v, const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp; document, const <link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> &amp; id)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a8f07ad5a43a7b70ecdaf362463544f25"/><section>
    <title>CreateSchemaRecursive()</title>
<indexterm><primary>CreateSchemaRecursive</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>CreateSchemaRecursive</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::CreateSchemaRecursive (const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> ** schema, const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp; pointer, const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp; v, const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp; document, const <link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> &amp; id)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a17f4365fd1d205a259cfef33962bd409"/><section>
    <title>FindId()</title>
<indexterm><primary>FindId</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>FindId</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> * <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::FindId (const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp; doc, const <link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> &amp; finduri, <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp; resptr, const <link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> &amp; baseuri, bool full, const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp; here = <computeroutput><link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link>()</computeroutput>
) const<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Find the first subschema with a resolved &apos;id&apos; that matches the specified URI. </para>
</para>
</section>
<anchor xml:id="_class_generic_schema_document_1ad359e04187039fe6e61b279383e7360e"/><section>
    <title>GetPointer()</title>
<indexterm><primary>GetPointer</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>GetPointer</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetPointer (const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> * schema) const<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a6a0b2b360df728077bb5d3779f97e73d"/><section>
    <title>GetRoot()</title>
<indexterm><primary>GetRoot</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>GetRoot</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> &amp; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetRoot ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get the root schema. </para>
</para>
</section>
<anchor xml:id="_class_generic_schema_document_1a2f69b7ddf26093678c953016374d7bfa"/><section>
    <title>GetSchema()</title>
<indexterm><primary>GetSchema</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>GetSchema</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> * <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetSchema (const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp; pointer) const<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a12afbdb45444193445f1c75bfa63c1d8"/><section>
    <title>GetTypeless()</title>
<indexterm><primary>GetTypeless</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>GetTypeless</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> * <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetTypeless ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1aab0203c06e65d944a8a03517d84de3cd"/><section>
    <title>GetURI()</title>
<indexterm><primary>GetURI</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>GetURI</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_schema_document_1af017bc68811efaabb9925b6db03fa3d5">SValue</link> &amp; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetURI ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a3debb209124c74e4498334a42f6f0244"/><section>
    <title>HandleRefSchema()</title>
<indexterm><primary>HandleRefSchema</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>HandleRefSchema</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::HandleRefSchema (const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp; source, const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link> ** schema, const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp; v, const <link linkend="_class_generic_schema_document_1ae246f1b6573a5a8a2c0d73d4eb64d53a">ValueType</link> &amp; document, const <link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> &amp; id)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1ab3c0518a161f39dea52280e5ebb97e51"/><section>
    <title>IsCyclicRef()</title>
<indexterm><primary>IsCyclicRef</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>IsCyclicRef</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::IsCyclicRef (const <link linkend="_class_generic_schema_document_1aeb62f562d4dc024402b00f97cbcef747">PointerType</link> &amp; pointer) const<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a9be58d02422911b109680135ee41e6e9"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_document">GenericSchemaDocument</link> &amp; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::operator= (const <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Prohibit assignment. </para>
</para>
</section>
</section>
<section>
<title>Friends And Related Function Documentation</title>
<anchor xml:id="_class_generic_schema_document_1afcc03e6ba8f1a819e1a028c31ad38347"/><section>
    <title>GenericSchemaValidator</title>
<indexterm><primary>GenericSchemaValidator</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>GenericSchemaValidator</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename , typename , typename &gt; </computeroutput><para><computeroutput>friend class <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a706511849688d9245fc37109f02a03c4"/><section>
    <title>internal::Schema&lt; GenericSchemaDocument &gt;</title>
<indexterm><primary>internal::Schema&lt; GenericSchemaDocument &gt;</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>internal::Schema&lt; GenericSchemaDocument &gt;</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>friend class <link linkend="_classinternal_1_1_schema">internal::Schema</link>&lt; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link> &gt;<computeroutput>[friend]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_generic_schema_document_1a8a7df889c7e1deab679c1ee165ba59f0"/><section>
    <title>allocator_</title>
<indexterm><primary>allocator_</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>allocator_</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_classrapidjson_1_1_allocator">Allocator</link>* <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::allocator_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1ab6b6e5654c0563a3ece3ae7a970c0f0f"/><section>
    <title>docId_</title>
<indexterm><primary>docId_</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>docId_</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_document_1afcfefaab7eecec6849d478557392e23c">UriType</link> <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::docId_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a3b0a57801ee25f2ba84ce61770291c33"/><section>
    <title>kInitialSchemaMapSize</title>
<indexterm><primary>kInitialSchemaMapSize</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>kInitialSchemaMapSize</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const size_t <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::kInitialSchemaMapSize = 64<computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a5a3e961495b724dc65682d6a0a681d03"/><section>
    <title>kInitialSchemaRefSize</title>
<indexterm><primary>kInitialSchemaRefSize</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>kInitialSchemaRefSize</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const size_t <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::kInitialSchemaRefSize = 64<computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a95ba649b2911b91297321093876f1cab"/><section>
    <title>ownAllocator_</title>
<indexterm><primary>ownAllocator_</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>ownAllocator_</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_classrapidjson_1_1_allocator">Allocator</link>* <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::ownAllocator_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1ae71c9925eaf2f51f26ce1083d3f4edf4"/><section>
    <title>remoteProvider_</title>
<indexterm><primary>remoteProvider_</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>remoteProvider_</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_document_1aa53ca323efce50f88aea6fa0d03e9785">IRemoteSchemaDocumentProviderType</link>* <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::remoteProvider_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a50ee80c40478d090c98900d4e6949737"/><section>
    <title>root_</title>
<indexterm><primary>root_</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>root_</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link>* <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::root_<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Root schema. </para>
</para>
</section>
<anchor xml:id="_class_generic_schema_document_1a75a97c9f8cd1cc8cd67f3b6364d93744"/><section>
    <title>schemaMap_</title>
<indexterm><primary>schemaMap_</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>schemaMap_</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_classinternal_1_1_stack">internal::Stack</link>&lt;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&gt; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::schemaMap_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a0c3ee68d07de1c96f1954ad66c6e6d23"/><section>
    <title>schemaRef_</title>
<indexterm><primary>schemaRef_</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>schemaRef_</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_classinternal_1_1_stack">internal::Stack</link>&lt;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&gt; <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::schemaRef_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a7393ecd4d607c1f81ce9eac5becf92a8"/><section>
    <title>typeless_</title>
<indexterm><primary>typeless_</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>typeless_</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_document_1acaf115202b159a2eb72c97c3dc6c3895">SchemaType</link>* <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::typeless_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_document_1a912d4d364b21b12c4cfce5fba8f983a4"/><section>
    <title>uri_</title>
<indexterm><primary>uri_</primary><secondary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaDocument&lt; ValueT, Allocator &gt;</primary><secondary>uri_</secondary></indexterm>
<computeroutput>template&lt;typename ValueT , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_document_1af017bc68811efaabb9925b6db03fa3d5">SValue</link> <link linkend="_class_generic_schema_document">GenericSchemaDocument</link>&lt; ValueT, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::uri_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
src/rapidjson/include/rapidjson/<link linkend="_fwd_8h">fwd.h</link>src/rapidjson/include/rapidjson/<link linkend="_schema_8h">schema.h</link></section>
</section>
