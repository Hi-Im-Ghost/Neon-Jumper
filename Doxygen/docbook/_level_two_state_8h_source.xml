<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__level_two_state_8h_source" xml:lang="en-US">
<title>LevelTwoState.h</title>
<indexterm><primary>src/states/LevelTwoState.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;TREES_JSON_LEVELTWOSTATE_H</emphasis>
2 <emphasis role="preprocessor">#define&#32;TREES_JSON_LEVELTWOSTATE_H</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__game_state_8h">GameState.h</link>&quot;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&quot;../entities/Player.h&quot;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&quot;../LoadMap.h&quot;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&quot;../entities/Slime.h&quot;</emphasis>
8 
13 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_level_two_state">LevelTwoState</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_game_state">GameState</link>&#32;{
14 <emphasis role="keyword">private</emphasis>:
16 &#32;&#32;&#32;&#32;<link linkend="_class_player">Player</link>*&#32;<link linkend="_class_level_two_state_1a469bbf78ec84759245e10ac70adacc73">player</link>;
18 &#32;&#32;&#32;&#32;std::list&lt;sf::RectangleShape&gt;&#32;<link linkend="_class_level_two_state_1a7ad92daf6ef97e948859dc855312d559">hitboxes</link>;
20 &#32;&#32;&#32;&#32;std::list&lt;sf::RectangleShape&gt;&#32;<link linkend="_class_level_two_state_1a575268e3daaec3cfa9b50bf95007a833">dmgboxes</link>;
22 &#32;&#32;&#32;&#32;<link linkend="_class_load_map">LoadMap</link>&#32;<link linkend="_class_level_two_state_1a9984b1898dafc94488b4b7ecc7982a20">map</link>;
23 
25 &#32;&#32;&#32;&#32;std::list&lt;Enemy*&gt;&#32;<link linkend="_class_level_two_state_1aa99428d28b78c4053a45fbb3bb89fe73">enemies</link>;
26 
28 &#32;&#32;&#32;&#32;<link linkend="_class_button">Button</link>*&#32;<link linkend="_class_level_two_state_1a6c2f1246e95f1b8d02a8c1811335d7ac">endMenuBtn</link>;
30 &#32;&#32;&#32;&#32;<link linkend="_class_button">Button</link>*&#32;<link linkend="_class_level_two_state_1aa6320f0adf2f5d8afc4765308533cc9e">pauseResumeBtn</link>;
32 &#32;&#32;&#32;&#32;<link linkend="_class_button">Button</link>*&#32;<link linkend="_class_level_two_state_1aae7cb005a7ca5aced940d1bde0f3f3ad">pauseExitBtn</link>;
34 &#32;&#32;&#32;&#32;<link linkend="_class_button">Button</link>*&#32;<link linkend="_class_level_two_state_1a817be74f8d90f8b0287be73032c50052">loadBtn</link>;
36 &#32;&#32;&#32;&#32;<link linkend="_class_button">Button</link>*&#32;<link linkend="_class_level_two_state_1a08dad9c426b62223f0b3831f93e0e64e">saveBtn</link>;
38 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_level_two_state_1a46949a9ae2783460731891d944e16f0e">renderHitboxes</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
39 
41 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_level_two_state_1a9f99d8d04959c85da282441f297827f3">level2</link>;
43 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_level_two_state_1aa0cbae750b25cc91831e83ba3bf8e027">i</link>&#32;=&#32;1;
45 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_level_two_state_1a31c901a3ecb6dc8c3c9c829b3325a7ec">x</link>&#32;=&#32;1;
46 
48 &#32;&#32;&#32;&#32;sf::RectangleShape&#32;<link linkend="_class_level_two_state_1a0e431278e634bbb8ad9d13cb8cc1e515">endLevelTrigger</link>;
50 &#32;&#32;&#32;&#32;<link linkend="_class_player_h_u_d">PlayerHUD</link>*&#32;<link linkend="_class_level_two_state_1a8fbdb4026b243b58cebd89fe0f1455a1">hud</link>;
51 
53 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1a9b16e37984b8dca7003b543ad1424b77">initValues</link>();
55 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1a139c8204fd318fd3ebe6bd0c34f957a5">initHitboxes</link>();
57 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1af10ab66c4f8950caf408330d9d61648b">initDmgBoxes</link>();
59 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1a0bfd788d18fcc4e31ea0c0ac2f3972c5">initPauseButtons</link>();
61 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1a0e3462e761c2a1388a1fc8912b2183cb">initEndButtons</link>();
63 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1a9e96b08989f79d03172d36d0ad7a8431">initEndTrigger</link>();
67 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1a909cd3afcd67dc87cbe00ced11822964">initView</link>(sf::RenderTarget&amp;&#32;window);
71 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1aa0e7f3d03a12891b6342b0b99bf97e9e">initViewPlayer</link>(sf::RenderTarget&#32;&amp;window);
73 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1ab480fba3e22f9239e8ab6515284dbaf3">initEnemies</link>();
74 
76 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1ab5cbec107009eb5a6d9771f9e6ee7ac4">updateInput</link>();
78 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1aac012451de8345c8e14b42daf7276fa1">updatePaused</link>();
80 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1a67b82f49f0e4408e4fa938e153d4eab8">updateEnd</link>();
84 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1adff85bb51976c5bc088c9dc96768169d">updateEntities</link>(<emphasis role="keywordtype">float</emphasis>&#32;deltaTime);
88 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1ad5cba366caeed8d83053e539ccf9c373">renderPaused</link>(sf::RenderTarget&amp;&#32;window);
92 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1a4bd07c0aac0d3d68a0ffa31241b4de2b">renderEnd</link>(sf::RenderTarget&amp;&#32;window);
96 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1a8f4072ff815628c8f20488a60142509d">renderEntities</link>(sf::RenderTarget&amp;&#32;window);
97 
99 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1af6ab6409ce5abbf530e5ff8b7617b4e9">updateEndTrigger</link>();
101 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1a982e04960a62ed005cbcc7320ba62fb3">updateDmgTriggers</link>();
103 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1a50e6d2840d4197f3f190de95ff50dd28">killPlayerTriggers</link>();
104 
106 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1aecea0c76cd6fb808e1543256decf0352">saveGame</link>();
107 
108 <emphasis role="keyword">protected</emphasis>:
109 <emphasis role="comment">//&#32;Duplicates</emphasis>
110 
111 <emphasis role="keyword">public</emphasis>:
115 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_level_two_state_1a163ba0c525f25d7ee56f58d4bc40171e">LevelTwoState</link>(std::stack&lt;GameState*&gt;*&#32;<link linkend="_class_game_state_1a6e9e1aa616cd1071425f2766a76957ec">states</link>);
116 
120 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1aca927200ca6e61366401ac3ae0247dc1">update</link>(<emphasis role="keywordtype">float</emphasis>&#32;deltaTime)&#32;<emphasis role="keyword">override</emphasis>;
124 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1a442f2cd1d36c3919177d677c62828a17">render</link>(sf::RenderTarget&amp;&#32;window)&#32;<emphasis role="keyword">override</emphasis>;
125 
127 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_level_two_state_1a65ea3507d5cb9957a940185c7fb9c4e2">loadGame</link>();
128 };
129 
130 
131 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//TREES_JSON_LEVELTWOSTATE_H</emphasis>
</programlisting></section>
