<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_memory_pool_allocator_1_1_shared_data" xml:lang="en-US">
<title>MemoryPoolAllocator&lt; BaseAllocator &gt;::SharedData Struct Reference</title>
<indexterm><primary>MemoryPoolAllocator&lt; BaseAllocator &gt;::SharedData</primary></indexterm>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_memory_pool_allocator_1_1_chunk_header">ChunkHeader</link> * <link linkend="_struct_memory_pool_allocator_1_1_shared_data_1a1f6aa37c67bc020bd9e5490a8c5bdfb9">chunkHead</link></para>

<para>Head of the chunk linked-list. Only the head chunk serves allocation. </para>
</listitem>
            <listitem><para>BaseAllocator * <link linkend="_struct_memory_pool_allocator_1_1_shared_data_1a8e991b807bbdde89645a19bde7398bf7">ownBaseAllocator</link></para>

<para>base allocator created by this object. </para>
</listitem>
            <listitem><para>size_t <link linkend="_struct_memory_pool_allocator_1_1_shared_data_1a518c933b79807f4fd3518ce6d426f2dc">refcount</link></para>
</listitem>
            <listitem><para>bool <link linkend="_struct_memory_pool_allocator_1_1_shared_data_1a89636640af96ac5eddb73c7377981eb9">ownBuffer</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_memory_pool_allocator_1_1_shared_data_1a1f6aa37c67bc020bd9e5490a8c5bdfb9"/><section>
    <title>chunkHead</title>
<indexterm><primary>chunkHead</primary><secondary>MemoryPoolAllocator&lt; BaseAllocator &gt;::SharedData</secondary></indexterm>
<indexterm><primary>MemoryPoolAllocator&lt; BaseAllocator &gt;::SharedData</primary><secondary>chunkHead</secondary></indexterm>
<computeroutput>template&lt;typename BaseAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_struct_memory_pool_allocator_1_1_chunk_header">ChunkHeader</link>* <link linkend="_class_memory_pool_allocator">MemoryPoolAllocator</link>&lt; BaseAllocator &gt;::SharedData::chunkHead</computeroutput></para><para>

<para>Head of the chunk linked-list. Only the head chunk serves allocation. </para>
</para>
</section>
<anchor xml:id="_struct_memory_pool_allocator_1_1_shared_data_1a8e991b807bbdde89645a19bde7398bf7"/><section>
    <title>ownBaseAllocator</title>
<indexterm><primary>ownBaseAllocator</primary><secondary>MemoryPoolAllocator&lt; BaseAllocator &gt;::SharedData</secondary></indexterm>
<indexterm><primary>MemoryPoolAllocator&lt; BaseAllocator &gt;::SharedData</primary><secondary>ownBaseAllocator</secondary></indexterm>
<computeroutput>template&lt;typename BaseAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>BaseAllocator* <link linkend="_class_memory_pool_allocator">MemoryPoolAllocator</link>&lt; BaseAllocator &gt;::SharedData::ownBaseAllocator</computeroutput></para><para>

<para>base allocator created by this object. </para>
</para>
</section>
<anchor xml:id="_struct_memory_pool_allocator_1_1_shared_data_1a89636640af96ac5eddb73c7377981eb9"/><section>
    <title>ownBuffer</title>
<indexterm><primary>ownBuffer</primary><secondary>MemoryPoolAllocator&lt; BaseAllocator &gt;::SharedData</secondary></indexterm>
<indexterm><primary>MemoryPoolAllocator&lt; BaseAllocator &gt;::SharedData</primary><secondary>ownBuffer</secondary></indexterm>
<computeroutput>template&lt;typename BaseAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_memory_pool_allocator">MemoryPoolAllocator</link>&lt; BaseAllocator &gt;::SharedData::ownBuffer</computeroutput></para></section>
<anchor xml:id="_struct_memory_pool_allocator_1_1_shared_data_1a518c933b79807f4fd3518ce6d426f2dc"/><section>
    <title>refcount</title>
<indexterm><primary>refcount</primary><secondary>MemoryPoolAllocator&lt; BaseAllocator &gt;::SharedData</secondary></indexterm>
<indexterm><primary>MemoryPoolAllocator&lt; BaseAllocator &gt;::SharedData</primary><secondary>refcount</secondary></indexterm>
<computeroutput>template&lt;typename BaseAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_memory_pool_allocator">MemoryPoolAllocator</link>&lt; BaseAllocator &gt;::SharedData::refcount</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_allocators_8h">allocators.h</link></section>
</section>
