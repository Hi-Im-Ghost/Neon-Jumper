<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_base_reader_handler" xml:lang="en-US">
<title>BaseReaderHandler&lt; Encoding, Derived &gt; Struct Template Reference</title>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary></indexterm>
<para>

<para>Default implementation of Handler. </para>
 
</para>
<para>
<computeroutput>#include &lt;reader.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for BaseReaderHandler&lt; Encoding, Derived &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_base_reader_handler.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef Encoding::Ch <link linkend="_struct_base_reader_handler_1a8302c755dd3560c8c5bac99162c28214">Ch</link></para>
</listitem>
            <listitem><para>typedef internal::SelectIf&lt; internal::IsSame&lt; Derived, void &gt;, <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>, Derived &gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link> <link linkend="_struct_base_reader_handler_1a973e47218d5a6cf51576b32c35fa50ac">Override</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1a836437f6ccc37f08ff933f009b18a78c">Default</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1ae2ebbde4628bf3659ddc5d18520935f5">Null</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1aa1c3ce42dbb856b3349792dc9d963587">Bool</link> (bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1a85e813aaf7189a2f87bd53953324fafc">Int</link> (int)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1a0e683306cbb7b4e350a35c18c5246f2a">Uint</link> (unsigned)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1a04011733ea584739c97ad5c6afa15a35">Int64</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1a351aa3cd81856a487c21022e9cc64d2b">Uint64</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1a8156ea6ae5b8cd23a8b700e92a8af1eb">Double</link> (double)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1a9ed0d83d5e6c8f5e4b32ca3735ff0bb7">RawNumber</link> (const <link linkend="_struct_base_reader_handler_1a8302c755dd3560c8c5bac99162c28214">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, bool copy)</para>

<para>enabled via kParseNumbersAsStringsFlag, string is not null-terminated (use length) </para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1a3ac69e6326d0aeef7b1f2619742bbe00">String</link> (const <link linkend="_struct_base_reader_handler_1a8302c755dd3560c8c5bac99162c28214">Ch</link> *, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>, bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1ab0a7d9bcececb8d6ed748656f67f4917">StartObject</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1abc50b2e7e411b7b731715e05cd01e2eb">Key</link> (const <link linkend="_struct_base_reader_handler_1a8302c755dd3560c8c5bac99162c28214">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, bool copy)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1a0406cee0af26bc3a0b7fb2414537b0ab">EndObject</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1a9dbb1143a250a904bb18a174553a3a00">StartArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_base_reader_handler_1ae9d60a8779b6a77a7f283d64961879fb">EndArray</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> = UTF8&lt;&gt;, typename Derived = void&gt;
struct BaseReaderHandler&lt; Encoding, Derived &gt;</title></simplesect>

<para>Default implementation of Handler. </para>



<para>This can be used as base class of any reader handler. <note><title>Note</title>

<para>implements Handler concept </para>
</note>
</para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_struct_base_reader_handler_1a8302c755dd3560c8c5bac99162c28214"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>typedef Encoding::Ch <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::Ch</computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1a973e47218d5a6cf51576b32c35fa50ac"/><section>
    <title>Override</title>
<indexterm><primary>Override</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>Override</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>typedef internal::SelectIf&lt;internal::IsSame&lt;Derived,void&gt;,<link linkend="_struct_base_reader_handler">BaseReaderHandler</link>,Derived&gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link> <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::Override</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_base_reader_handler_1aa1c3ce42dbb856b3349792dc9d963587"/><section>
    <title>Bool()</title>
<indexterm><primary>Bool</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>Bool</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::Bool (bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1a836437f6ccc37f08ff933f009b18a78c"/><section>
    <title>Default()</title>
<indexterm><primary>Default</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>Default</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::Default ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1a8156ea6ae5b8cd23a8b700e92a8af1eb"/><section>
    <title>Double()</title>
<indexterm><primary>Double</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>Double</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::Double (double )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1ae9d60a8779b6a77a7f283d64961879fb"/><section>
    <title>EndArray()</title>
<indexterm><primary>EndArray</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>EndArray</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::EndArray (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1a0406cee0af26bc3a0b7fb2414537b0ab"/><section>
    <title>EndObject()</title>
<indexterm><primary>EndObject</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>EndObject</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::EndObject (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1a85e813aaf7189a2f87bd53953324fafc"/><section>
    <title>Int()</title>
<indexterm><primary>Int</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>Int</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::Int (int )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1a04011733ea584739c97ad5c6afa15a35"/><section>
    <title>Int64()</title>
<indexterm><primary>Int64</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>Int64</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::Int64 (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1abc50b2e7e411b7b731715e05cd01e2eb"/><section>
    <title>Key()</title>
<indexterm><primary>Key</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>Key</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::Key (const <link linkend="_struct_base_reader_handler_1a8302c755dd3560c8c5bac99162c28214">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, bool copy)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1ae2ebbde4628bf3659ddc5d18520935f5"/><section>
    <title>Null()</title>
<indexterm><primary>Null</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>Null</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::Null ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1a9ed0d83d5e6c8f5e4b32ca3735ff0bb7"/><section>
    <title>RawNumber()</title>
<indexterm><primary>RawNumber</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>RawNumber</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::RawNumber (const <link linkend="_struct_base_reader_handler_1a8302c755dd3560c8c5bac99162c28214">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, bool copy)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>enabled via kParseNumbersAsStringsFlag, string is not null-terminated (use length) </para>
</para>
</section>
<anchor xml:id="_struct_base_reader_handler_1a9dbb1143a250a904bb18a174553a3a00"/><section>
    <title>StartArray()</title>
<indexterm><primary>StartArray</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>StartArray</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::StartArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1ab0a7d9bcececb8d6ed748656f67f4917"/><section>
    <title>StartObject()</title>
<indexterm><primary>StartObject</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>StartObject</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::StartObject ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1a3ac69e6326d0aeef7b1f2619742bbe00"/><section>
    <title>String()</title>
<indexterm><primary>String</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>String</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::String (const <link linkend="_struct_base_reader_handler_1a8302c755dd3560c8c5bac99162c28214">Ch</link> * , <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> , bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1a0e683306cbb7b4e350a35c18c5246f2a"/><section>
    <title>Uint()</title>
<indexterm><primary>Uint</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>Uint</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::Uint (unsigned )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_base_reader_handler_1a351aa3cd81856a487c21022e9cc64d2b"/><section>
    <title>Uint64()</title>
<indexterm><primary>Uint64</primary><secondary>BaseReaderHandler&lt; Encoding, Derived &gt;</secondary></indexterm>
<indexterm><primary>BaseReaderHandler&lt; Encoding, Derived &gt;</primary><secondary>Uint64</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;, typename Derived  = void&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_base_reader_handler">BaseReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, Derived &gt;::Uint64 (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
src/rapidjson/include/rapidjson/<link linkend="_fwd_8h">fwd.h</link>src/rapidjson/include/rapidjson/<link linkend="_reader_8h">reader.h</link></section>
</section>
