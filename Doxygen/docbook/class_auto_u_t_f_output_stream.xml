<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_auto_u_t_f_output_stream" xml:lang="en-US">
<title>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt; Class Template Reference</title>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary></indexterm>
<para>

<para>Output stream wrapper with dynamically bound encoding and automatic encoding detection. </para>
 
</para>
<para>
<computeroutput>#include &lt;encodedstream.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef CharType <link linkend="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_auto_u_t_f_output_stream_1a2fe7dbc8e43d11295f66df5653148137">AutoUTFOutputStream</link> (OutputByteStream &amp;os, <link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> type, bool putBOM)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> <link linkend="_class_auto_u_t_f_output_stream_1a62091565a8103d69002be2e2f4f0ba2c">GetType</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_auto_u_t_f_output_stream_1ad12b33e48c45bdbf2628fd3d5461041a">Put</link> (<link linkend="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0">Ch</link> c)</para>
</listitem>
            <listitem><para>void <link linkend="_class_auto_u_t_f_output_stream_1a38b54c84ba0c479552256ac092529f47">Flush</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0">Ch</link> <link linkend="_class_auto_u_t_f_output_stream_1ad706f62fd5d22967e5949f3a05087e4e">Peek</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0">Ch</link> <link linkend="_class_auto_u_t_f_output_stream_1a44ee7d84ba13fece17574d01b7be574b">Take</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_auto_u_t_f_output_stream_1a81acbe33d84a28b7d5040d576ae22b5a">Tell</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0">Ch</link> * <link linkend="_class_auto_u_t_f_output_stream_1aa4ef29e3e57f256402b2cd68507600d8">PutBegin</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_auto_u_t_f_output_stream_1a4b16bda191526c894501fce447e95b8d">PutEnd</link> (<link linkend="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0">Ch</link> *)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Types    </title>
        <itemizedlist>
            <listitem><para>typedef void(* <link linkend="_class_auto_u_t_f_output_stream_1a398450792738ee1cb865fc96dfde9e1a">PutFunc</link>) (OutputByteStream &amp;, <link linkend="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0">Ch</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_auto_u_t_f_output_stream_1a6fbc88c345f0b7beef9053e8a0315fb4">RAPIDJSON_STATIC_ASSERT</link> (sizeof(typename OutputByteStream::Ch)==1)</para>
</listitem>
            <listitem><para><link linkend="_class_auto_u_t_f_output_stream_1aceb5330e6fddef6a439a105fe501f1d4">AutoUTFOutputStream</link> (const <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link> &amp; <link linkend="_class_auto_u_t_f_output_stream_1ac338657ec5533560c16a31691ab4054d">operator=</link> (const <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link> &amp;)</para>
</listitem>
            <listitem><para>void <link linkend="_class_auto_u_t_f_output_stream_1abcfbaa81ceaddf06ae435ba3e78421d7">PutBOM</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>OutputByteStream * <link linkend="_class_auto_u_t_f_output_stream_1a723efb60d9fdb46e6094db891d24a509">os_</link></para>
</listitem>
            <listitem><para><link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> <link linkend="_class_auto_u_t_f_output_stream_1a767a11d3801e410881972013376d69eb">type_</link></para>
</listitem>
            <listitem><para><link linkend="_class_auto_u_t_f_output_stream_1a398450792738ee1cb865fc96dfde9e1a">PutFunc</link> <link linkend="_class_auto_u_t_f_output_stream_1af15ae56768d0f65b5938eab255493274">putFunc_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename CharType, typename OutputByteStream&gt;
class AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</title></simplesect>

<para>Output stream wrapper with dynamically bound encoding and automatic encoding detection. </para>



<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>CharType</entry><entry>
<para>Type of character for writing. </para>
</entry>
                            </row>
                            <row>
<entry>OutputByteStream</entry><entry>
<para>type of output byte stream to be wrapped. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput>typedef CharType <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::Ch</computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1a398450792738ee1cb865fc96dfde9e1a"/><section>
    <title>PutFunc</title>
<indexterm><primary>PutFunc</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>PutFunc</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput>typedef void(* <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::PutFunc) (OutputByteStream &amp;, <link linkend="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0">Ch</link>)<computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_auto_u_t_f_output_stream_1a2fe7dbc8e43d11295f66df5653148137"/><section>
    <title>AutoUTFOutputStream()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>AutoUTFOutputStream</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>AutoUTFOutputStream</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;<link linkend="_class_auto_u_t_f_output_stream">::AutoUTFOutputStream</link> (OutputByteStream &amp; os, <link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> type, bool putBOM)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>os</entry><entry>
<para>output stream to be wrapped. </para>
</entry>
                            </row>
                            <row>
<entry>type</entry><entry>
<para>UTF encoding type. </para>
</entry>
                            </row>
                            <row>
<entry>putBOM</entry><entry>
<para>Whether to write BOM at the beginning of the stream. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1aceb5330e6fddef6a439a105fe501f1d4"/><section>
    <title>AutoUTFOutputStream()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>AutoUTFOutputStream</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>AutoUTFOutputStream</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;<link linkend="_class_auto_u_t_f_output_stream">::AutoUTFOutputStream</link> (const <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_auto_u_t_f_output_stream_1a38b54c84ba0c479552256ac092529f47"/><section>
    <title>Flush()</title>
<indexterm><primary>Flush</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>Flush</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput>void <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::Flush ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1a62091565a8103d69002be2e2f4f0ba2c"/><section>
    <title>GetType()</title>
<indexterm><primary>GetType</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>GetType</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::GetType ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1ac338657ec5533560c16a31691ab4054d"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link> &amp; <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::operator= (const <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1ad706f62fd5d22967e5949f3a05087e4e"/><section>
    <title>Peek()</title>
<indexterm><primary>Peek</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>Peek</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0">Ch</link> <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::Peek ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1ad12b33e48c45bdbf2628fd3d5461041a"/><section>
    <title>Put()</title>
<indexterm><primary>Put</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>Put</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput>void <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::Put (<link linkend="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0">Ch</link> c)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1aa4ef29e3e57f256402b2cd68507600d8"/><section>
    <title>PutBegin()</title>
<indexterm><primary>PutBegin</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>PutBegin</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0">Ch</link> * <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::PutBegin ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1abcfbaa81ceaddf06ae435ba3e78421d7"/><section>
    <title>PutBOM()</title>
<indexterm><primary>PutBOM</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>PutBOM</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput>void <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::PutBOM ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1a4b16bda191526c894501fce447e95b8d"/><section>
    <title>PutEnd()</title>
<indexterm><primary>PutEnd</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>PutEnd</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::PutEnd (<link linkend="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0">Ch</link> * )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1a6fbc88c345f0b7beef9053e8a0315fb4"/><section>
    <title>RAPIDJSON_STATIC_ASSERT()</title>
<indexterm><primary>RAPIDJSON_STATIC_ASSERT</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>RAPIDJSON_STATIC_ASSERT</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::RAPIDJSON_STATIC_ASSERT (sizeof(typename OutputByteStream::Ch)  = <computeroutput>=1</computeroutput>
)<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1a44ee7d84ba13fece17574d01b7be574b"/><section>
    <title>Take()</title>
<indexterm><primary>Take</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>Take</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_output_stream_1abd8c486101026e11828e86c18991c9c0">Ch</link> <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::Take ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1a81acbe33d84a28b7d5040d576ae22b5a"/><section>
    <title>Tell()</title>
<indexterm><primary>Tell</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>Tell</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::Tell ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_auto_u_t_f_output_stream_1a723efb60d9fdb46e6094db891d24a509"/><section>
    <title>os_</title>
<indexterm><primary>os_</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>os_</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput>OutputByteStream* <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::os_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1af15ae56768d0f65b5938eab255493274"/><section>
    <title>putFunc_</title>
<indexterm><primary>putFunc_</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>putFunc_</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_auto_u_t_f_output_stream_1a398450792738ee1cb865fc96dfde9e1a">PutFunc</link> <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::putFunc_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_auto_u_t_f_output_stream_1a767a11d3801e410881972013376d69eb"/><section>
    <title>type_</title>
<indexterm><primary>type_</primary><secondary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</secondary></indexterm>
<indexterm><primary>AutoUTFOutputStream&lt; CharType, OutputByteStream &gt;</primary><secondary>type_</secondary></indexterm>
<computeroutput>template&lt;typename CharType , typename OutputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> <link linkend="_class_auto_u_t_f_output_stream">AutoUTFOutputStream</link>&lt; CharType, OutputByteStream &gt;::type_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_encodedstream_8h">encodedstream.h</link></section>
</section>
