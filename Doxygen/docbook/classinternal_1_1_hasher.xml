<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classinternal_1_1_hasher" xml:lang="en-US">
<title>internal::Hasher&lt; Encoding, Allocator &gt; Class Template Reference</title>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;schema.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef Encoding::Ch <link linkend="_classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classinternal_1_1_hasher_1a7b6abfdd3bdc60064a2322cdd20708c1">Hasher</link> (<link linkend="_classrapidjson_1_1_allocator">Allocator</link> *allocator=0, size_t stackCapacity=kDefaultSize)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1a57c656866aa08cc7c448ce47b7a243c3">Null</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1a11efd784a4e9c4f8a3dc281552df0486">Bool</link> (bool b)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1aadbadf98ee7c9ab03a636e0f06d38bac">Int</link> (int i)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1a4401600c24c817a45cea6c281438e5b4">Uint</link> (unsigned u)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1ae0579cd54b3c545f77452543793b9a97">Int64</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> i)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1a14832ac4ec204f1065b929df2c255457">Uint64</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> u)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1a83abe847e24ed88d5aab092d840e37c1">Double</link> (double d)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1ae277289ad2fb3a938a6507e566d3c5e2">RawNumber</link> (const <link linkend="_classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1a885f2bf42f2bb64d6f9443129dce3883">String</link> (const <link linkend="_classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1a1607d6cac3daab9725e442e38d121028">StartObject</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1a1b34d88f85f9c6a739c1f9038f14f078">Key</link> (const <link linkend="_classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, bool copy)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1a7050f1552d88967944195163a6a0b08e">EndObject</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> memberCount)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1a2ceb3cc00216f6b6ce66907856a16404">StartArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1ad445b2730be23e18b4dec2c4d1033419">EndArray</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> elementCount)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_hasher_1ae09fee05c56194031e8af94a1b1be145">IsValid</link> () const</para>
</listitem>
            <listitem><para><link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> <link linkend="_classinternal_1_1_hasher_1ac221aaaa0d643aae553125e76aed7b47">GetHashCode</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>typedef Encoding::Ch <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Ch</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classinternal_1_1_hasher_1a7b6abfdd3bdc60064a2322cdd20708c1"/><section>
    <title>Hasher()</title>
<indexterm><primary>Hasher</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>Hasher</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput><link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Hasher (<link linkend="_classrapidjson_1_1_allocator">Allocator</link> * allocator = <computeroutput>0</computeroutput>
, size_t stackCapacity = <computeroutput>kDefaultSize</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classinternal_1_1_hasher_1a11efd784a4e9c4f8a3dc281552df0486"/><section>
    <title>Bool()</title>
<indexterm><primary>Bool</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>Bool</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Bool (bool b)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1a83abe847e24ed88d5aab092d840e37c1"/><section>
    <title>Double()</title>
<indexterm><primary>Double</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>Double</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Double (double d)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1ad445b2730be23e18b4dec2c4d1033419"/><section>
    <title>EndArray()</title>
<indexterm><primary>EndArray</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>EndArray</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::EndArray (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> elementCount)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1a7050f1552d88967944195163a6a0b08e"/><section>
    <title>EndObject()</title>
<indexterm><primary>EndObject</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>EndObject</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::EndObject (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> memberCount)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1ac221aaaa0d643aae553125e76aed7b47"/><section>
    <title>GetHashCode()</title>
<indexterm><primary>GetHashCode</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>GetHashCode</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput><link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GetHashCode ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1aadbadf98ee7c9ab03a636e0f06d38bac"/><section>
    <title>Int()</title>
<indexterm><primary>Int</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>Int</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Int (int i)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1ae0579cd54b3c545f77452543793b9a97"/><section>
    <title>Int64()</title>
<indexterm><primary>Int64</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>Int64</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Int64 (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> i)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1ae09fee05c56194031e8af94a1b1be145"/><section>
    <title>IsValid()</title>
<indexterm><primary>IsValid</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>IsValid</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::IsValid ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1a1b34d88f85f9c6a739c1f9038f14f078"/><section>
    <title>Key()</title>
<indexterm><primary>Key</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>Key</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Key (const <link linkend="_classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, bool copy)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1a57c656866aa08cc7c448ce47b7a243c3"/><section>
    <title>Null()</title>
<indexterm><primary>Null</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>Null</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Null ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1ae277289ad2fb3a938a6507e566d3c5e2"/><section>
    <title>RawNumber()</title>
<indexterm><primary>RawNumber</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>RawNumber</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::RawNumber (const <link linkend="_classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1a2ceb3cc00216f6b6ce66907856a16404"/><section>
    <title>StartArray()</title>
<indexterm><primary>StartArray</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>StartArray</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::StartArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1a1607d6cac3daab9725e442e38d121028"/><section>
    <title>StartObject()</title>
<indexterm><primary>StartObject</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>StartObject</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::StartObject ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1a885f2bf42f2bb64d6f9443129dce3883"/><section>
    <title>String()</title>
<indexterm><primary>String</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>String</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::String (const <link linkend="_classinternal_1_1_hasher_1a415970af68a067615c3c95306cff6d43">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1a4401600c24c817a45cea6c281438e5b4"/><section>
    <title>Uint()</title>
<indexterm><primary>Uint</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>Uint</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Uint (unsigned u)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_hasher_1a14832ac4ec204f1065b929df2c255457"/><section>
    <title>Uint64()</title>
<indexterm><primary>Uint64</primary><secondary>internal::Hasher&lt; Encoding, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::Hasher&lt; Encoding, Allocator &gt;</primary><secondary>Uint64</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_hasher">internal::Hasher</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Uint64 (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> u)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_schema_8h">schema.h</link></section>
</section>
