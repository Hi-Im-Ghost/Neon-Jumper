<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_employee" xml:lang="en-US">
<title>Employee Class Reference</title>
<indexterm><primary>Employee</primary></indexterm>
<para>Inheritance diagram for Employee:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_employee.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_employee_1a524a0a5d4f27c51b76a64dda44c6e328">Employee</link> (const std::string &amp;name, unsigned age, bool married)</para>
</listitem>
            <listitem><para><link linkend="_class_employee_1a85388b3b212aa92334c787811348cc8a">Employee</link> (const <link linkend="_class_employee">Employee</link> &amp;rhs)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class_employee_1abed56e9c007fff2bfe27ca87251baaf2">~Employee</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_employee">Employee</link> &amp; <link linkend="_class_employee_1a5f34edd226568fe72b64b64274102ff5">operator=</link> (const <link linkend="_class_employee">Employee</link> &amp;rhs)</para>
</listitem>
            <listitem><para>void <link linkend="_class_employee_1ad83c2ff92351c61994a3f597afa1f60f">AddDependent</link> (const <link linkend="_class_dependent">Dependent</link> &amp;dependent)</para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_class_writer">Writer</link> &gt; </para><para>void <link linkend="_class_employee_1a9679fb699a96d2a4d570568ab472d696">Serialize</link> (<link linkend="_class_writer">Writer</link> &amp;writer) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>std::vector&lt; <link linkend="_class_dependent">Dependent</link> &gt; <link linkend="_class_employee_1ad2d6d6bce35a5583a7e028f299e2312d">dependents_</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_employee_1a0dcbd7fb5726f729431bcdc5fb749f8f">married_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_employee_1a524a0a5d4f27c51b76a64dda44c6e328"/><section>
    <title>Employee()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Employee</primary><secondary>Employee</secondary></indexterm>
<indexterm><primary>Employee</primary><secondary>Employee</secondary></indexterm>
<para><computeroutput>Employee::Employee (const std::string &amp; name, unsigned age, bool married)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_employee_1a85388b3b212aa92334c787811348cc8a"/><section>
    <title>Employee()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Employee</primary><secondary>Employee</secondary></indexterm>
<indexterm><primary>Employee</primary><secondary>Employee</secondary></indexterm>
<para><computeroutput>Employee::Employee (const <link linkend="_class_employee">Employee</link> &amp; rhs)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_employee_1abed56e9c007fff2bfe27ca87251baaf2"/><section>
    <title>~Employee()</title>
<indexterm><primary>~Employee</primary><secondary>Employee</secondary></indexterm>
<indexterm><primary>Employee</primary><secondary>~Employee</secondary></indexterm>
<para><computeroutput>Employee::~Employee ( )<computeroutput>[virtual]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_employee_1ad83c2ff92351c61994a3f597afa1f60f"/><section>
    <title>AddDependent()</title>
<indexterm><primary>AddDependent</primary><secondary>Employee</secondary></indexterm>
<indexterm><primary>Employee</primary><secondary>AddDependent</secondary></indexterm>
<para><computeroutput>void Employee::AddDependent (const <link linkend="_class_dependent">Dependent</link> &amp; dependent)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_employee_1a5f34edd226568fe72b64b64274102ff5"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>Employee</secondary></indexterm>
<indexterm><primary>Employee</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_employee">Employee</link> &amp; Employee::operator= (const <link linkend="_class_employee">Employee</link> &amp; rhs)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_employee_1a9679fb699a96d2a4d570568ab472d696"/><section>
    <title>Serialize()</title>
<indexterm><primary>Serialize</primary><secondary>Employee</secondary></indexterm>
<indexterm><primary>Employee</primary><secondary>Serialize</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_class_writer">Writer</link> &gt; </computeroutput><para><computeroutput>void Employee::Serialize (<link linkend="_class_writer">Writer</link> &amp; writer) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_employee_1ad2d6d6bce35a5583a7e028f299e2312d"/><section>
    <title>dependents_</title>
<indexterm><primary>dependents_</primary><secondary>Employee</secondary></indexterm>
<indexterm><primary>Employee</primary><secondary>dependents_</secondary></indexterm>
<para><computeroutput>std::vector&lt;<link linkend="_class_dependent">Dependent</link>&gt; Employee::dependents_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_employee_1a0dcbd7fb5726f729431bcdc5fb749f8f"/><section>
    <title>married_</title>
<indexterm><primary>married_</primary><secondary>Employee</secondary></indexterm>
<indexterm><primary>Employee</primary><secondary>married_</secondary></indexterm>
<para><computeroutput>bool Employee::married_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/example/serialize/<link linkend="_serialize_8cpp">serialize.cpp</link></section>
</section>
