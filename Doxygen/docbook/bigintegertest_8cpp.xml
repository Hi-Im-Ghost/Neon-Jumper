<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_bigintegertest_8cpp" xml:lang="en-US">
<title>src/rapidjson/test/unittest/bigintegertest.cpp File Reference</title>
<indexterm><primary>src/rapidjson/test/unittest/bigintegertest.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;unittest.h&quot;
#include &quot;rapidjson/internal/biginteger.h&quot;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1">BIGINTEGER_LITERAL</link>(s)   BigInteger(s, sizeof(s) - 1)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>static const BigInteger <link linkend="_bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99">kZero</link> (0)</para>
</listitem>
            <listitem><para>static const BigInteger <link linkend="_bigintegertest_8cpp_1ad8e66020abc2faa30b2e127744afefd9">kOne</link> (1)</para>
</listitem>
            <listitem><para><link linkend="_bigintegertest_8cpp_1aa8cf7efbc0acc1faf78ac414a6bdc697">TEST</link> (BigInteger, Constructor)</para>
</listitem>
            <listitem><para><link linkend="_bigintegertest_8cpp_1adbf90ce017efe6df9513580a1e92adfb">TEST</link> (BigInteger, AddUint64)</para>
</listitem>
            <listitem><para><link linkend="_bigintegertest_8cpp_1a3593c420038e83831fcd23c1df6e32c8">TEST</link> (BigInteger, MultiplyUint64)</para>
</listitem>
            <listitem><para><link linkend="_bigintegertest_8cpp_1aa9f8b4097ff348a7cc1ba276dac1d1d6">TEST</link> (BigInteger, MultiplyUint32)</para>
</listitem>
            <listitem><para><link linkend="_bigintegertest_8cpp_1a056b4f0cf92be264641638a89d1bb022">TEST</link> (BigInteger, LeftShift)</para>
</listitem>
            <listitem><para><link linkend="_bigintegertest_8cpp_1acc87e5f0c34e0c395cecdb2f3b2a00bd">TEST</link> (BigInteger, Compare)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>static const BigInteger <link linkend="_bigintegertest_8cpp_1a4b0e2f3977ac5fd08d791bed31852e2a">kUint64Max</link> = <link linkend="_strtodtest_8cpp_1a92485163f9780d3f913ba6241bb668a1">BIGINTEGER_LITERAL</link>(&quot;18446744073709551615&quot;)</para>
</listitem>
            <listitem><para>static const BigInteger <link linkend="_bigintegertest_8cpp_1abe86d9c218d8bfc6c78a83d8b551cb99">kTwo64</link> = <link linkend="_strtodtest_8cpp_1a92485163f9780d3f913ba6241bb668a1">BIGINTEGER_LITERAL</link>(&quot;18446744073709551616&quot;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_bigintegertest_8cpp_1a92485163f9780d3f913ba6241bb668a1"/><section>
    <title>BIGINTEGER_LITERAL</title>
<indexterm><primary>BIGINTEGER_LITERAL</primary><secondary>bigintegertest.cpp</secondary></indexterm>
<indexterm><primary>bigintegertest.cpp</primary><secondary>BIGINTEGER_LITERAL</secondary></indexterm>
<para><computeroutput>#define BIGINTEGER_LITERAL( s)   BigInteger(s, sizeof(s) - 1)</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_bigintegertest_8cpp_1ad8e66020abc2faa30b2e127744afefd9"/><section>
    <title>kOne()</title>
<indexterm><primary>kOne</primary><secondary>bigintegertest.cpp</secondary></indexterm>
<indexterm><primary>bigintegertest.cpp</primary><secondary>kOne</secondary></indexterm>
<para><computeroutput>static const BigInteger kOne (1 )<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_bigintegertest_8cpp_1ad424bd393374322ba5a18b5f90c01b99"/><section>
    <title>kZero()</title>
<indexterm><primary>kZero</primary><secondary>bigintegertest.cpp</secondary></indexterm>
<indexterm><primary>bigintegertest.cpp</primary><secondary>kZero</secondary></indexterm>
<para><computeroutput>static const BigInteger kZero (0 )<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_bigintegertest_8cpp_1adbf90ce017efe6df9513580a1e92adfb"/><section>
    <title>TEST()<computeroutput>[1/6]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>bigintegertest.cpp</secondary></indexterm>
<indexterm><primary>bigintegertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (BigInteger , AddUint64 )</computeroutput></para></section>
<anchor xml:id="_bigintegertest_8cpp_1acc87e5f0c34e0c395cecdb2f3b2a00bd"/><section>
    <title>TEST()<computeroutput>[2/6]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>bigintegertest.cpp</secondary></indexterm>
<indexterm><primary>bigintegertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (BigInteger , Compare )</computeroutput></para></section>
<anchor xml:id="_bigintegertest_8cpp_1aa8cf7efbc0acc1faf78ac414a6bdc697"/><section>
    <title>TEST()<computeroutput>[3/6]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>bigintegertest.cpp</secondary></indexterm>
<indexterm><primary>bigintegertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (BigInteger , Constructor )</computeroutput></para></section>
<anchor xml:id="_bigintegertest_8cpp_1a056b4f0cf92be264641638a89d1bb022"/><section>
    <title>TEST()<computeroutput>[4/6]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>bigintegertest.cpp</secondary></indexterm>
<indexterm><primary>bigintegertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (BigInteger , LeftShift )</computeroutput></para></section>
<anchor xml:id="_bigintegertest_8cpp_1aa9f8b4097ff348a7cc1ba276dac1d1d6"/><section>
    <title>TEST()<computeroutput>[5/6]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>bigintegertest.cpp</secondary></indexterm>
<indexterm><primary>bigintegertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (BigInteger , MultiplyUint32 )</computeroutput></para></section>
<anchor xml:id="_bigintegertest_8cpp_1a3593c420038e83831fcd23c1df6e32c8"/><section>
    <title>TEST()<computeroutput>[6/6]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>bigintegertest.cpp</secondary></indexterm>
<indexterm><primary>bigintegertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (BigInteger , MultiplyUint64 )</computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_bigintegertest_8cpp_1abe86d9c218d8bfc6c78a83d8b551cb99"/><section>
    <title>kTwo64</title>
<indexterm><primary>kTwo64</primary><secondary>bigintegertest.cpp</secondary></indexterm>
<indexterm><primary>bigintegertest.cpp</primary><secondary>kTwo64</secondary></indexterm>
<para><computeroutput>const BigInteger kTwo64 = <link linkend="_strtodtest_8cpp_1a92485163f9780d3f913ba6241bb668a1">BIGINTEGER_LITERAL</link>(&quot;18446744073709551616&quot;)<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_bigintegertest_8cpp_1a4b0e2f3977ac5fd08d791bed31852e2a"/><section>
    <title>kUint64Max</title>
<indexterm><primary>kUint64Max</primary><secondary>bigintegertest.cpp</secondary></indexterm>
<indexterm><primary>bigintegertest.cpp</primary><secondary>kUint64Max</secondary></indexterm>
<para><computeroutput>const BigInteger kUint64Max = <link linkend="_strtodtest_8cpp_1a92485163f9780d3f913ba6241bb668a1">BIGINTEGER_LITERAL</link>(&quot;18446744073709551615&quot;)<computeroutput>[static]</computeroutput></computeroutput></para></section>
</section>
</section>
