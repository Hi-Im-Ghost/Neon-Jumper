<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classinternal_1_1_generic_regex_search" xml:lang="en-US">
<title>internal::GenericRegexSearch&lt; RegexType, Allocator &gt; Class Template Reference</title>
<indexterm><primary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;regex.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef RegexType::EncodingType <link linkend="_classinternal_1_1_generic_regex_search_1a7b1f81c580c33200c83e1529c2fdbf54">Encoding</link></para>
</listitem>
            <listitem><para>typedef Encoding::Ch <link linkend="_classinternal_1_1_generic_regex_search_1a966f3a62fc838b5e9350f4c6a624d9a1">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classinternal_1_1_generic_regex_search_1a72f70e210a4bc944dba62655a008750b">GenericRegexSearch</link> (const RegexType &amp;regex, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> *allocator=0)</para>
</listitem>
            <listitem><para><link linkend="_classinternal_1_1_generic_regex_search_1ad14ee51edf6f9bfe3b7cffa59c4c19c9">~GenericRegexSearch</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename InputStream &gt; </para><para>bool <link linkend="_classinternal_1_1_generic_regex_search_1ad204164a20e3ac403b405683b51c2d0b">Match</link> (InputStream &amp;is)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_generic_regex_search_1a9d3fe83905549d2fd4c513b8eacd14de">Match</link> (const <link linkend="_classinternal_1_1_generic_regex_search_1a966f3a62fc838b5e9350f4c6a624d9a1">Ch</link> *s)</para>
</listitem>
            <listitem><para>template&lt;typename InputStream &gt; </para><para>bool <link linkend="_classinternal_1_1_generic_regex_search_1a766c684321471b468ff468648f186cf0">Search</link> (InputStream &amp;is)</para>
</listitem>
            <listitem><para>bool <link linkend="_classinternal_1_1_generic_regex_search_1a97398161c60f3ed3e4aabaff952c6f1e">Search</link> (const <link linkend="_classinternal_1_1_generic_regex_search_1a966f3a62fc838b5e9350f4c6a624d9a1">Ch</link> *s)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_classinternal_1_1_generic_regex_search_1a966f3a62fc838b5e9350f4c6a624d9a1"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename RegexType , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef Encoding::Ch <link linkend="_classinternal_1_1_generic_regex_search">internal::GenericRegexSearch</link>&lt; RegexType, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Ch</computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_generic_regex_search_1a7b1f81c580c33200c83e1529c2fdbf54"/><section>
    <title>Encoding</title>
<indexterm><primary>Encoding</primary><secondary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</primary><secondary>Encoding</secondary></indexterm>
<computeroutput>template&lt;typename RegexType , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef RegexType::EncodingType <link linkend="_classinternal_1_1_generic_regex_search">internal::GenericRegexSearch</link>&lt; RegexType, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;<link linkend="_classrapidjson_1_1_encoding">::Encoding</link></computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classinternal_1_1_generic_regex_search_1a72f70e210a4bc944dba62655a008750b"/><section>
    <title>GenericRegexSearch()</title>
<indexterm><primary>GenericRegexSearch</primary><secondary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</primary><secondary>GenericRegexSearch</secondary></indexterm>
<computeroutput>template&lt;typename RegexType , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_classinternal_1_1_generic_regex_search">internal::GenericRegexSearch</link>&lt; RegexType, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::GenericRegexSearch (const RegexType &amp; regex, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> * allocator = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_generic_regex_search_1ad14ee51edf6f9bfe3b7cffa59c4c19c9"/><section>
    <title>~GenericRegexSearch()</title>
<indexterm><primary>~GenericRegexSearch</primary><secondary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</primary><secondary>~GenericRegexSearch</secondary></indexterm>
<computeroutput>template&lt;typename RegexType , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_classinternal_1_1_generic_regex_search">internal::GenericRegexSearch</link>&lt; RegexType, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::~<link linkend="_classinternal_1_1_generic_regex_search">GenericRegexSearch</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classinternal_1_1_generic_regex_search_1a9d3fe83905549d2fd4c513b8eacd14de"/><section>
    <title>Match()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Match</primary><secondary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</primary><secondary>Match</secondary></indexterm>
<computeroutput>template&lt;typename RegexType , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_generic_regex_search">internal::GenericRegexSearch</link>&lt; RegexType, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Match (const <link linkend="_classinternal_1_1_generic_regex_search_1a966f3a62fc838b5e9350f4c6a624d9a1">Ch</link> * s)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_generic_regex_search_1ad204164a20e3ac403b405683b51c2d0b"/><section>
    <title>Match()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Match</primary><secondary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</primary><secondary>Match</secondary></indexterm>
<computeroutput>template&lt;typename RegexType , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename InputStream &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_generic_regex_search">internal::GenericRegexSearch</link>&lt; RegexType, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Match (InputStream &amp; is)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_generic_regex_search_1a97398161c60f3ed3e4aabaff952c6f1e"/><section>
    <title>Search()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Search</primary><secondary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</primary><secondary>Search</secondary></indexterm>
<computeroutput>template&lt;typename RegexType , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_generic_regex_search">internal::GenericRegexSearch</link>&lt; RegexType, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Search (const <link linkend="_classinternal_1_1_generic_regex_search_1a966f3a62fc838b5e9350f4c6a624d9a1">Ch</link> * s)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_generic_regex_search_1a766c684321471b468ff468648f186cf0"/><section>
    <title>Search()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Search</primary><secondary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</secondary></indexterm>
<indexterm><primary>internal::GenericRegexSearch&lt; RegexType, Allocator &gt;</primary><secondary>Search</secondary></indexterm>
<computeroutput>template&lt;typename RegexType , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename InputStream &gt; </computeroutput><para><computeroutput>bool <link linkend="_classinternal_1_1_generic_regex_search">internal::GenericRegexSearch</link>&lt; RegexType, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::Search (InputStream &amp; is)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/internal/<link linkend="_regex_8h">regex.h</link></section>
</section>
