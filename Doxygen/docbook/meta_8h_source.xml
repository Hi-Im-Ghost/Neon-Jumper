<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_meta_8h_source" xml:lang="en-US">
<title>meta.h</title>
<indexterm><primary>src/rapidjson/include/rapidjson/internal/meta.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Tencent&#32;is&#32;pleased&#32;to&#32;support&#32;the&#32;open&#32;source&#32;community&#32;by&#32;making&#32;RapidJSON&#32;available.</emphasis>
2 <emphasis role="comment">//&#32;</emphasis>
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2015&#32;THL&#32;A29&#32;Limited,&#32;a&#32;Tencent&#32;company,&#32;and&#32;Milo&#32;Yip.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;Licensed&#32;under&#32;the&#32;MIT&#32;License&#32;(the&#32;&quot;License&quot;);&#32;you&#32;may&#32;not&#32;use&#32;this&#32;file&#32;except</emphasis>
6 <emphasis role="comment">//&#32;in&#32;compliance&#32;with&#32;the&#32;License.&#32;You&#32;may&#32;obtain&#32;a&#32;copy&#32;of&#32;the&#32;License&#32;at</emphasis>
7 <emphasis role="comment">//</emphasis>
8 <emphasis role="comment">//&#32;http://opensource.org/licenses/MIT</emphasis>
9 <emphasis role="comment">//</emphasis>
10 <emphasis role="comment">//&#32;Unless&#32;required&#32;by&#32;applicable&#32;law&#32;or&#32;agreed&#32;to&#32;in&#32;writing,&#32;software&#32;distributed&#32;</emphasis>
11 <emphasis role="comment">//&#32;under&#32;the&#32;License&#32;is&#32;distributed&#32;on&#32;an&#32;&quot;AS&#32;IS&quot;&#32;BASIS,&#32;WITHOUT&#32;WARRANTIES&#32;OR&#32;</emphasis>
12 <emphasis role="comment">//&#32;CONDITIONS&#32;OF&#32;ANY&#32;KIND,&#32;either&#32;express&#32;or&#32;implied.&#32;See&#32;the&#32;License&#32;for&#32;the&#32;</emphasis>
13 <emphasis role="comment">//&#32;specific&#32;language&#32;governing&#32;permissions&#32;and&#32;limitations&#32;under&#32;the&#32;License.</emphasis>
14 
15 <emphasis role="preprocessor">#ifndef&#32;RAPIDJSON_INTERNAL_META_H_</emphasis>
16 <emphasis role="preprocessor">#define&#32;RAPIDJSON_INTERNAL_META_H_</emphasis>
17 
18 <emphasis role="preprocessor">#include&#32;&quot;../rapidjson.h&quot;</emphasis>
19 
20 <emphasis role="preprocessor">#ifdef&#32;__GNUC__</emphasis>
21 RAPIDJSON_DIAG_PUSH
22 RAPIDJSON_DIAG_OFF(effc++)
23 <emphasis role="preprocessor">#endif</emphasis>
24 
25 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;!defined(__clang__)</emphasis>
26 RAPIDJSON_DIAG_PUSH
27 RAPIDJSON_DIAG_OFF(6334)
28 <emphasis role="preprocessor">#endif</emphasis>
29 
30 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_TYPETRAITS</emphasis>
31 <emphasis role="preprocessor">#include&#32;&lt;type_traits&gt;</emphasis>
32 <emphasis role="preprocessor">#endif</emphasis>
33 
34 <emphasis role="comment">//@cond&#32;RAPIDJSON_INTERNAL</emphasis>
35 <link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc">RAPIDJSON_NAMESPACE_BEGIN</link>
36 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceinternal">internal</link>&#32;{
37 
38 <emphasis role="comment">//&#32;Helper&#32;to&#32;wrap/convert&#32;arbitrary&#32;types&#32;to&#32;void,&#32;useful&#32;for&#32;arbitrary&#32;type&#32;matching</emphasis>
39 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>Void&#32;{&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link>;&#32;};
40 
42 <emphasis role="comment">//&#32;BoolType,&#32;TrueType,&#32;FalseType</emphasis>
43 <emphasis role="comment">//</emphasis>
44 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Cond&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>BoolType&#32;{
45 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_value">Value</link>&#32;=&#32;Cond;
46 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;BoolType&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link>;
47 };
48 <emphasis role="keyword">typedef</emphasis>&#32;BoolType&lt;true&gt;&#32;TrueType;
49 <emphasis role="keyword">typedef</emphasis>&#32;BoolType&lt;false&gt;&#32;FalseType;
50 
51 
53 <emphasis role="comment">//&#32;SelectIf,&#32;BoolExpr,&#32;NotExpr,&#32;AndExpr,&#32;OrExpr</emphasis>
54 <emphasis role="comment">//</emphasis>
55 
56 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;C&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>SelectIfImpl&#32;{&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T2&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>Apply&#32;{&#32;<emphasis role="keyword">typedef</emphasis>&#32;T1&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link>;&#32;};&#32;};
57 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>SelectIfImpl&lt;false&gt;&#32;{&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T2&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>Apply&#32;{&#32;<emphasis role="keyword">typedef</emphasis>&#32;T2&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link>;&#32;};&#32;};
58 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;C,&#32;<emphasis role="keyword">typename</emphasis>&#32;T1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T2&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>SelectIfCond&#32;:&#32;SelectIfImpl&lt;C&gt;::template&#32;Apply&lt;T1,T2&gt;&#32;{};
59 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;C,&#32;<emphasis role="keyword">typename</emphasis>&#32;T1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T2&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>SelectIf&#32;:&#32;SelectIfCond&lt;C::Value,&#32;T1,&#32;T2&gt;&#32;{};
60 
61 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Cond1,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Cond2&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>AndExprCond&#32;:&#32;FalseType&#32;{};
62 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>AndExprCond&lt;true,&#32;true&gt;&#32;:&#32;TrueType&#32;{};
63 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Cond1,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Cond2&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>OrExprCond&#32;:&#32;TrueType&#32;{};
64 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>OrExprCond&lt;false,&#32;false&gt;&#32;:&#32;FalseType&#32;{};
65 
66 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;C&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>BoolExpr&#32;:&#32;SelectIf&lt;C,TrueType,FalseType&gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link>&#32;{};
67 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;C&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>NotExpr&#32;&#32;:&#32;SelectIf&lt;C,FalseType,TrueType&gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link>&#32;{};
68 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;C1,&#32;<emphasis role="keyword">typename</emphasis>&#32;C2&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>AndExpr&#32;:&#32;AndExprCond&lt;C1::Value,&#32;C2::Value&gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link>&#32;{};
69 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;C1,&#32;<emphasis role="keyword">typename</emphasis>&#32;C2&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>OrExpr&#32;&#32;:&#32;OrExprCond&lt;C1::Value,&#32;C2::Value&gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link>&#32;{};
70 
71 
73 <emphasis role="comment">//&#32;AddConst,&#32;MaybeAddConst,&#32;RemoveConst</emphasis>
74 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>AddConst&#32;{&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link>;&#32;};
75 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Constify,&#32;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>MaybeAddConst&#32;:&#32;SelectIfCond&lt;Constify,&#32;const&#32;T,&#32;T&gt;&#32;{};
76 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>RemoveConst&#32;{&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link>;&#32;};
77 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>RemoveConst&lt;const&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&gt;&#32;{&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link>;&#32;};
78 
79 
81 <emphasis role="comment">//&#32;IsSame,&#32;IsConst,&#32;IsMoreConst,&#32;IsPointer</emphasis>
82 <emphasis role="comment">//</emphasis>
83 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;<emphasis role="keyword">typename</emphasis>&#32;U&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>IsSame&#32;:&#32;FalseType&#32;{};
84 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>IsSame&lt;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>,&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&gt;&#32;:&#32;TrueType&#32;{};
85 
86 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>IsConst&#32;:&#32;FalseType&#32;{};
87 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>IsConst&lt;const&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&gt;&#32;:&#32;TrueType&#32;{};
88 
89 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;CT,&#32;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
90 <emphasis role="keyword">struct&#32;</emphasis>IsMoreConst
91 &#32;&#32;&#32;&#32;:&#32;AndExpr&lt;IsSame&lt;typename&#32;RemoveConst&lt;CT&gt;::Type,&#32;typename&#32;RemoveConst&lt;T&gt;::Type&gt;,
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BoolType&lt;IsConst&lt;CT&gt;::Value&#32;&gt;=&#32;IsConst&lt;T&gt;::Value&gt;&#32;&gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link>&#32;{};
93 
94 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>IsPointer&#32;:&#32;FalseType&#32;{};
95 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>IsPointer&lt;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>*&gt;&#32;:&#32;TrueType&#32;{};
96 
98 <emphasis role="comment">//&#32;IsBaseOf</emphasis>
99 <emphasis role="comment">//</emphasis>
100 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_TYPETRAITS</emphasis>
101 
102 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;B,&#32;<emphasis role="keyword">typename</emphasis>&#32;D&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>IsBaseOf
103 &#32;&#32;&#32;&#32;:&#32;BoolType&lt;&#32;::std::is_base_of&lt;B,D&gt;::value&gt;&#32;{};
104 
105 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">//&#32;simplified&#32;version&#32;adopted&#32;from&#32;Boost</emphasis>
106 
107 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;B,&#32;<emphasis role="keyword">typename</emphasis>&#32;D&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>IsBaseOfImpl&#32;{
108 &#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1af95188da1d8eb6d4b148fe9ce71cd7c4">RAPIDJSON_STATIC_ASSERT</link>(<emphasis role="keyword">sizeof</emphasis>(B)&#32;!=&#32;0);
109 &#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1af95188da1d8eb6d4b148fe9ce71cd7c4">RAPIDJSON_STATIC_ASSERT</link>(<emphasis role="keyword">sizeof</emphasis>(D)&#32;!=&#32;0);
110 
111 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;char&#32;(&amp;Yes)[1];
112 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;char&#32;(&amp;No)&#32;[2];
113 
114 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
115 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;Yes&#32;Check(<emphasis role="keyword">const</emphasis>&#32;D*,&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>);
116 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;No&#32;&#32;Check(<emphasis role="keyword">const</emphasis>&#32;B*,&#32;<emphasis role="keywordtype">int</emphasis>);
117 
118 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>Host&#32;{
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;B*()&#32;<emphasis role="keyword">const</emphasis>;
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;D*();
121 &#32;&#32;&#32;&#32;};
122 
123 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;{&#32;<link linkend="_class_generic_value">Value</link>&#32;=&#32;(<emphasis role="keyword">sizeof</emphasis>(Check(Host(),&#32;0))&#32;==&#32;<emphasis role="keyword">sizeof</emphasis>(Yes))&#32;};
124 };
125 
126 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;B,&#32;<emphasis role="keyword">typename</emphasis>&#32;D&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>IsBaseOf
127 &#32;&#32;&#32;&#32;:&#32;OrExpr&lt;IsSame&lt;B,&#32;D&gt;,&#32;BoolExpr&lt;IsBaseOfImpl&lt;B,&#32;D&gt;&#32;&gt;&#32;&gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link>&#32;{};
128 
129 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RAPIDJSON_HAS_CXX11_TYPETRAITS</emphasis>
130 
131 
133 <emphasis role="comment">//&#32;EnableIf&#32;/&#32;DisableIf</emphasis>
134 <emphasis role="comment">//</emphasis>
135 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Condition,&#32;<emphasis role="keyword">typename</emphasis>&#32;T&#32;=&#32;<emphasis role="keywordtype">void</emphasis>&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>EnableIfCond&#32;&#32;{&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link>;&#32;};
136 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>EnableIfCond&lt;false,&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&gt;&#32;{&#32;<emphasis role="comment">/*&#32;empty&#32;*/</emphasis>&#32;};
137 
138 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Condition,&#32;<emphasis role="keyword">typename</emphasis>&#32;T&#32;=&#32;<emphasis role="keywordtype">void</emphasis>&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>DisableIfCond&#32;{&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link>;&#32;};
139 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>DisableIfCond&lt;true,&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&gt;&#32;{&#32;<emphasis role="comment">/*&#32;empty&#32;*/</emphasis>&#32;};
140 
141 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Condition,&#32;<emphasis role="keyword">typename</emphasis>&#32;T&#32;=&#32;<emphasis role="keywordtype">void</emphasis>&gt;
142 <emphasis role="keyword">struct&#32;</emphasis>EnableIf&#32;:&#32;EnableIfCond&lt;Condition::Value,&#32;T&gt;&#32;{};
143 
144 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Condition,&#32;<emphasis role="keyword">typename</emphasis>&#32;T&#32;=&#32;<emphasis role="keywordtype">void</emphasis>&gt;
145 <emphasis role="keyword">struct&#32;</emphasis>DisableIf&#32;:&#32;DisableIfCond&lt;Condition::Value,&#32;T&gt;&#32;{};
146 
147 <emphasis role="comment">//&#32;SFINAE&#32;helpers</emphasis>
148 <emphasis role="keyword">struct&#32;</emphasis>SfinaeTag&#32;{};
149 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>RemoveSfinaeTag;
150 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis>RemoveSfinaeTag&lt;SfinaeTag&amp;(*)(<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>)&gt;&#32;{&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link>;&#32;};
151 
152 <emphasis role="preprocessor">#define&#32;RAPIDJSON_REMOVEFPTR_(type)&#32;\</emphasis>
153 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;typename&#32;::RAPIDJSON_NAMESPACE::internal::RemoveSfinaeTag&#32;\</emphasis>
154 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&#32;::RAPIDJSON_NAMESPACE::internal::SfinaeTag&amp;(*)&#32;type&gt;::Type</emphasis>
155 
156 <emphasis role="preprocessor">#define&#32;RAPIDJSON_ENABLEIF(cond)&#32;\</emphasis>
157 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;typename&#32;::RAPIDJSON_NAMESPACE::internal::EnableIf&#32;\</emphasis>
158 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;RAPIDJSON_REMOVEFPTR_(cond)&gt;::Type&#32;*&#32;=&#32;NULL</emphasis>
159 
160 <emphasis role="preprocessor">#define&#32;RAPIDJSON_DISABLEIF(cond)&#32;\</emphasis>
161 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;typename&#32;::RAPIDJSON_NAMESPACE::internal::DisableIf&#32;\</emphasis>
162 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;RAPIDJSON_REMOVEFPTR_(cond)&gt;::Type&#32;*&#32;=&#32;NULL</emphasis>
163 
164 <emphasis role="preprocessor">#define&#32;RAPIDJSON_ENABLEIF_RETURN(cond,returntype)&#32;\</emphasis>
165 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;typename&#32;::RAPIDJSON_NAMESPACE::internal::EnableIf&#32;\</emphasis>
166 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;RAPIDJSON_REMOVEFPTR_(cond),&#32;\</emphasis>
167 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RAPIDJSON_REMOVEFPTR_(returntype)&gt;::Type</emphasis>
168 
169 <emphasis role="preprocessor">#define&#32;RAPIDJSON_DISABLEIF_RETURN(cond,returntype)&#32;\</emphasis>
170 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;typename&#32;::RAPIDJSON_NAMESPACE::internal::DisableIf&#32;\</emphasis>
171 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;RAPIDJSON_REMOVEFPTR_(cond),&#32;\</emphasis>
172 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RAPIDJSON_REMOVEFPTR_(returntype)&gt;::Type</emphasis>
173 
174 }&#32;<emphasis role="comment">//&#32;namespace&#32;internal</emphasis>
175 <link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1">RAPIDJSON_NAMESPACE_END</link>
176 <emphasis role="comment">//@endcond</emphasis>
177 
178 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)&#32;&amp;&amp;&#32;!defined(__clang__)</emphasis>
179 RAPIDJSON_DIAG_POP
180 <emphasis role="preprocessor">#endif</emphasis>
181 
182 <emphasis role="preprocessor">#ifdef&#32;__GNUC__</emphasis>
183 RAPIDJSON_DIAG_POP
184 <emphasis role="preprocessor">#endif</emphasis>
185 
186 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RAPIDJSON_INTERNAL_META_H_</emphasis>
</programlisting></section>
