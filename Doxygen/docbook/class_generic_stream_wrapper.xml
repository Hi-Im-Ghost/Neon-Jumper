<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_generic_stream_wrapper" xml:lang="en-US">
<title>GenericStreamWrapper&lt; InputStream, Encoding &gt; Class Template Reference</title>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary></indexterm>
<para>

<para>A Stream Wrapper. </para>
 
</para>
<para>
<computeroutput>#include &lt;stream.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef Encoding::Ch <link linkend="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_stream_wrapper_1a7b12b1de6337d3f8e635b650e372c803">GenericStreamWrapper</link> (InputStream &amp;is)</para>
</listitem>
            <listitem><para><link linkend="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848">Ch</link> <link linkend="_class_generic_stream_wrapper_1a98d22642dfdd2626ee25ad1db9fe287e">Peek</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848">Ch</link> <link linkend="_class_generic_stream_wrapper_1a1c0bc67a233e08ed89b4ff37455e7754">Take</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_generic_stream_wrapper_1a5068a627e0a2deffa985db39f89c5378">Tell</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848">Ch</link> * <link linkend="_class_generic_stream_wrapper_1a15044e9a6874ca4caa92ed27a191345c">PutBegin</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_stream_wrapper_1a458b9f3e00ad41dadb069839ab53f0ba">Put</link> (<link linkend="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848">Ch</link> ch)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_stream_wrapper_1a210c0864fbff3cc72f2f62ed461105fb">Flush</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_generic_stream_wrapper_1a84f8d6e1f95d53c4e8e22892d5113fd3">PutEnd</link> (<link linkend="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848">Ch</link> *ch)</para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848">Ch</link> * <link linkend="_class_generic_stream_wrapper_1afdfd046b769d1c2e38d9a91656e6b592">Peek4</link> () const</para>
</listitem>
            <listitem><para><link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> <link linkend="_class_generic_stream_wrapper_1a5978422ff38fbacee201d4123da37e4f">GetType</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_stream_wrapper_1a50f13a9be06f9b29032ca6c655b099ef">HasBOM</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>InputStream &amp; <link linkend="_class_generic_stream_wrapper_1a2b44ae2c9460c2e18aca6ba25c537cc5">is_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename InputStream, typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> = UTF8&lt;&gt;&gt;
class GenericStreamWrapper&lt; InputStream, Encoding &gt;</title></simplesect>

<para>A Stream Wrapper. </para>



<para>\tThis string stream is a wrapper for any stream by just forwarding any \treceived message to the origin stream. <note><title>Note</title>

<para>implements Stream concept </para>
</note>
</para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</secondary></indexterm>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename InputStream , typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>typedef Encoding::Ch <link linkend="_class_generic_stream_wrapper">GenericStreamWrapper</link>&lt; InputStream, <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Ch</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_generic_stream_wrapper_1a7b12b1de6337d3f8e635b650e372c803"/><section>
    <title>GenericStreamWrapper()</title>
<indexterm><primary>GenericStreamWrapper</primary><secondary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</secondary></indexterm>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary><secondary>GenericStreamWrapper</secondary></indexterm>
<computeroutput>template&lt;typename InputStream , typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_stream_wrapper">GenericStreamWrapper</link>&lt; InputStream, <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;<link linkend="_class_generic_stream_wrapper">::GenericStreamWrapper</link> (InputStream &amp; is)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_generic_stream_wrapper_1a210c0864fbff3cc72f2f62ed461105fb"/><section>
    <title>Flush()</title>
<indexterm><primary>Flush</primary><secondary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</secondary></indexterm>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary><secondary>Flush</secondary></indexterm>
<computeroutput>template&lt;typename InputStream , typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_stream_wrapper">GenericStreamWrapper</link>&lt; InputStream, <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Flush ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_stream_wrapper_1a5978422ff38fbacee201d4123da37e4f"/><section>
    <title>GetType()</title>
<indexterm><primary>GetType</primary><secondary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</secondary></indexterm>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary><secondary>GetType</secondary></indexterm>
<computeroutput>template&lt;typename InputStream , typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput><link linkend="_encodings_8h_1ac9448aedf514a5bb509bae73a9ce4e58">UTFType</link> <link linkend="_class_generic_stream_wrapper">GenericStreamWrapper</link>&lt; InputStream, <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::GetType ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_stream_wrapper_1a50f13a9be06f9b29032ca6c655b099ef"/><section>
    <title>HasBOM()</title>
<indexterm><primary>HasBOM</primary><secondary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</secondary></indexterm>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary><secondary>HasBOM</secondary></indexterm>
<computeroutput>template&lt;typename InputStream , typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_stream_wrapper">GenericStreamWrapper</link>&lt; InputStream, <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::HasBOM ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_stream_wrapper_1a98d22642dfdd2626ee25ad1db9fe287e"/><section>
    <title>Peek()</title>
<indexterm><primary>Peek</primary><secondary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</secondary></indexterm>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary><secondary>Peek</secondary></indexterm>
<computeroutput>template&lt;typename InputStream , typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848">Ch</link> <link linkend="_class_generic_stream_wrapper">GenericStreamWrapper</link>&lt; InputStream, <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Peek ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_stream_wrapper_1afdfd046b769d1c2e38d9a91656e6b592"/><section>
    <title>Peek4()</title>
<indexterm><primary>Peek4</primary><secondary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</secondary></indexterm>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary><secondary>Peek4</secondary></indexterm>
<computeroutput>template&lt;typename InputStream , typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848">Ch</link> * <link linkend="_class_generic_stream_wrapper">GenericStreamWrapper</link>&lt; InputStream, <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Peek4 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_stream_wrapper_1a458b9f3e00ad41dadb069839ab53f0ba"/><section>
    <title>Put()</title>
<indexterm><primary>Put</primary><secondary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</secondary></indexterm>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary><secondary>Put</secondary></indexterm>
<computeroutput>template&lt;typename InputStream , typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_stream_wrapper">GenericStreamWrapper</link>&lt; InputStream, <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Put (<link linkend="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848">Ch</link> ch)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_stream_wrapper_1a15044e9a6874ca4caa92ed27a191345c"/><section>
    <title>PutBegin()</title>
<indexterm><primary>PutBegin</primary><secondary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</secondary></indexterm>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary><secondary>PutBegin</secondary></indexterm>
<computeroutput>template&lt;typename InputStream , typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848">Ch</link> * <link linkend="_class_generic_stream_wrapper">GenericStreamWrapper</link>&lt; InputStream, <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::PutBegin ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_stream_wrapper_1a84f8d6e1f95d53c4e8e22892d5113fd3"/><section>
    <title>PutEnd()</title>
<indexterm><primary>PutEnd</primary><secondary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</secondary></indexterm>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary><secondary>PutEnd</secondary></indexterm>
<computeroutput>template&lt;typename InputStream , typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_generic_stream_wrapper">GenericStreamWrapper</link>&lt; InputStream, <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::PutEnd (<link linkend="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848">Ch</link> * ch)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_stream_wrapper_1a1c0bc67a233e08ed89b4ff37455e7754"/><section>
    <title>Take()</title>
<indexterm><primary>Take</primary><secondary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</secondary></indexterm>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary><secondary>Take</secondary></indexterm>
<computeroutput>template&lt;typename InputStream , typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_stream_wrapper_1aef9e89bc4997497315bde1b60e8bb848">Ch</link> <link linkend="_class_generic_stream_wrapper">GenericStreamWrapper</link>&lt; InputStream, <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Take ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_stream_wrapper_1a5068a627e0a2deffa985db39f89c5378"/><section>
    <title>Tell()</title>
<indexterm><primary>Tell</primary><secondary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</secondary></indexterm>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary><secondary>Tell</secondary></indexterm>
<computeroutput>template&lt;typename InputStream , typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_generic_stream_wrapper">GenericStreamWrapper</link>&lt; InputStream, <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Tell ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_generic_stream_wrapper_1a2b44ae2c9460c2e18aca6ba25c537cc5"/><section>
    <title>is_</title>
<indexterm><primary>is_</primary><secondary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</secondary></indexterm>
<indexterm><primary>GenericStreamWrapper&lt; InputStream, Encoding &gt;</primary><secondary>is_</secondary></indexterm>
<computeroutput>template&lt;typename InputStream , typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>InputStream&amp; <link linkend="_class_generic_stream_wrapper">GenericStreamWrapper</link>&lt; InputStream, <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::is_<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_stream_8h">stream.h</link></section>
</section>
