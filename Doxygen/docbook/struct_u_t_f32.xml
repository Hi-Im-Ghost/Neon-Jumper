<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_u_t_f32" xml:lang="en-US">
<title>UTF32&lt; CharType &gt; Struct Template Reference</title>
<indexterm><primary>UTF32&lt; CharType &gt;</primary></indexterm>
<para>

<para>UTF-32 encoding. </para>
 
</para>
<para>
<computeroutput>#include &lt;encodings.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum { <link linkend="_struct_u_t_f32_1abe791c52b9d1305aacf92ddc15c11ab4ae44852fd9d88deed3a956b89108412a5">supportUnicode</link> = 1
 }</para>
</listitem>
            <listitem><para>typedef CharType <link linkend="_struct_u_t_f32_1ab4502672d56436e730ca5f647bb52be9">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_u_t_f32_1aae11b766f799d311679d59e9f7077f83">RAPIDJSON_STATIC_ASSERT</link> (sizeof(<link linkend="_struct_u_t_f32_1ab4502672d56436e730ca5f647bb52be9">Ch</link>) &gt;=4)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename OutputStream &gt; </para><para>static void <link linkend="_struct_u_t_f32_1a511d1b09672ce535085895a28d8c2f13">Encode</link> (OutputStream &amp;os, unsigned codepoint)</para>
</listitem>
            <listitem><para>template&lt;typename OutputStream &gt; </para><para>static void <link linkend="_struct_u_t_f32_1ae50dd8dff92c36ee184c6d4eccb1961e">EncodeUnsafe</link> (OutputStream &amp;os, unsigned codepoint)</para>
</listitem>
            <listitem><para>template&lt;typename InputStream &gt; </para><para>static bool <link linkend="_struct_u_t_f32_1a6e7258a5e982e101345dffdc355e9b53">Decode</link> (InputStream &amp;is, unsigned *codepoint)</para>
</listitem>
            <listitem><para>template&lt;typename InputStream , typename OutputStream &gt; </para><para>static bool <link linkend="_struct_u_t_f32_1a71336fb0546b3079e01bbd51d2fa2e45">Validate</link> (InputStream &amp;is, OutputStream &amp;os)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename CharType = unsigned&gt;
struct UTF32&lt; CharType &gt;</title></simplesect>

<para>UTF-32 encoding. </para>



<para><link xlink:href="http://en.wikipedia.org/wiki/UTF-32">http://en.wikipedia.org/wiki/UTF-32</link> 
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>CharType</entry><entry>
<para>Type for storing 32-bit UTF-32 data. Default is unsigned. C++11 may use char32_t instead. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>implements Encoding concept</para>

<para>For in-memory access, no need to concern endianness. The code units and code points are represented by CPU&apos;s endianness. For streaming, use <link linkend="_struct_u_t_f32_l_e">UTF32LE</link> and <link linkend="_struct_u_t_f32_b_e">UTF32BE</link>, which handle endianness. </para>
</note>
</para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_struct_u_t_f32_1ab4502672d56436e730ca5f647bb52be9"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>UTF32&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>UTF32&lt; CharType &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = unsigned&gt; </computeroutput><para><computeroutput>typedef CharType <link linkend="_struct_u_t_f32">UTF32</link>&lt; CharType &gt;::Ch</computeroutput></para></section>
</section>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_struct_u_t_f32_1abe791c52b9d1305aacf92ddc15c11ab4"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;typename CharType  = unsigned&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>supportUnicode</primary><secondary>UTF32&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>UTF32&lt; CharType &gt;</primary><secondary>supportUnicode</secondary></indexterm>
<anchor xml:id="_struct_u_t_f32_1abe791c52b9d1305aacf92ddc15c11ab4ae44852fd9d88deed3a956b89108412a5"/>supportUnicode</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_u_t_f32_1a6e7258a5e982e101345dffdc355e9b53"/><section>
    <title>Decode()</title>
<indexterm><primary>Decode</primary><secondary>UTF32&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>UTF32&lt; CharType &gt;</primary><secondary>Decode</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = unsigned&gt; </computeroutput><computeroutput>template&lt;typename InputStream &gt; </computeroutput><para><computeroutput>static bool <link linkend="_struct_u_t_f32">UTF32</link>&lt; CharType &gt;::Decode (InputStream &amp; is, unsigned * codepoint)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_u_t_f32_1a511d1b09672ce535085895a28d8c2f13"/><section>
    <title>Encode()</title>
<indexterm><primary>Encode</primary><secondary>UTF32&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>UTF32&lt; CharType &gt;</primary><secondary>Encode</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = unsigned&gt; </computeroutput><computeroutput>template&lt;typename OutputStream &gt; </computeroutput><para><computeroutput>static void <link linkend="_struct_u_t_f32">UTF32</link>&lt; CharType &gt;::Encode (OutputStream &amp; os, unsigned codepoint)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_u_t_f32_1ae50dd8dff92c36ee184c6d4eccb1961e"/><section>
    <title>EncodeUnsafe()</title>
<indexterm><primary>EncodeUnsafe</primary><secondary>UTF32&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>UTF32&lt; CharType &gt;</primary><secondary>EncodeUnsafe</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = unsigned&gt; </computeroutput><computeroutput>template&lt;typename OutputStream &gt; </computeroutput><para><computeroutput>static void <link linkend="_struct_u_t_f32">UTF32</link>&lt; CharType &gt;::EncodeUnsafe (OutputStream &amp; os, unsigned codepoint)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_u_t_f32_1aae11b766f799d311679d59e9f7077f83"/><section>
    <title>RAPIDJSON_STATIC_ASSERT()</title>
<indexterm><primary>RAPIDJSON_STATIC_ASSERT</primary><secondary>UTF32&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>UTF32&lt; CharType &gt;</primary><secondary>RAPIDJSON_STATIC_ASSERT</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = unsigned&gt; </computeroutput><para><computeroutput><link linkend="_struct_u_t_f32">UTF32</link>&lt; CharType &gt;::RAPIDJSON_STATIC_ASSERT (sizeof(<link linkend="_struct_u_t_f32_1ab4502672d56436e730ca5f647bb52be9">Ch</link>) &gt;= 4)</computeroutput></para></section>
<anchor xml:id="_struct_u_t_f32_1a71336fb0546b3079e01bbd51d2fa2e45"/><section>
    <title>Validate()</title>
<indexterm><primary>Validate</primary><secondary>UTF32&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>UTF32&lt; CharType &gt;</primary><secondary>Validate</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = unsigned&gt; </computeroutput><computeroutput>template&lt;typename InputStream , typename OutputStream &gt; </computeroutput><para><computeroutput>static bool <link linkend="_struct_u_t_f32">UTF32</link>&lt; CharType &gt;::Validate (InputStream &amp; is, OutputStream &amp; os)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_encodings_8h">encodings.h</link></section>
</section>
