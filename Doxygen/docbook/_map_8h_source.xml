<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__map_8h_source" xml:lang="en-US">
<title>Map.h</title>
<indexterm><primary>src/Map.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;PLATFORMER2D_MAP_H</emphasis>
2 <emphasis role="preprocessor">#define&#32;PLATFORMER2D_MAP_H</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&lt;SFML/Graphics.hpp&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__layer_8h">Layer.h</link>&quot;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__tile_set_map_8h">TileSetMap.h</link>&quot;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;fstream&gt;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ostreamwrapper_8h">rapidjson/include/rapidjson/ostreamwrapper.h</link>&quot;</emphasis>
10 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_document_8h">rapidjson/include/rapidjson/document.h</link>&quot;</emphasis>
11 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_istreamwrapper_8h">rapidjson/include/rapidjson/istreamwrapper.h</link>&quot;</emphasis>
12 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_writer_8h">rapidjson/include/rapidjson/writer.h</link>&quot;</emphasis>
13 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_stringbuffer_8h">rapidjson/include/rapidjson/stringbuffer.h</link>&quot;</emphasis>
14 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ostreamwrapper_8h">rapidjson/include/rapidjson/ostreamwrapper.h</link>&quot;</emphasis>
18 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_map">Map</link>&#32;{
19 <emphasis role="keyword">public</emphasis>:
21 &#32;&#32;&#32;&#32;<link linkend="_class_map_1ac63a69baabe2c549b51ef0507c6a7a8b">Map</link>(std::string&#32;mapa);
23 &#32;&#32;&#32;&#32;<link linkend="_class_map_1aa403fbe09394ccf39747588f5168e3b2">~Map</link>();
24 
26 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_map_1a2b09c8875af2efb711fc3a022e70427d">getHeight</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;height;&#32;}
28 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_map_1a6e7241617514fc7b227d8cb96d30c81a">isInfinite</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;infinite;&#32;}
30 &#32;&#32;&#32;&#32;std::vector&lt;Layer&gt;&#32;<link linkend="_class_map_1a3ff0c79b25f70af9cee6f555a53bfd4d">getLayers</link>(){&#32;<emphasis role="keywordflow">return</emphasis>&#32;layers;&#32;}
32 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_map_1a6b1292daca7ef375968f073718c402ca">getNextLayerId</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;nextlayerid;&#32;}
34 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_map_1aacb2f9d02095076e61774bf8df62a970">getNextObjectId</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;nextobjectid;&#32;}
36 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_map_1a7ae44d1c43fc376de7355ffae6550ae7">getOrientation</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;orientation;&#32;}
38 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_map_1ab0768cad264812a3db223c893fa69ba5">getRenderOrder</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;renderorder;&#32;}
40 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_map_1ad90c3028202a393e68cb1ae07f23960a">getTiledVersion</link>(){&#32;<emphasis role="keywordflow">return</emphasis>&#32;tiledversion;&#32;}
42 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_map_1afd173f72cb063592a0daa853a3be9d9e">getTileHeight</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;tileheight;&#32;}
44 &#32;&#32;&#32;&#32;std::vector&lt;TileSetMap&gt;&#32;<link linkend="_class_map_1a1e601f4ffaf9104214971e12b3b4de17">getTileSetMap</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;tilesets;&#32;}
46 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_map_1ab9209a0b619dbd3721335bd414968b6c">getTileWidth</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;tilewidth;&#32;}
48 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_map_1a4b04d446d3c661a985874ace350853b9">getType</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;type;&#32;}
50 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_map_1ad8563d64d89efd1be0694edc54abb2ab">getVersion</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;version;&#32;}
52 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_map_1afd34d12227676b3cebeed9f5fae2508f">getWidth</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;width;&#32;}
53 
54 <emphasis role="keyword">private</emphasis>:
56 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;height;
58 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;infinite;
60 &#32;&#32;&#32;&#32;std::vector&lt;Layer&gt;&#32;layers;
62 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextlayerid;
64 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextobjectid;
66 &#32;&#32;&#32;&#32;std::string&#32;orientation;
68 &#32;&#32;&#32;&#32;std::string&#32;renderorder;
70 &#32;&#32;&#32;&#32;std::string&#32;tiledversion;
72 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tileheight;
74 &#32;&#32;&#32;&#32;std::vector&lt;TileSetMap&gt;&#32;tilesets;
76 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tilewidth;
78 &#32;&#32;&#32;&#32;std::string&#32;type;
80 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;version;
82 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;width;
83 };
84 
85 
86 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//PLATFORMER2D_MAP_H</emphasis>
</programlisting></section>
