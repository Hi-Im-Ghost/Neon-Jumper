<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_allocatorstest_8cpp" xml:lang="en-US">
<title>src/rapidjson/test/unittest/allocatorstest.cpp File Reference</title>
<indexterm><primary>src/rapidjson/test/unittest/allocatorstest.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;unittest.h&quot;
#include &quot;rapidjson/allocators.h&quot;
#include &lt;map&gt;
#include &lt;string&gt;
#include &lt;utility&gt;
#include &lt;functional&gt;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_test_std_allocator_data">TestStdAllocatorData</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </para><para>void <link linkend="_allocatorstest_8cpp_1a438d0a702f529087fc1c6254d54bb651">TestAllocator</link> (<link linkend="_classrapidjson_1_1_allocator">Allocator</link> &amp;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>)</para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </para><para>void <link linkend="_allocatorstest_8cpp_1a918bc5c386d2f6f650de1ff547dfb0ce">TestStdAllocator</link> (const <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &amp;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>)</para>
</listitem>
            <listitem><para><link linkend="_allocatorstest_8cpp_1a23d27a8bd90359da1c496a13fd467be4">TEST</link> (<link linkend="_classrapidjson_1_1_allocator">Allocator</link>, <link linkend="_class_crt_allocator">CrtAllocator</link>)</para>
</listitem>
            <listitem><para><link linkend="_allocatorstest_8cpp_1ad5345031f496e39463414822249c6480">TEST</link> (<link linkend="_classrapidjson_1_1_allocator">Allocator</link>, <link linkend="_class_memory_pool_allocator">MemoryPoolAllocator</link>)</para>
</listitem>
            <listitem><para><link linkend="_allocatorstest_8cpp_1a31a6d121551f71141c427920308edbd2">TEST</link> (<link linkend="_classrapidjson_1_1_allocator">Allocator</link>, Alignment)</para>
</listitem>
            <listitem><para><link linkend="_allocatorstest_8cpp_1a6c62971a03e9b1a19a8af8aff9dc5ab6">TEST</link> (<link linkend="_classrapidjson_1_1_allocator">Allocator</link>, Issue399)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_allocatorstest_8cpp_1a31a6d121551f71141c427920308edbd2"/><section>
    <title>TEST()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>allocatorstest.cpp</secondary></indexterm>
<indexterm><primary>allocatorstest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_classrapidjson_1_1_allocator">Allocator</link> , Alignment )</computeroutput></para></section>
<anchor xml:id="_allocatorstest_8cpp_1a23d27a8bd90359da1c496a13fd467be4"/><section>
    <title>TEST()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>allocatorstest.cpp</secondary></indexterm>
<indexterm><primary>allocatorstest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_classrapidjson_1_1_allocator">Allocator</link> , <link linkend="_class_crt_allocator">CrtAllocator</link> )</computeroutput></para></section>
<anchor xml:id="_allocatorstest_8cpp_1a6c62971a03e9b1a19a8af8aff9dc5ab6"/><section>
    <title>TEST()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>allocatorstest.cpp</secondary></indexterm>
<indexterm><primary>allocatorstest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_classrapidjson_1_1_allocator">Allocator</link> , Issue399 )</computeroutput></para></section>
<anchor xml:id="_allocatorstest_8cpp_1ad5345031f496e39463414822249c6480"/><section>
    <title>TEST()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>allocatorstest.cpp</secondary></indexterm>
<indexterm><primary>allocatorstest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_classrapidjson_1_1_allocator">Allocator</link> , <link linkend="_class_memory_pool_allocator">MemoryPoolAllocator</link> )</computeroutput></para></section>
<anchor xml:id="_allocatorstest_8cpp_1a438d0a702f529087fc1c6254d54bb651"/><section>
    <title>TestAllocator()</title>
<indexterm><primary>TestAllocator</primary><secondary>allocatorstest.cpp</secondary></indexterm>
<indexterm><primary>allocatorstest.cpp</primary><secondary>TestAllocator</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>void TestAllocator (<link linkend="_classrapidjson_1_1_allocator">Allocator</link> &amp; a)</computeroutput></para></section>
<anchor xml:id="_allocatorstest_8cpp_1a918bc5c386d2f6f650de1ff547dfb0ce"/><section>
    <title>TestStdAllocator()</title>
<indexterm><primary>TestStdAllocator</primary><secondary>allocatorstest.cpp</secondary></indexterm>
<indexterm><primary>allocatorstest.cpp</primary><secondary>TestStdAllocator</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>void TestStdAllocator (const <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &amp; a)</computeroutput></para></section>
</section>
</section>
