<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_generic_value_1_1_short_string" xml:lang="en-US">
<title>GenericValue&lt; Encoding, Allocator &gt;::ShortString Struct Reference</title>
<indexterm><primary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</primary></indexterm>
<para>
<computeroutput>#include &lt;document.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum { <link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a6b29cffcea816906d271656a958bc0c7">MaxChars</link> = sizeof(static_cast&lt;Flag*&gt;(0)-&gt;payload) / sizeof(Ch)
, <link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a991735d2e27155ccabe1c657653044ba">MaxSize</link> = MaxChars - 1
, <link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360ac4ec681af40f3f6cfe7dcf6500637364">LenPos</link> = MaxSize
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_struct_generic_value_1_1_short_string_1adbfe8461e0cb0ccb2cb3825489e743c2">SetLength</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len)</para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_struct_generic_value_1_1_short_string_1a4aa295331ab0d019fd64f8f5d57d450b">GetLength</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static bool <link linkend="_struct_generic_value_1_1_short_string_1a73e40f625c1abbd84f95ac7fff8365f7">Usable</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link> <link linkend="_struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b">str</link> [<link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a6b29cffcea816906d271656a958bc0c7">MaxChars</link>]</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = RAPIDJSON_DEFAULT_ALLOCATOR&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>MaxChars</primary><secondary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</secondary></indexterm>
<indexterm><primary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</primary><secondary>MaxChars</secondary></indexterm>
<anchor xml:id="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a6b29cffcea816906d271656a958bc0c7"/>MaxChars</entry><entry></entry></row><row><entry><indexterm><primary>MaxSize</primary><secondary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</secondary></indexterm>
<indexterm><primary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</primary><secondary>MaxSize</secondary></indexterm>
<anchor xml:id="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a991735d2e27155ccabe1c657653044ba"/>MaxSize</entry><entry></entry></row><row><entry><indexterm><primary>LenPos</primary><secondary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</secondary></indexterm>
<indexterm><primary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</primary><secondary>LenPos</secondary></indexterm>
<anchor xml:id="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360ac4ec681af40f3f6cfe7dcf6500637364"/>LenPos</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_generic_value_1_1_short_string_1a4aa295331ab0d019fd64f8f5d57d450b"/><section>
    <title>GetLength()</title>
<indexterm><primary>GetLength</primary><secondary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</secondary></indexterm>
<indexterm><primary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</primary><secondary>GetLength</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = RAPIDJSON_DEFAULT_ALLOCATOR&gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::ShortString::GetLength ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_generic_value_1_1_short_string_1adbfe8461e0cb0ccb2cb3825489e743c2"/><section>
    <title>SetLength()</title>
<indexterm><primary>SetLength</primary><secondary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</secondary></indexterm>
<indexterm><primary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</primary><secondary>SetLength</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = RAPIDJSON_DEFAULT_ALLOCATOR&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::ShortString::SetLength (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_generic_value_1_1_short_string_1a73e40f625c1abbd84f95ac7fff8365f7"/><section>
    <title>Usable()</title>
<indexterm><primary>Usable</primary><secondary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</secondary></indexterm>
<indexterm><primary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</primary><secondary>Usable</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = RAPIDJSON_DEFAULT_ALLOCATOR&gt; </computeroutput><para><computeroutput>static bool <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::ShortString::Usable (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b"/><section>
    <title>str</title>
<indexterm><primary>str</primary><secondary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</secondary></indexterm>
<indexterm><primary>GenericValue&lt; Encoding, Allocator &gt;::ShortString</primary><secondary>str</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link>  = RAPIDJSON_DEFAULT_ALLOCATOR&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link> <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt;::ShortString::str[<link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a6b29cffcea816906d271656a958bc0c7">MaxChars</link>]</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_document_8h">document.h</link></section>
</section>
