<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classinternal_1_1_i_validation_error_handler" xml:lang="en-US">
<title>internal::IValidationErrorHandler&lt; SchemaType &gt; Class Template Reference</title>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;schema.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef SchemaType::Ch <link linkend="_classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7">Ch</link></para>
</listitem>
            <listitem><para>typedef SchemaType::SValue <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual <link linkend="_classinternal_1_1_i_validation_error_handler_1a79e5eb5707b73497cff913093dfec060">~IValidationErrorHandler</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a195a561f0bbbfb66961c9331a6afab39">NotMultipleOf</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp;expected)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1ad8bd123f154f4c39f48b366219878526">NotMultipleOf</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp;expected)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1ada3d2275ccdeb4874f34942d257af9c5">NotMultipleOf</link> (double actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp;expected)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a7dc32dfac536f8577cbcb702efde26d2">AboveMaximum</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp;expected, bool exclusive)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a78554707b14366d2ff7763290e1a6219">AboveMaximum</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp;expected, bool exclusive)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a5b9e4690c26adbf4128b0b16f9e0625f">AboveMaximum</link> (double actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp;expected, bool exclusive)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a5ad9849c01a0bfa923d37ef2f1b4c933">BelowMinimum</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp;expected, bool exclusive)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1aa7bbfd1a69ba08ae31f87cb96ab5ec04">BelowMinimum</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp;expected, bool exclusive)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a921da9a7fa127035a2a259b19813230e">BelowMinimum</link> (double actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp;expected, bool exclusive)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1ae000553bd9312a5090eed393541243af">TooLong</link> (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expected)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a57f0cd2c2c9781af0e4c447700537f23">TooShort</link> (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expected)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a9551391add918d6679f9a2a85dffc19c">DoesNotMatch</link> (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a0ac36d4217d9a14205cbe392601f3ee7">DisallowedItem</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1afc144690ba0e24636a72f541efd32c3b">TooFewItems</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a9371ca15622897a429971f69c07c47ef">TooManyItems</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a3a0836796f39c946f31f87b80ddd6cf1">DuplicateItems</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index1, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index2)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a3494e9d2bff94979649e186aba71b32e">TooManyProperties</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1adf515d2fad2e55bc0735a6fb16eec9e6">TooFewProperties</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1ac0073bef86b572b4517876b304aada0f">StartMissingProperties</link> ()=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a3a2165f53ab565e052bcd35b6d19e473">AddMissingProperty</link> (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp;name)=0</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classinternal_1_1_i_validation_error_handler_1a3a01eec1a969cfb600340a2bad157c9c">EndMissingProperties</link> ()=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1abd92773fa046eeb6fd8416468e62e5b1">PropertyViolations</link> (<link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> **subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a689b8acc4cbe3e8683c1a29950438ac8">DisallowedProperty</link> (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7">Ch</link> *name, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1ab3cf4b9fe450ff76f52d70a2888f0342">StartDependencyErrors</link> ()=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1ae312aea74718dda0411af023c0c78ef6">StartMissingDependentProperties</link> ()=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a2e9e0b2f67467a62642e37e839f689c5">AddMissingDependentProperty</link> (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp;targetName)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a05af3199b8011a3476dfd238fa958213">EndMissingDependentProperties</link> (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp;sourceName)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a4b43ba6e6a9c544dfc631297104dc508">AddDependencySchemaError</link> (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp;souceName, <link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> *subvalidator)=0</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classinternal_1_1_i_validation_error_handler_1a817c1e3e9cc62603997a2fcdc564820b">EndDependencyErrors</link> ()=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a67531a59c1dd8db20db72b17f0933d03">DisallowedValue</link> (const <link linkend="_group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a">ValidateErrorCode</link> code)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a994a8b1526a79737b9d7b7575def4f65">StartDisallowedType</link> ()=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a5e4d9e5d937bd54e481f90e23ec3aea4">AddExpectedType</link> (const typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">SchemaType::ValueType</link> &amp;expectedType)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1ad8133b3c055b3a91b5072af81304ab87">EndDisallowedType</link> (const typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">SchemaType::ValueType</link> &amp;actualType)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a3ce77d66a09eb5d91833fc86f8fa5680">NotAllOf</link> (<link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> **subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a70105117617fc7edbe7f032975888e13">NoneOf</link> (<link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> **subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a3ca6fd0aebd486de8dd78c952938a83b">NotOneOf</link> (<link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> **subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count, bool matched)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler_1a570a6723282e6c0576a47c492ffe5602">Disallowed</link> ()=0</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>typedef SchemaType::Ch <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::Ch</computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a"/><section>
    <title>SValue</title>
<indexterm><primary>SValue</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>SValue</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>typedef SchemaType::SValue <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::SValue</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a79e5eb5707b73497cff913093dfec060"/><section>
    <title>~IValidationErrorHandler()</title>
<indexterm><primary>~IValidationErrorHandler</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>~IValidationErrorHandler</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::~<link linkend="_classinternal_1_1_i_validation_error_handler">IValidationErrorHandler</link> ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a5b9e4690c26adbf4128b0b16f9e0625f"/><section>
    <title>AboveMaximum()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>AboveMaximum</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>AboveMaximum</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::AboveMaximum (double actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp; expected, bool exclusive)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1abcf1f5b46bdae8ca20a80858d603483d">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a7dc32dfac536f8577cbcb702efde26d2"/><section>
    <title>AboveMaximum()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>AboveMaximum</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>AboveMaximum</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::AboveMaximum (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp; expected, bool exclusive)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a4c9c7db8a3488f84a5a86681ad1d8194">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a78554707b14366d2ff7763290e1a6219"/><section>
    <title>AboveMaximum()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>AboveMaximum</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>AboveMaximum</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::AboveMaximum (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp; expected, bool exclusive)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a9262c73768789eb7cf8dc271cfec7f96">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a4b43ba6e6a9c544dfc631297104dc508"/><section>
    <title>AddDependencySchemaError()</title>
<indexterm><primary>AddDependencySchemaError</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>AddDependencySchemaError</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::AddDependencySchemaError (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp; souceName, <link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> * subvalidator)<computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a5e4d9e5d937bd54e481f90e23ec3aea4"/><section>
    <title>AddExpectedType()</title>
<indexterm><primary>AddExpectedType</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>AddExpectedType</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::AddExpectedType (const typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">SchemaType::ValueType</link> &amp; expectedType)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a68e5308e5ca9726ee66139a212b63bcc">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a2e9e0b2f67467a62642e37e839f689c5"/><section>
    <title>AddMissingDependentProperty()</title>
<indexterm><primary>AddMissingDependentProperty</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>AddMissingDependentProperty</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::AddMissingDependentProperty (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp; targetName)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a85f2be483f0ddfc402a97665aff6eca9">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a3a2165f53ab565e052bcd35b6d19e473"/><section>
    <title>AddMissingProperty()</title>
<indexterm><primary>AddMissingProperty</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>AddMissingProperty</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::AddMissingProperty (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp; name)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a8d355eeb25364e414d9a2f8121aa0eaa">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a921da9a7fa127035a2a259b19813230e"/><section>
    <title>BelowMinimum()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>BelowMinimum</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>BelowMinimum</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::BelowMinimum (double actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp; expected, bool exclusive)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1afdd4a9787239a6fc3eeb56d34fd531f4">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a5ad9849c01a0bfa923d37ef2f1b4c933"/><section>
    <title>BelowMinimum()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>BelowMinimum</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>BelowMinimum</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::BelowMinimum (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp; expected, bool exclusive)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a15a12306bc14f16357b4f2edea8396b7">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1aa7bbfd1a69ba08ae31f87cb96ab5ec04"/><section>
    <title>BelowMinimum()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>BelowMinimum</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>BelowMinimum</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::BelowMinimum (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp; expected, bool exclusive)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1ad3db1f3852a1b2e6fada43fbcad401ea">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a570a6723282e6c0576a47c492ffe5602"/><section>
    <title>Disallowed()</title>
<indexterm><primary>Disallowed</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>Disallowed</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::Disallowed ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1acc65a322086c792d6534e306c7a091cf">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a0ac36d4217d9a14205cbe392601f3ee7"/><section>
    <title>DisallowedItem()</title>
<indexterm><primary>DisallowedItem</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>DisallowedItem</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::DisallowedItem (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a2d47a88a3d9fb82466b5bda480b6e70f">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a689b8acc4cbe3e8683c1a29950438ac8"/><section>
    <title>DisallowedProperty()</title>
<indexterm><primary>DisallowedProperty</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>DisallowedProperty</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::DisallowedProperty (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7">Ch</link> * name, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length)<computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a67531a59c1dd8db20db72b17f0933d03"/><section>
    <title>DisallowedValue()</title>
<indexterm><primary>DisallowedValue</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>DisallowedValue</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::DisallowedValue (const <link linkend="_group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a">ValidateErrorCode</link> code)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1afc9082d5e9733762e64df3faa88e0160">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a9551391add918d6679f9a2a85dffc19c"/><section>
    <title>DoesNotMatch()</title>
<indexterm><primary>DoesNotMatch</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>DoesNotMatch</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::DoesNotMatch (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length)<computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a3a0836796f39c946f31f87b80ddd6cf1"/><section>
    <title>DuplicateItems()</title>
<indexterm><primary>DuplicateItems</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>DuplicateItems</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::DuplicateItems (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index1, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index2)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a82aa865146069e3ba5010d25346a71f2">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a817c1e3e9cc62603997a2fcdc564820b"/><section>
    <title>EndDependencyErrors()</title>
<indexterm><primary>EndDependencyErrors</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>EndDependencyErrors</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual bool <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::EndDependencyErrors ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1ab6d1c964faaa0f86f9da51a0f66dc1e4">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1ad8133b3c055b3a91b5072af81304ab87"/><section>
    <title>EndDisallowedType()</title>
<indexterm><primary>EndDisallowedType</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>EndDisallowedType</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::EndDisallowedType (const typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">SchemaType::ValueType</link> &amp; actualType)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1ae0f99bfee3e2021c05322fd5d6de2f6e">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a05af3199b8011a3476dfd238fa958213"/><section>
    <title>EndMissingDependentProperties()</title>
<indexterm><primary>EndMissingDependentProperties</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>EndMissingDependentProperties</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::EndMissingDependentProperties (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp; sourceName)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1afdcd2ff7b5f7e24f4f3d6976fa5b803e">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a3a01eec1a969cfb600340a2bad157c9c"/><section>
    <title>EndMissingProperties()</title>
<indexterm><primary>EndMissingProperties</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>EndMissingProperties</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual bool <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::EndMissingProperties ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a557b7aa531ff94a6355fed8f8575fed5">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a70105117617fc7edbe7f032975888e13"/><section>
    <title>NoneOf()</title>
<indexterm><primary>NoneOf</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>NoneOf</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::NoneOf (<link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> ** subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)<computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a3ce77d66a09eb5d91833fc86f8fa5680"/><section>
    <title>NotAllOf()</title>
<indexterm><primary>NotAllOf</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>NotAllOf</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::NotAllOf (<link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> ** subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)<computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1ada3d2275ccdeb4874f34942d257af9c5"/><section>
    <title>NotMultipleOf()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>NotMultipleOf</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>NotMultipleOf</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::NotMultipleOf (double actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp; expected)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1ae5fc8a4545fed53955ec6c57b79ca949">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a195a561f0bbbfb66961c9331a6afab39"/><section>
    <title>NotMultipleOf()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>NotMultipleOf</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>NotMultipleOf</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::NotMultipleOf (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp; expected)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1ab2f08413a2b23d73d4bbd09c8ca1f547">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1ad8bd123f154f4c39f48b366219878526"/><section>
    <title>NotMultipleOf()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>NotMultipleOf</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>NotMultipleOf</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::NotMultipleOf (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> actual, const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22eda6c4ea9537f1ba00d76af052649a">SValue</link> &amp; expected)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a5c59d25dc44d85404cc587ebfa7455cd">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a3ca6fd0aebd486de8dd78c952938a83b"/><section>
    <title>NotOneOf()</title>
<indexterm><primary>NotOneOf</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>NotOneOf</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::NotOneOf (<link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> ** subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count, bool matched)<computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1abd92773fa046eeb6fd8416468e62e5b1"/><section>
    <title>PropertyViolations()</title>
<indexterm><primary>PropertyViolations</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>PropertyViolations</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::PropertyViolations (<link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> ** subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)<computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1ab3cf4b9fe450ff76f52d70a2888f0342"/><section>
    <title>StartDependencyErrors()</title>
<indexterm><primary>StartDependencyErrors</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>StartDependencyErrors</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::StartDependencyErrors ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a767f115cc90e0f2f5bdd1c9fbdbf75df">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a994a8b1526a79737b9d7b7575def4f65"/><section>
    <title>StartDisallowedType()</title>
<indexterm><primary>StartDisallowedType</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>StartDisallowedType</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::StartDisallowedType ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a9904719420fd91200f80772e92fe225f">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1ae312aea74718dda0411af023c0c78ef6"/><section>
    <title>StartMissingDependentProperties()</title>
<indexterm><primary>StartMissingDependentProperties</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>StartMissingDependentProperties</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::StartMissingDependentProperties ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1ac4faa073bc4671f42e98a59a9e9cb01a">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1ac0073bef86b572b4517876b304aada0f"/><section>
    <title>StartMissingProperties()</title>
<indexterm><primary>StartMissingProperties</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>StartMissingProperties</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::StartMissingProperties ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a41c4d67e349561f13948a5045bfc50c9">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1afc144690ba0e24636a72f541efd32c3b"/><section>
    <title>TooFewItems()</title>
<indexterm><primary>TooFewItems</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>TooFewItems</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::TooFewItems (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1af39007d9bf43126dab231961a1c5064f">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1adf515d2fad2e55bc0735a6fb16eec9e6"/><section>
    <title>TooFewProperties()</title>
<indexterm><primary>TooFewProperties</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>TooFewProperties</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::TooFewProperties (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1aaebaf28aa289826a3c39dc953b0ca466">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1ae000553bd9312a5090eed393541243af"/><section>
    <title>TooLong()</title>
<indexterm><primary>TooLong</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>TooLong</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::TooLong (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expected)<computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a9371ca15622897a429971f69c07c47ef"/><section>
    <title>TooManyItems()</title>
<indexterm><primary>TooManyItems</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>TooManyItems</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::TooManyItems (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a78e85eeae0e2bdef827815672a7fbbc9">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a3494e9d2bff94979649e186aba71b32e"/><section>
    <title>TooManyProperties()</title>
<indexterm><primary>TooManyProperties</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>TooManyProperties</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::TooManyProperties (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1ad7ca0a327420c110e9ee6e70b2cdbc87">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_validation_error_handler_1a57f0cd2c2c9781af0e4c447700537f23"/><section>
    <title>TooShort()</title>
<indexterm><primary>TooShort</primary><secondary>internal::IValidationErrorHandler&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::IValidationErrorHandler&lt; SchemaType &gt;</primary><secondary>TooShort</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_validation_error_handler">internal::IValidationErrorHandler</link>&lt; SchemaType &gt;::TooShort (const <link linkend="_classinternal_1_1_i_validation_error_handler_1a22e6a5f35edb9b614156ad606dcc79d7">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expected)<computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_schema_8h">schema.h</link></section>
</section>
