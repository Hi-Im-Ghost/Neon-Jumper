<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_generic_object" xml:lang="en-US">
<title>GenericObject&lt; Const, ValueT &gt; Class Template Reference</title>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary></indexterm>
<para>

<para>Helper class for accessing Value of object type. </para>
 
</para>
<para>
<computeroutput>#include &lt;document.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_class_generic_object">GenericObject</link>&lt; true, ValueT &gt; <link linkend="_class_generic_object_1aeee588f9a85e88cac89b7c4dfb6b0bd3">ConstObject</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_object">GenericObject</link>&lt; false, ValueT &gt; <link linkend="_class_generic_object_1ae8f5673d0cf8e7ebfd2d4f6ab27b632d">Object</link></para>
</listitem>
            <listitem><para>typedef ValueT <link linkend="_class_generic_object_1a4c25f4a5f696745c418b91ad9f577f12">PlainType</link></para>
</listitem>
            <listitem><para>typedef internal::MaybeAddConst&lt; Const, <link linkend="_class_generic_object_1a4c25f4a5f696745c418b91ad9f577f12">PlainType</link> &gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link> <link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_member_iterator">GenericMemberIterator</link>&lt; Const, typename ValueT::EncodingType, typename ValueT::AllocatorType &gt; <link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_member_iterator">GenericMemberIterator</link>&lt; true, typename ValueT::EncodingType, typename ValueT::AllocatorType &gt; <link linkend="_class_generic_object_1af16706c0ad32b957c56e7d0541628cd5">ConstMemberIterator</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1">ValueType::AllocatorType</link> <link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">ValueType::StringRefType</link> <link linkend="_class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59">StringRefType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_value_1a28c2cb8d04d12566c1af37597a46d209">ValueType::EncodingType</link> <link linkend="_class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef">EncodingType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">ValueType::Ch</link> <link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_object_1a10173c42d0e8a71ca0e3ae75d800887a">GenericObject</link> (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_object">GenericObject</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_class_generic_object">GenericObject</link> &amp; <link linkend="_class_generic_object_1a995b0e01b59efd7e268f837b8127e0bc">operator=</link> (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_object">GenericObject</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_class_generic_object_1a8ac79abb76ac4d2c647681a37fc4ab46">~GenericObject</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_generic_object_1a2948af90e01df17989cd844d6197eb18">operator ValueType &amp;</link> () <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_object_1a15326564c82f2b545811f753534563e4">MemberCount</link> () <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_object_1a0389754cbdb435d732bad6edf4f8cdb2">MemberCapacity</link> () <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_object_1a9cc10bfeeb6a5eb95ba1ae587b6e6ad8">ObjectEmpty</link> () <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; </para><para><link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp; <link linkend="_class_generic_object_1a2bd0d4a75b18ae78c8a1e1051e8ec9ac">operator[]</link> (<link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> *name) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para>template&lt;typename SourceAllocator &gt; </para><para><link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp; <link linkend="_class_generic_object_1a21c677e997d4dfe4e0692cdb75067428">operator[]</link> (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef">EncodingType</link>, SourceAllocator &gt; &amp;name) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object_1af1e80a8a521f05530f9b6a448242ff2d">MemberBegin</link> () <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object_1a75873786614f67796bfb190008e004dc">MemberEnd</link> () <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_object">GenericObject</link> <link linkend="_class_generic_object_1af750abd40d05136da98705899b4575c2">MemberReserve</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> newCapacity, <link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link> &amp;allocator) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_object_1a996d775e52cc7c5cf2aa308cf5a2b2cf">HasMember</link> (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link> *name) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para>template&lt;typename SourceAllocator &gt; </para><para>bool <link linkend="_class_generic_object_1a0b63666ca05c86f9d719350f2302a3f7">HasMember</link> (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef">EncodingType</link>, SourceAllocator &gt; &amp;name) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object_1a979890ccb3b116af19f9e3e77d3d286f">FindMember</link> (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link> *name) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para>template&lt;typename SourceAllocator &gt; </para><para><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object_1a12a4fbbf2219d6bb43c3d61923830ab4">FindMember</link> (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef">EncodingType</link>, SourceAllocator &gt; &amp;name) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_object">GenericObject</link> <link linkend="_class_generic_object_1a3668524c8566c46cbae97d938064f5fa">AddMember</link> (<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp;name, <link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>, <link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link> &amp;allocator) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_object">GenericObject</link> <link linkend="_class_generic_object_1ae871adc8c906a72878b7cf5df279ed1f">AddMember</link> (<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp;name, <link linkend="_class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59">StringRefType</link> <link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>, <link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link> &amp;allocator) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; </para><para><link linkend="_class_generic_object_1a98ebcec632c41442d89cd8634b7ecc47">RAPIDJSON_DISABLEIF_RETURN</link> ((internal::OrExpr&lt; internal::IsPointer&lt; <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt;, <link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue</link>&lt; <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; &gt;),(<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp;)) <link linkend="_class_generic_object_1a3668524c8566c46cbae97d938064f5fa">AddMember</link>(<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp;name</para>
</listitem>
            <listitem><para><link linkend="_class_generic_object">GenericObject</link> <link linkend="_class_generic_object_1a011a0dd06baf841e3f6e21a3c95db3c1">AddMember</link> (<link linkend="_class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59">StringRefType</link> name, <link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>, <link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link> &amp;allocator) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_object">GenericObject</link> <link linkend="_class_generic_object_1a3af43681aea03c4313d689bcbf5e3363">AddMember</link> (<link linkend="_class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59">StringRefType</link> name, <link linkend="_class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59">StringRefType</link> <link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>, <link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link> &amp;allocator) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; </para><para><link linkend="_class_generic_object_1af361a4b677882964789201fc605541d0">RAPIDJSON_DISABLEIF_RETURN</link> ((internal::OrExpr&lt; internal::IsPointer&lt; <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt;, <link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue</link>&lt; <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; &gt;),(<link linkend="_class_generic_object">GenericObject</link>)) <link linkend="_class_generic_object_1a3668524c8566c46cbae97d938064f5fa">AddMember</link>(<link linkend="_class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59">StringRefType</link> name</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_object_1a129ce3843a6658e620a7f740d9f44ee1">RemoveAllMembers</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_object_1aebeda9c2cac6afd56dda55caaf2c4a0c">RemoveMember</link> (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link> *name) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para>template&lt;typename SourceAllocator &gt; </para><para>bool <link linkend="_class_generic_object_1a8e29dc07b992e71e35dd93a57f95842c">RemoveMember</link> (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef">EncodingType</link>, SourceAllocator &gt; &amp;name) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object_1a006f76a33dada85c9d13e069cc43623d">RemoveMember</link> (<link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> m) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object_1a29ad0490a4a088d57df7a9884f979a82">EraseMember</link> (<link linkend="_class_generic_object_1af16706c0ad32b957c56e7d0541628cd5">ConstMemberIterator</link> pos) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object_1a67f85d2da462287dead8e35f2ac974b5">EraseMember</link> (<link linkend="_class_generic_object_1af16706c0ad32b957c56e7d0541628cd5">ConstMemberIterator</link> first, <link linkend="_class_generic_object_1af16706c0ad32b957c56e7d0541628cd5">ConstMemberIterator</link> last) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_object_1af0d31a8547051624449494a339b20107">EraseMember</link> (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link> *name) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
            <listitem><para>template&lt;typename SourceAllocator &gt; </para><para>bool <link linkend="_class_generic_object_1a4cd6f90444f20cc9d5577747d3968da4">EraseMember</link> (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef">EncodingType</link>, SourceAllocator &gt; &amp;name) <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> <link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link></para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> <link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link> &amp;allocator <link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> { value_.AddMember(name, <link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>, allocator)</para>
</listitem>
            <listitem><para>return * <link linkend="_class_generic_object_1a719a0e5501da825e6f86ce12b46446cb">this</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename , typename &gt; </para><para>class <link linkend="_class_generic_object_1a899449e1a645b5e377af059fb61113d8">GenericValue</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;bool Const, typename ValueT&gt;
class GenericObject&lt; Const, ValueT &gt;</title></simplesect>

<para>Helper class for accessing Value of object type. </para>



<para>Instance of this helper class is obtained by <computeroutput>GenericValue::GetObject()</computeroutput>. In addition to all APIs for array type, it provides range-based for loop if <computeroutput>RAPIDJSON_HAS_CXX11_RANGE_FOR=1</computeroutput>. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9"/><section>
    <title>AllocatorType</title>
<indexterm><primary>AllocatorType</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>AllocatorType</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1">ValueType::AllocatorType</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::AllocatorType</computeroutput></para></section>
<anchor xml:id="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">ValueType::Ch</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::Ch</computeroutput></para></section>
<anchor xml:id="_class_generic_object_1af16706c0ad32b957c56e7d0541628cd5"/><section>
    <title>ConstMemberIterator</title>
<indexterm><primary>ConstMemberIterator</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>ConstMemberIterator</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_member_iterator">GenericMemberIterator</link>&lt;true, typename ValueT::EncodingType, typename ValueT::AllocatorType&gt; <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::ConstMemberIterator</computeroutput></para></section>
<anchor xml:id="_class_generic_object_1aeee588f9a85e88cac89b7c4dfb6b0bd3"/><section>
    <title>ConstObject</title>
<indexterm><primary>ConstObject</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>ConstObject</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_object">GenericObject</link>&lt;true, ValueT&gt; <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::ConstObject</computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef"/><section>
    <title>EncodingType</title>
<indexterm><primary>EncodingType</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>EncodingType</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_value_1a28c2cb8d04d12566c1af37597a46d209">ValueType::EncodingType</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::EncodingType</computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6"/><section>
    <title>MemberIterator</title>
<indexterm><primary>MemberIterator</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>MemberIterator</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_member_iterator">GenericMemberIterator</link>&lt;Const, typename ValueT::EncodingType, typename ValueT::AllocatorType&gt; <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::MemberIterator</computeroutput></para></section>
<anchor xml:id="_class_generic_object_1ae8f5673d0cf8e7ebfd2d4f6ab27b632d"/><section>
    <title>Object</title>
<indexterm><primary>Object</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>Object</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_object">GenericObject</link>&lt;false, ValueT&gt; <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::Object</computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a4c25f4a5f696745c418b91ad9f577f12"/><section>
    <title>PlainType</title>
<indexterm><primary>PlainType</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>PlainType</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef ValueT <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::PlainType</computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59"/><section>
    <title>StringRefType</title>
<indexterm><primary>StringRefType</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>StringRefType</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">ValueType::StringRefType</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::StringRefType</computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1"/><section>
    <title>ValueType</title>
<indexterm><primary>ValueType</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>ValueType</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef internal::MaybeAddConst&lt;Const,<link linkend="_class_generic_object_1a4c25f4a5f696745c418b91ad9f577f12">PlainType</link>&gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;<link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">::ValueType</link></computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_generic_object_1a10173c42d0e8a71ca0e3ae75d800887a"/><section>
    <title>GenericObject()</title>
<indexterm><primary>GenericObject</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>GenericObject</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;<link linkend="_class_generic_object">::GenericObject</link> (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt; &amp; rhs)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a8ac79abb76ac4d2c647681a37fc4ab46"/><section>
    <title>~GenericObject()</title>
<indexterm><primary>~GenericObject</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>~GenericObject</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::~<link linkend="_class_generic_object">GenericObject</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_generic_object_1a3af43681aea03c4313d689bcbf5e3363"/><section>
    <title>AddMember()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>AddMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>AddMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object">GenericObject</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::AddMember (<link linkend="_class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59">StringRefType</link> name, <link linkend="_class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59">StringRefType</link> value, <link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link> &amp; allocator) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a011a0dd06baf841e3f6e21a3c95db3c1"/><section>
    <title>AddMember()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>AddMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>AddMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object">GenericObject</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::AddMember (<link linkend="_class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59">StringRefType</link> name, <link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp; value, <link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link> &amp; allocator) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1ae871adc8c906a72878b7cf5df279ed1f"/><section>
    <title>AddMember()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>AddMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>AddMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object">GenericObject</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::AddMember (<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp; name, <link linkend="_class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59">StringRefType</link> value, <link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link> &amp; allocator) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a3668524c8566c46cbae97d938064f5fa"/><section>
    <title>AddMember()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>AddMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>AddMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object">GenericObject</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::AddMember (<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp; name, <link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp; value, <link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link> &amp; allocator) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1af0d31a8547051624449494a339b20107"/><section>
    <title>EraseMember()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>EraseMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>EraseMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::EraseMember (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link> * name) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a4cd6f90444f20cc9d5577747d3968da4"/><section>
    <title>EraseMember()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>EraseMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>EraseMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><computeroutput>template&lt;typename SourceAllocator &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::EraseMember (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef">EncodingType</link>, SourceAllocator &gt; &amp; name) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a67f85d2da462287dead8e35f2ac974b5"/><section>
    <title>EraseMember()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>EraseMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>EraseMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::EraseMember (<link linkend="_class_generic_object_1af16706c0ad32b957c56e7d0541628cd5">ConstMemberIterator</link> first, <link linkend="_class_generic_object_1af16706c0ad32b957c56e7d0541628cd5">ConstMemberIterator</link> last) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a29ad0490a4a088d57df7a9884f979a82"/><section>
    <title>EraseMember()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>EraseMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>EraseMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::EraseMember (<link linkend="_class_generic_object_1af16706c0ad32b957c56e7d0541628cd5">ConstMemberIterator</link> pos) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a979890ccb3b116af19f9e3e77d3d286f"/><section>
    <title>FindMember()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>FindMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>FindMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::FindMember (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link> * name) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a12a4fbbf2219d6bb43c3d61923830ab4"/><section>
    <title>FindMember()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>FindMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>FindMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><computeroutput>template&lt;typename SourceAllocator &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::FindMember (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef">EncodingType</link>, SourceAllocator &gt; &amp; name) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a996d775e52cc7c5cf2aa308cf5a2b2cf"/><section>
    <title>HasMember()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>HasMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>HasMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::HasMember (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link> * name) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a0b63666ca05c86f9d719350f2302a3f7"/><section>
    <title>HasMember()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>HasMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>HasMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><computeroutput>template&lt;typename SourceAllocator &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::HasMember (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef">EncodingType</link>, SourceAllocator &gt; &amp; name) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1af1e80a8a521f05530f9b6a448242ff2d"/><section>
    <title>MemberBegin()</title>
<indexterm><primary>MemberBegin</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>MemberBegin</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::MemberBegin ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a0389754cbdb435d732bad6edf4f8cdb2"/><section>
    <title>MemberCapacity()</title>
<indexterm><primary>MemberCapacity</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>MemberCapacity</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::MemberCapacity ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a15326564c82f2b545811f753534563e4"/><section>
    <title>MemberCount()</title>
<indexterm><primary>MemberCount</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>MemberCount</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::MemberCount ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a75873786614f67796bfb190008e004dc"/><section>
    <title>MemberEnd()</title>
<indexterm><primary>MemberEnd</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>MemberEnd</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::MemberEnd ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1af750abd40d05136da98705899b4575c2"/><section>
    <title>MemberReserve()</title>
<indexterm><primary>MemberReserve</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>MemberReserve</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object">GenericObject</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::MemberReserve (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> newCapacity, <link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link> &amp; allocator) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a9cc10bfeeb6a5eb95ba1ae587b6e6ad8"/><section>
    <title>ObjectEmpty()</title>
<indexterm><primary>ObjectEmpty</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>ObjectEmpty</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::ObjectEmpty ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a2948af90e01df17989cd844d6197eb18"/><section>
    <title>operator ValueType &amp;()</title>
<indexterm><primary>operator ValueType &amp;</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>operator ValueType &amp;</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::operator <link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a995b0e01b59efd7e268f837b8127e0bc"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object">GenericObject</link> &amp; <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::operator= (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt; &amp; rhs)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a21c677e997d4dfe4e0692cdb75067428"/><section>
    <title>operator[]()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><computeroutput>template&lt;typename SourceAllocator &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp; <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::operator[] (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef">EncodingType</link>, SourceAllocator &gt; &amp; name) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a2bd0d4a75b18ae78c8a1e1051e8ec9ac"/><section>
    <title>operator[]()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><computeroutput>template&lt;typename <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp; <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::operator[] (<link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> * name) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1af361a4b677882964789201fc605541d0"/><section>
    <title>RAPIDJSON_DISABLEIF_RETURN()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>RAPIDJSON_DISABLEIF_RETURN</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>RAPIDJSON_DISABLEIF_RETURN</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><computeroutput>template&lt;typename <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::RAPIDJSON_DISABLEIF_RETURN ((internal::OrExpr&lt; internal::IsPointer&lt; <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt;, <link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue</link>&lt; <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; &gt;) , (<link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;) )</computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a98ebcec632c41442d89cd8634b7ecc47"/><section>
    <title>RAPIDJSON_DISABLEIF_RETURN()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>RAPIDJSON_DISABLEIF_RETURN</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>RAPIDJSON_DISABLEIF_RETURN</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><computeroutput>template&lt;typename <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::RAPIDJSON_DISABLEIF_RETURN ((internal::OrExpr&lt; internal::IsPointer&lt; <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt;, <link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue</link>&lt; <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; &gt;) , (<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link> &amp;) ) &amp;</computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a129ce3843a6658e620a7f740d9f44ee1"/><section>
    <title>RemoveAllMembers()</title>
<indexterm><primary>RemoveAllMembers</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>RemoveAllMembers</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::RemoveAllMembers ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1aebeda9c2cac6afd56dda55caaf2c4a0c"/><section>
    <title>RemoveMember()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>RemoveMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>RemoveMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::RemoveMember (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link> * name) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a8e29dc07b992e71e35dd93a57f95842c"/><section>
    <title>RemoveMember()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>RemoveMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>RemoveMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><computeroutput>template&lt;typename SourceAllocator &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::RemoveMember (<link linkend="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7">const</link> <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef">EncodingType</link>, SourceAllocator &gt; &amp; name) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a006f76a33dada85c9d13e069cc43623d"/><section>
    <title>RemoveMember()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>RemoveMember</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>RemoveMember</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::RemoveMember (<link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link> m) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Friends And Related Function Documentation</title>
<anchor xml:id="_class_generic_object_1a899449e1a645b5e377af059fb61113d8"/><section>
    <title>GenericValue</title>
<indexterm><primary>GenericValue</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>GenericValue</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><computeroutput>template&lt;typename , typename &gt; </computeroutput><para><computeroutput>friend class <link linkend="_class_generic_value">GenericValue</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_generic_object_1af70c9646b5e422306c33e98b3d8783a7"/><section>
    <title>const</title>
<indexterm><primary>const</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>const</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> <link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link> &amp;allocator <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::const { value_.AddMember(name, <link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>, allocator)</computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a719a0e5501da825e6f86ce12b46446cb"/><section>
    <title>this</title>
<indexterm><primary>this</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>this</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>return * <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::this</computeroutput></para></section>
<anchor xml:id="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f"/><section>
    <title>value</title>
<indexterm><primary>value</primary><secondary>GenericObject&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericObject&lt; Const, ValueT &gt;</primary><secondary>value</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> <link linkend="_class_generic_object">GenericObject</link>&lt; Const, ValueT &gt;::value</computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_document_8h">document.h</link></section>
</section>
