<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_strfunc_8h" xml:lang="en-US">
<title>src/rapidjson/include/rapidjson/internal/strfunc.h File Reference</title>
<indexterm><primary>src/rapidjson/include/rapidjson/internal/strfunc.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;../stream.h&quot;
#include &lt;cwchar&gt;
</programlisting><simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespaceinternal">internal</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename Ch &gt; </para><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_namespaceinternal_1a86326fb0c9d7c7ea8edd7deedbb2b26e">internal::StrLen</link> (const Ch *s)</para>

<para>Custom strlen() which works on different character types. </para>
</listitem>
            <listitem><para>template&lt;&gt; </para><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_namespaceinternal_1ac61f7d1bfae1fb68526633edd418fa1c">internal::StrLen</link> (const char *s)</para>
</listitem>
            <listitem><para>template&lt;&gt; </para><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_namespaceinternal_1a9cd1cee166f1e18e117d3ce9dc1c83da">internal::StrLen</link> (const wchar_t *s)</para>
</listitem>
            <listitem><para>template&lt;typename Ch &gt; </para><para>int <link linkend="_namespaceinternal_1a8986308d308f29092fef8a82e64debef">internal::StrCmp</link> (const Ch *s1, const Ch *s2)</para>

<para>Custom strcmpn() which works on different character types. </para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt; </para><para>bool <link linkend="_namespaceinternal_1a864bf0d412431b387aeeee9efdf0adfc">internal::CountStringCodePoint</link> (const typename Encoding::Ch *s, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> *outCount)</para>

<para>Returns number of code points in a encoded string. </para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
