<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_w_i_stream_wrapper" xml:lang="en-US">
<title>WIStreamWrapper Class Reference</title>
<indexterm><primary>WIStreamWrapper</primary></indexterm>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef wchar_t <link linkend="_class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_w_i_stream_wrapper_1ade2c5d942e477be8aeb6d525d329f2e4">WIStreamWrapper</link> (std::wistream &amp;is)</para>
</listitem>
            <listitem><para><link linkend="_class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9">Ch</link> <link linkend="_class_w_i_stream_wrapper_1abc20884603971a83a8e30fd938a1a603">Peek</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9">Ch</link> <link linkend="_class_w_i_stream_wrapper_1ac456d670481c585b48b82e76542fdc67">Take</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_w_i_stream_wrapper_1acaa96a99cbb9aa48c5f5b49aecc09f97">Tell</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9">Ch</link> * <link linkend="_class_w_i_stream_wrapper_1a038758cd930e6b4bccb243a6f16aa6ca">PutBegin</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_w_i_stream_wrapper_1a2a50671457b7610f44924c2ff1f8d3e6">Put</link> (<link linkend="_class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9">Ch</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_class_w_i_stream_wrapper_1a40943c14231bc79f9a57c3364cc43432">Flush</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_w_i_stream_wrapper_1aa144af9605ff7e798e19b6add8c67d77">PutEnd</link> (<link linkend="_class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9">Ch</link> *)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>WIStreamWrapper</secondary></indexterm>
<indexterm><primary>WIStreamWrapper</primary><secondary>Ch</secondary></indexterm>
<para><computeroutput>typedef wchar_t <link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">WIStreamWrapper::Ch</link></computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_w_i_stream_wrapper_1ade2c5d942e477be8aeb6d525d329f2e4"/><section>
    <title>WIStreamWrapper()</title>
<indexterm><primary>WIStreamWrapper</primary><secondary>WIStreamWrapper</secondary></indexterm>
<indexterm><primary>WIStreamWrapper</primary><secondary>WIStreamWrapper</secondary></indexterm>
<para><computeroutput>WIStreamWrapper::WIStreamWrapper (std::wistream &amp; is)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_w_i_stream_wrapper_1a40943c14231bc79f9a57c3364cc43432"/><section>
    <title>Flush()</title>
<indexterm><primary>Flush</primary><secondary>WIStreamWrapper</secondary></indexterm>
<indexterm><primary>WIStreamWrapper</primary><secondary>Flush</secondary></indexterm>
<para><computeroutput>void WIStreamWrapper::Flush ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_w_i_stream_wrapper_1abc20884603971a83a8e30fd938a1a603"/><section>
    <title>Peek()</title>
<indexterm><primary>Peek</primary><secondary>WIStreamWrapper</secondary></indexterm>
<indexterm><primary>WIStreamWrapper</primary><secondary>Peek</secondary></indexterm>
<para><computeroutput><link linkend="_class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9">Ch</link> WIStreamWrapper::Peek ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_w_i_stream_wrapper_1a2a50671457b7610f44924c2ff1f8d3e6"/><section>
    <title>Put()</title>
<indexterm><primary>Put</primary><secondary>WIStreamWrapper</secondary></indexterm>
<indexterm><primary>WIStreamWrapper</primary><secondary>Put</secondary></indexterm>
<para><computeroutput>void WIStreamWrapper::Put (<link linkend="_class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9">Ch</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_w_i_stream_wrapper_1a038758cd930e6b4bccb243a6f16aa6ca"/><section>
    <title>PutBegin()</title>
<indexterm><primary>PutBegin</primary><secondary>WIStreamWrapper</secondary></indexterm>
<indexterm><primary>WIStreamWrapper</primary><secondary>PutBegin</secondary></indexterm>
<para><computeroutput><link linkend="_class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9">Ch</link> * WIStreamWrapper::PutBegin ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_w_i_stream_wrapper_1aa144af9605ff7e798e19b6add8c67d77"/><section>
    <title>PutEnd()</title>
<indexterm><primary>PutEnd</primary><secondary>WIStreamWrapper</secondary></indexterm>
<indexterm><primary>WIStreamWrapper</primary><secondary>PutEnd</secondary></indexterm>
<para><computeroutput>size_t WIStreamWrapper::PutEnd (<link linkend="_class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9">Ch</link> * )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_w_i_stream_wrapper_1ac456d670481c585b48b82e76542fdc67"/><section>
    <title>Take()</title>
<indexterm><primary>Take</primary><secondary>WIStreamWrapper</secondary></indexterm>
<indexterm><primary>WIStreamWrapper</primary><secondary>Take</secondary></indexterm>
<para><computeroutput><link linkend="_class_w_i_stream_wrapper_1ac3a2ba6204a4dbb492b0d194cd651ea9">Ch</link> WIStreamWrapper::Take ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_w_i_stream_wrapper_1acaa96a99cbb9aa48c5f5b49aecc09f97"/><section>
    <title>Tell()</title>
<indexterm><primary>Tell</primary><secondary>WIStreamWrapper</secondary></indexterm>
<indexterm><primary>WIStreamWrapper</primary><secondary>Tell</secondary></indexterm>
<para><computeroutput>size_t WIStreamWrapper::Tell ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/test/unittest/<link linkend="_readertest_8cpp">readertest.cpp</link></section>
</section>
