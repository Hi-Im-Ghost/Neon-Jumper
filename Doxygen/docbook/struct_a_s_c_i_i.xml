<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_a_s_c_i_i" xml:lang="en-US">
<title>ASCII&lt; CharType &gt; Struct Template Reference</title>
<indexterm><primary>ASCII&lt; CharType &gt;</primary></indexterm>
<para>

<para><link linkend="_struct_a_s_c_i_i">ASCII</link> encoding. </para>
 
</para>
<para>
<computeroutput>#include &lt;encodings.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum { <link linkend="_struct_a_s_c_i_i_1a2f2c796586b1f9b18c7ff5c452eba0a9a672ec36bd3404c3050a9111a934cbe00">supportUnicode</link> = 0
 }</para>
</listitem>
            <listitem><para>typedef CharType <link linkend="_struct_a_s_c_i_i_1a1baf6e7914f165be952c30db664cefb4">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename OutputStream &gt; </para><para>static void <link linkend="_struct_a_s_c_i_i_1af56b1605fe233c54693facc7de457f72">Encode</link> (OutputStream &amp;os, unsigned codepoint)</para>
</listitem>
            <listitem><para>template&lt;typename OutputStream &gt; </para><para>static void <link linkend="_struct_a_s_c_i_i_1afeb90d6f04771067b83b35a0f366af46">EncodeUnsafe</link> (OutputStream &amp;os, unsigned codepoint)</para>
</listitem>
            <listitem><para>template&lt;typename InputStream &gt; </para><para>static bool <link linkend="_struct_a_s_c_i_i_1a44844bbfd0a4fc282993fd72f3f58eee">Decode</link> (InputStream &amp;is, unsigned *codepoint)</para>
</listitem>
            <listitem><para>template&lt;typename InputStream , typename OutputStream &gt; </para><para>static bool <link linkend="_struct_a_s_c_i_i_1a398680588a09e6ce9b56e32195047c78">Validate</link> (InputStream &amp;is, OutputStream &amp;os)</para>
</listitem>
            <listitem><para>template&lt;typename InputByteStream &gt; </para><para>static CharType <link linkend="_struct_a_s_c_i_i_1aad78500eb98f45582a4df020e3fb2278">TakeBOM</link> (InputByteStream &amp;is)</para>
</listitem>
            <listitem><para>template&lt;typename InputByteStream &gt; </para><para>static <link linkend="_struct_a_s_c_i_i_1a1baf6e7914f165be952c30db664cefb4">Ch</link> <link linkend="_struct_a_s_c_i_i_1ab1b9fdf0a5c05658d62fded913d923a3">Take</link> (InputByteStream &amp;is)</para>
</listitem>
            <listitem><para>template&lt;typename OutputByteStream &gt; </para><para>static void <link linkend="_struct_a_s_c_i_i_1a3036dc1d604039c3224ca0a890ee0134">PutBOM</link> (OutputByteStream &amp;os)</para>
</listitem>
            <listitem><para>template&lt;typename OutputByteStream &gt; </para><para>static void <link linkend="_struct_a_s_c_i_i_1a218b244b9cd961ea6c5775a734cec20e">Put</link> (OutputByteStream &amp;os, <link linkend="_struct_a_s_c_i_i_1a1baf6e7914f165be952c30db664cefb4">Ch</link> c)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename CharType = char&gt;
struct ASCII&lt; CharType &gt;</title></simplesect>

<para><link linkend="_struct_a_s_c_i_i">ASCII</link> encoding. </para>



<para><link xlink:href="http://en.wikipedia.org/wiki/ASCII">http://en.wikipedia.org/wiki/ASCII</link> 
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>CharType</entry><entry>
<para>Code unit for storing 7-bit <link linkend="_struct_a_s_c_i_i">ASCII</link> data. Default is char. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>implements Encoding concept </para>
</note>
</para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_struct_a_s_c_i_i_1a1baf6e7914f165be952c30db664cefb4"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>ASCII&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>ASCII&lt; CharType &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = char&gt; </computeroutput><para><computeroutput>typedef CharType <link linkend="_struct_a_s_c_i_i">ASCII</link>&lt; CharType &gt;::Ch</computeroutput></para></section>
</section>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_struct_a_s_c_i_i_1a2f2c796586b1f9b18c7ff5c452eba0a9"/><section>
    <title>anonymous enum</title>
<computeroutput>template&lt;typename CharType  = char&gt; </computeroutput><para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>supportUnicode</primary><secondary>ASCII&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>ASCII&lt; CharType &gt;</primary><secondary>supportUnicode</secondary></indexterm>
<anchor xml:id="_struct_a_s_c_i_i_1a2f2c796586b1f9b18c7ff5c452eba0a9a672ec36bd3404c3050a9111a934cbe00"/>supportUnicode</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_a_s_c_i_i_1a44844bbfd0a4fc282993fd72f3f58eee"/><section>
    <title>Decode()</title>
<indexterm><primary>Decode</primary><secondary>ASCII&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>ASCII&lt; CharType &gt;</primary><secondary>Decode</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = char&gt; </computeroutput><computeroutput>template&lt;typename InputStream &gt; </computeroutput><para><computeroutput>static bool <link linkend="_struct_a_s_c_i_i">ASCII</link>&lt; CharType &gt;::Decode (InputStream &amp; is, unsigned * codepoint)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_a_s_c_i_i_1af56b1605fe233c54693facc7de457f72"/><section>
    <title>Encode()</title>
<indexterm><primary>Encode</primary><secondary>ASCII&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>ASCII&lt; CharType &gt;</primary><secondary>Encode</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = char&gt; </computeroutput><computeroutput>template&lt;typename OutputStream &gt; </computeroutput><para><computeroutput>static void <link linkend="_struct_a_s_c_i_i">ASCII</link>&lt; CharType &gt;::Encode (OutputStream &amp; os, unsigned codepoint)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_a_s_c_i_i_1afeb90d6f04771067b83b35a0f366af46"/><section>
    <title>EncodeUnsafe()</title>
<indexterm><primary>EncodeUnsafe</primary><secondary>ASCII&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>ASCII&lt; CharType &gt;</primary><secondary>EncodeUnsafe</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = char&gt; </computeroutput><computeroutput>template&lt;typename OutputStream &gt; </computeroutput><para><computeroutput>static void <link linkend="_struct_a_s_c_i_i">ASCII</link>&lt; CharType &gt;::EncodeUnsafe (OutputStream &amp; os, unsigned codepoint)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_a_s_c_i_i_1a218b244b9cd961ea6c5775a734cec20e"/><section>
    <title>Put()</title>
<indexterm><primary>Put</primary><secondary>ASCII&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>ASCII&lt; CharType &gt;</primary><secondary>Put</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = char&gt; </computeroutput><computeroutput>template&lt;typename OutputByteStream &gt; </computeroutput><para><computeroutput>static void <link linkend="_struct_a_s_c_i_i">ASCII</link>&lt; CharType &gt;::Put (OutputByteStream &amp; os, <link linkend="_struct_a_s_c_i_i_1a1baf6e7914f165be952c30db664cefb4">Ch</link> c)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_a_s_c_i_i_1a3036dc1d604039c3224ca0a890ee0134"/><section>
    <title>PutBOM()</title>
<indexterm><primary>PutBOM</primary><secondary>ASCII&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>ASCII&lt; CharType &gt;</primary><secondary>PutBOM</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = char&gt; </computeroutput><computeroutput>template&lt;typename OutputByteStream &gt; </computeroutput><para><computeroutput>static void <link linkend="_struct_a_s_c_i_i">ASCII</link>&lt; CharType &gt;::PutBOM (OutputByteStream &amp; os)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_a_s_c_i_i_1ab1b9fdf0a5c05658d62fded913d923a3"/><section>
    <title>Take()</title>
<indexterm><primary>Take</primary><secondary>ASCII&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>ASCII&lt; CharType &gt;</primary><secondary>Take</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = char&gt; </computeroutput><computeroutput>template&lt;typename InputByteStream &gt; </computeroutput><para><computeroutput>static <link linkend="_struct_a_s_c_i_i_1a1baf6e7914f165be952c30db664cefb4">Ch</link> <link linkend="_struct_a_s_c_i_i">ASCII</link>&lt; CharType &gt;::Take (InputByteStream &amp; is)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_a_s_c_i_i_1aad78500eb98f45582a4df020e3fb2278"/><section>
    <title>TakeBOM()</title>
<indexterm><primary>TakeBOM</primary><secondary>ASCII&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>ASCII&lt; CharType &gt;</primary><secondary>TakeBOM</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = char&gt; </computeroutput><computeroutput>template&lt;typename InputByteStream &gt; </computeroutput><para><computeroutput>static CharType <link linkend="_struct_a_s_c_i_i">ASCII</link>&lt; CharType &gt;::TakeBOM (InputByteStream &amp; is)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_a_s_c_i_i_1a398680588a09e6ce9b56e32195047c78"/><section>
    <title>Validate()</title>
<indexterm><primary>Validate</primary><secondary>ASCII&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>ASCII&lt; CharType &gt;</primary><secondary>Validate</secondary></indexterm>
<computeroutput>template&lt;typename CharType  = char&gt; </computeroutput><computeroutput>template&lt;typename InputStream , typename OutputStream &gt; </computeroutput><para><computeroutput>static bool <link linkend="_struct_a_s_c_i_i">ASCII</link>&lt; CharType &gt;::Validate (InputStream &amp; is, OutputStream &amp; os)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_encodings_8h">encodings.h</link></section>
</section>
