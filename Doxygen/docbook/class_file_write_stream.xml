<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_file_write_stream" xml:lang="en-US">
<title>FileWriteStream Class Reference</title>
<indexterm><primary>FileWriteStream</primary></indexterm>
<para>

<para>Wrapper of C file stream for output using fwrite(). </para>
 
</para>
<para>
<computeroutput>#include &lt;filewritestream.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef char <link linkend="_class_file_write_stream_1abc16aeb69ad4176263ddfcb837fb7b49">Ch</link></para>

<para>Character type. Only support char. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_file_write_stream_1a553ea3e7377a7f7cace2daa3cc90e1a1">FileWriteStream</link> (std::FILE *fp, char *buffer, size_t bufferSize)</para>
</listitem>
            <listitem><para>void <link linkend="_class_file_write_stream_1af6a6061d0accd939fa475b9b34427d85">Put</link> (char c)</para>
</listitem>
            <listitem><para>void <link linkend="_class_file_write_stream_1ad9ec108b24316a2c1c83c6ddc75d308a">PutN</link> (char c, size_t n)</para>
</listitem>
            <listitem><para>void <link linkend="_class_file_write_stream_1a939fbf183ba36464c5e0837df4329d37">Flush</link> ()</para>
</listitem>
            <listitem><para>char <link linkend="_class_file_write_stream_1ab556c7e26346ddff0e579a53c09c3a13">Peek</link> () const</para>
</listitem>
            <listitem><para>char <link linkend="_class_file_write_stream_1ac927a0ae09a85eaba58a74ceb04b40ed">Take</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_file_write_stream_1a06272de32d6ac4d10c9bd5deb79a0234">Tell</link> () const</para>
</listitem>
            <listitem><para>char * <link linkend="_class_file_write_stream_1a3805559e228703c94d1165f0653e1f64">PutBegin</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_file_write_stream_1a54b14047e4c998db0594290605f8f0dc">PutEnd</link> (char *)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_file_write_stream_1a62cc69f885b946b6bc2935f40c970cbb">FileWriteStream</link> (const <link linkend="_class_file_write_stream">FileWriteStream</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_class_file_write_stream">FileWriteStream</link> &amp; <link linkend="_class_file_write_stream_1a41ed06dc63f576bbab6dd323c6f4056c">operator=</link> (const <link linkend="_class_file_write_stream">FileWriteStream</link> &amp;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>std::FILE * <link linkend="_class_file_write_stream_1aac23a58bdaa601d276c57b5bcf5b0246">fp_</link></para>
</listitem>
            <listitem><para>char * <link linkend="_class_file_write_stream_1a6a1f0fed15eb38f22935f11af493972f">buffer_</link></para>
</listitem>
            <listitem><para>char * <link linkend="_class_file_write_stream_1a1f30d1c653f30ca6e069cefb80881c75">bufferEnd_</link></para>
</listitem>
            <listitem><para>char * <link linkend="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71">current_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Wrapper of C file stream for output using fwrite(). </para>



<para><note><title>Note</title>

<para>implements Stream concept </para>
</note>
</para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_file_write_stream_1abc16aeb69ad4176263ddfcb837fb7b49"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>Ch</secondary></indexterm>
<para><computeroutput>typedef char <link linkend="_class_file_write_stream_1abc16aeb69ad4176263ddfcb837fb7b49">FileWriteStream::Ch</link></computeroutput></para><para>

<para>Character type. Only support char. </para>
</para>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_file_write_stream_1a553ea3e7377a7f7cace2daa3cc90e1a1"/><section>
    <title>FileWriteStream()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>FileWriteStream</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>FileWriteStream</secondary></indexterm>
<para><computeroutput>FileWriteStream::FileWriteStream (std::FILE * fp, char * buffer, size_t bufferSize)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_write_stream_1a62cc69f885b946b6bc2935f40c970cbb"/><section>
    <title>FileWriteStream()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>FileWriteStream</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>FileWriteStream</secondary></indexterm>
<para><computeroutput>FileWriteStream::FileWriteStream (const <link linkend="_class_file_write_stream">FileWriteStream</link> &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_file_write_stream_1a939fbf183ba36464c5e0837df4329d37"/><section>
    <title>Flush()</title>
<indexterm><primary>Flush</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>Flush</secondary></indexterm>
<para><computeroutput>void FileWriteStream::Flush ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_write_stream_1a41ed06dc63f576bbab6dd323c6f4056c"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_file_write_stream">FileWriteStream</link> &amp; FileWriteStream::operator= (const <link linkend="_class_file_write_stream">FileWriteStream</link> &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_write_stream_1ab556c7e26346ddff0e579a53c09c3a13"/><section>
    <title>Peek()</title>
<indexterm><primary>Peek</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>Peek</secondary></indexterm>
<para><computeroutput>char FileWriteStream::Peek ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_write_stream_1af6a6061d0accd939fa475b9b34427d85"/><section>
    <title>Put()</title>
<indexterm><primary>Put</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>Put</secondary></indexterm>
<para><computeroutput>void FileWriteStream::Put (char c)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_write_stream_1a3805559e228703c94d1165f0653e1f64"/><section>
    <title>PutBegin()</title>
<indexterm><primary>PutBegin</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>PutBegin</secondary></indexterm>
<para><computeroutput>char * FileWriteStream::PutBegin ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_write_stream_1a54b14047e4c998db0594290605f8f0dc"/><section>
    <title>PutEnd()</title>
<indexterm><primary>PutEnd</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>PutEnd</secondary></indexterm>
<para><computeroutput>size_t FileWriteStream::PutEnd (char * )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_write_stream_1ad9ec108b24316a2c1c83c6ddc75d308a"/><section>
    <title>PutN()</title>
<indexterm><primary>PutN</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>PutN</secondary></indexterm>
<para><computeroutput>void FileWriteStream::PutN (char c, size_t n)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_write_stream_1ac927a0ae09a85eaba58a74ceb04b40ed"/><section>
    <title>Take()</title>
<indexterm><primary>Take</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>Take</secondary></indexterm>
<para><computeroutput>char FileWriteStream::Take ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_write_stream_1a06272de32d6ac4d10c9bd5deb79a0234"/><section>
    <title>Tell()</title>
<indexterm><primary>Tell</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>Tell</secondary></indexterm>
<para><computeroutput>size_t FileWriteStream::Tell ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_file_write_stream_1a6a1f0fed15eb38f22935f11af493972f"/><section>
    <title>buffer_</title>
<indexterm><primary>buffer_</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>buffer_</secondary></indexterm>
<para><computeroutput>char* FileWriteStream::buffer_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_write_stream_1a1f30d1c653f30ca6e069cefb80881c75"/><section>
    <title>bufferEnd_</title>
<indexterm><primary>bufferEnd_</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>bufferEnd_</secondary></indexterm>
<para><computeroutput>char* FileWriteStream::bufferEnd_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_write_stream_1a3b3ba8e5deef1b12f0662e9031f05c71"/><section>
    <title>current_</title>
<indexterm><primary>current_</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>current_</secondary></indexterm>
<para><computeroutput>char* FileWriteStream::current_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_write_stream_1aac23a58bdaa601d276c57b5bcf5b0246"/><section>
    <title>fp_</title>
<indexterm><primary>fp_</primary><secondary>FileWriteStream</secondary></indexterm>
<indexterm><primary>FileWriteStream</primary><secondary>fp_</secondary></indexterm>
<para><computeroutput>std::FILE* FileWriteStream::fp_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_filewritestream_8h">filewritestream.h</link></section>
</section>
