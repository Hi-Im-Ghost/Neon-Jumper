<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__main_menu_state_8h_source" xml:lang="en-US">
<title>MainMenuState.h</title>
<indexterm><primary>src/states/MainMenuState.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;TREES_JSON_MAINMENUSTATE_H</emphasis>
2 <emphasis role="preprocessor">#define&#32;TREES_JSON_MAINMENUSTATE_H</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&lt;SFML/Graphics/Texture.hpp&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;SFML/Graphics/Sprite.hpp&gt;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;SFML/Graphics/RectangleShape.hpp&gt;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;SFML/Window/Mouse.hpp&gt;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;SFML/Audio.hpp&gt;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&lt;map&gt;</emphasis>
10 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__game_state_8h">GameState.h</link>&quot;</emphasis>
11 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__level_one_state_8h">LevelOneState.h</link>&quot;</emphasis>
12 <emphasis role="preprocessor">#include&#32;&quot;../UI/Button.h&quot;</emphasis>
13 
17 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_main_menu_state">MainMenuState</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_game_state">GameState</link>&#32;{
18 <emphasis role="keyword">private</emphasis>:
20 &#32;&#32;&#32;&#32;sf::Texture&#32;bgTexture;
22 &#32;&#32;&#32;&#32;sf::Sprite&#32;bgSprite;
24 &#32;&#32;&#32;&#32;sf::Text&#32;gamenameText;
26 &#32;&#32;&#32;&#32;sf::Font&#32;gamenameFont;
27 
29 &#32;&#32;&#32;&#32;std::map&lt;std::string,&#32;Button*&gt;&#32;buttons;
30 
32 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;updateButtons();
33 
35 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;initBackground();
37 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;initButtons();
39 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;initText();
40 
41 <emphasis role="keyword">public</emphasis>:
43 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_main_menu_state_1a62433bdd9837d94941adf65bc3d2bdfa">MainMenuState</link>(std::stack&lt;GameState&#32;*&gt;&#32;*<link linkend="_class_game_state_1a6e9e1aa616cd1071425f2766a76957ec">states</link>);
45 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_main_menu_state_1a93a8d85415f05b01f31832b15a5f74cc">render</link>(sf::RenderTarget&#32;&amp;window)&#32;<emphasis role="keyword">override</emphasis>;
47 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_main_menu_state_1ae905a5d55070c8a3758482df94d42bb5">update</link>(<emphasis role="keywordtype">float</emphasis>&#32;deltaTime)&#32;<emphasis role="keyword">override</emphasis>;
48 };
49 
50 
51 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//TREES_JSON_MAINMENUSTATE_H</emphasis>
</programlisting></section>
