<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_enemy" xml:lang="en-US">
<title>Enemy Class Reference</title>
<indexterm><primary>Enemy</primary></indexterm>
<para>
<computeroutput>#include &lt;Enemy.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Enemy:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_enemy.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_enemy_1a79fd3d24825ade03042fa3305719495f">Enemy</link> (float x=0, float y=0)</para>

<para>Konstruktor przyjmuje początkową pozycję przeciwnika na mapie. </para>
</listitem>
            <listitem><para>void <link linkend="_class_enemy_1a9d2ac11fe3165ce6717eaf9c074c3c40">moveHorizontal</link> (float x)</para>

<para>Porusza przeciwnikiem w poziomej linii o podaną wartość </para>
</listitem>
            <listitem><para>sf::Vector2f <link linkend="_class_enemy_1a7b692953befb7b2c061a544ecf5a1e0b">getPosition</link> ()</para>

<para>Zwraca pozycję przeciwnika na mapie. </para>
</listitem>
            <listitem><para>sf::RectangleShape &amp; <link linkend="_class_enemy_1ae776703c14b3ff4588088eacae09bc1e">getHitbox</link> ()</para>

<para>Zwraca hitbox przeciwnika. Używane do sprawdzania kolizji. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_enemy_1a26ad48e75ad3703c716f4dcae0d265c3">update</link> (float deltaSeconds)=0</para>

<para>Odpowiada za odświeżanie logiki przeciwnika. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_enemy_1a98eaa5bcc7e1d44827a17c8a73f01a47">render</link> (sf::RenderTarget &amp;window)=0</para>

<para>Wyświetla przeciwnika na ekranie. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_enemy_1a50f7e2f61047f39041651ec2195e97f7">initSprite</link> (const std::string &amp;filePath, sf::IntRect frame)</para>

<para>Wczytuje teksturę z pliku, oraz tworzy sprite ze wczytanej tekstury. </para>
</listitem>
            <listitem><para>void <link linkend="_class_enemy_1a2423bf52d17cd5b8ed2d79ea8a131500">initHitbox</link> (sf::Vector2f size)</para>

<para>Nadaje odpowiednie parametry hitboxowi. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_enemy_1a4558587c9267d272aefc3db1f4c95f83">initPath</link> (float pointA, float pointB)=0</para>

<para>Nadaje odpowiednie parametry granicy ruchu. </para>
</listitem>
            <listitem><para>void <link linkend="_class_enemy_1afd8ed95df035e7b9ca8db4282873e1bd">setPosition</link> (float x, float y)</para>

<para>Ustawia pozycję przeciwnika na mapie. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>sf::Texture <link linkend="_class_enemy_1a4e519621a70ef513dbf476466fabd7ed">_texture</link></para>

<para>Przechowuje teksturę przeciwnika. </para>
</listitem>
            <listitem><para>sf::Sprite <link linkend="_class_enemy_1a5516119a584afa312ddf5d1546de102f">_sprite</link></para>

<para>Przechowuje sprite-a gracza. </para>
</listitem>
            <listitem><para>sf::RectangleShape <link linkend="_class_enemy_1aa9d6dd71e05cbb2aa89c1c0d6fd60397">_hitbox</link></para>

<para><link linkend="_class_reprezentuje">Reprezentuje</link> kształt odpowiedzialny za kolizje i ruch przeciwnika. </para>
</listitem>
            <listitem><para>sf::RectangleShape <link linkend="_class_enemy_1a8859dd7af4e01335c836348040291ae6">_path</link></para>

<para><link linkend="_class_reprezentuje">Reprezentuje</link> kształt określający granice ruchu przeciwnika. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_enemy_1a0191a27fa2cb6d20e18de4b18cab6913">movingRight</link> = false</para>

<para>Określa kierunek ruchu przeciwnika. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_enemy_1a79fd3d24825ade03042fa3305719495f"/><section>
    <title>Enemy()</title>
<indexterm><primary>Enemy</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>Enemy</secondary></indexterm>
<para><computeroutput>Enemy::Enemy (float x = <computeroutput>0</computeroutput>
, float y = <computeroutput>0</computeroutput>
)<computeroutput>[explicit]</computeroutput></computeroutput></para><para>

<para>Konstruktor przyjmuje początkową pozycję przeciwnika na mapie. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_enemy_1ae776703c14b3ff4588088eacae09bc1e"/><section>
    <title>getHitbox()</title>
<indexterm><primary>getHitbox</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>getHitbox</secondary></indexterm>
<para><computeroutput>sf::RectangleShape &amp; Enemy::getHitbox ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca hitbox przeciwnika. Używane do sprawdzania kolizji. </para>
</para>
</section>
<anchor xml:id="_class_enemy_1a7b692953befb7b2c061a544ecf5a1e0b"/><section>
    <title>getPosition()</title>
<indexterm><primary>getPosition</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>getPosition</secondary></indexterm>
<para><computeroutput>sf::Vector2f Enemy::getPosition ( )</computeroutput></para><para>

<para>Zwraca pozycję przeciwnika na mapie. </para>
</para>
</section>
<anchor xml:id="_class_enemy_1a2423bf52d17cd5b8ed2d79ea8a131500"/><section>
    <title>initHitbox()</title>
<indexterm><primary>initHitbox</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>initHitbox</secondary></indexterm>
<para><computeroutput>void Enemy::initHitbox (sf::Vector2f size)<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Nadaje odpowiednie parametry hitboxowi. </para>
</para>
</section>
<anchor xml:id="_class_enemy_1a4558587c9267d272aefc3db1f4c95f83"/><section>
    <title>initPath()</title>
<indexterm><primary>initPath</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>initPath</secondary></indexterm>
<para><computeroutput>virtual void Enemy::initPath (float pointA, float pointB)<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Nadaje odpowiednie parametry granicy ruchu. </para>
</para>
</section>
<anchor xml:id="_class_enemy_1a50f7e2f61047f39041651ec2195e97f7"/><section>
    <title>initSprite()</title>
<indexterm><primary>initSprite</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>initSprite</secondary></indexterm>
<para><computeroutput>void Enemy::initSprite (const std::string &amp; filePath, sf::IntRect frame)<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Wczytuje teksturę z pliku, oraz tworzy sprite ze wczytanej tekstury. </para>
</para>
</section>
<anchor xml:id="_class_enemy_1a9d2ac11fe3165ce6717eaf9c074c3c40"/><section>
    <title>moveHorizontal()</title>
<indexterm><primary>moveHorizontal</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>moveHorizontal</secondary></indexterm>
<para><computeroutput>void Enemy::moveHorizontal (float x)</computeroutput></para><para>

<para>Porusza przeciwnikiem w poziomej linii o podaną wartość </para>
</para>
</section>
<anchor xml:id="_class_enemy_1a98eaa5bcc7e1d44827a17c8a73f01a47"/><section>
    <title>render()</title>
<indexterm><primary>render</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>render</secondary></indexterm>
<para><computeroutput>virtual void Enemy::render (sf::RenderTarget &amp; window)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Wyświetla przeciwnika na ekranie. </para>
</para>
<para>
Implemented in <link linkend="_class_slime_1a5a7031e64b345d3ddfb27f74c8b55042">Slime</link>.</para>
</section>
<anchor xml:id="_class_enemy_1afd8ed95df035e7b9ca8db4282873e1bd"/><section>
    <title>setPosition()</title>
<indexterm><primary>setPosition</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>setPosition</secondary></indexterm>
<para><computeroutput>void Enemy::setPosition (float x, float y)<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Ustawia pozycję przeciwnika na mapie. </para>
</para>
</section>
<anchor xml:id="_class_enemy_1a26ad48e75ad3703c716f4dcae0d265c3"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>update</secondary></indexterm>
<para><computeroutput>virtual void Enemy::update (float deltaSeconds)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Odpowiada za odświeżanie logiki przeciwnika. </para>
</para>
<para>
Implemented in <link linkend="_class_slime_1ab00ca7bbfff73a12570c54c4430379e1">Slime</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_enemy_1aa9d6dd71e05cbb2aa89c1c0d6fd60397"/><section>
    <title>_hitbox</title>
<indexterm><primary>_hitbox</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>_hitbox</secondary></indexterm>
<para><computeroutput>sf::RectangleShape Enemy::_hitbox<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para><link linkend="_class_reprezentuje">Reprezentuje</link> kształt odpowiedzialny za kolizje i ruch przeciwnika. </para>
</para>
</section>
<anchor xml:id="_class_enemy_1a8859dd7af4e01335c836348040291ae6"/><section>
    <title>_path</title>
<indexterm><primary>_path</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>_path</secondary></indexterm>
<para><computeroutput>sf::RectangleShape Enemy::_path<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para><link linkend="_class_reprezentuje">Reprezentuje</link> kształt określający granice ruchu przeciwnika. </para>
</para>
</section>
<anchor xml:id="_class_enemy_1a5516119a584afa312ddf5d1546de102f"/><section>
    <title>_sprite</title>
<indexterm><primary>_sprite</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>_sprite</secondary></indexterm>
<para><computeroutput>sf::Sprite Enemy::_sprite<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Przechowuje sprite-a gracza. </para>
</para>
</section>
<anchor xml:id="_class_enemy_1a4e519621a70ef513dbf476466fabd7ed"/><section>
    <title>_texture</title>
<indexterm><primary>_texture</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>_texture</secondary></indexterm>
<para><computeroutput>sf::Texture Enemy::_texture<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Przechowuje teksturę przeciwnika. </para>
</para>
</section>
<anchor xml:id="_class_enemy_1a0191a27fa2cb6d20e18de4b18cab6913"/><section>
    <title>movingRight</title>
<indexterm><primary>movingRight</primary><secondary>Enemy</secondary></indexterm>
<indexterm><primary>Enemy</primary><secondary>movingRight</secondary></indexterm>
<para><computeroutput>bool Enemy::movingRight = false<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Określa kierunek ruchu przeciwnika. </para>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/entities/<link linkend="__enemy_8h">Enemy.h</link>src/entities/<link linkend="__enemy_8cpp">Enemy.cpp</link></section>
</section>
