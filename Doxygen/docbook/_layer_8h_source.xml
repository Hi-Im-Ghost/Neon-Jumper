<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__layer_8h_source" xml:lang="en-US">
<title>Layer.h</title>
<indexterm><primary>src/Layer.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;PLATFORMER2D_LAYER_H</emphasis>
2 <emphasis role="preprocessor">#define&#32;PLATFORMER2D_LAYER_H</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&lt;SFML/Graphics.hpp&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_document_8h">rapidjson/include/rapidjson/document.h</link>&quot;</emphasis>
6 <emphasis role="comment">/***</emphasis>
7 <emphasis role="comment">&#32;*&#32;@class&#32;Klasa&#32;służąca&#32;do&#32;pobierania&#32;informacji&#32;o&#32;warstwach&#32;obiektów&#32;na&#32;mapie</emphasis>
8 <emphasis role="comment">&#32;*/</emphasis>
9 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_layer_object">LayerObject</link>&#32;{
10 <emphasis role="keyword">public</emphasis>:
12 &#32;&#32;&#32;&#32;<link linkend="_class_layer_object_1a909896d34ad30b49af7841ff1abe7aff">LayerObject</link>(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_layer_object_1aea344f35b3e93de2dc7bd3b6c4b025a7">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_layer_object_1aaca8569e361dbfcaa3cc22123ef3799f">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_layer_object_1a525c8c6dd8dffe7b22ff80e5948cd463">width</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_layer_object_1a08c0c2d958beda7e94e3b7a639b3c6bd">height</link>);
13 
15 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_layer_object_1aea344f35b3e93de2dc7bd3b6c4b025a7">x</link>;
17 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_layer_object_1aaca8569e361dbfcaa3cc22123ef3799f">y</link>;
19 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_layer_object_1a525c8c6dd8dffe7b22ff80e5948cd463">width</link>;
21 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_layer_object_1a08c0c2d958beda7e94e3b7a639b3c6bd">height</link>;
22 };
23 <emphasis role="comment">/***</emphasis>
24 <emphasis role="comment">&#32;*&#32;@class&#32;Klasa&#32;służąca&#32;do&#32;pobierania&#32;informacji&#32;o&#32;warstwach&#32;na&#32;mapie</emphasis>
25 <emphasis role="comment">&#32;*/</emphasis>
26 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_layer">Layer</link>&#32;{
27 <emphasis role="keyword">public</emphasis>:
29 &#32;&#32;&#32;&#32;<link linkend="_class_layer_1a8f623c7c4737dc29ecc86978d243ac6f">Layer</link>(){};
31 &#32;&#32;&#32;&#32;<link linkend="_class_layer_1a8f623c7c4737dc29ecc86978d243ac6f">Layer</link>(<link linkend="_document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481">rapidjson::Value</link>&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>);
33 &#32;&#32;&#32;&#32;<link linkend="_class_layer_1a1b1ba4804451dfe6cc357194e42762ae">~Layer</link>();
34 
36 &#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;<link linkend="_class_layer_1abd8ad603c5223d39187225e1fce2ac72">getData</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;data;&#32;}
38 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_layer_1a974c0866509db4c131f8f38d281fbcd1">getHeight</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;height;&#32;}
40 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_layer_1a818d3ab6d8176de677ca5a476ec72e88">getId</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;id;&#32;}
42 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_layer_1a03296398e674b6ed9e4e893653f0434b">getImage</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;image;&#32;}
44 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_layer_1a1f981903fa03cd45b44aa68042ac809a">getName</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;name;&#32;}
46 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_layer_1ab49da526ffa214b3d1efe59531843979">getOpacity</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;opacity;&#32;}
48 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_layer_1afbdf075a35996b080e67a5bb8129adb6">getType</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;type;&#32;}
50 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_layer_1a79e172a9898791194b47d581e7d7f7ca">isVisible</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;visible;&#32;}
52 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_layer_1a39e3b346235715e15d99a0a8ac95e0a7">getWidth</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;width;&#32;}
54 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_layer_1aede3ba05e099573525f65420168664cd">getX</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;x;&#32;}
56 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_layer_1a72ca6f6610005d666795a64599f37d0d">getY</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;y;&#32;}
58 &#32;&#32;&#32;&#32;std::vector&lt;LayerObject&gt;&#32;<link linkend="_class_layer_1ab48a21d96242142516cecfca51fd37d3">getObjects</link>()&#32;{<emphasis role="keywordflow">return</emphasis>&#32;objects;}
59 
60 <emphasis role="keyword">private</emphasis>:
62 &#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;data;
64 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;height;
66 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;id;
68 &#32;&#32;&#32;&#32;std::string&#32;image;
70 &#32;&#32;&#32;&#32;std::string&#32;name;
72 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;opacity;
74 &#32;&#32;&#32;&#32;std::string&#32;type;
76 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;visible;
78 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;width;
80 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x;
82 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;y;
84 &#32;&#32;&#32;&#32;std::vector&lt;LayerObject&gt;&#32;objects;
85 };
86 
87 
88 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//PLATFORMER2D_LAYER_H</emphasis>
</programlisting></section>
