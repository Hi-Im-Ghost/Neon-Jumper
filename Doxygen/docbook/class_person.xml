<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_person" xml:lang="en-US">
<title>Person Class Reference</title>
<indexterm><primary>Person</primary></indexterm>
<para>Inheritance diagram for Person:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_person.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_person_1a5e10221f201605ad323d5518e5436bd3">Person</link> (const std::string &amp;name, unsigned age)</para>
</listitem>
            <listitem><para><link linkend="_class_person_1a3379ad4403098272609da06570c6df1a">Person</link> (const <link linkend="_class_person">Person</link> &amp;rhs)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class_person_1a700ffd693321c5fe6880262acf43d4da">~Person</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_person">Person</link> &amp; <link linkend="_class_person_1a045de2557ddbba75164088f90cb701d5">operator=</link> (const <link linkend="_class_person">Person</link> &amp;rhs)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename <link linkend="_class_writer">Writer</link> &gt; </para><para>void <link linkend="_class_person_1a2365a4a101fa1f89b6e74f7c40a21b69">Serialize</link> (<link linkend="_class_writer">Writer</link> &amp;writer) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_person_1a5e10221f201605ad323d5518e5436bd3"/><section>
    <title>Person()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Person</primary><secondary>Person</secondary></indexterm>
<indexterm><primary>Person</primary><secondary>Person</secondary></indexterm>
<para><computeroutput>Person::Person (const std::string &amp; name, unsigned age)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_person_1a3379ad4403098272609da06570c6df1a"/><section>
    <title>Person()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Person</primary><secondary>Person</secondary></indexterm>
<indexterm><primary>Person</primary><secondary>Person</secondary></indexterm>
<para><computeroutput>Person::Person (const <link linkend="_class_person">Person</link> &amp; rhs)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_person_1a700ffd693321c5fe6880262acf43d4da"/><section>
    <title>~Person()</title>
<indexterm><primary>~Person</primary><secondary>Person</secondary></indexterm>
<indexterm><primary>Person</primary><secondary>~Person</secondary></indexterm>
<para><computeroutput>Person::~Person ( )<computeroutput>[virtual]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_person_1a045de2557ddbba75164088f90cb701d5"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>Person</secondary></indexterm>
<indexterm><primary>Person</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_person">Person</link> &amp; Person::operator= (const <link linkend="_class_person">Person</link> &amp; rhs)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_person_1a2365a4a101fa1f89b6e74f7c40a21b69"/><section>
    <title>Serialize()</title>
<indexterm><primary>Serialize</primary><secondary>Person</secondary></indexterm>
<indexterm><primary>Person</primary><secondary>Serialize</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_class_writer">Writer</link> &gt; </computeroutput><para><computeroutput>void Person::Serialize (<link linkend="_class_writer">Writer</link> &amp; writer) const<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/example/serialize/<link linkend="_serialize_8cpp">serialize.cpp</link></section>
</section>
