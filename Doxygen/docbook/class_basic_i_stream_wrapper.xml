<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_basic_i_stream_wrapper" xml:lang="en-US">
<title>BasicIStreamWrapper&lt; StreamType &gt; Class Template Reference</title>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary></indexterm>
<para>

<para>Wrapper of <computeroutput>std::basic_istream</computeroutput> into RapidJSON&apos;s Stream concept. </para>
 
</para>
<para>
<computeroutput>#include &lt;istreamwrapper.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef StreamType::char_type <link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_basic_i_stream_wrapper_1a3e9a2dd2b6b28243f8f2a911f67cdf56">BasicIStreamWrapper</link> (StreamType &amp;stream)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_class_basic_i_stream_wrapper_1a7a87c6702f1e98256de416ee101a460f">BasicIStreamWrapper</link> (StreamType &amp;stream, char *buffer, size_t bufferSize)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> <link linkend="_class_basic_i_stream_wrapper_1a0ad1488235b4786dd4f7a16e679dec88">Peek</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> <link linkend="_class_basic_i_stream_wrapper_1afb71f0329d0abbbc9b22ebeb5c1464d1">Take</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_basic_i_stream_wrapper_1ac212848265f937add49bd973de794e25">Tell</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_basic_i_stream_wrapper_1afa71cb2f5b7668837d0a81e3bce55e69">Put</link> (<link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_class_basic_i_stream_wrapper_1a37d5e4cd8fdf3c83dad50737e95886a9">Flush</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> * <link linkend="_class_basic_i_stream_wrapper_1a10999721c014eea987d28a1ef9762351">PutBegin</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_basic_i_stream_wrapper_1ab2ead53490207a1cb0bdd674a03957f3">PutEnd</link> (<link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> *)</para>
</listitem>
            <listitem><para>const <link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> * <link linkend="_class_basic_i_stream_wrapper_1a461ed82951afefd68ce9ba446031aa60">Peek4</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_basic_i_stream_wrapper_1a1c72528bd8783cbf79928efbddac0a30">BasicIStreamWrapper</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_basic_i_stream_wrapper_1a15a415adfc281dc08fe37513f330dc0c">BasicIStreamWrapper</link> (const <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link> &amp; <link linkend="_class_basic_i_stream_wrapper_1a7ffdbf9a1beb1e9f9f78ce9ea3f8bf9c">operator=</link> (const <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link> &amp;)</para>
</listitem>
            <listitem><para>void <link linkend="_class_basic_i_stream_wrapper_1a14f7e115ff06dbf8dda561d156641633">Read</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>StreamType &amp; <link linkend="_class_basic_i_stream_wrapper_1a08cb5cad6653f35761ef1cdcaa407aa9">stream_</link></para>
</listitem>
            <listitem><para><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> <link linkend="_class_basic_i_stream_wrapper_1ae85be0f5472085497a21a7e135aba09d">peekBuffer_</link> [4]</para>
</listitem>
            <listitem><para><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> * <link linkend="_class_basic_i_stream_wrapper_1afcec6ce42add3ff03bbc8f48b1684234">buffer_</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_class_basic_i_stream_wrapper_1a592532cbc0b32f0a7b43800997a898d2">bufferSize_</link></para>
</listitem>
            <listitem><para><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> * <link linkend="_class_basic_i_stream_wrapper_1a2e3dcf3716b8525b314b95e4dd67a820">bufferLast_</link></para>
</listitem>
            <listitem><para><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> * <link linkend="_class_basic_i_stream_wrapper_1a7c7a177cfffd2793855d160cc0d427c0">current_</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_class_basic_i_stream_wrapper_1aa603c5540319d160fea25702620213ac">readCount_</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_class_basic_i_stream_wrapper_1abdc3fc20e4c6e50a8bca468b457b9b79">count_</link></para>

<para>Number of characters read. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_basic_i_stream_wrapper_1afc35bf604fac076468d3801f85604210">eof_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename StreamType&gt;
class BasicIStreamWrapper&lt; StreamType &gt;</title></simplesect>

<para>Wrapper of <computeroutput>std::basic_istream</computeroutput> into RapidJSON&apos;s Stream concept. </para>



<para>The classes can be wrapped including but not limited to:</para>

<para><itemizedlist>
<listitem>
<para><computeroutput>std::istringstream</computeroutput> </para>
</listitem><listitem>
<para><computeroutput>std::stringstream</computeroutput> </para>
</listitem><listitem>
<para><computeroutput>std::wistringstream</computeroutput> </para>
</listitem><listitem>
<para><computeroutput>std::wstringstream</computeroutput> </para>
</listitem><listitem>
<para><computeroutput>std::ifstream</computeroutput> </para>
</listitem><listitem>
<para><computeroutput>std::fstream</computeroutput> </para>
</listitem><listitem>
<para><computeroutput>std::wifstream</computeroutput> </para>
</listitem><listitem>
<para><computeroutput>std::wfstream</computeroutput> </para>
</listitem></itemizedlist>
</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>StreamType</entry><entry>
<para>Class derived from <computeroutput>std::basic_istream</computeroutput>. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput>typedef StreamType::char_type <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::Ch</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_basic_i_stream_wrapper_1a3e9a2dd2b6b28243f8f2a911f67cdf56"/><section>
    <title>BasicIStreamWrapper()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>BasicIStreamWrapper</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>BasicIStreamWrapper</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput><link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;<link linkend="_class_basic_i_stream_wrapper">::BasicIStreamWrapper</link> (StreamType &amp; stream)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>stream</entry><entry>
<para>stream opened for read. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_basic_i_stream_wrapper_1a7a87c6702f1e98256de416ee101a460f"/><section>
    <title>BasicIStreamWrapper()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>BasicIStreamWrapper</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>BasicIStreamWrapper</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput><link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;<link linkend="_class_basic_i_stream_wrapper">::BasicIStreamWrapper</link> (StreamType &amp; stream, char * buffer, size_t bufferSize)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>stream</entry><entry>
<para>stream opened for read. </para>
</entry>
                            </row>
                            <row>
<entry>buffer</entry><entry>
<para>user-supplied buffer. </para>
</entry>
                            </row>
                            <row>
<entry>bufferSize</entry><entry>
<para>size of buffer in bytes. Must &gt;=4 bytes. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_basic_i_stream_wrapper_1a1c72528bd8783cbf79928efbddac0a30"/><section>
    <title>BasicIStreamWrapper()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>BasicIStreamWrapper</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>BasicIStreamWrapper</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput><link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;<link linkend="_class_basic_i_stream_wrapper">::BasicIStreamWrapper</link> ( )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1a15a415adfc281dc08fe37513f330dc0c"/><section>
    <title>BasicIStreamWrapper()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>BasicIStreamWrapper</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>BasicIStreamWrapper</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput><link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;<link linkend="_class_basic_i_stream_wrapper">::BasicIStreamWrapper</link> (const <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_basic_i_stream_wrapper_1a37d5e4cd8fdf3c83dad50737e95886a9"/><section>
    <title>Flush()</title>
<indexterm><primary>Flush</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>Flush</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput>void <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::Flush ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1a7ffdbf9a1beb1e9f9f78ce9ea3f8bf9c"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput><link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link> &amp; <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::operator= (const <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1a0ad1488235b4786dd4f7a16e679dec88"/><section>
    <title>Peek()</title>
<indexterm><primary>Peek</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>Peek</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::Peek ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1a461ed82951afefd68ce9ba446031aa60"/><section>
    <title>Peek4()</title>
<indexterm><primary>Peek4</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>Peek4</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput>const <link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> * <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::Peek4 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1afa71cb2f5b7668837d0a81e3bce55e69"/><section>
    <title>Put()</title>
<indexterm><primary>Put</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>Put</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput>void <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::Put (<link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1a10999721c014eea987d28a1ef9762351"/><section>
    <title>PutBegin()</title>
<indexterm><primary>PutBegin</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>PutBegin</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> * <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::PutBegin ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1ab2ead53490207a1cb0bdd674a03957f3"/><section>
    <title>PutEnd()</title>
<indexterm><primary>PutEnd</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>PutEnd</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::PutEnd (<link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> * )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1a14f7e115ff06dbf8dda561d156641633"/><section>
    <title>Read()</title>
<indexterm><primary>Read</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>Read</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput>void <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::Read ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1afb71f0329d0abbbc9b22ebeb5c1464d1"/><section>
    <title>Take()</title>
<indexterm><primary>Take</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>Take</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::Take ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1ac212848265f937add49bd973de794e25"/><section>
    <title>Tell()</title>
<indexterm><primary>Tell</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>Tell</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::Tell ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_basic_i_stream_wrapper_1afcec6ce42add3ff03bbc8f48b1684234"/><section>
    <title>buffer_</title>
<indexterm><primary>buffer_</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>buffer_</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> * <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::buffer_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1a2e3dcf3716b8525b314b95e4dd67a820"/><section>
    <title>bufferLast_</title>
<indexterm><primary>bufferLast_</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>bufferLast_</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link>* <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::bufferLast_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1a592532cbc0b32f0a7b43800997a898d2"/><section>
    <title>bufferSize_</title>
<indexterm><primary>bufferSize_</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>bufferSize_</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::bufferSize_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1abdc3fc20e4c6e50a8bca468b457b9b79"/><section>
    <title>count_</title>
<indexterm><primary>count_</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>count_</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::count_<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Number of characters read. </para>
</para>
</section>
<anchor xml:id="_class_basic_i_stream_wrapper_1a7c7a177cfffd2793855d160cc0d427c0"/><section>
    <title>current_</title>
<indexterm><primary>current_</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>current_</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link>* <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::current_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1afc35bf604fac076468d3801f85604210"/><section>
    <title>eof_</title>
<indexterm><primary>eof_</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>eof_</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::eof_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1ae85be0f5472085497a21a7e135aba09d"/><section>
    <title>peekBuffer_</title>
<indexterm><primary>peekBuffer_</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>peekBuffer_</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput><link linkend="_class_basic_i_stream_wrapper_1a88e4288ecdaa0d31ddf4e5917b9aa8d7">Ch</link> <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::peekBuffer_[4]<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1aa603c5540319d160fea25702620213ac"/><section>
    <title>readCount_</title>
<indexterm><primary>readCount_</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>readCount_</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::readCount_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_basic_i_stream_wrapper_1a08cb5cad6653f35761ef1cdcaa407aa9"/><section>
    <title>stream_</title>
<indexterm><primary>stream_</primary><secondary>BasicIStreamWrapper&lt; StreamType &gt;</secondary></indexterm>
<indexterm><primary>BasicIStreamWrapper&lt; StreamType &gt;</primary><secondary>stream_</secondary></indexterm>
<computeroutput>template&lt;typename StreamType &gt; </computeroutput><para><computeroutput>StreamType&amp; <link linkend="_class_basic_i_stream_wrapper">BasicIStreamWrapper</link>&lt; StreamType &gt;::stream_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_istreamwrapper_8h">istreamwrapper.h</link></section>
</section>
