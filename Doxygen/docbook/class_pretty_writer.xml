<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_pretty_writer" xml:lang="en-US">
<title>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt; Class Template Reference</title>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary></indexterm>
<para>

<para><link linkend="_class_writer">Writer</link> with indentation and spacing. </para>
 
</para>
<para>
<computeroutput>#include &lt;prettywriter.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_pretty_writer.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_class_writer">Writer</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt; <link linkend="_class_pretty_writer_1a6eecc5c896dcdaffca739dcd39d13a17">Base</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_writer_1ab08bff5fd2daec65f4a78779ca3d2139">Base::Ch</link> <link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_pretty_writer_1a928ac2a5235b8877048ebdd5f35a556f">PrettyWriter</link> (OutputStream &amp;os, StackAllocator *allocator=0, size_t levelDepth=<link linkend="_class_writer_1a9cb4caeb9d8971f305edff1d70e67acb">Base::kDefaultLevelDepth</link>)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_class_pretty_writer_1a4a9077e0300c6b0e1c830a58c1e738d2">PrettyWriter</link> (StackAllocator *allocator=0, size_t levelDepth=<link linkend="_class_writer_1a9cb4caeb9d8971f305edff1d70e67acb">Base::kDefaultLevelDepth</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_pretty_writer">PrettyWriter</link> &amp; <link linkend="_class_pretty_writer_1abbdc83ce02cf4a811a7355aa3879b45a">SetIndent</link> (<link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> indentChar, unsigned indentCharCount)</para>

<para>Set custom indentation. </para>
</listitem>
            <listitem><para><link linkend="_class_pretty_writer">PrettyWriter</link> &amp; <link linkend="_class_pretty_writer_1aade3381a128071f1da060f5f3075de10">SetFormatOptions</link> (<link linkend="_prettywriter_8h_1a150fd6ef2dbf4025c33ece85451982d5">PrettyFormatOptions</link> options)</para>

<para>Set pretty writer formatting options. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect><title>Implementation of Handler</title>

<para><formalpara><title>See also</title>

<para>Handler </para>
</formalpara>
</para>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_pretty_writer_1aa144f2d0f0c3c69248cdbe957349528c">Null</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1a6e765ee7ada5ed40f317c78a98f6f90b">Bool</link> (bool b)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1aa1815263e61cb7af3b6dfba480a0f481">Int</link> (int i)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1a8c82302877a5588eae77eb7d042c49ef">Uint</link> (unsigned u)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1ad42b797429f4ee19efdce610f5aff976">Int64</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> i64)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1aba75ac1f13c2629b2a55ffbf3d8a116c">Uint64</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> u64)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1ad9d592e86b985da666665926e87db415">Double</link> (double d)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1a3941bc21d6a261ca8a86eff330db30ef">RawNumber</link> (const <link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy=false)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1ae544ccfe35dd7e80ed694873062409f6">String</link> (const <link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy=false)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1a27bdda225dc152b8974e44c1df7525b7">StartObject</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1a20ecbe1d31a871e4da4a3899b40ad3cd">Key</link> (const <link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy=false)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1a6bfdfa4193193ef763cce5c592c4d20c">EndObject</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> memberCount=0)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1aec7fdf4798a3af5e31c147633f4798ed">StartArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1a1e9d97fc950d349f55abd864c787ff37">EndArray</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> memberCount=0)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Convenience extensions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> <link linkend="_class_pretty_writer_1aaa3f6380daa8466a5101ed18fc33bf04">indentChar_</link></para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_pretty_writer_1a7d00b9716ef3cd7e34ae1b744c968f13">indentCharCount_</link></para>
</listitem>
            <listitem><para><link linkend="_prettywriter_8h_1a150fd6ef2dbf4025c33ece85451982d5">PrettyFormatOptions</link> <link linkend="_class_pretty_writer_1a15505ed4ea0fa85d339b3a987f1a3aaf">formatOptions_</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1a7e85689355a827d273f272c26b447225">String</link> (const <link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> *str)</para>

<para>Simpler but slower overload. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1a4b2a2a6eef02c12d7a3fd77966bd4499">Key</link> (const <link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> *str)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_pretty_writer_1a440890a72408a150ef46edda6becdc94">RawValue</link> (const <link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> *json, size_t length, <link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link> type)</para>

<para>Write a raw JSON value. </para>
</listitem>
            <listitem><para>void <link linkend="_class_pretty_writer_1a09709ffa3b545e007631ecfd35029843">PrettyPrefix</link> (<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link> type)</para>
</listitem>
            <listitem><para>void <link linkend="_class_pretty_writer_1a6f244ecc94fd5b134d424033b1574b7e">WriteIndent</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename OutputStream, typename SourceEncoding = UTF8&lt;&gt;, typename TargetEncoding = UTF8&lt;&gt;, typename StackAllocator = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt;
class PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</title></simplesect>

<para><link linkend="_class_writer">Writer</link> with indentation and spacing. </para>



<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>OutputStream</entry><entry>
<para>Type of output os. </para>
</entry>
                            </row>
                            <row>
<entry>SourceEncoding</entry><entry>
<para>Encoding of source string. </para>
</entry>
                            </row>
                            <row>
<entry>TargetEncoding</entry><entry>
<para>Encoding of output stream. </para>
</entry>
                            </row>
                            <row>
<entry>StackAllocator</entry><entry>
<para>Type of allocator for allocating memory of stack. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_pretty_writer_1a6eecc5c896dcdaffca739dcd39d13a17"/><section>
    <title>Base</title>
<indexterm><primary>Base</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>Base</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_writer">Writer</link>&lt;OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags&gt; <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Base</computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_writer_1ab08bff5fd2daec65f4a78779ca3d2139">Base::Ch</link> <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Ch</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_pretty_writer_1a928ac2a5235b8877048ebdd5f35a556f"/><section>
    <title>PrettyWriter()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>PrettyWriter</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>PrettyWriter</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput><link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;<link linkend="_class_pretty_writer">::PrettyWriter</link> (OutputStream &amp; os, StackAllocator * allocator = <computeroutput>0</computeroutput>
, size_t levelDepth = <computeroutput><link linkend="_class_writer_1a9cb4caeb9d8971f305edff1d70e67acb">Base::kDefaultLevelDepth</link></computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>os</entry><entry>
<para>Output stream. </para>
</entry>
                            </row>
                            <row>
<entry>allocator</entry><entry>
<para>User supplied allocator. If it is null, it will create a private one. </para>
</entry>
                            </row>
                            <row>
<entry>levelDepth</entry><entry>
<para>Initial capacity of stack. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_pretty_writer_1a4a9077e0300c6b0e1c830a58c1e738d2"/><section>
    <title>PrettyWriter()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>PrettyWriter</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>PrettyWriter</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput><link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;<link linkend="_class_pretty_writer">::PrettyWriter</link> (StackAllocator * allocator = <computeroutput>0</computeroutput>
, size_t levelDepth = <computeroutput><link linkend="_class_writer_1a9cb4caeb9d8971f305edff1d70e67acb">Base::kDefaultLevelDepth</link></computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_pretty_writer_1a6e765ee7ada5ed40f317c78a98f6f90b"/><section>
    <title>Bool()</title>
<indexterm><primary>Bool</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>Bool</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Bool (bool b)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1ad9d592e86b985da666665926e87db415"/><section>
    <title>Double()</title>
<indexterm><primary>Double</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>Double</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Double (double d)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1a1e9d97fc950d349f55abd864c787ff37"/><section>
    <title>EndArray()</title>
<indexterm><primary>EndArray</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>EndArray</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::EndArray (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> memberCount = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1a6bfdfa4193193ef763cce5c592c4d20c"/><section>
    <title>EndObject()</title>
<indexterm><primary>EndObject</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>EndObject</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::EndObject (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> memberCount = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1aa1815263e61cb7af3b6dfba480a0f481"/><section>
    <title>Int()</title>
<indexterm><primary>Int</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>Int</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Int (int i)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1ad42b797429f4ee19efdce610f5aff976"/><section>
    <title>Int64()</title>
<indexterm><primary>Int64</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>Int64</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Int64 (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> i64)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1a4b2a2a6eef02c12d7a3fd77966bd4499"/><section>
    <title>Key()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Key</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>Key</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Key (const <link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> * str)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1a20ecbe1d31a871e4da4a3899b40ad3cd"/><section>
    <title>Key()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Key</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>Key</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Key (const <link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy = <computeroutput>false</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1aa144f2d0f0c3c69248cdbe957349528c"/><section>
    <title>Null()</title>
<indexterm><primary>Null</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>Null</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Null ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1a09709ffa3b545e007631ecfd35029843"/><section>
    <title>PrettyPrefix()</title>
<indexterm><primary>PrettyPrefix</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>PrettyPrefix</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>void <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::PrettyPrefix (<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link> type)<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1a3941bc21d6a261ca8a86eff330db30ef"/><section>
    <title>RawNumber()</title>
<indexterm><primary>RawNumber</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>RawNumber</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::RawNumber (const <link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy = <computeroutput>false</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1a440890a72408a150ef46edda6becdc94"/><section>
    <title>RawValue()</title>
<indexterm><primary>RawValue</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>RawValue</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::RawValue (const <link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> * json, size_t length, <link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link> type)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Write a raw JSON value. </para>
</para>

<para>For user to write a stringified JSON as a value.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>json</entry><entry>
<para>A well-formed JSON value. It should not contain null character within [0, length - 1] range. </para>
</entry>
                            </row>
                            <row>
<entry>length</entry><entry>
<para>Length of the json. </para>
</entry>
                            </row>
                            <row>
<entry>type</entry><entry>
<para>Type of the root of json. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>When using <link linkend="_class_pretty_writer_1a440890a72408a150ef46edda6becdc94">PrettyWriter::RawValue()</link>, the result json may not be indented correctly. </para>
</note>
</para>
</section>
<anchor xml:id="_class_pretty_writer_1aade3381a128071f1da060f5f3075de10"/><section>
    <title>SetFormatOptions()</title>
<indexterm><primary>SetFormatOptions</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>SetFormatOptions</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput><link linkend="_class_pretty_writer">PrettyWriter</link> &amp; <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::SetFormatOptions (<link linkend="_prettywriter_8h_1a150fd6ef2dbf4025c33ece85451982d5">PrettyFormatOptions</link> options)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Set pretty writer formatting options. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>options</entry><entry>
<para>Formatting options. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_pretty_writer_1abbdc83ce02cf4a811a7355aa3879b45a"/><section>
    <title>SetIndent()</title>
<indexterm><primary>SetIndent</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>SetIndent</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput><link linkend="_class_pretty_writer">PrettyWriter</link> &amp; <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::SetIndent (<link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> indentChar, unsigned indentCharCount)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Set custom indentation. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>indentChar</entry><entry>
<para>Character for indentation. Must be whitespace character (&apos; &apos;, &apos;\t&apos;, &apos;\n&apos;, &apos;\r&apos;). </para>
</entry>
                            </row>
                            <row>
<entry>indentCharCount</entry><entry>
<para>Number of indent characters for each indentation level. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>The default indentation is 4 spaces. </para>
</note>
</para>
</section>
<anchor xml:id="_class_pretty_writer_1aec7fdf4798a3af5e31c147633f4798ed"/><section>
    <title>StartArray()</title>
<indexterm><primary>StartArray</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>StartArray</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::StartArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1a27bdda225dc152b8974e44c1df7525b7"/><section>
    <title>StartObject()</title>
<indexterm><primary>StartObject</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>StartObject</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::StartObject ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1a7e85689355a827d273f272c26b447225"/><section>
    <title>String()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>String</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>String</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::String (const <link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> * str)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Simpler but slower overload. </para>
</para>
</section>
<anchor xml:id="_class_pretty_writer_1ae544ccfe35dd7e80ed694873062409f6"/><section>
    <title>String()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>String</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>String</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::String (const <link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy = <computeroutput>false</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1a8c82302877a5588eae77eb7d042c49ef"/><section>
    <title>Uint()</title>
<indexterm><primary>Uint</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>Uint</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Uint (unsigned u)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1aba75ac1f13c2629b2a55ffbf3d8a116c"/><section>
    <title>Uint64()</title>
<indexterm><primary>Uint64</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>Uint64</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Uint64 (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> u64)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1a6f244ecc94fd5b134d424033b1574b7e"/><section>
    <title>WriteIndent()</title>
<indexterm><primary>WriteIndent</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>WriteIndent</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>void <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::WriteIndent ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_pretty_writer_1a15505ed4ea0fa85d339b3a987f1a3aaf"/><section>
    <title>formatOptions_</title>
<indexterm><primary>formatOptions_</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>formatOptions_</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput><link linkend="_prettywriter_8h_1a150fd6ef2dbf4025c33ece85451982d5">PrettyFormatOptions</link> <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::formatOptions_<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1aaa3f6380daa8466a5101ed18fc33bf04"/><section>
    <title>indentChar_</title>
<indexterm><primary>indentChar_</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>indentChar_</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput><link linkend="_class_pretty_writer_1ae35c89bda4c5d59d3ff6efcf2fea45a3">Ch</link> <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::indentChar_<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_pretty_writer_1a7d00b9716ef3cd7e34ae1b744c968f13"/><section>
    <title>indentCharCount_</title>
<indexterm><primary>indentCharCount_</primary><secondary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</secondary></indexterm>
<indexterm><primary>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</primary><secondary>indentCharCount_</secondary></indexterm>
<computeroutput>template&lt;typename OutputStream , typename SourceEncoding  = UTF8&lt;&gt;, typename TargetEncoding  = UTF8&lt;&gt;, typename StackAllocator  = CrtAllocator, unsigned writeFlags = kWriteDefaultFlags&gt; </computeroutput><para><computeroutput>unsigned <link linkend="_class_pretty_writer">PrettyWriter</link>&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::indentCharCount_<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
src/rapidjson/include/rapidjson/<link linkend="_fwd_8h">fwd.h</link>src/rapidjson/include/rapidjson/<link linkend="_prettywriter_8h">prettywriter.h</link></section>
</section>
