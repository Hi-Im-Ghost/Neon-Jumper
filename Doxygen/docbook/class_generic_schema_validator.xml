<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_generic_schema_validator" xml:lang="en-US">
<title>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt; Class Template Reference</title>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary></indexterm>
<para>

<para>JSON <link linkend="_class_schema">Schema</link> Validator. </para>
 
</para>
<para>
<computeroutput>#include &lt;schema.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_generic_schema_validator.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef SchemaDocumentType::SchemaType <link linkend="_class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0">SchemaType</link></para>
</listitem>
            <listitem><para>typedef SchemaDocumentType::PointerType <link linkend="_class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b">PointerType</link></para>
</listitem>
            <listitem><para>typedef SchemaType::EncodingType <link linkend="_class_generic_schema_validator_1acf1c5361bb96da87d23167d8720b1ea5">EncodingType</link></para>
</listitem>
            <listitem><para>typedef SchemaType::SValue <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link></para>
</listitem>
            <listitem><para>typedef EncodingType::Ch <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_struct_generic_string_ref">GenericStringRef</link>&lt; <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> &gt; <link linkend="_class_generic_schema_validator_1a604160fcd6af7582e0deccc205309dcf">StringRefType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_value">GenericValue</link>&lt; <link linkend="_class_generic_schema_validator_1acf1c5361bb96da87d23167d8720b1ea5">EncodingType</link>, StateAllocator &gt; <link linkend="_class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68">ValueType</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_schema_validator_1a202ee6fdbe5ae9eab3e77a81ecdfeb6d">GenericSchemaValidator</link> (const SchemaDocumentType &amp;schemaDocument, StateAllocator *allocator=0, size_t schemaStackCapacity=kDefaultSchemaStackCapacity, size_t documentStackCapacity=kDefaultDocumentStackCapacity)</para>

<para>Constructor without output handler. </para>
</listitem>
            <listitem><para><link linkend="_class_generic_schema_validator_1ac2027be8ca55b01cd6f38b45f4e233b4">GenericSchemaValidator</link> (const SchemaDocumentType &amp;schemaDocument, OutputHandler &amp;outputHandler, StateAllocator *allocator=0, size_t schemaStackCapacity=kDefaultSchemaStackCapacity, size_t documentStackCapacity=kDefaultDocumentStackCapacity)</para>

<para>Constructor with output handler. </para>
</listitem>
            <listitem><para><link linkend="_class_generic_schema_validator_1a3eab83d483a50efb0c0390adf3291963">~GenericSchemaValidator</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a49efbbe098cb77728be3d48cafed17e4">Reset</link> ()</para>

<para>Reset the internal states. </para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a8374dd359e572f653c49293545ad3ef4">ResetError</link> ()</para>

<para>Reset the error state. </para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1af4840dac2410bcfe73912c30eb95b875">SetValidateFlags</link> (unsigned flags)</para>

<para>Implementation of ISchemaValidator. </para>
</listitem>
            <listitem><para>virtual unsigned <link linkend="_class_generic_schema_validator_1a318bf1cf98d2f18074edd336b1bc684d">GetValidateFlags</link> () const</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_generic_schema_validator_1a8ebda4da3d8b1fc41e57f15dd62e8f19">IsValid</link> () const</para>

<para>Checks whether the current state is valid. </para>
</listitem>
            <listitem><para><link linkend="_class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68">ValueType</link> &amp; <link linkend="_class_generic_schema_validator_1a21c0ad159e91398d222bab4d91d4c5dd">GetError</link> ()</para>

<para>Gets the error object. </para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68">ValueType</link> &amp; <link linkend="_class_generic_schema_validator_1ad7b8d71bd651c3da614a877816de7573">GetError</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b">PointerType</link> <link linkend="_class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8">GetInvalidSchemaPointer</link> () const</para>

<para>Gets the JSON pointer pointed to the invalid schema. </para>
</listitem>
            <listitem><para>const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> * <link linkend="_class_generic_schema_validator_1ab5980d72c786b81ab907526fdf4172f3">GetInvalidSchemaKeyword</link> () const</para>

<para>Gets the keyword of invalid schema. </para>
</listitem>
            <listitem><para><link linkend="_group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a">ValidateErrorCode</link> <link linkend="_class_generic_schema_validator_1aeba2093eb93f77b239e9b4c27219c982">GetInvalidSchemaCode</link> () const</para>

<para>Gets the error code of invalid schema. </para>
</listitem>
            <listitem><para><link linkend="_class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b">PointerType</link> <link linkend="_class_generic_schema_validator_1ac10a88c4dc138bbdbe2afd041658a3b0">GetInvalidDocumentPointer</link> () const</para>

<para>Gets the JSON pointer pointed to the invalid value. </para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1ab2f08413a2b23d73d4bbd09c8ca1f547">NotMultipleOf</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp;expected)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a5c59d25dc44d85404cc587ebfa7455cd">NotMultipleOf</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp;expected)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1ae5fc8a4545fed53955ec6c57b79ca949">NotMultipleOf</link> (double actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp;expected)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a4c9c7db8a3488f84a5a86681ad1d8194">AboveMaximum</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp;expected, bool exclusive)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a9262c73768789eb7cf8dc271cfec7f96">AboveMaximum</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp;expected, bool exclusive)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1abcf1f5b46bdae8ca20a80858d603483d">AboveMaximum</link> (double actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp;expected, bool exclusive)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a15a12306bc14f16357b4f2edea8396b7">BelowMinimum</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp;expected, bool exclusive)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1ad3db1f3852a1b2e6fada43fbcad401ea">BelowMinimum</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp;expected, bool exclusive)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1afdd4a9787239a6fc3eeb56d34fd531f4">BelowMinimum</link> (double actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp;expected, bool exclusive)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a227dce44e0684a73accbfb062200eb26">TooLong</link> (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expected)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a7711071f95ead18c0dd99f69c09a4c11">TooShort</link> (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expected)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1af1be05889e634936c223f24c6e5f6ec5">DoesNotMatch</link> (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a2d47a88a3d9fb82466b5bda480b6e70f">DisallowedItem</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1af39007d9bf43126dab231961a1c5064f">TooFewItems</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a78e85eeae0e2bdef827815672a7fbbc9">TooManyItems</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a82aa865146069e3ba5010d25346a71f2">DuplicateItems</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index1, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index2)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1ad7ca0a327420c110e9ee6e70b2cdbc87">TooManyProperties</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1aaebaf28aa289826a3c39dc953b0ca466">TooFewProperties</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a41c4d67e349561f13948a5045bfc50c9">StartMissingProperties</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a8d355eeb25364e414d9a2f8121aa0eaa">AddMissingProperty</link> (const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp;name)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1a557b7aa531ff94a6355fed8f8575fed5">EndMissingProperties</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a29fa7c6f787450b2df1f9d440436aeab">PropertyViolations</link> (ISchemaValidator **subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a44f06b99edfb650c6088f17e8af5b5a8">DisallowedProperty</link> (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> *name, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a767f115cc90e0f2f5bdd1c9fbdbf75df">StartDependencyErrors</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1ac4faa073bc4671f42e98a59a9e9cb01a">StartMissingDependentProperties</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a85f2be483f0ddfc402a97665aff6eca9">AddMissingDependentProperty</link> (const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp;targetName)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1afdcd2ff7b5f7e24f4f3d6976fa5b803e">EndMissingDependentProperties</link> (const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp;sourceName)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a27542a75617cdc28f6846b594fe01229">AddDependencySchemaError</link> (const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp;sourceName, ISchemaValidator *subvalidator)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1ab6d1c964faaa0f86f9da51a0f66dc1e4">EndDependencyErrors</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1afc9082d5e9733762e64df3faa88e0160">DisallowedValue</link> (const <link linkend="_group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a">ValidateErrorCode</link> code=<link linkend="_group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3c12e9cbc8a479b77776ceccbda4c289">kValidateErrorEnum</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a9904719420fd91200f80772e92fe225f">StartDisallowedType</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a68e5308e5ca9726ee66139a212b63bcc">AddExpectedType</link> (const typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">SchemaType::ValueType</link> &amp;expectedType)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1ae0f99bfee3e2021c05322fd5d6de2f6e">EndDisallowedType</link> (const typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">SchemaType::ValueType</link> &amp;actualType)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1a4275b02cdd86bfe11b42afe94817eae5">NotAllOf</link> (ISchemaValidator **subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1aae9c45082721c650b91f8418cecc7293">NoneOf</link> (ISchemaValidator **subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1accdba5555deae396fa728d8e20ce7ed5">NotOneOf</link> (ISchemaValidator **subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count, bool matched=false)</para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_schema_validator_1acc65a322086c792d6534e306c7a091cf">Disallowed</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1a7137af73e934f50c66cbb8a9aa802ea6">Null</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1aa25fa7456f2f308a105e400f01a4afde">Bool</link> (bool b)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1ad823c29990225661a4df69d34647b659">Int</link> (int i)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1aa688665c5274f93543c84a4b6cabe8da">Uint</link> (unsigned u)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1ac5a9e416e18129a7b787f251019a828f">Int64</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> i)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1abfc56c58cf0b65318e376fc5f2879292">Uint64</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> u)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1aed0532dbda3ac6f3ca7196af06066b86">Double</link> (double d)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1ae4f024145421d2c1dde08a9de528722a">RawNumber</link> (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1a33cf3f83307a8fea38c3238ef75c3d58">String</link> (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1a59972d612c3d37aae9a30222e428d216">StartObject</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1a6d08b458216ec4a09eed9d94800d05c1">Key</link> (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, bool copy)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1aa89e14f0f731f6acdec22a0f7e003037">EndObject</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> memberCount)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1aba13751f802531ed8cbd850778ea993c">StartArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_schema_validator_1a67b501f0f65d40e0086ca8216882b34f">EndArray</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> elementCount)</para>
</listitem>
            <listitem><para>virtual ISchemaValidator * <link linkend="_class_generic_schema_validator_1ad4afd8cdb09a6f47a23406894f77ee8a">CreateSchemaValidator</link> (const <link linkend="_class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0">SchemaType</link> &amp;root, const bool inheritContinueOnErrors)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_generic_schema_validator_1ae24fa298e328f1fd7dda2ef6267156d2">DestroySchemaValidator</link> (ISchemaValidator *validator)</para>
</listitem>
            <listitem><para>virtual void * <link linkend="_class_generic_schema_validator_1a48ecc252813e60a0efdb4eb44b193bd5">CreateHasher</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> <link linkend="_class_generic_schema_validator_1ac01c45982a1f512e1ca06fe5544b0c0f">GetHashCode</link> (void *hasher)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_generic_schema_validator_1a007eef58be575dc562543d069ddd2710">DestroryHasher</link> (void *hasher)</para>
</listitem>
            <listitem><para>virtual void * <link linkend="_class_generic_schema_validator_1a9f983043d6bd1a12d9e2dac756dabbae">MallocState</link> (size_t size)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_generic_schema_validator_1a4e250737a411af2969a9e585a7da4187">FreeState</link> (void *p)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename SchemaDocumentType, typename OutputHandler = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator = CrtAllocator&gt;
class GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</title></simplesect>

<para>JSON <link linkend="_class_schema">Schema</link> Validator. </para>



<para>A SAX style JSON schema validator. It uses a <computeroutput><link linkend="_class_generic_schema_document">GenericSchemaDocument</link></computeroutput> to validate SAX events. It delegates the incoming SAX events to an output handler. The default output handler does nothing. It can be reused multiple times by calling <computeroutput><link linkend="_class_generic_schema_validator_1a49efbbe098cb77728be3d48cafed17e4">Reset()</link></computeroutput>.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>SchemaDocumentType</entry><entry>
<para>Type of schema document. </para>
</entry>
                            </row>
                            <row>
<entry>OutputHandler</entry><entry>
<para>Type of output handler. Default handler does nothing. </para>
</entry>
                            </row>
                            <row>
<entry>StateAllocator</entry><entry>
<para>Allocator for storing the internal validation states. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef EncodingType::Ch <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Ch</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1acf1c5361bb96da87d23167d8720b1ea5"/><section>
    <title>EncodingType</title>
<indexterm><primary>EncodingType</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>EncodingType</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef SchemaType::EncodingType <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EncodingType</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b"/><section>
    <title>PointerType</title>
<indexterm><primary>PointerType</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>PointerType</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef SchemaDocumentType::PointerType <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::PointerType</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0"/><section>
    <title>SchemaType</title>
<indexterm><primary>SchemaType</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>SchemaType</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef SchemaDocumentType::SchemaType <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::SchemaType</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a604160fcd6af7582e0deccc205309dcf"/><section>
    <title>StringRefType</title>
<indexterm><primary>StringRefType</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>StringRefType</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_struct_generic_string_ref">GenericStringRef</link>&lt;<link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link>&gt; <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StringRefType</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc"/><section>
    <title>SValue</title>
<indexterm><primary>SValue</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>SValue</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef SchemaType::SValue <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::SValue</computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68"/><section>
    <title>ValueType</title>
<indexterm><primary>ValueType</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>ValueType</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_value">GenericValue</link>&lt;<link linkend="_class_generic_schema_validator_1acf1c5361bb96da87d23167d8720b1ea5">EncodingType</link>, StateAllocator&gt; <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;<link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">::ValueType</link></computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_generic_schema_validator_1a202ee6fdbe5ae9eab3e77a81ecdfeb6d"/><section>
    <title>GenericSchemaValidator()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GenericSchemaValidator</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>GenericSchemaValidator</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;<link linkend="_class_generic_schema_validator">::GenericSchemaValidator</link> (const SchemaDocumentType &amp; schemaDocument, StateAllocator * allocator = <computeroutput>0</computeroutput>
, size_t schemaStackCapacity = <computeroutput>kDefaultSchemaStackCapacity</computeroutput>
, size_t documentStackCapacity = <computeroutput>kDefaultDocumentStackCapacity</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor without output handler. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>schemaDocument</entry><entry>
<para>The schema document to conform to. </para>
</entry>
                            </row>
                            <row>
<entry>allocator</entry><entry>
<para>Optional allocator for storing internal validation states. </para>
</entry>
                            </row>
                            <row>
<entry>schemaStackCapacity</entry><entry>
<para>Optional initial capacity of schema path stack. </para>
</entry>
                            </row>
                            <row>
<entry>documentStackCapacity</entry><entry>
<para>Optional initial capacity of document path stack. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_generic_schema_validator_1ac2027be8ca55b01cd6f38b45f4e233b4"/><section>
    <title>GenericSchemaValidator()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GenericSchemaValidator</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>GenericSchemaValidator</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;<link linkend="_class_generic_schema_validator">::GenericSchemaValidator</link> (const SchemaDocumentType &amp; schemaDocument, OutputHandler &amp; outputHandler, StateAllocator * allocator = <computeroutput>0</computeroutput>
, size_t schemaStackCapacity = <computeroutput>kDefaultSchemaStackCapacity</computeroutput>
, size_t documentStackCapacity = <computeroutput>kDefaultDocumentStackCapacity</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor with output handler. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>schemaDocument</entry><entry>
<para>The schema document to conform to. </para>
</entry>
                            </row>
                            <row>
<entry>allocator</entry><entry>
<para>Optional allocator for storing internal validation states. </para>
</entry>
                            </row>
                            <row>
<entry>schemaStackCapacity</entry><entry>
<para>Optional initial capacity of schema path stack. </para>
</entry>
                            </row>
                            <row>
<entry>documentStackCapacity</entry><entry>
<para>Optional initial capacity of document path stack. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a3eab83d483a50efb0c0390adf3291963"/><section>
    <title>~GenericSchemaValidator()</title>
<indexterm><primary>~GenericSchemaValidator</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>~GenericSchemaValidator</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::~<link linkend="_class_generic_schema_validator">GenericSchemaValidator</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Destructor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_generic_schema_validator_1abcf1f5b46bdae8ca20a80858d603483d"/><section>
    <title>AboveMaximum()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>AboveMaximum</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>AboveMaximum</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AboveMaximum (double actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp; expected, bool exclusive)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a5b9e4690c26adbf4128b0b16f9e0625f">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a4c9c7db8a3488f84a5a86681ad1d8194"/><section>
    <title>AboveMaximum()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>AboveMaximum</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>AboveMaximum</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AboveMaximum (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp; expected, bool exclusive)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a7dc32dfac536f8577cbcb702efde26d2">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a9262c73768789eb7cf8dc271cfec7f96"/><section>
    <title>AboveMaximum()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>AboveMaximum</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>AboveMaximum</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AboveMaximum (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp; expected, bool exclusive)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a78554707b14366d2ff7763290e1a6219">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a27542a75617cdc28f6846b594fe01229"/><section>
    <title>AddDependencySchemaError()</title>
<indexterm><primary>AddDependencySchemaError</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>AddDependencySchemaError</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddDependencySchemaError (const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp; sourceName, ISchemaValidator * subvalidator)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a68e5308e5ca9726ee66139a212b63bcc"/><section>
    <title>AddExpectedType()</title>
<indexterm><primary>AddExpectedType</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>AddExpectedType</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddExpectedType (const typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">SchemaType::ValueType</link> &amp; expectedType)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a5e4d9e5d937bd54e481f90e23ec3aea4">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a85f2be483f0ddfc402a97665aff6eca9"/><section>
    <title>AddMissingDependentProperty()</title>
<indexterm><primary>AddMissingDependentProperty</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>AddMissingDependentProperty</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddMissingDependentProperty (const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp; targetName)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a2e9e0b2f67467a62642e37e839f689c5">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a8d355eeb25364e414d9a2f8121aa0eaa"/><section>
    <title>AddMissingProperty()</title>
<indexterm><primary>AddMissingProperty</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>AddMissingProperty</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::AddMissingProperty (const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp; name)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a3a2165f53ab565e052bcd35b6d19e473">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1afdd4a9787239a6fc3eeb56d34fd531f4"/><section>
    <title>BelowMinimum()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>BelowMinimum</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>BelowMinimum</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::BelowMinimum (double actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp; expected, bool exclusive)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a921da9a7fa127035a2a259b19813230e">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a15a12306bc14f16357b4f2edea8396b7"/><section>
    <title>BelowMinimum()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>BelowMinimum</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>BelowMinimum</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::BelowMinimum (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp; expected, bool exclusive)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a5ad9849c01a0bfa923d37ef2f1b4c933">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1ad3db1f3852a1b2e6fada43fbcad401ea"/><section>
    <title>BelowMinimum()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>BelowMinimum</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>BelowMinimum</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::BelowMinimum (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp; expected, bool exclusive)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1aa7bbfd1a69ba08ae31f87cb96ab5ec04">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1aa25fa7456f2f308a105e400f01a4afde"/><section>
    <title>Bool()</title>
<indexterm><primary>Bool</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>Bool</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Bool (bool b)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a48ecc252813e60a0efdb4eb44b193bd5"/><section>
    <title>CreateHasher()</title>
<indexterm><primary>CreateHasher</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>CreateHasher</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>virtual void * <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::CreateHasher ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_schema_state_factory_1ab26076418c94535cec2af570e8b0a436">internal::ISchemaStateFactory&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1ad4afd8cdb09a6f47a23406894f77ee8a"/><section>
    <title>CreateSchemaValidator()</title>
<indexterm><primary>CreateSchemaValidator</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>CreateSchemaValidator</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>virtual ISchemaValidator * <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::CreateSchemaValidator (const <link linkend="_class_generic_schema_validator_1ac79628f00f6720bbabb70b44f0d076a0">SchemaType</link> &amp; root, const bool inheritContinueOnErrors)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_schema_state_factory_1ada66af7e924238f29314e3b462f1e3fb">internal::ISchemaStateFactory&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a007eef58be575dc562543d069ddd2710"/><section>
    <title>DestroryHasher()</title>
<indexterm><primary>DestroryHasher</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>DestroryHasher</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>virtual void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DestroryHasher (void * hasher)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_schema_state_factory_1a70b8d88180d2e6993105b17f19101635">internal::ISchemaStateFactory&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1ae24fa298e328f1fd7dda2ef6267156d2"/><section>
    <title>DestroySchemaValidator()</title>
<indexterm><primary>DestroySchemaValidator</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>DestroySchemaValidator</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>virtual void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DestroySchemaValidator (ISchemaValidator * validator)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1acc65a322086c792d6534e306c7a091cf"/><section>
    <title>Disallowed()</title>
<indexterm><primary>Disallowed</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>Disallowed</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Disallowed ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a570a6723282e6c0576a47c492ffe5602">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a2d47a88a3d9fb82466b5bda480b6e70f"/><section>
    <title>DisallowedItem()</title>
<indexterm><primary>DisallowedItem</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>DisallowedItem</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DisallowedItem (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a0ac36d4217d9a14205cbe392601f3ee7">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a44f06b99edfb650c6088f17e8af5b5a8"/><section>
    <title>DisallowedProperty()</title>
<indexterm><primary>DisallowedProperty</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>DisallowedProperty</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DisallowedProperty (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> * name, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1afc9082d5e9733762e64df3faa88e0160"/><section>
    <title>DisallowedValue()</title>
<indexterm><primary>DisallowedValue</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>DisallowedValue</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DisallowedValue (const <link linkend="_group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a">ValidateErrorCode</link> code = <computeroutput><link linkend="_group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1gga2e1f88f94a5d9a6817a5de0ed2f0105aa3c12e9cbc8a479b77776ceccbda4c289">kValidateErrorEnum</link></computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a67531a59c1dd8db20db72b17f0933d03">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1af1be05889e634936c223f24c6e5f6ec5"/><section>
    <title>DoesNotMatch()</title>
<indexterm><primary>DoesNotMatch</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>DoesNotMatch</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DoesNotMatch (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1aed0532dbda3ac6f3ca7196af06066b86"/><section>
    <title>Double()</title>
<indexterm><primary>Double</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>Double</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Double (double d)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a82aa865146069e3ba5010d25346a71f2"/><section>
    <title>DuplicateItems()</title>
<indexterm><primary>DuplicateItems</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>DuplicateItems</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::DuplicateItems (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index1, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index2)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a3a0836796f39c946f31f87b80ddd6cf1">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a67b501f0f65d40e0086ca8216882b34f"/><section>
    <title>EndArray()</title>
<indexterm><primary>EndArray</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>EndArray</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EndArray (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> elementCount)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1ab6d1c964faaa0f86f9da51a0f66dc1e4"/><section>
    <title>EndDependencyErrors()</title>
<indexterm><primary>EndDependencyErrors</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>EndDependencyErrors</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EndDependencyErrors ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a817c1e3e9cc62603997a2fcdc564820b">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1ae0f99bfee3e2021c05322fd5d6de2f6e"/><section>
    <title>EndDisallowedType()</title>
<indexterm><primary>EndDisallowedType</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>EndDisallowedType</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EndDisallowedType (const typename <link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">SchemaType::ValueType</link> &amp; actualType)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1ad8133b3c055b3a91b5072af81304ab87">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1afdcd2ff7b5f7e24f4f3d6976fa5b803e"/><section>
    <title>EndMissingDependentProperties()</title>
<indexterm><primary>EndMissingDependentProperties</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>EndMissingDependentProperties</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EndMissingDependentProperties (const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp; sourceName)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a05af3199b8011a3476dfd238fa958213">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a557b7aa531ff94a6355fed8f8575fed5"/><section>
    <title>EndMissingProperties()</title>
<indexterm><primary>EndMissingProperties</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>EndMissingProperties</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EndMissingProperties ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a3a01eec1a969cfb600340a2bad157c9c">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1aa89e14f0f731f6acdec22a0f7e003037"/><section>
    <title>EndObject()</title>
<indexterm><primary>EndObject</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>EndObject</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::EndObject (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> memberCount)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a4e250737a411af2969a9e585a7da4187"/><section>
    <title>FreeState()</title>
<indexterm><primary>FreeState</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>FreeState</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>virtual void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::FreeState (void * p)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_schema_state_factory_1a27bd2138940cac3c330dd8399c49b22b">internal::ISchemaStateFactory&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a21c0ad159e91398d222bab4d91d4c5dd"/><section>
    <title>GetError()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GetError</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>GetError</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68">ValueType</link> &amp; <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetError ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Gets the error object. </para>
</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1ad7b8d71bd651c3da614a877816de7573"/><section>
    <title>GetError()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GetError</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>GetError</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_schema_validator_1a435890a2dddeecb896d4ac76de03ca68">ValueType</link> &amp; <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetError ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1ac01c45982a1f512e1ca06fe5544b0c0f"/><section>
    <title>GetHashCode()</title>
<indexterm><primary>GetHashCode</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>GetHashCode</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>virtual <link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetHashCode (void * hasher)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_schema_state_factory_1addfcf00963cc777edf642b204f07c8d6">internal::ISchemaStateFactory&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1ac10a88c4dc138bbdbe2afd041658a3b0"/><section>
    <title>GetInvalidDocumentPointer()</title>
<indexterm><primary>GetInvalidDocumentPointer</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>GetInvalidDocumentPointer</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b">PointerType</link> <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetInvalidDocumentPointer ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Gets the JSON pointer pointed to the invalid value. </para>
</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1aeba2093eb93f77b239e9b4c27219c982"/><section>
    <title>GetInvalidSchemaCode()</title>
<indexterm><primary>GetInvalidSchemaCode</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>GetInvalidSchemaCode</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga2e1f88f94a5d9a6817a5de0ed2f0105a">ValidateErrorCode</link> <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetInvalidSchemaCode ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Gets the error code of invalid schema. </para>
</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1ab5980d72c786b81ab907526fdf4172f3"/><section>
    <title>GetInvalidSchemaKeyword()</title>
<indexterm><primary>GetInvalidSchemaKeyword</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>GetInvalidSchemaKeyword</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> * <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetInvalidSchemaKeyword ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Gets the keyword of invalid schema. </para>
</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8"/><section>
    <title>GetInvalidSchemaPointer()</title>
<indexterm><primary>GetInvalidSchemaPointer</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>GetInvalidSchemaPointer</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput><link linkend="_class_generic_schema_validator_1ae0c6c9a9c0ff6bae80e75c6705f2668b">PointerType</link> <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetInvalidSchemaPointer ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Gets the JSON pointer pointed to the invalid schema. </para>
</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a318bf1cf98d2f18074edd336b1bc684d"/><section>
    <title>GetValidateFlags()</title>
<indexterm><primary>GetValidateFlags</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>GetValidateFlags</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>virtual unsigned <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::GetValidateFlags ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_schema_validator_1aa27d587f8e6fa2b95235a6ffa077429d">internal::ISchemaValidator</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1ad823c29990225661a4df69d34647b659"/><section>
    <title>Int()</title>
<indexterm><primary>Int</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>Int</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Int (int i)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1ac5a9e416e18129a7b787f251019a828f"/><section>
    <title>Int64()</title>
<indexterm><primary>Int64</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>Int64</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Int64 (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> i)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a8ebda4da3d8b1fc41e57f15dd62e8f19"/><section>
    <title>IsValid()</title>
<indexterm><primary>IsValid</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>IsValid</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>virtual bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::IsValid ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Checks whether the current state is valid. </para>
</para>
<para>
Implements <link linkend="_classinternal_1_1_i_schema_validator_1a94f61f24b1447497279ef12ee0127285">internal::ISchemaValidator</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a6d08b458216ec4a09eed9d94800d05c1"/><section>
    <title>Key()</title>
<indexterm><primary>Key</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>Key</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Key (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> len, bool copy)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a9f983043d6bd1a12d9e2dac756dabbae"/><section>
    <title>MallocState()</title>
<indexterm><primary>MallocState</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>MallocState</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>virtual void * <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::MallocState (size_t size)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_schema_state_factory_1abf29f19ba86e08f62b84b74a879b8922">internal::ISchemaStateFactory&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1aae9c45082721c650b91f8418cecc7293"/><section>
    <title>NoneOf()</title>
<indexterm><primary>NoneOf</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>NoneOf</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::NoneOf (ISchemaValidator ** subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a4275b02cdd86bfe11b42afe94817eae5"/><section>
    <title>NotAllOf()</title>
<indexterm><primary>NotAllOf</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>NotAllOf</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::NotAllOf (ISchemaValidator ** subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1ae5fc8a4545fed53955ec6c57b79ca949"/><section>
    <title>NotMultipleOf()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>NotMultipleOf</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>NotMultipleOf</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::NotMultipleOf (double actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp; expected)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1ada3d2275ccdeb4874f34942d257af9c5">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1ab2f08413a2b23d73d4bbd09c8ca1f547"/><section>
    <title>NotMultipleOf()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>NotMultipleOf</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>NotMultipleOf</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::NotMultipleOf (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp; expected)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a195a561f0bbbfb66961c9331a6afab39">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a5c59d25dc44d85404cc587ebfa7455cd"/><section>
    <title>NotMultipleOf()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>NotMultipleOf</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>NotMultipleOf</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::NotMultipleOf (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> actual, const <link linkend="_class_generic_schema_validator_1a3c004e35c7eb9fa5a28c0ccfb8ac62dc">SValue</link> &amp; expected)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1ad8bd123f154f4c39f48b366219878526">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1accdba5555deae396fa728d8e20ce7ed5"/><section>
    <title>NotOneOf()</title>
<indexterm><primary>NotOneOf</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>NotOneOf</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::NotOneOf (ISchemaValidator ** subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count, bool matched = <computeroutput>false</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a7137af73e934f50c66cbb8a9aa802ea6"/><section>
    <title>Null()</title>
<indexterm><primary>Null</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>Null</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Null ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a29fa7c6f787450b2df1f9d440436aeab"/><section>
    <title>PropertyViolations()</title>
<indexterm><primary>PropertyViolations</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>PropertyViolations</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::PropertyViolations (ISchemaValidator ** subvalidators, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1ae4f024145421d2c1dde08a9de528722a"/><section>
    <title>RawNumber()</title>
<indexterm><primary>RawNumber</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>RawNumber</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::RawNumber (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a49efbbe098cb77728be3d48cafed17e4"/><section>
    <title>Reset()</title>
<indexterm><primary>Reset</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>Reset</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Reset ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Reset the internal states. </para>
</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a8374dd359e572f653c49293545ad3ef4"/><section>
    <title>ResetError()</title>
<indexterm><primary>ResetError</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>ResetError</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::ResetError ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Reset the error state. </para>
</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1af4840dac2410bcfe73912c30eb95b875"/><section>
    <title>SetValidateFlags()</title>
<indexterm><primary>SetValidateFlags</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>SetValidateFlags</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::SetValidateFlags (unsigned flags)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Implementation of ISchemaValidator. </para>
</para>
<para>
Implements <link linkend="_classinternal_1_1_i_schema_validator_1a29b7df0935c87630bbb70c1e19d4c722">internal::ISchemaValidator</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1aba13751f802531ed8cbd850778ea993c"/><section>
    <title>StartArray()</title>
<indexterm><primary>StartArray</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>StartArray</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StartArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a767f115cc90e0f2f5bdd1c9fbdbf75df"/><section>
    <title>StartDependencyErrors()</title>
<indexterm><primary>StartDependencyErrors</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>StartDependencyErrors</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StartDependencyErrors ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1ab3cf4b9fe450ff76f52d70a2888f0342">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a9904719420fd91200f80772e92fe225f"/><section>
    <title>StartDisallowedType()</title>
<indexterm><primary>StartDisallowedType</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>StartDisallowedType</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StartDisallowedType ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a994a8b1526a79737b9d7b7575def4f65">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1ac4faa073bc4671f42e98a59a9e9cb01a"/><section>
    <title>StartMissingDependentProperties()</title>
<indexterm><primary>StartMissingDependentProperties</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>StartMissingDependentProperties</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StartMissingDependentProperties ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1ae312aea74718dda0411af023c0c78ef6">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a41c4d67e349561f13948a5045bfc50c9"/><section>
    <title>StartMissingProperties()</title>
<indexterm><primary>StartMissingProperties</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>StartMissingProperties</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StartMissingProperties ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1ac0073bef86b572b4517876b304aada0f">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a59972d612c3d37aae9a30222e428d216"/><section>
    <title>StartObject()</title>
<indexterm><primary>StartObject</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>StartObject</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::StartObject ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a33cf3f83307a8fea38c3238ef75c3d58"/><section>
    <title>String()</title>
<indexterm><primary>String</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>String</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::String (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool copy)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1af39007d9bf43126dab231961a1c5064f"/><section>
    <title>TooFewItems()</title>
<indexterm><primary>TooFewItems</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>TooFewItems</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::TooFewItems (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1afc144690ba0e24636a72f541efd32c3b">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1aaebaf28aa289826a3c39dc953b0ca466"/><section>
    <title>TooFewProperties()</title>
<indexterm><primary>TooFewProperties</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>TooFewProperties</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::TooFewProperties (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1adf515d2fad2e55bc0735a6fb16eec9e6">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a227dce44e0684a73accbfb062200eb26"/><section>
    <title>TooLong()</title>
<indexterm><primary>TooLong</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>TooLong</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::TooLong (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expected)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1a78e85eeae0e2bdef827815672a7fbbc9"/><section>
    <title>TooManyItems()</title>
<indexterm><primary>TooManyItems</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>TooManyItems</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::TooManyItems (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a9371ca15622897a429971f69c07c47ef">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1ad7ca0a327420c110e9ee6e70b2cdbc87"/><section>
    <title>TooManyProperties()</title>
<indexterm><primary>TooManyProperties</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>TooManyProperties</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::TooManyProperties (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> actualCount, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expectedCount)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_classinternal_1_1_i_validation_error_handler_1a3494e9d2bff94979649e186aba71b32e">internal::IValidationErrorHandler&lt; SchemaDocumentType::SchemaType &gt;</link>.</para>
</section>
<anchor xml:id="_class_generic_schema_validator_1a7711071f95ead18c0dd99f69c09a4c11"/><section>
    <title>TooShort()</title>
<indexterm><primary>TooShort</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>TooShort</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::TooShort (const <link linkend="_class_generic_schema_validator_1a8b7dab5a0cda9cc0adaefb4401d260c1">Ch</link> * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> expected)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1aa688665c5274f93543c84a4b6cabe8da"/><section>
    <title>Uint()</title>
<indexterm><primary>Uint</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>Uint</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Uint (unsigned u)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_schema_validator_1abfc56c58cf0b65318e376fc5f2879292"/><section>
    <title>Uint64()</title>
<indexterm><primary>Uint64</primary><secondary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</secondary></indexterm>
<indexterm><primary>GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</primary><secondary>Uint64</secondary></indexterm>
<computeroutput>template&lt;typename SchemaDocumentType , typename OutputHandler  = BaseReaderHandler&lt;typename SchemaDocumentType::SchemaType::EncodingType&gt;, typename StateAllocator  = CrtAllocator&gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;::Uint64 (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> u)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
src/rapidjson/include/rapidjson/<link linkend="_fwd_8h">fwd.h</link>src/rapidjson/include/rapidjson/<link linkend="_schema_8h">schema.h</link></section>
</section>
