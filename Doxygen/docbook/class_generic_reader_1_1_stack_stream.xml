<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_generic_reader_1_1_stack_stream" xml:lang="en-US">
<title>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt; Class Template Reference</title>
<indexterm><primary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</primary></indexterm>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef CharType <link linkend="_class_generic_reader_1_1_stack_stream_1a8b6ba64b97ed5f79f17d96428fd50ec0">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_reader_1_1_stack_stream_1a288cf0f0385f706856b0e19c447e74ab">StackStream</link> (<link linkend="_classinternal_1_1_stack">internal::Stack</link>&lt; StackAllocator &gt; &amp;stack)</para>
</listitem>
            <listitem><para>RAPIDJSON_FORCEINLINE void <link linkend="_class_generic_reader_1_1_stack_stream_1aba4f7888d42e872ccbf668289373006f">Put</link> (<link linkend="_class_generic_reader_1_1_stack_stream_1a8b6ba64b97ed5f79f17d96428fd50ec0">Ch</link> c)</para>
</listitem>
            <listitem><para>RAPIDJSON_FORCEINLINE void * <link linkend="_class_generic_reader_1_1_stack_stream_1a7b774235ea694c5210b94e4210b96c7f">Push</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_generic_reader_1_1_stack_stream_1a528a88479d08ccf62831251fbd35216b">Length</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_generic_reader_1_1_stack_stream_1a8b6ba64b97ed5f79f17d96428fd50ec0">Ch</link> * <link linkend="_class_generic_reader_1_1_stack_stream_1ae779f1403194a4062465be0d9bb8cf0c">Pop</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_reader_1_1_stack_stream_1a66f42e9a55810bf5bfe1b5c86c09dd51">StackStream</link> (const <link linkend="_class_generic_reader_1_1_stack_stream">StackStream</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_class_generic_reader_1_1_stack_stream">StackStream</link> &amp; <link linkend="_class_generic_reader_1_1_stack_stream_1a3623566bb87b47170d846c943f911aca">operator=</link> (const <link linkend="_class_generic_reader_1_1_stack_stream">StackStream</link> &amp;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classinternal_1_1_stack">internal::Stack</link>&lt; StackAllocator &gt; &amp; <link linkend="_class_generic_reader_1_1_stack_stream_1a175494011b48c130d092129fae81bcc8">stack_</link></para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_reader_1_1_stack_stream_1a9a3711b7b92f4ff85e210c2d59163ff1">length_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_generic_reader_1_1_stack_stream_1a8b6ba64b97ed5f79f17d96428fd50ec0"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename CharType &gt; </computeroutput><para><computeroutput>typedef CharType <link linkend="_class_generic_reader">GenericReader</link>&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;<link linkend="_class_generic_reader_1_1_stack_stream_1a288cf0f0385f706856b0e19c447e74ab">::StackStream</link>&lt; CharType &gt;::Ch</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_generic_reader_1_1_stack_stream_1a288cf0f0385f706856b0e19c447e74ab"/><section>
    <title>StackStream()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>StackStream</primary><secondary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</primary><secondary>StackStream</secondary></indexterm>
<computeroutput>template&lt;typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename CharType &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_reader">GenericReader</link>&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;::StackStream (<link linkend="_classinternal_1_1_stack">internal::Stack</link>&lt; StackAllocator &gt; &amp; stack)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_reader_1_1_stack_stream_1a66f42e9a55810bf5bfe1b5c86c09dd51"/><section>
    <title>StackStream()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>StackStream</primary><secondary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</primary><secondary>StackStream</secondary></indexterm>
<computeroutput>template&lt;typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename CharType &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_reader">GenericReader</link>&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;::StackStream (const <link linkend="_class_generic_reader_1_1_stack_stream">StackStream</link>&lt; CharType &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_generic_reader_1_1_stack_stream_1a528a88479d08ccf62831251fbd35216b"/><section>
    <title>Length()</title>
<indexterm><primary>Length</primary><secondary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</primary><secondary>Length</secondary></indexterm>
<computeroutput>template&lt;typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename CharType &gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_generic_reader">GenericReader</link>&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;<link linkend="_class_generic_reader_1_1_stack_stream_1a288cf0f0385f706856b0e19c447e74ab">::StackStream</link>&lt; CharType &gt;::Length ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_reader_1_1_stack_stream_1a3623566bb87b47170d846c943f911aca"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename CharType &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_reader_1_1_stack_stream">StackStream</link> &amp; <link linkend="_class_generic_reader">GenericReader</link>&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;<link linkend="_class_generic_reader_1_1_stack_stream_1a288cf0f0385f706856b0e19c447e74ab">::StackStream</link>&lt; CharType &gt;::operator= (const <link linkend="_class_generic_reader_1_1_stack_stream">StackStream</link>&lt; CharType &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_reader_1_1_stack_stream_1ae779f1403194a4062465be0d9bb8cf0c"/><section>
    <title>Pop()</title>
<indexterm><primary>Pop</primary><secondary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</primary><secondary>Pop</secondary></indexterm>
<computeroutput>template&lt;typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename CharType &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_reader_1_1_stack_stream_1a8b6ba64b97ed5f79f17d96428fd50ec0">Ch</link> * <link linkend="_class_generic_reader">GenericReader</link>&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;<link linkend="_class_generic_reader_1_1_stack_stream_1a288cf0f0385f706856b0e19c447e74ab">::StackStream</link>&lt; CharType &gt;::Pop ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_reader_1_1_stack_stream_1a7b774235ea694c5210b94e4210b96c7f"/><section>
    <title>Push()</title>
<indexterm><primary>Push</primary><secondary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</primary><secondary>Push</secondary></indexterm>
<computeroutput>template&lt;typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename CharType &gt; </computeroutput><para><computeroutput>RAPIDJSON_FORCEINLINE void * <link linkend="_class_generic_reader">GenericReader</link>&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;<link linkend="_class_generic_reader_1_1_stack_stream_1a288cf0f0385f706856b0e19c447e74ab">::StackStream</link>&lt; CharType &gt;::Push (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> count)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_reader_1_1_stack_stream_1aba4f7888d42e872ccbf668289373006f"/><section>
    <title>Put()</title>
<indexterm><primary>Put</primary><secondary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</primary><secondary>Put</secondary></indexterm>
<computeroutput>template&lt;typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename CharType &gt; </computeroutput><para><computeroutput>RAPIDJSON_FORCEINLINE void <link linkend="_class_generic_reader">GenericReader</link>&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;<link linkend="_class_generic_reader_1_1_stack_stream_1a288cf0f0385f706856b0e19c447e74ab">::StackStream</link>&lt; CharType &gt;::Put (<link linkend="_class_generic_reader_1_1_stack_stream_1a8b6ba64b97ed5f79f17d96428fd50ec0">Ch</link> c)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_generic_reader_1_1_stack_stream_1a9a3711b7b92f4ff85e210c2d59163ff1"/><section>
    <title>length_</title>
<indexterm><primary>length_</primary><secondary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</primary><secondary>length_</secondary></indexterm>
<computeroutput>template&lt;typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename CharType &gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_reader">GenericReader</link>&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;<link linkend="_class_generic_reader_1_1_stack_stream_1a288cf0f0385f706856b0e19c447e74ab">::StackStream</link>&lt; CharType &gt;::length_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_reader_1_1_stack_stream_1a175494011b48c130d092129fae81bcc8"/><section>
    <title>stack_</title>
<indexterm><primary>stack_</primary><secondary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</secondary></indexterm>
<indexterm><primary>GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;::StackStream&lt; CharType &gt;</primary><secondary>stack_</secondary></indexterm>
<computeroutput>template&lt;typename SourceEncoding , typename TargetEncoding , typename StackAllocator  = CrtAllocator&gt; </computeroutput><computeroutput>template&lt;typename CharType &gt; </computeroutput><para><computeroutput><link linkend="_classinternal_1_1_stack">internal::Stack</link>&lt;StackAllocator&gt;&amp; <link linkend="_class_generic_reader">GenericReader</link>&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;<link linkend="_class_generic_reader_1_1_stack_stream_1a288cf0f0385f706856b0e19c447e74ab">::StackStream</link>&lt; CharType &gt;::stack_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_reader_8h">reader.h</link></section>
</section>
