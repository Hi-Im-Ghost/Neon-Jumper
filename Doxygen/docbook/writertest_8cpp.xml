<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_writertest_8cpp" xml:lang="en-US">
<title>src/rapidjson/test/unittest/writertest.cpp File Reference</title>
<indexterm><primary>src/rapidjson/test/unittest/writertest.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;unittest.h&quot;
#include &quot;rapidjson/document.h&quot;
#include &quot;rapidjson/reader.h&quot;
#include &quot;rapidjson/writer.h&quot;
#include &quot;rapidjson/stringbuffer.h&quot;
#include &quot;rapidjson/memorybuffer.h&quot;
#include &lt;sstream&gt;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_o_stream_wrapper">OStreamWrapper</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_writertest_8cpp_1a0734986014050d8f62a96c9b381ba771">TEST_ROUNDTRIP</link>(json)</para>
</listitem>
            <listitem><para>#define <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link>(x)</para>
</listitem>
            <listitem><para>#define <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link>(x)</para>
</listitem>
            <listitem><para>#define <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link>(x)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_writertest_8cpp_1aa264cd0f1fed39bec0fc98c9a9c45229">TEST</link> (<link linkend="_class_writer">Writer</link>, Compact)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a569d21a65af56001cb7331468290b545">TEST</link> (<link linkend="_class_writer">Writer</link>, Root)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1ab1eb5f1274db6126688bad41a32d8794">TEST</link> (<link linkend="_class_writer">Writer</link>, Int)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a243fdd75314baf2c0447aa6e0357556a">TEST</link> (<link linkend="_class_writer">Writer</link>, UInt)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1ad9fb17bf46a8c3ce3413231f712de41b">TEST</link> (<link linkend="_class_writer">Writer</link>, Int64)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1acc528934cbc7ab7a5b9bcbd9d5965e51">TEST</link> (<link linkend="_class_writer">Writer</link>, Uint64)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a273109a47b675051e9a20a79028aa369">TEST</link> (<link linkend="_class_writer">Writer</link>, String)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1ad66cd6e2bd1c874767f0282454792faf">TEST</link> (<link linkend="_class_writer">Writer</link>, Issue_889)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a245d7101f30e51d928868dab14623a46">TEST</link> (<link linkend="_class_writer">Writer</link>, ScanWriteUnescapedString)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1aec32b4d8edd87b05b090b6a9c215d9a1">TEST</link> (<link linkend="_class_writer">Writer</link>, Double)</para>
</listitem>
            <listitem><para>template&lt;typename TargetEncoding &gt; </para><para>void <link linkend="_writertest_8cpp_1a119032a410dd614cc22a08969ff1f2fb">TestTranscode</link> (const char *json)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1aa51b8f4acf2b8f7170d250c882c66de0">TEST</link> (<link linkend="_class_writer">Writer</link>, Transcode)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a344d3e1fc28bce5b406d3204c821a237">TEST</link> (<link linkend="_class_writer">Writer</link>, <link linkend="_class_o_stream_wrapper">OStreamWrapper</link>)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1aabbf7aa570c665b1a0f8ceb8a3cc7f57">TEST</link> (<link linkend="_class_writer">Writer</link>, AssertRootMayBeAnyValue)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a570e1b8a4bd516c7549f8fcd7ab7520f">TEST</link> (<link linkend="_class_writer">Writer</link>, AssertIncorrectObjectLevel)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1acc7988b8b0ea6ca178d53a7fba5287a0">TEST</link> (<link linkend="_class_writer">Writer</link>, AssertIncorrectArrayLevel)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1aaf82ac83cd347c65b0535436047796dc">TEST</link> (<link linkend="_class_writer">Writer</link>, AssertIncorrectEndObject)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1aa37eb23a27d1a2555c1054cdadec1cd5">TEST</link> (<link linkend="_class_writer">Writer</link>, AssertIncorrectEndArray)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1aa4b1901efe06bf0911c23e40066a381b">TEST</link> (<link linkend="_class_writer">Writer</link>, AssertObjectKeyNotString)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1aefbf298bdddf79d3d300633fa449c104">TEST</link> (<link linkend="_class_writer">Writer</link>, AssertMultipleRoot)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a52dab6dd5f297c20ea7403610b56db4a">TEST</link> (<link linkend="_class_writer">Writer</link>, RootObjectIsComplete)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a34dc08ca330946819e373c771932ec54">TEST</link> (<link linkend="_class_writer">Writer</link>, RootArrayIsComplete)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a3cd9a3dee67420bedb4938ac6d23dc6d">TEST</link> (<link linkend="_class_writer">Writer</link>, RootValueIsComplete)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a797f4d7d65c434b12b38fef1fd29f12e">TEST</link> (<link linkend="_class_writer">Writer</link>, InvalidEncoding)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1af27cdb997b5307ccc597726f3de02cfc">TEST</link> (<link linkend="_class_writer">Writer</link>, ValidateEncoding)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a80be7fa365cb784245eed8653bd20717">TEST</link> (<link linkend="_class_writer">Writer</link>, InvalidEventSequence)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a83d59fe87a008c60a4c7a7cfdda12de6">TEST</link> (<link linkend="_class_writer">Writer</link>, NaN)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1ad41932732e3e5c3df1a922c2f6cda90b">TEST</link> (<link linkend="_class_writer">Writer</link>, Inf)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1a83e9c781f01842bc1ce45cfb02c6724f">TEST</link> (<link linkend="_class_writer">Writer</link>, RawValue)</para>
</listitem>
            <listitem><para><link linkend="_writertest_8cpp_1aa59b06d241d019412b7e60e31223442d">TEST</link> (Write, RawValue_Issue1152)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7"/><section>
    <title>T<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>T</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>T</secondary></indexterm>
<para><computeroutput>#define T( x)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StringBuffer&#32;buffer;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Writer&lt;StringBuffer&gt;&#32;writer(buffer);\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EXPECT_TRUE(x);\
&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7"/><section>
    <title>T<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>T</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>T</secondary></indexterm>
<para><computeroutput>#define T( x)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StringBuffer&#32;buffer;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Writer&lt;StringBuffer&gt;&#32;writer(buffer);\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;writer.StartObject();\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ASSERT_THROW(x,&#32;<link linkend="_class_assert_exception">AssertException</link>);&#32;\
&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7"/><section>
    <title>T<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>T</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>T</secondary></indexterm>
<para><computeroutput>#define T( x)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StringBuffer&#32;buffer;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Writer&lt;StringBuffer&gt;&#32;writer(buffer);\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EXPECT_FALSE(writer.IsComplete());&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EXPECT_TRUE(writer.IsComplete());&#32;\
&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_writertest_8cpp_1a0734986014050d8f62a96c9b381ba771"/><section>
    <title>TEST_ROUNDTRIP</title>
<indexterm><primary>TEST_ROUNDTRIP</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST_ROUNDTRIP</secondary></indexterm>
<para><computeroutput>#define TEST_ROUNDTRIP( json)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StringStream&#32;s(json);&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StringBuffer&#32;buffer;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Writer&lt;StringBuffer&gt;&#32;writer(buffer);&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Reader&#32;reader;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reader.Parse&lt;<link linkend="_reader_8h_1ab7be7dabe6ffcba60fad441505583450a057fbeacafb16bb7d24c9998262cae46">kParseFullPrecisionFlag</link>&gt;(s,&#32;writer);&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EXPECT_STREQ(json,&#32;buffer.GetString());&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EXPECT_TRUE(writer.IsComplete());&#32;\
&#32;&#32;&#32;&#32;}
</programlisting></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_writertest_8cpp_1aa59b06d241d019412b7e60e31223442d"/><section>
    <title>TEST()<computeroutput>[1/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (Write , RawValue_Issue1152 )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1acc7988b8b0ea6ca178d53a7fba5287a0"/><section>
    <title>TEST()<computeroutput>[2/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , AssertIncorrectArrayLevel )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1aa37eb23a27d1a2555c1054cdadec1cd5"/><section>
    <title>TEST()<computeroutput>[3/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , AssertIncorrectEndArray )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1aaf82ac83cd347c65b0535436047796dc"/><section>
    <title>TEST()<computeroutput>[4/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , AssertIncorrectEndObject )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a570e1b8a4bd516c7549f8fcd7ab7520f"/><section>
    <title>TEST()<computeroutput>[5/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , AssertIncorrectObjectLevel )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1aefbf298bdddf79d3d300633fa449c104"/><section>
    <title>TEST()<computeroutput>[6/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , AssertMultipleRoot )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1aa4b1901efe06bf0911c23e40066a381b"/><section>
    <title>TEST()<computeroutput>[7/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , AssertObjectKeyNotString )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1aabbf7aa570c665b1a0f8ceb8a3cc7f57"/><section>
    <title>TEST()<computeroutput>[8/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , AssertRootMayBeAnyValue )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1aa264cd0f1fed39bec0fc98c9a9c45229"/><section>
    <title>TEST()<computeroutput>[9/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , Compact )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1aec32b4d8edd87b05b090b6a9c215d9a1"/><section>
    <title>TEST()<computeroutput>[10/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , Double )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1ad41932732e3e5c3df1a922c2f6cda90b"/><section>
    <title>TEST()<computeroutput>[11/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , Inf )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1ab1eb5f1274db6126688bad41a32d8794"/><section>
    <title>TEST()<computeroutput>[12/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , Int )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1ad9fb17bf46a8c3ce3413231f712de41b"/><section>
    <title>TEST()<computeroutput>[13/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , Int64 )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a797f4d7d65c434b12b38fef1fd29f12e"/><section>
    <title>TEST()<computeroutput>[14/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , InvalidEncoding )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a80be7fa365cb784245eed8653bd20717"/><section>
    <title>TEST()<computeroutput>[15/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , InvalidEventSequence )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1ad66cd6e2bd1c874767f0282454792faf"/><section>
    <title>TEST()<computeroutput>[16/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , Issue_889 )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a83d59fe87a008c60a4c7a7cfdda12de6"/><section>
    <title>TEST()<computeroutput>[17/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , NaN )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a344d3e1fc28bce5b406d3204c821a237"/><section>
    <title>TEST()<computeroutput>[18/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , <link linkend="_class_o_stream_wrapper">OStreamWrapper</link> )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a83e9c781f01842bc1ce45cfb02c6724f"/><section>
    <title>TEST()<computeroutput>[19/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , RawValue )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a569d21a65af56001cb7331468290b545"/><section>
    <title>TEST()<computeroutput>[20/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , Root )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a34dc08ca330946819e373c771932ec54"/><section>
    <title>TEST()<computeroutput>[21/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , RootArrayIsComplete )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a52dab6dd5f297c20ea7403610b56db4a"/><section>
    <title>TEST()<computeroutput>[22/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , RootObjectIsComplete )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a3cd9a3dee67420bedb4938ac6d23dc6d"/><section>
    <title>TEST()<computeroutput>[23/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , RootValueIsComplete )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a245d7101f30e51d928868dab14623a46"/><section>
    <title>TEST()<computeroutput>[24/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , ScanWriteUnescapedString )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a273109a47b675051e9a20a79028aa369"/><section>
    <title>TEST()<computeroutput>[25/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , String )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1aa51b8f4acf2b8f7170d250c882c66de0"/><section>
    <title>TEST()<computeroutput>[26/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , Transcode )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a243fdd75314baf2c0447aa6e0357556a"/><section>
    <title>TEST()<computeroutput>[27/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , UInt )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1acc528934cbc7ab7a5b9bcbd9d5965e51"/><section>
    <title>TEST()<computeroutput>[28/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , Uint64 )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1af27cdb997b5307ccc597726f3de02cfc"/><section>
    <title>TEST()<computeroutput>[29/29]</computeroutput></title>
<indexterm><primary>TEST</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TEST</secondary></indexterm>
<para><computeroutput>TEST (<link linkend="_class_writer">Writer</link> , ValidateEncoding )</computeroutput></para></section>
<anchor xml:id="_writertest_8cpp_1a119032a410dd614cc22a08969ff1f2fb"/><section>
    <title>TestTranscode()</title>
<indexterm><primary>TestTranscode</primary><secondary>writertest.cpp</secondary></indexterm>
<indexterm><primary>writertest.cpp</primary><secondary>TestTranscode</secondary></indexterm>
<computeroutput>template&lt;typename TargetEncoding &gt; </computeroutput><para><computeroutput>void TestTranscode (const char * json)</computeroutput></para></section>
</section>
</section>
