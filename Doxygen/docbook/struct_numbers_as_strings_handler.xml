<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_numbers_as_strings_handler" xml:lang="en-US">
<title>NumbersAsStringsHandler Struct Reference</title>
<indexterm><primary>NumbersAsStringsHandler</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1abc67332704aecdcf790a175495b4e1e9">Null</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1a7f7f6f590df33f5dd9edf190b540c168">Bool</link> (bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1a6fc24b36f8dc4b3d3ea6a4c749346adf">Int</link> (int)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1a569e35ff2e7b916e6b1a15841d46c4ab">Uint</link> (unsigned)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1a61b9b0439a0f8e1223da05375917e3f1">Int64</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1a26ddde617205e2b14d35c931aef6f473">Uint64</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1a79accf729fb1908ffcf1f319a1b03cbf">Double</link> (double)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1aa91a356419ff152adf31bba8a6da01e9">RawNumber</link> (const char *str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1a6698e744b13545580d45c40faff80756">String</link> (const char *, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>, bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1a55febf6fc0b6b6ab3ee45d67e26a09a4">StartObject</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1adeef028191097d2cb435b4c5803e4b1d">Key</link> (const char *, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>, bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1a7b7e36388ceace04238c04183c5595b0">EndObject</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1af4ca432f065da6c1a7320249e0698f3a">StartArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_numbers_as_strings_handler_1ae2c4419992239392c2181a5f668e65fa">EndArray</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct_numbers_as_strings_handler_1a9db94313e085cf0daf928fd1af4f0e80">NumbersAsStringsHandler</link> (const char *expected)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>const char * <link linkend="_struct_numbers_as_strings_handler_1a81885665a346dd1a1092a537f8bf7651">expected_</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_struct_numbers_as_strings_handler_1a95c64eb9ecdfabd262da4eec1cafccdb">expected_len_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_numbers_as_strings_handler_1a9db94313e085cf0daf928fd1af4f0e80"/><section>
    <title>NumbersAsStringsHandler()</title>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<para><computeroutput>NumbersAsStringsHandler::NumbersAsStringsHandler (const char * expected)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_numbers_as_strings_handler_1a7f7f6f590df33f5dd9edf190b540c168"/><section>
    <title>Bool()</title>
<indexterm><primary>Bool</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>Bool</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::Bool (bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1a79accf729fb1908ffcf1f319a1b03cbf"/><section>
    <title>Double()</title>
<indexterm><primary>Double</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>Double</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::Double (double )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1ae2c4419992239392c2181a5f668e65fa"/><section>
    <title>EndArray()</title>
<indexterm><primary>EndArray</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>EndArray</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::EndArray (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1a7b7e36388ceace04238c04183c5595b0"/><section>
    <title>EndObject()</title>
<indexterm><primary>EndObject</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>EndObject</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::EndObject (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1a6fc24b36f8dc4b3d3ea6a4c749346adf"/><section>
    <title>Int()</title>
<indexterm><primary>Int</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>Int</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::Int (int )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1a61b9b0439a0f8e1223da05375917e3f1"/><section>
    <title>Int64()</title>
<indexterm><primary>Int64</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>Int64</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::Int64 (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1adeef028191097d2cb435b4c5803e4b1d"/><section>
    <title>Key()</title>
<indexterm><primary>Key</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>Key</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::Key (const char * , <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> , bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1abc67332704aecdcf790a175495b4e1e9"/><section>
    <title>Null()</title>
<indexterm><primary>Null</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>Null</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::Null ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1aa91a356419ff152adf31bba8a6da01e9"/><section>
    <title>RawNumber()</title>
<indexterm><primary>RawNumber</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>RawNumber</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::RawNumber (const char * str, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> length, bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1af4ca432f065da6c1a7320249e0698f3a"/><section>
    <title>StartArray()</title>
<indexterm><primary>StartArray</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>StartArray</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::StartArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1a55febf6fc0b6b6ab3ee45d67e26a09a4"/><section>
    <title>StartObject()</title>
<indexterm><primary>StartObject</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>StartObject</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::StartObject ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1a6698e744b13545580d45c40faff80756"/><section>
    <title>String()</title>
<indexterm><primary>String</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>String</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::String (const char * , <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> , bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1a569e35ff2e7b916e6b1a15841d46c4ab"/><section>
    <title>Uint()</title>
<indexterm><primary>Uint</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>Uint</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::Uint (unsigned )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1a26ddde617205e2b14d35c931aef6f473"/><section>
    <title>Uint64()</title>
<indexterm><primary>Uint64</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>Uint64</secondary></indexterm>
<para><computeroutput>bool NumbersAsStringsHandler::Uint64 (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_numbers_as_strings_handler_1a81885665a346dd1a1092a537f8bf7651"/><section>
    <title>expected_</title>
<indexterm><primary>expected_</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>expected_</secondary></indexterm>
<para><computeroutput>const char* NumbersAsStringsHandler::expected_</computeroutput></para></section>
<anchor xml:id="_struct_numbers_as_strings_handler_1a95c64eb9ecdfabd262da4eec1cafccdb"/><section>
    <title>expected_len_</title>
<indexterm><primary>expected_len_</primary><secondary>NumbersAsStringsHandler</secondary></indexterm>
<indexterm><primary>NumbersAsStringsHandler</primary><secondary>expected_len_</secondary></indexterm>
<para><computeroutput>size_t NumbersAsStringsHandler::expected_len_</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
src/rapidjson/test/unittest/<link linkend="_readertest_8cpp">readertest.cpp</link></section>
</section>
