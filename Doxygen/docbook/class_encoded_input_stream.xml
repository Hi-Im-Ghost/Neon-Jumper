<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_encoded_input_stream" xml:lang="en-US">
<title>EncodedInputStream&lt; Encoding, InputByteStream &gt; Class Template Reference</title>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary></indexterm>
<para>

<para>Input byte stream wrapper with a statically bound encoding. </para>
 
</para>
<para>
<computeroutput>#include &lt;encodedstream.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef Encoding::Ch <link linkend="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_encoded_input_stream_1a17f8e629500f6ae71cb72d1d63bf41fd">EncodedInputStream</link> (InputByteStream &amp;is)</para>
</listitem>
            <listitem><para><link linkend="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca">Ch</link> <link linkend="_class_encoded_input_stream_1a046ab121d8dd303b9dc14d4b34940fad">Peek</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca">Ch</link> <link linkend="_class_encoded_input_stream_1ab42cd57581bf62e42af471583e5b8377">Take</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_encoded_input_stream_1afbe4ac0fc57fa992ba3aa5da8dc66527">Tell</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_encoded_input_stream_1afea36b666a44bd4adeabfcab7b68a322">Put</link> (<link linkend="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca">Ch</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_class_encoded_input_stream_1aa4415bf4b97dd01e8c3de0ad7a161724">Flush</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca">Ch</link> * <link linkend="_class_encoded_input_stream_1aaf0f014c7af7e5031338efdf262bffd5">PutBegin</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_encoded_input_stream_1a83fe5ed281413d6005d1b324730e8bed">PutEnd</link> (<link linkend="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca">Ch</link> *)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_encoded_input_stream_1acc6c2b46e636edfeb81dfaea80ee384a">RAPIDJSON_STATIC_ASSERT</link> (sizeof(typename InputByteStream::Ch)==1)</para>
</listitem>
            <listitem><para><link linkend="_class_encoded_input_stream_1a672ac1977918f6da245de0820d41b77e">EncodedInputStream</link> (const <link linkend="_class_encoded_input_stream">EncodedInputStream</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_class_encoded_input_stream">EncodedInputStream</link> &amp; <link linkend="_class_encoded_input_stream_1abb3d6215217c4cc3aa0f4e3a6bb31f81">operator=</link> (const <link linkend="_class_encoded_input_stream">EncodedInputStream</link> &amp;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>InputByteStream &amp; <link linkend="_class_encoded_input_stream_1ab07b45f34f288184313750af5f7077b6">is_</link></para>
</listitem>
            <listitem><para><link linkend="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca">Ch</link> <link linkend="_class_encoded_input_stream_1a20b49879c87fdf6d6ba20e99f0cf7893">current_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, typename InputByteStream&gt;
class EncodedInputStream&lt; Encoding, InputByteStream &gt;</title></simplesect>

<para>Input byte stream wrapper with a statically bound encoding. </para>



<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Encoding</entry><entry>
<para>The interpretation of encoding of the stream. Either <link linkend="_struct_u_t_f8">UTF8</link>, <link linkend="_struct_u_t_f16_l_e">UTF16LE</link>, <link linkend="_struct_u_t_f16_b_e">UTF16BE</link>, <link linkend="_struct_u_t_f32_l_e">UTF32LE</link>, <link linkend="_struct_u_t_f32_b_e">UTF32BE</link>. </para>
</entry>
                            </row>
                            <row>
<entry>InputByteStream</entry><entry>
<para>Type of input byte stream. For example, <link linkend="_class_file_read_stream">FileReadStream</link>. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput>typedef Encoding::Ch <link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;::Ch</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_encoded_input_stream_1a17f8e629500f6ae71cb72d1d63bf41fd"/><section>
    <title>EncodedInputStream()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>EncodedInputStream</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>EncodedInputStream</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;<link linkend="_class_encoded_input_stream">::EncodedInputStream</link> (InputByteStream &amp; is)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_encoded_input_stream_1a672ac1977918f6da245de0820d41b77e"/><section>
    <title>EncodedInputStream()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>EncodedInputStream</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>EncodedInputStream</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;<link linkend="_class_encoded_input_stream">::EncodedInputStream</link> (const <link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_encoded_input_stream_1aa4415bf4b97dd01e8c3de0ad7a161724"/><section>
    <title>Flush()</title>
<indexterm><primary>Flush</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>Flush</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput>void <link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;::Flush ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_encoded_input_stream_1abb3d6215217c4cc3aa0f4e3a6bb31f81"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_encoded_input_stream">EncodedInputStream</link> &amp; <link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;::operator= (const <link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_encoded_input_stream_1a046ab121d8dd303b9dc14d4b34940fad"/><section>
    <title>Peek()</title>
<indexterm><primary>Peek</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>Peek</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca">Ch</link> <link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;::Peek ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_encoded_input_stream_1afea36b666a44bd4adeabfcab7b68a322"/><section>
    <title>Put()</title>
<indexterm><primary>Put</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>Put</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput>void <link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;::Put (<link linkend="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca">Ch</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_encoded_input_stream_1aaf0f014c7af7e5031338efdf262bffd5"/><section>
    <title>PutBegin()</title>
<indexterm><primary>PutBegin</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>PutBegin</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca">Ch</link> * <link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;::PutBegin ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_encoded_input_stream_1a83fe5ed281413d6005d1b324730e8bed"/><section>
    <title>PutEnd()</title>
<indexterm><primary>PutEnd</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>PutEnd</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;::PutEnd (<link linkend="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca">Ch</link> * )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_encoded_input_stream_1acc6c2b46e636edfeb81dfaea80ee384a"/><section>
    <title>RAPIDJSON_STATIC_ASSERT()</title>
<indexterm><primary>RAPIDJSON_STATIC_ASSERT</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>RAPIDJSON_STATIC_ASSERT</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;::RAPIDJSON_STATIC_ASSERT (sizeof(typename InputByteStream::Ch)  = <computeroutput>=1</computeroutput>
)<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_encoded_input_stream_1ab42cd57581bf62e42af471583e5b8377"/><section>
    <title>Take()</title>
<indexterm><primary>Take</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>Take</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca">Ch</link> <link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;::Take ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_encoded_input_stream_1afbe4ac0fc57fa992ba3aa5da8dc66527"/><section>
    <title>Tell()</title>
<indexterm><primary>Tell</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>Tell</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput>size_t <link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;::Tell ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_encoded_input_stream_1a20b49879c87fdf6d6ba20e99f0cf7893"/><section>
    <title>current_</title>
<indexterm><primary>current_</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>current_</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput><link linkend="_class_encoded_input_stream_1acc387a1364390da244bbb1ab07bdceca">Ch</link> <link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;::current_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_encoded_input_stream_1ab07b45f34f288184313750af5f7077b6"/><section>
    <title>is_</title>
<indexterm><primary>is_</primary><secondary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</secondary></indexterm>
<indexterm><primary>EncodedInputStream&lt; Encoding, InputByteStream &gt;</primary><secondary>is_</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename InputByteStream &gt; </computeroutput><para><computeroutput>InputByteStream&amp; <link linkend="_class_encoded_input_stream">EncodedInputStream</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, InputByteStream &gt;::is_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_encodedstream_8h">encodedstream.h</link></section>
</section>
