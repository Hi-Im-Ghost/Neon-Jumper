<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stringbuffer_8h" xml:lang="en-US">
<title>src/rapidjson/include/rapidjson/stringbuffer.h File Reference</title>
<indexterm><primary>src/rapidjson/include/rapidjson/stringbuffer.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;stream.h&quot;
#include &quot;internal/stack.h&quot;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_generic_string_buffer">GenericStringBuffer&lt; Encoding, Allocator &gt;</link></para>

<para>Represents an in-memory output stream. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_class_generic_string_buffer">GenericStringBuffer</link>&lt; <link linkend="_struct_u_t_f8">UTF8</link>&lt;&gt; &gt; <link linkend="_stringbuffer_8h_1a88f2d61781c8daefde48a81bdeac6ecd">StringBuffer</link></para>

<para>String buffer with <link linkend="_struct_u_t_f8">UTF8</link> encoding. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </para><para>void <link linkend="_stringbuffer_8h_1a76f1b69abd71a248a55c8a55792dfd69">PutReserve</link> (<link linkend="_class_generic_string_buffer">GenericStringBuffer</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; &amp;stream, size_t count)</para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </para><para>void <link linkend="_stringbuffer_8h_1a2ff92a4ec7c5995738cfaf39fe99f31a">PutUnsafe</link> (<link linkend="_class_generic_string_buffer">GenericStringBuffer</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; &amp;stream, typename Encoding::Ch c)</para>
</listitem>
            <listitem><para>template&lt;&gt; </para><para>void <link linkend="_stringbuffer_8h_1a4bcf83273503d7b834ec530e84914f8c">PutN</link> (<link linkend="_class_generic_string_buffer">GenericStringBuffer</link>&lt; <link linkend="_struct_u_t_f8">UTF8</link>&lt;&gt; &gt; &amp;stream, char c, size_t n)</para>

<para>Implement specialized version of <link linkend="_stringbuffer_8h_1a4bcf83273503d7b834ec530e84914f8c">PutN()</link> with memset() for better performance. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_stringbuffer_8h_1a88f2d61781c8daefde48a81bdeac6ecd"/><section>
    <title>StringBuffer</title>
<indexterm><primary>StringBuffer</primary><secondary>stringbuffer.h</secondary></indexterm>
<indexterm><primary>stringbuffer.h</primary><secondary>StringBuffer</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_class_generic_string_buffer">GenericStringBuffer</link>&lt;<link linkend="_struct_u_t_f8">UTF8</link>&lt;&gt; &gt; <link linkend="_fwd_8h_1ab956b6537825abf8aac4112e81cfad7e">StringBuffer</link></computeroutput></para><para>

<para>String buffer with <link linkend="_struct_u_t_f8">UTF8</link> encoding. </para>
</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_stringbuffer_8h_1a4bcf83273503d7b834ec530e84914f8c"/><section>
    <title>PutN()</title>
<indexterm><primary>PutN</primary><secondary>stringbuffer.h</secondary></indexterm>
<indexterm><primary>stringbuffer.h</primary><secondary>PutN</secondary></indexterm>
<computeroutput>template&lt;&gt; </computeroutput><para><computeroutput>void PutN (<link linkend="_class_generic_string_buffer">GenericStringBuffer</link>&lt; <link linkend="_struct_u_t_f8">UTF8</link>&lt;&gt; &gt; &amp; stream, char c, size_t n)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Implement specialized version of <link linkend="_stringbuffer_8h_1a4bcf83273503d7b834ec530e84914f8c">PutN()</link> with memset() for better performance. </para>
</para>
</section>
<anchor xml:id="_stringbuffer_8h_1a76f1b69abd71a248a55c8a55792dfd69"/><section>
    <title>PutReserve()</title>
<indexterm><primary>PutReserve</primary><secondary>stringbuffer.h</secondary></indexterm>
<indexterm><primary>stringbuffer.h</primary><secondary>PutReserve</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>void PutReserve (<link linkend="_class_generic_string_buffer">GenericStringBuffer</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; &amp; stream, size_t count)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_stringbuffer_8h_1a2ff92a4ec7c5995738cfaf39fe99f31a"/><section>
    <title>PutUnsafe()</title>
<indexterm><primary>PutUnsafe</primary><secondary>stringbuffer.h</secondary></indexterm>
<indexterm><primary>stringbuffer.h</primary><secondary>PutUnsafe</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link> , typename <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; </computeroutput><para><computeroutput>void PutUnsafe (<link linkend="_class_generic_string_buffer">GenericStringBuffer</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link>, <link linkend="_classrapidjson_1_1_allocator">Allocator</link> &gt; &amp; stream, typename Encoding::Ch c)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
</section>
