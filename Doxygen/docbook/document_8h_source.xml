<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_document_8h_source" xml:lang="en-US">
<title>document.h</title>
<indexterm><primary>src/rapidjson/include/rapidjson/document.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Tencent&#32;is&#32;pleased&#32;to&#32;support&#32;the&#32;open&#32;source&#32;community&#32;by&#32;making&#32;RapidJSON&#32;available.</emphasis>
2 <emphasis role="comment">//&#32;</emphasis>
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2015&#32;THL&#32;A29&#32;Limited,&#32;a&#32;Tencent&#32;company,&#32;and&#32;Milo&#32;Yip.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;Licensed&#32;under&#32;the&#32;MIT&#32;License&#32;(the&#32;&quot;License&quot;);&#32;you&#32;may&#32;not&#32;use&#32;this&#32;file&#32;except</emphasis>
6 <emphasis role="comment">//&#32;in&#32;compliance&#32;with&#32;the&#32;License.&#32;You&#32;may&#32;obtain&#32;a&#32;copy&#32;of&#32;the&#32;License&#32;at</emphasis>
7 <emphasis role="comment">//</emphasis>
8 <emphasis role="comment">//&#32;http://opensource.org/licenses/MIT</emphasis>
9 <emphasis role="comment">//</emphasis>
10 <emphasis role="comment">//&#32;Unless&#32;required&#32;by&#32;applicable&#32;law&#32;or&#32;agreed&#32;to&#32;in&#32;writing,&#32;software&#32;distributed&#32;</emphasis>
11 <emphasis role="comment">//&#32;under&#32;the&#32;License&#32;is&#32;distributed&#32;on&#32;an&#32;&quot;AS&#32;IS&quot;&#32;BASIS,&#32;WITHOUT&#32;WARRANTIES&#32;OR&#32;</emphasis>
12 <emphasis role="comment">//&#32;CONDITIONS&#32;OF&#32;ANY&#32;KIND,&#32;either&#32;express&#32;or&#32;implied.&#32;See&#32;the&#32;License&#32;for&#32;the&#32;</emphasis>
13 <emphasis role="comment">//&#32;specific&#32;language&#32;governing&#32;permissions&#32;and&#32;limitations&#32;under&#32;the&#32;License.</emphasis>
14 
15 <emphasis role="preprocessor">#ifndef&#32;RAPIDJSON_DOCUMENT_H_</emphasis>
16 <emphasis role="preprocessor">#define&#32;RAPIDJSON_DOCUMENT_H_</emphasis>
17 
20 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_reader_8h">reader.h</link>&quot;</emphasis>
21 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_meta_8h">internal/meta.h</link>&quot;</emphasis>
22 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_strfunc_8h">internal/strfunc.h</link>&quot;</emphasis>
23 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_memorystream_8h">memorystream.h</link>&quot;</emphasis>
24 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_encodedstream_8h">encodedstream.h</link>&quot;</emphasis>
25 <emphasis role="preprocessor">#include&#32;&lt;new&gt;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;placement&#32;new</emphasis>
26 <emphasis role="preprocessor">#include&#32;&lt;limits&gt;</emphasis>
27 <emphasis role="preprocessor">#ifdef&#32;__cpp_lib_three_way_comparison</emphasis>
28 <emphasis role="preprocessor">#include&#32;&lt;compare&gt;</emphasis>
29 <emphasis role="preprocessor">#endif</emphasis>
30 
31 RAPIDJSON_DIAG_PUSH
32 <emphasis role="preprocessor">#ifdef&#32;__clang__</emphasis>
33 RAPIDJSON_DIAG_OFF(padded)
34 RAPIDJSON_DIAG_OFF(<emphasis role="keywordflow">switch</emphasis>-<emphasis role="keyword">enum</emphasis>)
35 RAPIDJSON_DIAG_OFF(c++98-compat)
36 <emphasis role="preprocessor">#elif&#32;defined(_MSC_VER)</emphasis>
37 RAPIDJSON_DIAG_OFF(4127)&#32;<emphasis role="comment">//&#32;conditional&#32;expression&#32;is&#32;constant</emphasis>
38 RAPIDJSON_DIAG_OFF(4244)&#32;<emphasis role="comment">//&#32;conversion&#32;from&#32;kXxxFlags&#32;to&#32;&apos;uint16_t&apos;,&#32;possible&#32;loss&#32;of&#32;data</emphasis>
39 <emphasis role="preprocessor">#endif</emphasis>
40 
41 <emphasis role="preprocessor">#ifdef&#32;__GNUC__</emphasis>
42 RAPIDJSON_DIAG_OFF(effc++)
43 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__GNUC__</emphasis>
44 
45 <emphasis role="preprocessor">#ifdef&#32;GetObject</emphasis>
46 <emphasis role="comment">//&#32;see&#32;https://github.com/Tencent/rapidjson/issues/1448</emphasis>
47 <emphasis role="comment">//&#32;a&#32;former&#32;included&#32;windows.h&#32;might&#32;have&#32;defined&#32;a&#32;macro&#32;called&#32;GetObject,&#32;which&#32;affects</emphasis>
48 <emphasis role="comment">//&#32;GetObject&#32;defined&#32;here.&#32;This&#32;ensures&#32;the&#32;macro&#32;does&#32;not&#32;get&#32;applied</emphasis>
49 <emphasis role="preprocessor">#pragma&#32;push_macro(&quot;GetObject&quot;</emphasis>)
50 <emphasis role="preprocessor">#define&#32;RAPIDJSON_WINDOWS_GETOBJECT_WORKAROUND_APPLIED</emphasis>
51 <emphasis role="preprocessor">#undef&#32;GetObject</emphasis>
52 <emphasis role="preprocessor">#endif</emphasis>
53 
54 <emphasis role="preprocessor">#ifndef&#32;RAPIDJSON_NOMEMBERITERATORCLASS</emphasis>
55 <emphasis role="preprocessor">#include&#32;&lt;iterator&gt;</emphasis>&#32;<emphasis role="comment">//&#32;std::random_access_iterator_tag</emphasis>
56 <emphasis role="preprocessor">#endif</emphasis>
57 
58 <emphasis role="preprocessor">#if&#32;RAPIDJSON_USE_MEMBERSMAP</emphasis>
59 <emphasis role="preprocessor">#include&#32;&lt;map&gt;</emphasis>&#32;<emphasis role="comment">//&#32;std::multimap</emphasis>
60 <emphasis role="preprocessor">#endif</emphasis>
61 
62 <link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc">RAPIDJSON_NAMESPACE_BEGIN</link>
63 
64 <emphasis role="comment">//&#32;Forward&#32;declaration.</emphasis>
65 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&gt;
66 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_value">GenericValue</link>;
67 
68 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator,&#32;<emphasis role="keyword">typename</emphasis>&#32;StackAllocator&gt;
69 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_document">GenericDocument</link>;
70 
77 <emphasis role="preprocessor">#ifndef&#32;RAPIDJSON_DEFAULT_ALLOCATOR</emphasis>
78 <emphasis role="preprocessor">#define&#32;RAPIDJSON_DEFAULT_ALLOCATOR&#32;MemoryPoolAllocator&lt;CrtAllocator&gt;</emphasis>
79 <emphasis role="preprocessor">#endif</emphasis>
80 
87 <emphasis role="preprocessor">#ifndef&#32;RAPIDJSON_DEFAULT_STACK_ALLOCATOR</emphasis>
88 <emphasis role="preprocessor">#define&#32;RAPIDJSON_DEFAULT_STACK_ALLOCATOR&#32;CrtAllocator</emphasis>
89 <emphasis role="preprocessor">#endif</emphasis>
90 
97 <emphasis role="preprocessor">#ifndef&#32;RAPIDJSON_VALUE_DEFAULT_OBJECT_CAPACITY</emphasis>
98 <emphasis role="comment">//&#32;number&#32;of&#32;objects&#32;that&#32;rapidjson::Value&#32;allocates&#32;memory&#32;for&#32;by&#32;default</emphasis>
99 <emphasis role="preprocessor">#define&#32;RAPIDJSON_VALUE_DEFAULT_OBJECT_CAPACITY&#32;16</emphasis>
100 <emphasis role="preprocessor">#endif</emphasis>
101 
108 <emphasis role="preprocessor">#ifndef&#32;RAPIDJSON_VALUE_DEFAULT_ARRAY_CAPACITY</emphasis>
109 <emphasis role="comment">//&#32;number&#32;of&#32;array&#32;elements&#32;that&#32;rapidjson::Value&#32;allocates&#32;memory&#32;for&#32;by&#32;default</emphasis>
110 <emphasis role="preprocessor">#define&#32;RAPIDJSON_VALUE_DEFAULT_ARRAY_CAPACITY&#32;16</emphasis>
111 <emphasis role="preprocessor">#endif</emphasis>
112 
114 
119 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&gt;&#32;
120 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_member">GenericMember</link>&#32;{
121 <emphasis role="keyword">public</emphasis>:
122 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, Allocator&gt;</link>&#32;<link linkend="_class_generic_member_1a7124f7ccd67421533d33139938604fac">name</link>;&#32;&#32;&#32;&#32;&#32;
123 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, Allocator&gt;</link>&#32;<link linkend="_class_generic_member_1aad3cfa4f9e8b9018068c8bc865723083">value</link>;&#32;&#32;&#32;&#32;
124 
125 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
127 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_1ab9c79af91543b05cc88af0f930e7556e">GenericMember</link>(<link linkend="_class_generic_member">GenericMember</link>&amp;&amp;&#32;rhs)&#32;RAPIDJSON_NOEXCEPT
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class_generic_member_1a7124f7ccd67421533d33139938604fac">name</link>(std::move(rhs.name)),
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member_1aad3cfa4f9e8b9018068c8bc865723083">value</link>(std::move(rhs.value))
130 &#32;&#32;&#32;&#32;{
131 &#32;&#32;&#32;&#32;}
132 
134 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member">GenericMember</link>&amp;&#32;<link linkend="_class_generic_member_1ad7b635007819683babe224004a54396a">operator=</link>(<link linkend="_class_generic_member">GenericMember</link>&amp;&amp;&#32;rhs)&#32;RAPIDJSON_NOEXCEPT&#32;{
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_class_generic_member">GenericMember</link>&amp;<emphasis role="keyword">&gt;</emphasis>(rhs);
136 &#32;&#32;&#32;&#32;}
137 <emphasis role="preprocessor">#endif</emphasis>
138 
140 
142 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member">GenericMember</link>&amp;&#32;<link linkend="_class_generic_member_1ad7b635007819683babe224004a54396a">operator=</link>(<link linkend="_class_generic_member">GenericMember</link>&amp;&#32;rhs)&#32;RAPIDJSON_NOEXCEPT&#32;{
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5dc14176a9e71ace282404b0bcda57a1">RAPIDJSON_LIKELY</link>(<emphasis role="keyword">this</emphasis>&#32;!=&#32;&amp;rhs))&#32;{
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member_1a7124f7ccd67421533d33139938604fac">name</link>&#32;=&#32;rhs.name;
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member_1aad3cfa4f9e8b9018068c8bc865723083">value</link>&#32;=&#32;rhs.value;
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
148 &#32;&#32;&#32;&#32;}
149 
150 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;swap()&#32;for&#32;std::sort()&#32;and&#32;other&#32;potential&#32;use&#32;in&#32;STL.</emphasis>
151 &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_member_1af72094da5f8967de3fab3d2c34bc71cc">swap</link>(<link linkend="_class_generic_member">GenericMember</link>&amp;&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>,&#32;<link linkend="_class_generic_member">GenericMember</link>&amp;&#32;b)&#32;RAPIDJSON_NOEXCEPT&#32;{
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>.name.Swap(b.name);
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>.value.Swap(b.value);
154 &#32;&#32;&#32;&#32;}
155 
156 <emphasis role="keyword">private</emphasis>:
158 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_1ab9c79af91543b05cc88af0f930e7556e">GenericMember</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_member">GenericMember</link>&amp;&#32;rhs);
159 };
160 
162 <emphasis role="comment">//&#32;GenericMemberIterator</emphasis>
163 
164 <emphasis role="preprocessor">#ifndef&#32;RAPIDJSON_NOMEMBERITERATORCLASS</emphasis>
165 
167 
185 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Const,&#32;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&gt;
186 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_member_iterator">GenericMemberIterator</link>&#32;{
187 
188 &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_value">GenericValue</link>&lt;<link linkend="_classrapidjson_1_1_encoding">Encoding</link>,<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&gt;;
189 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_member_iterator">GenericMemberIterator</link>;
190 
191 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member">GenericMember&lt;Encoding,Allocator&gt;</link>&#32;<link linkend="_class_generic_member_iterator_1ac0d50d12ba074e68837964244668c66b">PlainType</link>;
192 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">internal::MaybeAddConst&lt;Const,PlainType&gt;::Type</link>&#32;<link linkend="_class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584">ValueType</link>;
193 
194 <emphasis role="keyword">public</emphasis>:
196 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator</link>&#32;<link linkend="_class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8">Iterator</link>;
198 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator&lt;true,Encoding,Allocator&gt;</link>&#32;&#32;<link linkend="_class_generic_member_iterator_1ae5be27a73dce0be58ee2776db896d591">ConstIterator</link>;
200 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator&lt;false,Encoding,Allocator&gt;</link>&#32;<link linkend="_class_generic_member_iterator_1abc26eb06f2962765b11dcd06ce84ac02">NonConstIterator</link>;
201 
204 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584">ValueType</link>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator_1a79326e02032d06d80e09ded797501553">value_type</link>;
205 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584">ValueType</link>&#32;*&#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator_1a7c3623bc81b06495fd3128398487e99e">pointer</link>;
206 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a1323c9d064a9c388a1eb62a6e2c17584">ValueType</link>&#32;&amp;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator_1a182876d698903331bd0b11db6d1beeca">reference</link>;
207 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::ptrdiff_t&#32;<link linkend="_class_generic_member_iterator_1ae60bbcbaec51d36eef299996543872e6">difference_type</link>;
208 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::random_access_iterator_tag&#32;<link linkend="_class_generic_member_iterator_1a36cd90aef13c0cce916929f63fdb5c86">iterator_category</link>;
210 
212 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a7c3623bc81b06495fd3128398487e99e">pointer</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29">Pointer</link>;
214 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a182876d698903331bd0b11db6d1beeca">reference</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator_1a8042a85a9e233d65de5b6c66d9a1109a">Reference</link>;
216 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member_iterator_1ae60bbcbaec51d36eef299996543872e6">difference_type</link>&#32;<link linkend="_class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e">DifferenceType</link>;
217 
219 
222 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator_1a2708717d497a0aadacdf75900de4c5b4">GenericMemberIterator</link>()&#32;:&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>()&#32;{}
223 
225 
240 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator_1a2697fd327a90654b0bf91c988e43f95e">GenericMemberIterator</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_member_iterator">NonConstIterator</link>&#32;&amp;&#32;it)&#32;:&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>(it.<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>)&#32;{}
241 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">Iterator</link>&amp;&#32;<link linkend="_class_generic_member_iterator_1a3106e0e66d8a692d9ff9f91b99421302">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_member_iterator">NonConstIterator</link>&#32;&amp;&#32;it)&#32;{&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>&#32;=&#32;it.<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
242 
244 
245 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">Iterator</link>&amp;&#32;<link linkend="_class_generic_member_iterator_1a37bbba2bf6f56aee43ccf3caf5ac51d0">operator++</link>(){&#32;++<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
246 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">Iterator</link>&amp;&#32;<link linkend="_class_generic_member_iterator_1ae413025561a25dbb7c95b93ff387cc55">operator--</link>(){&#32;--<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
247 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">Iterator</link>&#32;&#32;<link linkend="_class_generic_member_iterator_1a83c8be6d960213ce32d68a880a8d9089">operator++</link>(<emphasis role="keywordtype">int</emphasis>){&#32;<link linkend="_class_generic_member_iterator">Iterator</link>&#32;old(*<emphasis role="keyword">this</emphasis>);&#32;++<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;<emphasis role="keywordflow">return</emphasis>&#32;old;&#32;}
248 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">Iterator</link>&#32;&#32;<link linkend="_class_generic_member_iterator_1a4606c8baec5ea2b5139a503f7caa5444">operator--</link>(<emphasis role="keywordtype">int</emphasis>){&#32;<link linkend="_class_generic_member_iterator">Iterator</link>&#32;old(*<emphasis role="keyword">this</emphasis>);&#32;--<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;<emphasis role="keywordflow">return</emphasis>&#32;old;&#32;}
250 
252 
253 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">Iterator</link>&#32;<link linkend="_class_generic_member_iterator_1a472098839cec785b43a005a23d7a284b">operator+</link>(<link linkend="_class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e">DifferenceType</link>&#32;n)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8">Iterator</link>(<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>+n);&#32;}
254 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">Iterator</link>&#32;<link linkend="_class_generic_member_iterator_1a343099509473934b40b9a4264c472721">operator-</link>(<link linkend="_class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e">DifferenceType</link>&#32;n)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8">Iterator</link>(<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>-n);&#32;}
255 
256 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">Iterator</link>&amp;&#32;<link linkend="_class_generic_member_iterator_1a6b86a449909e8611c449f428809eb237">operator+=</link>(<link linkend="_class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e">DifferenceType</link>&#32;n)&#32;{&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>+=n;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
257 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">Iterator</link>&amp;&#32;<link linkend="_class_generic_member_iterator_1aa3f9472c44eb8e0c040d24935bfa8e82">operator-=</link>(<link linkend="_class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e">DifferenceType</link>&#32;n)&#32;{&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>-=n;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
259 
261 
262 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Const_&gt;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a79ec0aac9cd098fddd656b3ce55d0c0a">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</link>&amp;&#32;that)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>&#32;==&#32;that.<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;}
263 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Const_&gt;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_member_iterator_1ad1d518be7ace72462fc77cd4c6f250e2">operator!=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</link>&amp;&#32;that)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>&#32;!=&#32;that.<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;}
264 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Const_&gt;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a1d6b406f68ff02515fdc3e0385057a12">operator&lt;=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</link>&amp;&#32;that)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>&#32;&lt;=&#32;that.<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;}
265 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Const_&gt;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_member_iterator_1ab6d9e8fce04a598f10453b3f722c78ac">operator&gt;=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</link>&amp;&#32;that)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>&#32;&gt;=&#32;that.<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;}
266 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Const_&gt;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_member_iterator_1aaadf9036c5d4563cf00019ba840dd09a">operator&lt; </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</link>&amp;&#32;that)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>&#32;&lt;&#32;that.<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;}
267 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Const_&gt;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a1b2faefeb0d9bbc04bd02d69d25828f5">operator&gt; </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</link>&amp;&#32;that)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>&#32;&gt;&#32;that.<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;}
268 
269 <emphasis role="preprocessor">#ifdef&#32;__cpp_lib_three_way_comparison</emphasis>
270 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Const_&gt;&#32;std::strong_ordering&#32;operator&lt;=&gt;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator&lt;Const_, Encoding, Allocator&gt;</link>&amp;&#32;that)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;ptr_&#32;&lt;=&gt;&#32;that.<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;}
271 <emphasis role="preprocessor">#endif</emphasis>
273 <emphasis role="preprocessor"></emphasis>
275 
276 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator_1a8042a85a9e233d65de5b6c66d9a1109a">Reference</link>&#32;<link linkend="_class_generic_member_iterator_1a56ad403f7e7a35d6060931685d6cbbe8">operator*</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;}
277 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29">Pointer</link>&#32;&#32;&#32;<link linkend="_class_generic_member_iterator_1abc95a8e52653a8baa2927b03239f4be9">operator-&gt;</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;}
278 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator_1a8042a85a9e233d65de5b6c66d9a1109a">Reference</link>&#32;<link linkend="_class_generic_member_iterator_1a41b59f1bd367a98ee5d1138cc81e98a7">operator[]</link>(<link linkend="_class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e">DifferenceType</link>&#32;n)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>[n];&#32;}
280 
282 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator_1aaa13c83e6e0d1f5b413d62cacd8f6a2e">DifferenceType</link>&#32;<link linkend="_class_generic_member_iterator_1ae119ae8ed78dbd980f83d367f59a3c94">operator-</link>(<link linkend="_class_generic_member_iterator">ConstIterator</link>&#32;that)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>-that.<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;}
283 
284 <emphasis role="keyword">private</emphasis>:
286 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_generic_member_iterator_1a76c372cd90c8abff942ab054c4992c74">GenericMemberIterator</link>(<link linkend="_class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29">Pointer</link>&#32;p)&#32;:&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>(p)&#32;{}
287 
288 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator_1ac0bd6e77617593892fc13afb00e62f29">Pointer</link>&#32;<link linkend="_class_generic_member_iterator_1a86d045bb193c966d92655a73fe813548">ptr_</link>;&#32;
289 };
290 
291 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">//&#32;RAPIDJSON_NOMEMBERITERATORCLASS</emphasis>
292 
293 <emphasis role="comment">//&#32;class-based&#32;member&#32;iterator&#32;implementation&#32;disabled,&#32;use&#32;plain&#32;pointers</emphasis>
294 
295 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Const,&#32;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&gt;
296 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_member_iterator">GenericMemberIterator</link>;
297 
299 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&gt;
300 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_member_iterator">GenericMemberIterator</link>&lt;false,<link linkend="_classrapidjson_1_1_encoding">Encoding</link>,<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&gt;&#32;{
301 <emphasis role="keyword">public</emphasis>:
303 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member">GenericMember&lt;Encoding,Allocator&gt;</link>*&#32;<link linkend="_class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8">Iterator</link>;
304 };
306 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&gt;
307 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_member_iterator">GenericMemberIterator</link>&lt;true,<link linkend="_classrapidjson_1_1_encoding">Encoding</link>,<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&gt;&#32;{
308 <emphasis role="keyword">public</emphasis>:
310 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_member">GenericMember&lt;Encoding,Allocator&gt;</link>*&#32;<link linkend="_class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8">Iterator</link>;
311 };
312 
313 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RAPIDJSON_NOMEMBERITERATORCLASS</emphasis>
314 
316 <emphasis role="comment">//&#32;GenericStringRef</emphasis>
317 
319 
345 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;
346 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_generic_string_ref">GenericStringRef</link>&#32;{
347 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;CharType&#32;<link linkend="_struct_generic_string_ref_1a16908c3fce41be380061330c14ba2140">Ch</link>;&#32;
348 
350 <emphasis role="preprocessor">#ifndef&#32;__clang__&#32;</emphasis><emphasis role="comment">//&#32;-Wdocumentation</emphasis>
373 <emphasis role="comment"></emphasis>#endif
374 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;SizeType&#32;N&gt;
375 &#32;&#32;&#32;&#32;<link linkend="_struct_generic_string_ref_1aae0c070f914d2486a560150a927c22dc">GenericStringRef</link>(<emphasis role="keyword">const</emphasis>&#32;CharType&#32;(&amp;str)[N])&#32;RAPIDJSON_NOEXCEPT
376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be">s</link>(str),&#32;<link linkend="_struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe">length</link>(N-1)&#32;{}
377 
379 <emphasis role="preprocessor">#ifndef&#32;__clang__&#32;</emphasis><emphasis role="comment">//&#32;-Wdocumentation</emphasis>
398 <emphasis role="comment"></emphasis>#endif
399 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_struct_generic_string_ref_1a9e80d81d5ad49cf0fb4128ace8c548d9">GenericStringRef</link>(<emphasis role="keyword">const</emphasis>&#32;CharType*&#32;str)
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be">s</link>(str),&#32;<link linkend="_struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe">length</link>(<link linkend="_struct_generic_string_ref_1af51482556048c13920f5564a48e8ad7d">NotNullStrLen</link>(str))&#32;{}
401 
403 <emphasis role="preprocessor">#ifndef&#32;__clang__&#32;</emphasis><emphasis role="comment">//&#32;-Wdocumentation</emphasis>
410 <emphasis role="comment"></emphasis>#endif
411 &#32;&#32;&#32;&#32;<link linkend="_struct_generic_string_ref_1a8b2c6a7fdc4da1e7055f7fdcf0ac517f">GenericStringRef</link>(<emphasis role="keyword">const</emphasis>&#32;CharType*&#32;str,&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;len)
412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be">s</link>(<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5dc14176a9e71ace282404b0bcda57a1">RAPIDJSON_LIKELY</link>(str)&#32;?&#32;str&#32;:&#32;<link linkend="_struct_generic_string_ref_1aeb7a469eea3ca2a9fd9fcb2e33df4a6c">emptyString</link>),&#32;<link linkend="_struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe">length</link>(len)&#32;{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(str&#32;!=&#32;0&#32;||&#32;len&#32;==&#32;0u);&#32;}
413 
414 &#32;&#32;&#32;&#32;<link linkend="_struct_generic_string_ref_1ab049693082c0b8f5066c00212e780aec">GenericStringRef</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_generic_string_ref">GenericStringRef</link>&amp;&#32;rhs)&#32;:&#32;<link linkend="_struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be">s</link>(rhs.<link linkend="_struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be">s</link>),&#32;<link linkend="_struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe">length</link>(rhs.<link linkend="_struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe">length</link>)&#32;{}
415 
417 &#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_generic_string_ref_1a16908c3fce41be380061330c14ba2140">Ch</link>&#32;*()&#32;<emphasis role="keyword">const</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be">s</link>;&#32;}
418 
419 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_generic_string_ref_1a16908c3fce41be380061330c14ba2140">Ch</link>*&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be">s</link>;&#32;
420 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe">length</link>;&#32;
421 
422 <emphasis role="keyword">private</emphasis>:
423 &#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_struct_generic_string_ref_1af51482556048c13920f5564a48e8ad7d">NotNullStrLen</link>(<emphasis role="keyword">const</emphasis>&#32;CharType*&#32;str)&#32;{
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(str&#32;!=&#32;0);
425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceinternal_1a86326fb0c9d7c7ea8edd7deedbb2b26e">internal::StrLen</link>(str);
426 &#32;&#32;&#32;&#32;}
427 
429 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_generic_string_ref_1a16908c3fce41be380061330c14ba2140">Ch</link>&#32;<link linkend="_struct_generic_string_ref_1aeb7a469eea3ca2a9fd9fcb2e33df4a6c">emptyString</link>[];
430 
432 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;SizeType&#32;N&gt;
433 &#32;&#32;&#32;&#32;<link linkend="_struct_generic_string_ref_1ac0d64ff2d8a84b4f5a4b4dc687f49301">GenericStringRef</link>(CharType&#32;(&amp;str)[N])&#32;<emphasis role="comment">/*&#32;=&#32;delete&#32;*/</emphasis>;
435 &#32;&#32;&#32;&#32;<link linkend="_struct_generic_string_ref">GenericStringRef</link>&amp;&#32;<link linkend="_struct_generic_string_ref_1a0c001d5723bd8b3fc9cb6a253a94f011">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_generic_string_ref">GenericStringRef</link>&amp;&#32;rhs)&#32;<emphasis role="comment">/*&#32;=&#32;delete&#32;*/</emphasis>;
436 };
437 
438 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;
439 <emphasis role="keyword">const</emphasis>&#32;CharType&#32;<link linkend="_struct_generic_string_ref">GenericStringRef&lt;CharType&gt;::emptyString</link>[]&#32;=&#32;{&#32;CharType()&#32;};
440 
442 
453 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;
454 <emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_generic_string_ref">GenericStringRef&lt;CharType&gt;</link>&#32;<link linkend="_struct_generic_string_ref_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(<emphasis role="keyword">const</emphasis>&#32;CharType*&#32;str)&#32;{
455 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_generic_string_ref">GenericStringRef&lt;CharType&gt;</link>(str);
456 }
457 
459 
473 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;
474 <emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_generic_string_ref">GenericStringRef&lt;CharType&gt;</link>&#32;<link linkend="_struct_generic_string_ref_1a578c51ab574a50a9c760b9da7c7562f2">StringRef</link>(<emphasis role="keyword">const</emphasis>&#32;CharType*&#32;str,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length)&#32;{
475 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_generic_string_ref">GenericStringRef&lt;CharType&gt;</link>(str,&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>(length));
476 }
477 
478 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
480 
491 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;
492 <emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_generic_string_ref">GenericStringRef&lt;CharType&gt;</link>&#32;<link linkend="_struct_generic_string_ref_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;CharType&gt;&amp;&#32;str)&#32;{
493 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_generic_string_ref">GenericStringRef&lt;CharType&gt;</link>(str.data(),&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>(str.size()));
494 }
495 <emphasis role="preprocessor">#endif</emphasis>
496 
498 <emphasis role="comment">//&#32;GenericValue&#32;type&#32;traits</emphasis>
499 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceinternal">internal</link>&#32;{
500 
501 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;<emphasis role="keyword">typename</emphasis>&#32;Encoding&#32;=&#32;<emphasis role="keywordtype">void</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&#32;=&#32;<emphasis role="keywordtype">void</emphasis>&gt;
502 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_is_generic_value_impl">IsGenericValueImpl</link>&#32;:&#32;FalseType&#32;{};
503 
504 <emphasis role="comment">//&#32;select&#32;candidates&#32;according&#32;to&#32;nested&#32;encoding&#32;and&#32;allocator&#32;types</emphasis>
505 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_is_generic_value_impl">IsGenericValueImpl</link>&lt;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>,&#32;typename&#32;Void&lt;typename&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>::EncodingType&gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link>,&#32;typename&#32;Void&lt;typename&#32;T::AllocatorType&gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link>&gt;
506 &#32;&#32;&#32;&#32;:&#32;IsBaseOf&lt;GenericValue&lt;typename&#32;T::EncodingType,&#32;typename&#32;T::AllocatorType&gt;,&#32;T&gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link>&#32;{};
507 
508 <emphasis role="comment">//&#32;helper&#32;to&#32;match&#32;arbitrary&#32;GenericValue&#32;instantiations,&#32;including&#32;derived&#32;classes</emphasis>
509 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_is_generic_value">IsGenericValue</link>&#32;:&#32;<link linkend="_structinternal_1_1_is_generic_value_impl">IsGenericValueImpl</link>&lt;T&gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link>&#32;{};
510 
511 }&#32;<emphasis role="comment">//&#32;namespace&#32;internal</emphasis>
512 
514 <emphasis role="comment">//&#32;TypeHelper</emphasis>
515 
516 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceinternal">internal</link>&#32;{
517 
518 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType,&#32;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
519 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_type_helper">TypeHelper</link>&#32;{};
520 
521 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;&#32;
522 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_type_helper">TypeHelper</link>&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;bool&gt;&#32;{
523 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4_1aa73fb8b4ed649706f7f9165401f89c27">Is</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsBool();&#32;}
524 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4_1aed612b233e5985d049248b414fb0034a">Get</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetBool();&#32;}
525 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4_1ae6fc9b4f8dfe33efbf1c5e36faf0091a">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;data)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetBool(data);&#32;}
526 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4_1ada1da2523b0b3867c9500b0209b7d9ab">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;data,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&amp;)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetBool(data);&#32;}
527 };
528 
529 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;&#32;
530 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_type_helper">TypeHelper</link>&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;int&gt;&#32;{
531 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4_1aa17ef940501aac12fd7934ef979c607e">Is</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsInt();&#32;}
532 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4_1a98c331ac026873b9ad4ba68e7bf28446">Get</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetInt();&#32;}
533 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4_1a495199b499e09537c9e1b487ce6d8c14">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">int</emphasis>&#32;data)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetInt(data);&#32;}
534 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4_1a1a3e9791ca16e4d57075c7ad03322d66">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">int</emphasis>&#32;data,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&amp;)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetInt(data);&#32;}
535 };
536 
537 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;&#32;
538 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_type_helper">TypeHelper</link>&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;unsigned&gt;&#32;{
539 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4_1ad1c1cb931ed166508d17e866d410c99b">Is</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsUint();&#32;}
540 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4_1a2f91befe1e9e914e7431b84c0d89f572">Get</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetUint();&#32;}
541 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4_1a1a5ea12a9024c3d9d76f0ffafa6bf01b">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;data)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetUint(data);&#32;}
542 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4_1ae93fad1ee06ff8ce142708e31a2ce694">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;data,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&amp;)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetUint(data);&#32;}
543 };
544 
545 <emphasis role="preprocessor">#ifdef&#32;_MSC_VER</emphasis>
546 <link linkend="_rapidjson_8h_1af95188da1d8eb6d4b148fe9ce71cd7c4">RAPIDJSON_STATIC_ASSERT</link>(<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">long</emphasis>)&#32;==&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">int</emphasis>));
547 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;
548 <emphasis role="keyword">struct&#32;</emphasis>TypeHelper&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;long&gt;&#32;{
549 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Is(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsInt();&#32;}
550 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;Get(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetInt();&#32;}
551 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;Set(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">long</emphasis>&#32;data)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetInt(data);&#32;}
552 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;Set(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">long</emphasis>&#32;data,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&amp;)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetInt(data);&#32;}
553 };
554 
555 <link linkend="_rapidjson_8h_1af95188da1d8eb6d4b148fe9ce71cd7c4">RAPIDJSON_STATIC_ASSERT</link>(<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>)&#32;==&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>));
556 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;
557 <emphasis role="keyword">struct&#32;</emphasis>TypeHelper&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;unsigned&#32;long&gt;&#32;{
558 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Is(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsUint();&#32;}
559 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;Get(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetUint();&#32;}
560 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;Set(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;data)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetUint(data);&#32;}
561 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;Set(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;data,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&amp;)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetUint(data);&#32;}
562 };
563 <emphasis role="preprocessor">#endif</emphasis>
564 
565 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;&#32;
566 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_type_helper">TypeHelper</link>&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&gt;&#32;{
567 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4_1a43c171bfbe873941a1b2be698a95de74">Is</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsInt64();&#32;}
568 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4_1abe3368c8817cafe420a8b3f7d6ec1759">Get</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetInt64();&#32;}
569 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4_1a2c2c32f0e02abc21191161e966e88152">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&#32;data)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetInt64(data);&#32;}
570 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4_1a009129e705c4a342d19696ea3bef5416">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&#32;data,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&amp;)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetInt64(data);&#32;}
571 };
572 
573 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;&#32;
574 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_type_helper">TypeHelper</link>&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&gt;&#32;{
575 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4_1a4916651732ed27fa944c96a32cec5b88">Is</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsUint64();&#32;}
576 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4_1a1b1b2e4fe3c38fb37701284c6571ee92">Get</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetUint64();&#32;}
577 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4_1ae7dd2b4d800b7021a60dedc665be8ae4">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;data)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetUint64(data);&#32;}
578 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4_1a85ba4f6efcd460739e8fbad1fa804220">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;data,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&amp;)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetUint64(data);&#32;}
579 };
580 
581 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;&#32;
582 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_type_helper">TypeHelper</link>&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;double&gt;&#32;{
583 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4_1a6c265a3202beb9bd85ecc7896a8ab9dd">Is</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsDouble();&#32;}
584 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4_1ac55a96d2abd1dd6718a6cb3d6690aa38">Get</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetDouble();&#32;}
585 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4_1abb797ba373c4f7c72e6ef2500c4dff92">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">double</emphasis>&#32;data)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetDouble(data);&#32;}
586 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4_1a277ba130e18b0cddf9184416c43040cb">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">double</emphasis>&#32;data,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&amp;)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetDouble(data);&#32;}
587 };
588 
589 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;&#32;
590 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_type_helper">TypeHelper</link>&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;float&gt;&#32;{
591 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4_1a1108488a02868bb91c3c14f4598bbebc">Is</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsFloat();&#32;}
592 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4_1aa681e0d25878a7a770b0be82322b435a">Get</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetFloat();&#32;}
593 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4_1a420b674d6ad24b3509f430d11b74628f">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">float</emphasis>&#32;data)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetFloat(data);&#32;}
594 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4_1aee052cf34bcbdf52f67abde6b52bc5ac">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keywordtype">float</emphasis>&#32;data,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&amp;)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetFloat(data);&#32;}
595 };
596 
597 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;&#32;
598 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_type_helper">TypeHelper</link>&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;const&#32;typename&#32;<link linkend="_class_generic_value">ValueType</link>::Ch*&gt;&#32;{
599 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">ValueType::Ch</link>*&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a61b7fd9c92eab60394fdff466251c399">StringType</link>;
600 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a9543f180b6ac2b923486f1b69d5356ea">Is</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsString();&#32;}
601 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a61b7fd9c92eab60394fdff466251c399">StringType</link>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a11f8ddfbc91f1d890d63cc67e3f1abb6">Get</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetString();&#32;}
602 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a1d427205cf9eb8257027964ab306bd3b">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a61b7fd9c92eab60394fdff466251c399">StringType</link>&#32;data)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetString(<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_generic_string_ref">ValueType::StringRefType</link>(data));&#32;}
603 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a4b6fb32ec2d59846cbc5049b4d283111">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4_1a61b7fd9c92eab60394fdff466251c399">StringType</link>&#32;data,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&amp;&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetString(data,&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>);&#32;}
604 };
605 
606 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
607 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;&#32;
608 <emphasis role="keyword">struct&#32;</emphasis>TypeHelper&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;std::basic_string&lt;typename&#32;ValueType::Ch&gt;&#32;&gt;&#32;{
609 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::basic_string&lt;typename&#32;ValueType::Ch&gt;&#32;StringType;
610 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Is(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsString();&#32;}
611 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;StringType&#32;Get(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;StringType(v.GetString(),&#32;v.GetStringLength());&#32;}
612 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;Set(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<emphasis role="keyword">const</emphasis>&#32;StringType&amp;&#32;data,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&amp;&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.SetString(data,&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>);&#32;}
613 };
614 <emphasis role="preprocessor">#endif</emphasis>
615 
616 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;&#32;
617 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_type_helper">TypeHelper</link>&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;typename&#32;<link linkend="_class_generic_value">ValueType</link>::Array&gt;&#32;{
618 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_class_generic_array">ValueType::Array</link>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a8f384dc96b6104e85b956ec5f7386434">ArrayType</link>;
619 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a2a052fc0139112075f8bade42964273d">Is</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsArray();&#32;}
620 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_array">ArrayType</link>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a0e6bd47ab5da0387bf419cdf644035ab">Get</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetArray();&#32;}
621 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a45abc702bb54f4516cbbe9728b9a1547">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<link linkend="_class_generic_array">ArrayType</link>&#32;data)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v&#32;=&#32;data;&#32;}
622 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4_1a652b4873a0cbe228b7ee060970ccd3e0">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<link linkend="_class_generic_array">ArrayType</link>&#32;data,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&amp;)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v&#32;=&#32;data;&#32;}
623 };
624 
625 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;&#32;
626 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_type_helper">TypeHelper</link>&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;typename&#32;<link linkend="_class_generic_value">ValueType</link>::ConstArray&gt;&#32;{
627 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_class_generic_array">ValueType::ConstArray</link>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_array_01_4_1a88c3a7bbff09fdd44ce6980f8122ba05">ArrayType</link>;
628 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_array_01_4_1a259497292f89c58789b1e947249dd299">Is</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsArray();&#32;}
629 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_array">ArrayType</link>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_array_01_4_1a247811db25d6f25cc63175e03d847b8b">Get</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetArray();&#32;}
630 };
631 
632 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;&#32;
633 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_type_helper">TypeHelper</link>&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;typename&#32;<link linkend="_class_generic_value">ValueType</link>::Object&gt;&#32;{
634 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_class_generic_object">ValueType::Object</link>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1ac5d59bffe76792786fd5f1ba4da94dd9">ObjectType</link>;
635 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1a6c8bcb7479d2c4c96ae6dcaac808e227">Is</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsObject();&#32;}
636 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_object">ObjectType</link>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1ae1debd6b9c125d4206e43a74ddbd0795">Get</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetObject();&#32;}
637 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1a0b875752c65f9f2df3a351c1e818d9e4">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<link linkend="_class_generic_object">ObjectType</link>&#32;data)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v&#32;=&#32;data;&#32;}
638 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4_1aff688acbadc1888b8886a4d9b0753864">Set</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v,&#32;<link linkend="_class_generic_object">ObjectType</link>&#32;data,&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&amp;)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v&#32;=&#32;data;&#32;}
639 };
640 
641 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType&gt;&#32;
642 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinternal_1_1_type_helper">TypeHelper</link>&lt;<link linkend="_class_generic_value">ValueType</link>,&#32;typename&#32;<link linkend="_class_generic_value">ValueType</link>::ConstObject&gt;&#32;{
643 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_class_generic_object">ValueType::ConstObject</link>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_object_01_4_1a986df6ac09ceb6cc9ba9fd4d73e90495">ObjectType</link>;
644 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_object_01_4_1a843e707732c55f2178d399a0af13605a">Is</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.IsObject();&#32;}
645 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_generic_object">ObjectType</link>&#32;<link linkend="_structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_object_01_4_1ae6a797157c9b3d15ca4a32c48ea4bc73">Get</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;v)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.GetObject();&#32;}
646 };
647 
648 }&#32;<emphasis role="comment">//&#32;namespace&#32;internal</emphasis>
649 
650 <emphasis role="comment">//&#32;Forward&#32;declarations</emphasis>
651 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_array">GenericArray</link>;
652 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_object">GenericObject</link>;
653 
655 <emphasis role="comment">//&#32;GenericValue</emphasis>
656 
658 
667 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&#32;=&#32;RAPIDJSON_DEFAULT_ALLOCATOR&#32;&gt;
668 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_value">GenericValue</link>&#32;{
669 <emphasis role="keyword">public</emphasis>:
671 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member">GenericMember&lt;Encoding, Allocator&gt;</link>&#32;<link linkend="_class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886">Member</link>;
672 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_classrapidjson_1_1_encoding">Encoding</link>&#32;<link linkend="_class_generic_value_1a28c2cb8d04d12566c1af37597a46d209">EncodingType</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
673 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&#32;<link linkend="_class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1">AllocatorType</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
674 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;Encoding::Ch&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
675 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct_generic_string_ref">GenericStringRef&lt;Ch&gt;</link>&#32;<link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">StringRefType</link>;&#32;&#32;&#32;&#32;&#32;
676 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator&lt;false,Encoding,Allocator&gt;::Iterator</link>&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>;&#32;&#32;
677 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator&lt;true,Encoding,Allocator&gt;::Iterator</link>&#32;<link linkend="_class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4">ConstMemberIterator</link>;&#32;&#32;
678 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_value">GenericValue</link>*&#32;<link linkend="_class_generic_value_1aee30721a49688ba0f865f5d581eb6be9">ValueIterator</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
679 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue</link>*&#32;<link linkend="_class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea">ConstValueIterator</link>;&#32;
680 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, Allocator&gt;</link>&#32;<link linkend="_class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce">ValueType</link>;&#32;&#32;&#32;&#32;
681 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_array">GenericArray&lt;false, ValueType&gt;</link>&#32;<link linkend="_class_generic_value_1a149e12992b8f6064c865a4cf55981b89">Array</link>;
682 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_array">GenericArray&lt;true, ValueType&gt;</link>&#32;<link linkend="_class_generic_value_1a8f1d2728de56600b5f3df596e2a8a181">ConstArray</link>;
683 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_object">GenericObject&lt;false, ValueType&gt;</link>&#32;<link linkend="_class_generic_value_1aee3606d69d411ce0d98f29639585989b">Object</link>;
684 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_object">GenericObject&lt;true, ValueType&gt;</link>&#32;<link linkend="_class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e">ConstObject</link>;
685 
687 
688 
690 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>()&#32;RAPIDJSON_NOEXCEPT&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d">kNullFlag</link>;&#32;}
691 
692 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
694 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<link linkend="_class_generic_value">GenericValue</link>&amp;&amp;&#32;rhs)&#32;RAPIDJSON_NOEXCEPT&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>(rhs.data_)&#32;{
695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rhs.data_.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d">kNullFlag</link>;&#32;<emphasis role="comment">//&#32;give&#32;up&#32;contents</emphasis>
696 &#32;&#32;&#32;&#32;}
697 <emphasis role="preprocessor">#endif</emphasis>
698 
699 <emphasis role="keyword">private</emphasis>:
701 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ac5bfd54b6bdea215716df69c501d5cf3">GenericValue</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;rhs);
702 
703 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
705 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;StackAllocator&gt;
706 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<link linkend="_class_generic_document">GenericDocument&lt;Encoding,Allocator,StackAllocator&gt;</link>&amp;&amp;&#32;rhs);
707 
709 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;StackAllocator&gt;
710 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;<link linkend="_class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90">operator=</link>(<link linkend="_class_generic_document">GenericDocument&lt;Encoding,Allocator,StackAllocator&gt;</link>&amp;&amp;&#32;rhs);
711 <emphasis role="preprocessor">#endif</emphasis>
712 
713 <emphasis role="keyword">public</emphasis>:
714 
716 
720 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_generic_value_1a83c8f84b8e61f2f40414b703b75aea61">GenericValue</link>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link>&#32;type)&#32;RAPIDJSON_NOEXCEPT&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{
721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a273cf69d639a59973b6019625df33e30">uint16_t</link>&#32;defaultFlags[]&#32;=&#32;{
722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d">kNullFlag</link>,&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca66d3877b074bb1a0455a6f6d3f7f91a3">kFalseFlag</link>,&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca75dbcdbacc82f9379c602f0b6c41cf07">kTrueFlag</link>,&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c">kObjectFlag</link>,&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47">kArrayFlag</link>,&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caca24fa09485fa10b17071509a985ff01">kShortStringFlag</link>,
723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cab7805b1908fd181afc8d70fe07b17e18">kNumberAnyFlag</link>
724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga2b2a0d9143aa4fb31205a85b34c43952">RAPIDJSON_NOEXCEPT_ASSERT</link>(type&#32;&gt;=&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7aa09befbfb4f2e1409f237817979d8087">kNullType</link>&#32;&amp;&amp;&#32;type&#32;&lt;=&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d">kNumberType</link>);
726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;defaultFlags[type];
727 
728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;ShortString&#32;to&#32;store&#32;empty&#32;string.</emphasis>
729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;==&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338">kStringType</link>)
730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c">ss</link>.<link linkend="_struct_generic_value_1_1_short_string_1adbfe8461e0cb0ccb2cb3825489e743c2">SetLength</link>(0);
731 &#32;&#32;&#32;&#32;}
732 
734 
741 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
742 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a76c68b72723a06045776dbd425f9e8b6">GenericValue</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding,SourceAllocator&gt;</link>&amp;&#32;rhs,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;copyConstStrings&#32;=&#32;<emphasis role="keyword">false</emphasis>)&#32;{
743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(rhs.GetType())&#32;{
744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f">kObjectType</link>:
745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a17e90627a90a4e97e8425e0ca4a22cbb">DoCopyMembers</link>(rhs,&#32;allocator,&#32;copyConstStrings);
746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8">kArrayType</link>:&#32;{
748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;count&#32;=&#32;rhs.<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>;
749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>*&#32;le&#32;=&#32;<emphasis role="keyword">reinterpret_cast&lt;</emphasis><link linkend="_class_generic_value">GenericValue</link>*<emphasis role="keyword">&gt;</emphasis>(allocator.Malloc(count&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value">GenericValue</link>)));
750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding,SourceAllocator&gt;</link>*&#32;re&#32;=&#32;rhs.<link linkend="_class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc">GetElementsPointer</link>();
751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;count;&#32;i++)
752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(&amp;le[i])&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(re[i],&#32;allocator,&#32;copyConstStrings);
753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47">kArrayFlag</link>;
754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>&#32;=&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5">capacity</link>&#32;=&#32;count;
755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a1ccc6e15fa49f0c30eab8e8f7f9418f2">SetElementsPointer</link>(le);
756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338">kStringType</link>:
759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rhs.<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;==&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca5d26a84f26833eafd0028c0102a388a9">kConstStringFlag</link>&#32;&amp;&amp;&#32;!copyConstStrings)&#32;{
760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;rhs.<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>;
761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>&#32;&#32;=&#32;*<emphasis role="keyword">reinterpret_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><link linkend="_union_generic_value_1_1_data">Data</link>*<emphasis role="keyword">&gt;</emphasis>(&amp;rhs.<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>);
762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a1451603922dcdf34976f125dc60f70ee">SetStringRaw</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(rhs.GetString(),&#32;rhs.GetStringLength()),&#32;allocator);
765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;rhs.<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>;
768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>&#32;&#32;=&#32;*<emphasis role="keyword">reinterpret_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><link linkend="_union_generic_value_1_1_data">Data</link>*<emphasis role="keyword">&gt;</emphasis>(&amp;rhs.<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>);
769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
771 &#32;&#32;&#32;&#32;}
772 
774 
779 <emphasis role="preprocessor">#ifndef&#32;RAPIDJSON_DOXYGEN_RUNNING&#32;</emphasis><emphasis role="comment">//&#32;hide&#32;SFINAE&#32;from&#32;Doxygen</emphasis>
780 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
781 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_generic_value_1a0f6a0394bfffaedde88e433b2265194c">GenericValue</link>(<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;b,&#32;RAPIDJSON_ENABLEIF((internal::IsSame&lt;bool,&#32;T&gt;)))&#32;RAPIDJSON_NOEXCEPT&#32;&#32;<emphasis role="comment">//&#32;See&#32;#472</emphasis>
782 <emphasis role="preprocessor">#else</emphasis>
783 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<emphasis role="keywordtype">bool</emphasis>&#32;b)&#32;RAPIDJSON_NOEXCEPT
784 <emphasis role="preprocessor">#endif</emphasis>
785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{
786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;safe-guard&#32;against&#32;failing&#32;SFINAE</emphasis>
787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1af95188da1d8eb6d4b148fe9ce71cd7c4">RAPIDJSON_STATIC_ASSERT</link>((<link linkend="_document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481">internal::IsSame&lt;bool,T&gt;::Value</link>));
788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;b&#32;?&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca75dbcdbacc82f9379c602f0b6c41cf07">kTrueFlag</link>&#32;:&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca66d3877b074bb1a0455a6f6d3f7f91a3">kFalseFlag</link>;
789 &#32;&#32;&#32;&#32;}
790 
792 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_generic_value_1aafc754ade38421c179f5c8933ecbaf45">GenericValue</link>(<emphasis role="keywordtype">int</emphasis>&#32;i)&#32;RAPIDJSON_NOEXCEPT&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{
793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b">i64</link>&#32;=&#32;i;
794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;(i&#32;&gt;=&#32;0)&#32;?&#32;(<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cacfe8b720220d0a2e378683367386cbaf">kNumberIntFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce">kUintFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94">kUint64Flag</link>)&#32;:&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cacfe8b720220d0a2e378683367386cbaf">kNumberIntFlag</link>;
795 &#32;&#32;&#32;&#32;}
796 
798 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_generic_value_1a972bff6c56ac3d04622ff7fad8d98331">GenericValue</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;u)&#32;RAPIDJSON_NOEXCEPT&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{
799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430">u64</link>&#32;=&#32;u;&#32;
800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;(u&#32;&amp;&#32;0x80000000)&#32;?&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae8c6c6286edf9c309e77af0ea0cf039c">kNumberUintFlag</link>&#32;:&#32;(<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae8c6c6286edf9c309e77af0ea0cf039c">kNumberUintFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb">kIntFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a">kInt64Flag</link>);
801 &#32;&#32;&#32;&#32;}
802 
804 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_generic_value_1a964b69f1d2596f75ded5421b6db01a14">GenericValue</link>(<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&#32;i64)&#32;RAPIDJSON_NOEXCEPT&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{
805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b">i64</link>&#32;=&#32;i64;
806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cad117eb41bb8015a76aadf6149bbd8ce5">kNumberInt64Flag</link>;
807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i64&#32;&gt;=&#32;0)&#32;{
808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;|=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caaa1ee6a546d4db67f4bdef41d1f54f02">kNumberUint64Flag</link>;
809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link><emphasis role="keyword">&gt;</emphasis>(i64)&#32;&amp;&#32;<link linkend="_rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f">RAPIDJSON_UINT64_C2</link>(0xFFFFFFFF,&#32;0x00000000)))
810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;|=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce">kUintFlag</link>;
811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link><emphasis role="keyword">&gt;</emphasis>(i64)&#32;&amp;&#32;<link linkend="_rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f">RAPIDJSON_UINT64_C2</link>(0xFFFFFFFF,&#32;0x80000000)))
812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;|=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb">kIntFlag</link>;
813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i64&#32;&gt;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link><emphasis role="keyword">&gt;</emphasis>(<link linkend="_rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f">RAPIDJSON_UINT64_C2</link>(0xFFFFFFFF,&#32;0x80000000)))
815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;|=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb">kIntFlag</link>;
816 &#32;&#32;&#32;&#32;}
817 
819 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_generic_value_1ad04805a57f5050c8e04be469ba64d6f3">GenericValue</link>(<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;u64)&#32;RAPIDJSON_NOEXCEPT&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{
820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430">u64</link>&#32;=&#32;u64;
821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caaa1ee6a546d4db67f4bdef41d1f54f02">kNumberUint64Flag</link>;
822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(u64&#32;&amp;&#32;<link linkend="_rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f">RAPIDJSON_UINT64_C2</link>(0x80000000,&#32;0x00000000)))
823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;|=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a">kInt64Flag</link>;
824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(u64&#32;&amp;&#32;<link linkend="_rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f">RAPIDJSON_UINT64_C2</link>(0xFFFFFFFF,&#32;0x00000000)))
825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;|=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce">kUintFlag</link>;
826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(u64&#32;&amp;&#32;<link linkend="_rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f">RAPIDJSON_UINT64_C2</link>(0xFFFFFFFF,&#32;0x80000000)))
827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;|=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb">kIntFlag</link>;
828 &#32;&#32;&#32;&#32;}
829 
831 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_generic_value_1a267d05b7e98c3507908eaf085fe41155">GenericValue</link>(<emphasis role="keywordtype">double</emphasis>&#32;d)&#32;RAPIDJSON_NOEXCEPT&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a7ca3ad492fff303586d241eb0d17c242">d</link>&#32;=&#32;d;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca29bc91c155577923abd8f19aa050058b">kNumberDoubleFlag</link>;&#32;}
832 
834 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_generic_value_1acad11ab781251634a3c079aa64a6d283">GenericValue</link>(<emphasis role="keywordtype">float</emphasis>&#32;f)&#32;RAPIDJSON_NOEXCEPT&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a7ca3ad492fff303586d241eb0d17c242">d</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(f);&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca29bc91c155577923abd8f19aa050058b">kNumberDoubleFlag</link>;&#32;}
835 
837 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a4d9af98141360cd801daab4ed1ca2c91">GenericValue</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;s,&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;length)&#32;RAPIDJSON_NOEXCEPT&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{&#32;<link linkend="_class_generic_value_1a1451603922dcdf34976f125dc60f70ee">SetStringRaw</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(s,&#32;length));&#32;}
838 
840 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_generic_value_1abb2887958974fef1b2b5c8e32cc72ddb">GenericValue</link>(<link linkend="_struct_generic_string_ref">StringRefType</link>&#32;s)&#32;RAPIDJSON_NOEXCEPT&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{&#32;<link linkend="_class_generic_value_1a1451603922dcdf34976f125dc60f70ee">SetStringRaw</link>(s);&#32;}
841 
843 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a9ec2c7cda8c8845acfa3565c6b1b4e10">GenericValue</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;s,&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;length,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{&#32;<link linkend="_class_generic_value_1a1451603922dcdf34976f125dc60f70ee">SetStringRaw</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(s,&#32;length),&#32;allocator);&#32;}
844 
846 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a9b72b2e3347d4cd77b16c3b45e8decf1">GenericValue</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*s,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{&#32;<link linkend="_class_generic_value_1a1451603922dcdf34976f125dc60f70ee">SetStringRaw</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(s),&#32;allocator);&#32;}
847 
848 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
850 
852 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;s,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>()&#32;{&#32;<link linkend="_class_generic_value_1a1451603922dcdf34976f125dc60f70ee">SetStringRaw</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(s),&#32;allocator);&#32;}
853 <emphasis role="preprocessor">#endif</emphasis>
854 
856 
861 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a953052ef91e54aabe9bdb9f9eaebf6cc">GenericValue</link>(<link linkend="_class_generic_array">Array</link>&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>)&#32;RAPIDJSON_NOEXCEPT&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>(<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>.value_.data_)&#32;{
862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>.value_.data_&#32;=&#32;<link linkend="_union_generic_value_1_1_data">Data</link>();
863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>.value_.data_.f.flags&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47">kArrayFlag</link>;
864 &#32;&#32;&#32;&#32;}
865 
867 
872 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a9c294e56f4ab940f845f7c171b183483">GenericValue</link>(<link linkend="_class_generic_object">Object</link>&#32;o)&#32;RAPIDJSON_NOEXCEPT&#32;:&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>(o.value_.data_)&#32;{
873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;o.value_.data_&#32;=&#32;<link linkend="_union_generic_value_1_1_data">Data</link>();
874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;o.value_.data_.f.flags&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c">kObjectFlag</link>;
875 &#32;&#32;&#32;&#32;}
876 
878 
880 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>()&#32;{
881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;With&#32;RAPIDJSON_USE_MEMBERSMAP,&#32;the&#32;maps&#32;need&#32;to&#32;be&#32;destroyed&#32;to&#32;release</emphasis>
882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;their&#32;Allocator&#32;if&#32;it&apos;s&#32;refcounted&#32;(e.g.&#32;MemoryPoolAllocator).</emphasis>
883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Allocator::kNeedFree&#32;||&#32;(<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga87dc65109882910388121e1dba15038b">RAPIDJSON_USE_MEMBERSMAP</link>+0&#32;&amp;&amp;
884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structinternal_1_1_is_ref_counted">internal::IsRefCounted&lt;Allocator&gt;::Value</link>))&#32;{
885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>)&#32;{
886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47">kArrayFlag</link>:
887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>*&#32;e&#32;=&#32;<link linkend="_class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc">GetElementsPointer</link>();
889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_class_generic_value">GenericValue</link>*&#32;v&#32;=&#32;e;&#32;v&#32;!=&#32;e&#32;+&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>;&#32;++v)
890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();
891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Allocator::kNeedFree)&#32;{&#32;<emphasis role="comment">//&#32;Shortcut&#32;by&#32;Allocator&apos;s&#32;trait</emphasis>
892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e">Allocator::Free</link>(e);
893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
896 
897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c">kObjectFlag</link>:
898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aab3a51f8207a44ad87a1f8b0bbf53fe9">DoFreeMembers</link>();
899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
900 
901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10c83f7f191dce81bb0273adc0d838de">kCopyStringFlag</link>:
902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Allocator::kNeedFree)&#32;{&#32;<emphasis role="comment">//&#32;Shortcut&#32;by&#32;Allocator&apos;s&#32;trait</emphasis>
903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e">Allocator::Free</link>(<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*<emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1af182f2ccbcd962d2a28f92407622e9a9">GetStringPointer</link>()));
904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
906 
907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;&#32;<emphasis role="comment">//&#32;Do&#32;nothing&#32;for&#32;other&#32;types.</emphasis>
909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
911 &#32;&#32;&#32;&#32;}
912 
914 
916 
917 
919 
921 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;<link linkend="_class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90">operator=</link>(<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;rhs)&#32;RAPIDJSON_NOEXCEPT&#32;{
922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5dc14176a9e71ace282404b0bcda57a1">RAPIDJSON_LIKELY</link>(<emphasis role="keyword">this</emphasis>&#32;!=&#32;&amp;rhs))&#32;{
923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Can&apos;t&#32;destroy&#32;&quot;this&quot;&#32;before&#32;assigning&#32;&quot;rhs&quot;,&#32;otherwise&#32;&quot;rhs&quot;</emphasis>
924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;could&#32;be&#32;used&#32;after&#32;free&#32;if&#32;it&apos;s&#32;an&#32;sub-Value&#32;of&#32;&quot;this&quot;,</emphasis>
925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;hence&#32;the&#32;temporary&#32;danse.</emphasis>
926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;temp;
927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp.<link linkend="_class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81">RawAssign</link>(rhs);
928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();
929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81">RawAssign</link>(temp);
930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
932 &#32;&#32;&#32;&#32;}
933 
934 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
936 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;<link linkend="_class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90">operator=</link>(<link linkend="_class_generic_value">GenericValue</link>&amp;&amp;&#32;rhs)&#32;RAPIDJSON_NOEXCEPT&#32;{
937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>&#32;=&#32;rhs.Move();
938 &#32;&#32;&#32;&#32;}
939 <emphasis role="preprocessor">#endif</emphasis>
940 
942 
946 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;<link linkend="_class_generic_value_1a2b7837d3adb6c0ad184269826ea78e97">operator=</link>(<link linkend="_struct_generic_string_ref">StringRefType</link>&#32;str)&#32;RAPIDJSON_NOEXCEPT&#32;{
947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;s(str);
948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>&#32;=&#32;s;
949 &#32;&#32;&#32;&#32;}
950 
952 
963 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
964 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680">RAPIDJSON_DISABLEIF_RETURN</link>((internal::IsPointer&lt;T&gt;),&#32;(<link linkend="_class_generic_value">GenericValue</link>&amp;))
965 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90">operator=</link>(<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>)&#32;{
966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;v(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>);
967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>&#32;=&#32;v;
968 &#32;&#32;&#32;&#32;}
969 
971 
977 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
978 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;CopyFrom(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&amp;&#32;rhs,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;copyConstStrings&#32;=&#32;<emphasis role="keyword">false</emphasis>)&#32;{
979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">this</emphasis>)&#32;!=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>&#32;const*<emphasis role="keyword">&gt;</emphasis>(&amp;rhs));
980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();
981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">this</emphasis>)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(rhs,&#32;allocator,&#32;copyConstStrings);
982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
983 &#32;&#32;&#32;&#32;}
984 
986 
990 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;<link linkend="_namespaceinternal_1a72b2c71d36273b9691487f58c671ce04">Swap</link>(<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;other)&#32;RAPIDJSON_NOEXCEPT&#32;{
991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;temp;
992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp.<link linkend="_class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81">RawAssign</link>(*<emphasis role="keyword">this</emphasis>);
993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81">RawAssign</link>(other);
994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;other.RawAssign(temp);
995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
996 &#32;&#32;&#32;&#32;}
997 
999 
1010 &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;swap(<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>,&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;b)&#32;RAPIDJSON_NOEXCEPT&#32;{&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>.Swap(b);&#32;}
1011 
1013 
1014 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;Move()&#32;RAPIDJSON_NOEXCEPT&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
1016 
1018 
1019 
1024 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
1025 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator==(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&amp;&#32;rhs)<emphasis role="keyword">&#32;const&#32;</emphasis>{
1026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&#32;RhsType;
1027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GetType()&#32;!=&#32;rhs.GetType())
1028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1029 
1030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(GetType())&#32;{
1031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f">kObjectType</link>:&#32;<emphasis role="comment">//&#32;Warning:&#32;O(n^2)&#32;inner-loop</emphasis>
1032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>&#32;!=&#32;rhs.<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>)
1033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
1034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4">ConstMemberIterator</link>&#32;lhsMemberItr&#32;=&#32;MemberBegin();&#32;lhsMemberItr&#32;!=&#32;MemberEnd();&#32;++lhsMemberItr)&#32;{
1035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;RhsType::ConstMemberIterator&#32;rhsMemberItr&#32;=&#32;rhs.FindMember(lhsMemberItr-&gt;name);
1036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rhsMemberItr&#32;==&#32;rhs.MemberEnd()&#32;||&#32;lhsMemberItr-&gt;value&#32;!=&#32;rhsMemberItr-&gt;value)
1037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
1040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
1041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8">kArrayType</link>:
1042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>&#32;!=&#32;rhs.<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>)
1043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>;&#32;i++)
1045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((*<emphasis role="keyword">this</emphasis>)[i]&#32;!=&#32;rhs[i])
1046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
1048 
1049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338">kStringType</link>:
1050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1ad4d088dc601d99fea9d16300a7ec7ee1">StringEqual</link>(rhs);
1051 
1052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d">kNumberType</link>:
1053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IsDouble()&#32;||&#32;rhs.IsDouble())&#32;{
1054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;=&#32;GetDouble();&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;May&#32;convert&#32;from&#32;integer&#32;to&#32;double.</emphasis>
1055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;b&#32;=&#32;rhs.GetDouble();&#32;<emphasis role="comment">//&#32;Ditto</emphasis>
1056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;&gt;=&#32;b&#32;&amp;&amp;&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;&lt;=&#32;b;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prevent&#32;-Wfloat-equal</emphasis>
1057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430">u64</link>&#32;==&#32;rhs.<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430">u64</link>;
1060 
1061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
1062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
1063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1064 &#32;&#32;&#32;&#32;}
1065 
1067 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator==(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;rhs)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>&#32;==&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(rhs));&#32;}
1068 
1069 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
1071 
1073 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator==(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;rhs)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>&#32;==&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(rhs));&#32;}
1074 <emphasis role="preprocessor">#endif</emphasis>
1075 
1077 
1079 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<link linkend="_class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680">RAPIDJSON_DISABLEIF_RETURN</link>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,<link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue&lt;T&gt;</link>&#32;&gt;),&#32;(<emphasis role="keywordtype">bool</emphasis>))&#32;operator==(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&amp;&#32;rhs)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>&#32;==&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(rhs);&#32;}
1080 
1082 
1084 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
1085 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator!=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&amp;&#32;rhs)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(*<emphasis role="keyword">this</emphasis>&#32;==&#32;rhs);&#32;}
1086 
1088 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator!=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;rhs)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(*<emphasis role="keyword">this</emphasis>&#32;==&#32;rhs);&#32;}
1089 
1091 
1093 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<link linkend="_class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680">RAPIDJSON_DISABLEIF_RETURN</link>((<link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue&lt;T&gt;</link>),&#32;(<emphasis role="keywordtype">bool</emphasis>))&#32;operator!=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&amp;&#32;rhs)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(*<emphasis role="keyword">this</emphasis>&#32;==&#32;rhs);&#32;}
1094 
1095 <emphasis role="preprocessor">#ifndef&#32;__cpp_lib_three_way_comparison</emphasis>
1097 
1099 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">friend</emphasis>&#32;<link linkend="_class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680">RAPIDJSON_DISABLEIF_RETURN</link>((<link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue&lt;T&gt;</link>),&#32;(<emphasis role="keywordtype">bool</emphasis>))&#32;operator==(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&amp;&#32;lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;rhs)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;rhs&#32;==&#32;lhs;&#32;}
1100 
1102 
1104 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<emphasis role="keyword">friend</emphasis>&#32;<link linkend="_class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680">RAPIDJSON_DISABLEIF_RETURN</link>((<link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue&lt;T&gt;</link>),&#32;(<emphasis role="keywordtype">bool</emphasis>))&#32;operator!=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&amp;&#32;lhs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;rhs)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(rhs&#32;==&#32;lhs);&#32;}
1106 <emphasis role="preprocessor">#endif</emphasis>
1107 
1109 
1110 
1111 &#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link>&#32;GetType()<emphasis role="keyword">&#32;&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca793e0bc40e0abe1ed8bcb3e6fbba65c2">kTypeMask</link>);&#32;}
1112 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsNull()<emphasis role="keyword">&#32;&#32;&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;==&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d">kNullFlag</link>;&#32;}
1113 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsFalse()<emphasis role="keyword">&#32;&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;==&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca66d3877b074bb1a0455a6f6d3f7f91a3">kFalseFlag</link>;&#32;}
1114 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsTrue()<emphasis role="keyword">&#32;&#32;&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;==&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca75dbcdbacc82f9379c602f0b6c41cf07">kTrueFlag</link>;&#32;}
1115 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsBool()<emphasis role="keyword">&#32;&#32;&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac48966386b231124da7c3fb870e237ee">kBoolFlag</link>)&#32;!=&#32;0;&#32;}
1116 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsObject()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;==&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c">kObjectFlag</link>;&#32;}
1117 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsArray()<emphasis role="keyword">&#32;&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;==&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47">kArrayFlag</link>;&#32;}
1118 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsNumber()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79">kNumberFlag</link>)&#32;!=&#32;0;&#32;}
1119 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsInt()<emphasis role="keyword">&#32;&#32;&#32;&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb">kIntFlag</link>)&#32;!=&#32;0;&#32;}
1120 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsUint()<emphasis role="keyword">&#32;&#32;&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce">kUintFlag</link>)&#32;!=&#32;0;&#32;}
1121 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsInt64()<emphasis role="keyword">&#32;&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a">kInt64Flag</link>)&#32;!=&#32;0;&#32;}
1122 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsUint64()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94">kUint64Flag</link>)&#32;!=&#32;0;&#32;}
1123 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsDouble()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c">kDoubleFlag</link>)&#32;!=&#32;0;&#32;}
1124 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsString()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf3bf3661275a38c86addba900c52dccb">kStringFlag</link>)&#32;!=&#32;0;&#32;}
1125 
1126 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Checks&#32;whether&#32;a&#32;number&#32;can&#32;be&#32;losslessly&#32;converted&#32;to&#32;a&#32;double.</emphasis>
1127 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsLosslessDouble()<emphasis role="keyword">&#32;const&#32;</emphasis>{
1128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!IsNumber())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IsUint64())&#32;{
1130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;u&#32;=&#32;GetUint64();
1131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;d&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(u);
1132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(d&#32;&gt;=&#32;0.0)
1133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(d&#32;&lt;&#32;static_cast&lt;double&gt;((std::numeric_limits&lt;uint64_t&gt;::max)()))
1134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(u&#32;==&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link><emphasis role="keyword">&gt;</emphasis>(d));
1135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IsInt64())&#32;{
1137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&#32;i&#32;=&#32;GetInt64();
1138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;d&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(i);
1139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(d&#32;&gt;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>((std::numeric_limits&lt;int64_t&gt;::min)()))
1140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(d&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>((std::numeric_limits&lt;int64_t&gt;::max)()))
1141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(i&#32;==&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link><emphasis role="keyword">&gt;</emphasis>(d));
1142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;<emphasis role="comment">//&#32;double,&#32;int,&#32;uint&#32;are&#32;always&#32;lossless</emphasis>
1144 &#32;&#32;&#32;&#32;}
1145 
1146 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Checks&#32;whether&#32;a&#32;number&#32;is&#32;a&#32;float&#32;(possible&#32;lossy).</emphasis>
1147 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsFloat()<emphasis role="keyword">&#32;const&#32;&#32;</emphasis>{
1148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c">kDoubleFlag</link>)&#32;==&#32;0)
1149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;d&#32;=&#32;GetDouble();
1151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;d&#32;&gt;=&#32;-3.4028234e38&#32;&amp;&amp;&#32;d&#32;&lt;=&#32;3.4028234e38;
1152 &#32;&#32;&#32;&#32;}
1153 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Checks&#32;whether&#32;a&#32;number&#32;can&#32;be&#32;losslessly&#32;converted&#32;to&#32;a&#32;float.</emphasis>
1154 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsLosslessFloat()<emphasis role="keyword">&#32;const&#32;</emphasis>{
1155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!IsNumber())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;=&#32;GetDouble();
1157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(-(std::numeric_limits&lt;float&gt;::max)())
1158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;&gt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>((std::numeric_limits&lt;float&gt;::max)()))
1159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;b&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>));
1161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;&gt;=&#32;b&#32;&amp;&amp;&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;&lt;=&#32;b;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prevent&#32;-Wfloat-equal</emphasis>
1162 &#32;&#32;&#32;&#32;}
1163 
1165 
1167 
1168 
1169 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetNull()&#32;{&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">this</emphasis>)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>();&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
1170 
1172 
1174 
1175 
1176 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetBool()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsBool());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;==&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca75dbcdbacc82f9379c602f0b6c41cf07">kTrueFlag</link>;&#32;}
1178 
1179 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetBool(<emphasis role="keywordtype">bool</emphasis>&#32;b)&#32;{&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">this</emphasis>)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(b);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
1180 
1182 
1184 
1185 
1187 
1188 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetObject()&#32;{&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">this</emphasis>)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f">kObjectType</link>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
1189 
1191 &#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;MemberCount()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>;&#32;}
1192 
1194 &#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;MemberCapacity()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b">capacity</link>;&#32;}
1195 
1197 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ObjectEmpty()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>&#32;==&#32;0;&#32;}
1198 
1200 
1208 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
1209 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680">RAPIDJSON_DISABLEIF_RETURN</link>((internal::NotExpr&lt;internal::IsSame&lt;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">internal::RemoveConst&lt;T&gt;::Type</link>,&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>&gt;&#32;&gt;),(<link linkend="_class_generic_value">GenericValue</link>&amp;))&#32;operator[](<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>*&#32;name)&#32;{
1210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;n(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(name));
1211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>)[n];
1212 &#32;&#32;&#32;&#32;}
1213 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
1214 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680">RAPIDJSON_DISABLEIF_RETURN</link>((internal::NotExpr&lt;internal::IsSame&lt;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">internal::RemoveConst&lt;T&gt;::Type</link>,&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>&gt;&#32;&gt;),(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;))&#32;operator[](<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>*&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="_class_generic_value">GenericValue</link>&amp;<emphasis role="keyword">&gt;</emphasis>(*this)[name];&#32;}
1215 
1217 
1225 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
1226 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;operator[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&amp;&#32;name)&#32;{
1227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>&#32;member&#32;=&#32;FindMember(name);
1228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(member&#32;!=&#32;MemberEnd())
1229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;member-&gt;value;
1230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
1231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<emphasis role="keyword">false</emphasis>);&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;see&#32;above&#32;note</emphasis>
1232 
1233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;will&#32;generate&#32;-Wexit-time-destructors&#32;in&#32;clang</emphasis>
1234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;static&#32;GenericValue&#32;NullValue;</emphasis>
1235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;return&#32;NullValue;</emphasis>
1236 
1237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;static&#32;buffer&#32;and&#32;placement-new&#32;to&#32;prevent&#32;destruction</emphasis>
1238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;buffer[<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>)];
1239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">new</emphasis>&#32;(buffer)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>();
1240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1241 &#32;&#32;&#32;&#32;}
1242 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
1243 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;operator[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="_class_generic_value">GenericValue</link>&amp;<emphasis role="keyword">&gt;</emphasis>(*this)[name];&#32;}
1244 
1245 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
1247 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;operator[](<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;name)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>)[<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(name))];&#32;}
1248 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;operator[](<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>)[<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(name))];&#32;}
1249 <emphasis role="preprocessor">#endif</emphasis>
1250 
1252 
1253 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4">ConstMemberIterator</link>&#32;MemberBegin()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4">ConstMemberIterator</link>(<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>());&#32;}
1255 
1256 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4">ConstMemberIterator</link>&#32;MemberEnd()<emphasis role="keyword">&#32;const&#32;&#32;&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4">ConstMemberIterator</link>(<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>()&#32;+&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>);&#32;}
1258 
1259 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>&#32;MemberBegin()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>(<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>());&#32;}
1261 
1262 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>&#32;MemberEnd()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>(<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>()&#32;+&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>);&#32;}
1263 
1265 
1270 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;MemberReserve(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;newCapacity,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&#32;&amp;allocator)&#32;{
1271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());
1272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a37e400c98968dec21293861983db9b06">DoReserveMembers</link>(newCapacity,&#32;allocator);
1273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
1274 &#32;&#32;&#32;&#32;}
1275 
1277 
1284 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;HasMember(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;FindMember(name)&#32;!=&#32;MemberEnd();&#32;}
1285 
1286 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
1288 
1295 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;HasMember(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;FindMember(name)&#32;!=&#32;MemberEnd();&#32;}
1296 <emphasis role="preprocessor">#endif</emphasis>
1297 
1299 
1307 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
1308 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;HasMember(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;FindMember(name)&#32;!=&#32;MemberEnd();&#32;}
1309 
1311 
1322 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>&#32;FindMember(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;name)&#32;{
1323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;n(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(name));
1324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;FindMember(n);
1325 &#32;&#32;&#32;&#32;}
1326 
1327 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4">ConstMemberIterator</link>&#32;FindMember(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="_class_generic_value">GenericValue</link>&amp;<emphasis role="keyword">&gt;</emphasis>(*this).FindMember(name);&#32;}
1328 
1330 
1342 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
1343 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>&#32;FindMember(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&amp;&#32;name)&#32;{
1344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());
1345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(name.IsString());
1346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a62e070232ca1bab936de08b8dbf41a5d">DoFindMember</link>(name);
1347 &#32;&#32;&#32;&#32;}
1348 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;&#32;<link linkend="_class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4">ConstMemberIterator</link>&#32;FindMember(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="_class_generic_value">GenericValue</link>&amp;<emphasis role="keyword">&gt;</emphasis>(*this).FindMember(name);&#32;}
1349 
1350 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
1352 
1358 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>&#32;FindMember(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;name)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;FindMember(<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(name)));&#32;}
1359 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4">ConstMemberIterator</link>&#32;FindMember(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;FindMember(<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(name)));&#32;}
1360 <emphasis role="preprocessor">#endif</emphasis>
1361 
1363 
1372 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;AddMember(<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;name,&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());
1374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(name.IsString());
1375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a741c527ec9552ec0a7dce92f7b22d1c6">DoAddMember</link>(name,&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);
1376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
1377 &#32;&#32;&#32;&#32;}
1378 
1380 
1388 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;AddMember(<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;name,&#32;<link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">StringRefType</link>&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;v(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>);
1390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AddMember(name,&#32;v,&#32;allocator);
1391 &#32;&#32;&#32;&#32;}
1392 
1393 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
1395 
1403 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;AddMember(<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;name,&#32;std::basic_string&lt;Ch&gt;&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;v(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);
1405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AddMember(name,&#32;v,&#32;allocator);
1406 &#32;&#32;&#32;&#32;}
1407 <emphasis role="preprocessor">#endif</emphasis>
1408 
1410 
1426 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
1427 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680">RAPIDJSON_DISABLEIF_RETURN</link>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,&#32;<link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue&lt;T&gt;</link>&#32;&gt;),&#32;(<link linkend="_class_generic_value">GenericValue</link>&amp;))
1428 &#32;&#32;&#32;&#32;AddMember(<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;name,&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;v(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>);
1430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AddMember(name,&#32;v,&#32;allocator);
1431 &#32;&#32;&#32;&#32;}
1432 
1433 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
1434 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;AddMember(<link linkend="_class_generic_value">GenericValue</link>&amp;&amp;&#32;name,&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AddMember(name,&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);
1436 &#32;&#32;&#32;&#32;}
1437 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;AddMember(<link linkend="_class_generic_value">GenericValue</link>&amp;&amp;&#32;name,&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AddMember(name,&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);
1439 &#32;&#32;&#32;&#32;}
1440 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;AddMember(<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;name,&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AddMember(name,&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);
1442 &#32;&#32;&#32;&#32;}
1443 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;AddMember(<link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">StringRefType</link>&#32;name,&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;n(name);
1445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AddMember(n,&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);
1446 &#32;&#32;&#32;&#32;}
1447 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
1448 
1449 
1451 
1460 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;AddMember(<link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">StringRefType</link>&#32;name,&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;n(name);
1462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AddMember(n,&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);
1463 &#32;&#32;&#32;&#32;}
1464 
1466 
1474 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;AddMember(<link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">StringRefType</link>&#32;name,&#32;<link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">StringRefType</link>&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;v(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>);
1476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AddMember(name,&#32;v,&#32;allocator);
1477 &#32;&#32;&#32;&#32;}
1478 
1480 
1496 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
1497 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680">RAPIDJSON_DISABLEIF_RETURN</link>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,&#32;<link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue&lt;T&gt;</link>&#32;&gt;),&#32;(<link linkend="_class_generic_value">GenericValue</link>&amp;))
1498 &#32;&#32;&#32;&#32;AddMember(<link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">StringRefType</link>&#32;name,&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;n(name);
1500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AddMember(n,&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);
1501 &#32;&#32;&#32;&#32;}
1502 
1504 
1507 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;RemoveAllMembers()&#32;{
1508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());&#32;
1509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a4e2fbcde9054e87b591f79e6202a80d6">DoClearMembers</link>();
1510 &#32;&#32;&#32;&#32;}
1511 
1513 
1520 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;RemoveMember(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;name)&#32;{
1521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;n(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(name));
1522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;RemoveMember(n);
1523 &#32;&#32;&#32;&#32;}
1524 
1525 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
1526 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;RemoveMember(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;name)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;RemoveMember(<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(name)));&#32;}
1527 <emphasis role="preprocessor">#endif</emphasis>
1528 
1529 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
1530 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;RemoveMember(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&amp;&#32;name)&#32;{
1531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>&#32;m&#32;=&#32;FindMember(name);
1532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m&#32;!=&#32;MemberEnd())&#32;{
1533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RemoveMember(m);
1534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
1535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1538 &#32;&#32;&#32;&#32;}
1539 
1541 
1548 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>&#32;RemoveMember(<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>&#32;m)&#32;{
1549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());
1550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>&#32;&gt;&#32;0);
1551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>()&#32;!=&#32;0);
1552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(m&#32;&gt;=&#32;MemberBegin()&#32;&amp;&amp;&#32;m&#32;&lt;&#32;MemberEnd());
1553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a6db9c0ed0d2417d00b135195e3546f50">DoRemoveMember</link>(m);
1554 &#32;&#32;&#32;&#32;}
1555 
1557 
1565 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>&#32;EraseMember(<link linkend="_class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4">ConstMemberIterator</link>&#32;pos)&#32;{
1566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EraseMember(pos,&#32;pos&#32;+1);
1567 &#32;&#32;&#32;&#32;}
1568 
1570 
1578 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>&#32;EraseMember(<link linkend="_class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4">ConstMemberIterator</link>&#32;first,&#32;<link linkend="_class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4">ConstMemberIterator</link>&#32;last)&#32;{
1579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());
1580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>&#32;&gt;&#32;0);
1581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>()&#32;!=&#32;0);
1582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(first&#32;&gt;=&#32;MemberBegin());
1583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(first&#32;&lt;=&#32;last);
1584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(last&#32;&lt;=&#32;MemberEnd());
1585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a786fc0f1116ef209216884b13f814158">DoEraseMembers</link>(first,&#32;last);
1586 &#32;&#32;&#32;&#32;}
1587 
1589 
1593 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;EraseMember(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;name)&#32;{
1594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;n(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(name));
1595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EraseMember(n);
1596 &#32;&#32;&#32;&#32;}
1597 
1598 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
1599 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;EraseMember(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;name)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;EraseMember(<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(name)));&#32;}
1600 <emphasis role="preprocessor">#endif</emphasis>
1601 
1602 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
1603 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;EraseMember(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&amp;&#32;name)&#32;{
1604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>&#32;m&#32;=&#32;FindMember(name);
1605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m&#32;!=&#32;MemberEnd())&#32;{
1606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EraseMember(m);
1607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
1608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1611 &#32;&#32;&#32;&#32;}
1612 
1613 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aee3606d69d411ce0d98f29639585989b">Object</link>&#32;GetObject()&#32;{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aee3606d69d411ce0d98f29639585989b">Object</link>(*<emphasis role="keyword">this</emphasis>);&#32;}
1614 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aee3606d69d411ce0d98f29639585989b">Object</link>&#32;GetObj()&#32;{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aee3606d69d411ce0d98f29639585989b">Object</link>(*<emphasis role="keyword">this</emphasis>);&#32;}
1615 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e">ConstObject</link>&#32;GetObject()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e">ConstObject</link>(*<emphasis role="keyword">this</emphasis>);&#32;}
1616 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e">ConstObject</link>&#32;GetObj()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsObject());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a55ad310f5434e0e4a93df616b326ba7e">ConstObject</link>(*<emphasis role="keyword">this</emphasis>);&#32;}
1617 
1619 
1621 
1622 
1624 
1625 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetArray()&#32;{&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">this</emphasis>)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8">kArrayType</link>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
1626 
1628 &#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;Size()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsArray());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>;&#32;}
1629 
1631 &#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;Capacity()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsArray());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5">capacity</link>;&#32;}
1632 
1634 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Empty()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsArray());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>&#32;==&#32;0;&#32;}
1635 
1637 
1640 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Clear()&#32;{
1641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsArray());&#32;
1642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>*&#32;e&#32;=&#32;<link linkend="_class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc">GetElementsPointer</link>();
1643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_class_generic_value">GenericValue</link>*&#32;v&#32;=&#32;e;&#32;v&#32;!=&#32;e&#32;+&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>;&#32;++v)
1644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();
1645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>&#32;=&#32;0;
1646 &#32;&#32;&#32;&#32;}
1647 
1649 
1653 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;operator[](<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;index)&#32;{
1654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsArray());
1655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(index&#32;&lt;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>);
1656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc">GetElementsPointer</link>()[index];
1657 &#32;&#32;&#32;&#32;}
1658 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;operator[](<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;index)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="_class_generic_value">GenericValue</link>&amp;<emphasis role="keyword">&gt;</emphasis>(*this)[index];&#32;}
1659 
1661 
1662 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aee30721a49688ba0f865f5d581eb6be9">ValueIterator</link>&#32;Begin()&#32;{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsArray());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc">GetElementsPointer</link>();&#32;}
1664 
1665 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aee30721a49688ba0f865f5d581eb6be9">ValueIterator</link>&#32;End()&#32;{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsArray());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc">GetElementsPointer</link>()&#32;+&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>;&#32;}
1667 
1668 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea">ConstValueIterator</link>&#32;Begin()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="_class_generic_value">GenericValue</link>&amp;<emphasis role="keyword">&gt;</emphasis>(*this).Begin();&#32;}
1670 
1671 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea">ConstValueIterator</link>&#32;End()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">const_cast&lt;</emphasis><link linkend="_class_generic_value">GenericValue</link>&amp;<emphasis role="keyword">&gt;</emphasis>(*this).End();&#32;}
1672 
1674 
1679 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;Reserve(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;newCapacity,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&#32;&amp;allocator)&#32;{
1680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsArray());
1681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newCapacity&#32;&gt;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5">capacity</link>)&#32;{
1682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a1ccc6e15fa49f0c30eab8e8f7f9418f2">SetElementsPointer</link>(<emphasis role="keyword">reinterpret_cast&lt;</emphasis><link linkend="_class_generic_value">GenericValue</link>*<emphasis role="keyword">&gt;</emphasis>(allocator.Realloc(<link linkend="_class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc">GetElementsPointer</link>(),&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5">capacity</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value">GenericValue</link>),&#32;newCapacity&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value">GenericValue</link>))));
1683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5">capacity</link>&#32;=&#32;newCapacity;
1684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
1686 &#32;&#32;&#32;&#32;}
1687 
1689 
1698 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;PushBack(<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsArray());
1700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>&#32;&gt;=&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5">capacity</link>)
1701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Reserve(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5">capacity</link>&#32;==&#32;0&#32;?&#32;<link linkend="_class_generic_value_1a188f57bdb1923c1fefe74baa995871a3">kDefaultArrayCapacity</link>&#32;:&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5">capacity</link>&#32;+&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5">capacity</link>&#32;+&#32;1)&#32;/&#32;2),&#32;allocator);
1702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc">GetElementsPointer</link>()[<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>++].<link linkend="_class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81">RawAssign</link>(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>);
1703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
1704 &#32;&#32;&#32;&#32;}
1705 
1706 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
1707 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;PushBack(<link linkend="_class_generic_value">GenericValue</link>&amp;&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;PushBack(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);
1709 &#32;&#32;&#32;&#32;}
1710 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
1711 
1713 
1721 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;PushBack(<link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">StringRefType</link>&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*this).template&#32;PushBack&lt;StringRefType&gt;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);
1723 &#32;&#32;&#32;&#32;}
1724 
1726 
1742 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
1743 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680">RAPIDJSON_DISABLEIF_RETURN</link>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,&#32;<link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue&lt;T&gt;</link>&#32;&gt;),&#32;(<link linkend="_class_generic_value">GenericValue</link>&amp;))
1744 &#32;&#32;&#32;&#32;PushBack(<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
1745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&#32;v(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>);
1746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;PushBack(v,&#32;allocator);
1747 &#32;&#32;&#32;&#32;}
1748 
1750 
1753 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;PopBack()&#32;{
1754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsArray());
1755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(!Empty());
1756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc">GetElementsPointer</link>()[--<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>].<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();
1757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
1758 &#32;&#32;&#32;&#32;}
1759 
1761 
1767 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aee30721a49688ba0f865f5d581eb6be9">ValueIterator</link>&#32;Erase(<link linkend="_class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea">ConstValueIterator</link>&#32;pos)&#32;{
1768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Erase(pos,&#32;pos&#32;+&#32;1);
1769 &#32;&#32;&#32;&#32;}
1770 
1772 
1779 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aee30721a49688ba0f865f5d581eb6be9">ValueIterator</link>&#32;Erase(<link linkend="_class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea">ConstValueIterator</link>&#32;first,&#32;<link linkend="_class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea">ConstValueIterator</link>&#32;last)&#32;{
1780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsArray());
1781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>&#32;&gt;&#32;0);
1782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc">GetElementsPointer</link>()&#32;!=&#32;0);
1783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(first&#32;&gt;=&#32;Begin());
1784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(first&#32;&lt;=&#32;last);
1785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(last&#32;&lt;=&#32;End());
1786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aee30721a49688ba0f865f5d581eb6be9">ValueIterator</link>&#32;pos&#32;=&#32;Begin()&#32;+&#32;(first&#32;-&#32;Begin());
1787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_class_generic_value_1aee30721a49688ba0f865f5d581eb6be9">ValueIterator</link>&#32;itr&#32;=&#32;pos;&#32;itr&#32;!=&#32;last;&#32;++itr)
1788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itr-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();
1789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memmove(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(pos),&#32;last,&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">size_t</emphasis><emphasis role="keyword">&gt;</emphasis>(End()&#32;-&#32;last)&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value">GenericValue</link>));
1790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>&#32;-=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link><emphasis role="keyword">&gt;</emphasis>(last&#32;-&#32;first);
1791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pos;
1792 &#32;&#32;&#32;&#32;}
1793 
1794 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a149e12992b8f6064c865a4cf55981b89">Array</link>&#32;GetArray()&#32;{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsArray());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a149e12992b8f6064c865a4cf55981b89">Array</link>(*<emphasis role="keyword">this</emphasis>);&#32;}
1795 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a8f1d2728de56600b5f3df596e2a8a181">ConstArray</link>&#32;GetArray()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsArray());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a8f1d2728de56600b5f3df596e2a8a181">ConstArray</link>(*<emphasis role="keyword">this</emphasis>);&#32;}
1796 
1798 
1800 
1801 
1802 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetInt()<emphasis role="keyword">&#32;const&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb">kIntFlag</link>);&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a0593fffc72a240979606668179e94436">i</link>.<link linkend="_struct_generic_value_1_1_number_1_1_i_1ae0b250dc448d284cf9019f3932bfc380">i</link>;&#32;&#32;&#32;}
1803 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;GetUint()<emphasis role="keyword">&#32;const&#32;&#32;&#32;&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce">kUintFlag</link>);&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a3b5f0986718c830b88d641491248131d">u</link>.<link linkend="_struct_generic_value_1_1_number_1_1_u_1a175e3a2bd43e6880791eb7c950d2f147">u</link>;&#32;&#32;&#32;}
1804 &#32;&#32;&#32;&#32;<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&#32;GetInt64()<emphasis role="keyword">&#32;const&#32;&#32;&#32;&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a">kInt64Flag</link>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b">i64</link>;&#32;}
1805 &#32;&#32;&#32;&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;GetUint64()<emphasis role="keyword">&#32;const&#32;&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94">kUint64Flag</link>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430">u64</link>;&#32;}
1806 
1808 
1810 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;GetDouble()<emphasis role="keyword">&#32;const&#32;</emphasis>{
1811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsNumber());
1812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c">kDoubleFlag</link>)&#32;!=&#32;0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a7ca3ad492fff303586d241eb0d17c242">d</link>;&#32;&#32;&#32;<emphasis role="comment">//&#32;exact&#32;type,&#32;no&#32;conversion.</emphasis>
1813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb">kIntFlag</link>)&#32;!=&#32;0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a0593fffc72a240979606668179e94436">i</link>.<link linkend="_struct_generic_value_1_1_number_1_1_i_1ae0b250dc448d284cf9019f3932bfc380">i</link>;&#32;<emphasis role="comment">//&#32;int&#32;-&gt;&#32;double</emphasis>
1814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce">kUintFlag</link>)&#32;!=&#32;0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a3b5f0986718c830b88d641491248131d">u</link>.<link linkend="_struct_generic_value_1_1_number_1_1_u_1a175e3a2bd43e6880791eb7c950d2f147">u</link>;&#32;<emphasis role="comment">//&#32;unsigned&#32;-&gt;&#32;double</emphasis>
1815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a">kInt64Flag</link>)&#32;!=&#32;0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b">i64</link>);&#32;<emphasis role="comment">//&#32;int64_t&#32;-&gt;&#32;double&#32;(may&#32;lose&#32;precision)</emphasis>
1816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>((<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94">kUint64Flag</link>)&#32;!=&#32;0);&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430">u64</link>);&#32;<emphasis role="comment">//&#32;uint64_t&#32;-&gt;&#32;double&#32;(may&#32;lose&#32;precision)</emphasis>
1817 &#32;&#32;&#32;&#32;}
1818 
1820 
1822 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;GetFloat()<emphasis role="keyword">&#32;const&#32;</emphasis>{
1823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(GetDouble());
1824 &#32;&#32;&#32;&#32;}
1825 
1826 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetInt(<emphasis role="keywordtype">int</emphasis>&#32;i)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">this</emphasis>)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(i);&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
1827 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetUint(<emphasis role="keywordtype">unsigned</emphasis>&#32;u)&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">this</emphasis>)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(u);&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
1828 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetInt64(<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&#32;i64)&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">this</emphasis>)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(i64);&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
1829 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetUint64(<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;u64)&#32;&#32;&#32;{&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">this</emphasis>)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(u64);&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
1830 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetDouble(<emphasis role="keywordtype">double</emphasis>&#32;d)&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">this</emphasis>)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(d);&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
1831 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetFloat(<emphasis role="keywordtype">float</emphasis>&#32;f)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();&#32;<emphasis role="keyword">new</emphasis>&#32;(<emphasis role="keyword">this</emphasis>)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(f));&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
1832 
1834 
1836 
1837 
1838 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;<link linkend="_schemavalidator_8cpp_1a6d90bf6105415d941d0ee014f2aa79c0">GetString</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsString());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a28f6eb49f5d6d5a56d0bea696b89961d">DataString</link>(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>);&#32;}
1839 
1841 
1843 &#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;GetStringLength()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsString());&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a1373c36e6bdffc6ed79143f47c1024ee">DataStringLength</link>(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>);&#32;}
1844 
1846 
1853 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetString(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;s,&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;length)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;SetString(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(s,&#32;length));&#32;}
1854 
1856 
1860 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetString(<link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">StringRefType</link>&#32;s)&#32;{&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();&#32;<link linkend="_class_generic_value_1a1451603922dcdf34976f125dc60f70ee">SetStringRaw</link>(s);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
1861 
1863 
1870 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetString(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;s,&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;length,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;SetString(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(s,&#32;length),&#32;allocator);&#32;}
1871 
1873 
1878 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetString(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;s,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;SetString(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(s),&#32;allocator);&#32;}
1879 
1881 
1886 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetString(<link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">StringRefType</link>&#32;s,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{&#32;this-&gt;<link linkend="_class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4">~GenericValue</link>();&#32;<link linkend="_class_generic_value_1a1451603922dcdf34976f125dc60f70ee">SetStringRaw</link>(s,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
1887 
1888 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
1890 
1896 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;SetString(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;s,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;SetString(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(s),&#32;allocator);&#32;}
1897 <emphasis role="preprocessor">#endif</emphasis>
1898 
1900 
1902 
1903 
1905 
1908 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
1909 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Is()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper">internal::TypeHelper&lt;ValueType, T&gt;::Is</link>(*<emphasis role="keyword">this</emphasis>);&#32;}
1910 
1911 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
1912 &#32;&#32;&#32;&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;Get()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper">internal::TypeHelper&lt;ValueType, T&gt;::Get</link>(*<emphasis role="keyword">this</emphasis>);&#32;}
1913 
1914 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
1915 &#32;&#32;&#32;&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;Get()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper">internal::TypeHelper&lt;ValueType, T&gt;::Get</link>(*<emphasis role="keyword">this</emphasis>);&#32;}
1916 
1917 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
1918 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;Set(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&amp;&#32;data)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper">internal::TypeHelper&lt;ValueType, T&gt;::Set</link>(*<emphasis role="keyword">this</emphasis>,&#32;data);&#32;}
1919 
1920 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
1921 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;Set(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&amp;&#32;data,&#32;<link linkend="_class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1">AllocatorType</link>&amp;&#32;allocator)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_structinternal_1_1_type_helper">internal::TypeHelper&lt;ValueType, T&gt;::Set</link>(*<emphasis role="keyword">this</emphasis>,&#32;data,&#32;allocator);&#32;}
1922 
1924 
1926 
1932 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Handler&gt;
1933 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Accept(<link linkend="_classrapidjson_1_1_handler">Handler</link>&amp;&#32;handler)<emphasis role="keyword">&#32;const&#32;</emphasis>{
1934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(GetType())&#32;{
1935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7aa09befbfb4f2e1409f237817979d8087">kNullType</link>:&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;handler.Null();
1936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a062b8296274a258acf0e142868684c54">kFalseType</link>:&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;handler.Bool(<emphasis role="keyword">false</emphasis>);
1937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a209434e5edd66630011ca19d710d7cd6">kTrueType</link>:&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;handler.Bool(<emphasis role="keyword">true</emphasis>);
1938 
1939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f">kObjectType</link>:
1940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5">RAPIDJSON_UNLIKELY</link>(!handler.StartObject()))
1941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4">ConstMemberIterator</link>&#32;m&#32;=&#32;MemberBegin();&#32;m&#32;!=&#32;MemberEnd();&#32;++m)&#32;{
1943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(m-&gt;name.IsString());&#32;<emphasis role="comment">//&#32;User&#32;may&#32;change&#32;the&#32;type&#32;of&#32;name&#32;by&#32;MemberIterator.</emphasis>
1944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5">RAPIDJSON_UNLIKELY</link>(!handler.Key(m-&gt;name.GetString(),&#32;m-&gt;name.GetStringLength(),&#32;(m-&gt;name.data_.f.flags&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10ef921aef1773bc1f88796bf1828f92">kCopyFlag</link>)&#32;!=&#32;0)))
1945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5">RAPIDJSON_UNLIKELY</link>(!m-&gt;value.Accept(handler)))
1947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;handler.EndObject(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>);
1950 
1951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8">kArrayType</link>:
1952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5">RAPIDJSON_UNLIKELY</link>(!handler.StartArray()))
1953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea">ConstValueIterator</link>&#32;v&#32;=&#32;Begin();&#32;v&#32;!=&#32;End();&#32;++v)
1955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5">RAPIDJSON_UNLIKELY</link>(!v-&gt;Accept(handler)))
1956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;handler.EndArray(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>);
1958 &#32;&#32;&#32;&#32;
1959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338">kStringType</link>:
1960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;handler.String(<link linkend="_schemavalidator_8cpp_1a6d90bf6105415d941d0ee014f2aa79c0">GetString</link>(),&#32;GetStringLength(),&#32;(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10ef921aef1773bc1f88796bf1828f92">kCopyFlag</link>)&#32;!=&#32;0);
1961 &#32;&#32;&#32;&#32;
1962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
1963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(GetType()&#32;==&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d">kNumberType</link>);
1964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IsDouble())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;handler.Double(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a7ca3ad492fff303586d241eb0d17c242">d</link>);
1965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IsInt())&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;handler.Int(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a0593fffc72a240979606668179e94436">i</link>.<link linkend="_struct_generic_value_1_1_number_1_1_i_1ae0b250dc448d284cf9019f3932bfc380">i</link>);
1966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IsUint())&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;handler.Uint(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a3b5f0986718c830b88d641491248131d">u</link>.<link linkend="_struct_generic_value_1_1_number_1_1_u_1a175e3a2bd43e6880791eb7c950d2f147">u</link>);
1967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IsInt64())&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;handler.Int64(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b">i64</link>);
1968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;handler.Uint64(<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>.<link linkend="_union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430">u64</link>);
1969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1970 &#32;&#32;&#32;&#32;}
1971 
1972 <emphasis role="keyword">private</emphasis>:
1973 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_value">GenericValue</link>;
1974 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_document">GenericDocument</link>;
1975 
1976 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;{
1977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac48966386b231124da7c3fb870e237ee">kBoolFlag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0008,
1978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79">kNumberFlag</link>&#32;&#32;&#32;&#32;&#32;=&#32;0x0010,
1979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb">kIntFlag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0020,
1980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce">kUintFlag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0040,
1981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a">kInt64Flag</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0080,
1982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94">kUint64Flag</link>&#32;&#32;&#32;&#32;&#32;=&#32;0x0100,
1983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c">kDoubleFlag</link>&#32;&#32;&#32;&#32;&#32;=&#32;0x0200,
1984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf3bf3661275a38c86addba900c52dccb">kStringFlag</link>&#32;&#32;&#32;&#32;&#32;=&#32;0x0400,
1985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10ef921aef1773bc1f88796bf1828f92">kCopyFlag</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0800,
1986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae58a76d504c6a67566aebfa4a6bd2e55">kInlineStrFlag</link>&#32;&#32;=&#32;0x1000,
1987 
1988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initial&#32;flags&#32;of&#32;different&#32;types.</emphasis>
1989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d">kNullFlag</link>&#32;=&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7aa09befbfb4f2e1409f237817979d8087">kNullType</link>,
1990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;These&#32;casts&#32;are&#32;added&#32;to&#32;suppress&#32;the&#32;warning&#32;on&#32;MSVC&#32;about&#32;bitwise&#32;operations&#32;between&#32;enums&#32;of&#32;different&#32;types.</emphasis>
1991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca75dbcdbacc82f9379c602f0b6c41cf07">kTrueFlag</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a209434e5edd66630011ca19d710d7cd6">kTrueType</link>)&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac48966386b231124da7c3fb870e237ee">kBoolFlag</link>),
1992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca66d3877b074bb1a0455a6f6d3f7f91a3">kFalseFlag</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a062b8296274a258acf0e142868684c54">kFalseType</link>)&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac48966386b231124da7c3fb870e237ee">kBoolFlag</link>),
1993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cacfe8b720220d0a2e378683367386cbaf">kNumberIntFlag</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d">kNumberType</link>)&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79">kNumberFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb">kIntFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a">kInt64Flag</link>),
1994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae8c6c6286edf9c309e77af0ea0cf039c">kNumberUintFlag</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d">kNumberType</link>)&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79">kNumberFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce">kUintFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94">kUint64Flag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a">kInt64Flag</link>),
1995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cad117eb41bb8015a76aadf6149bbd8ce5">kNumberInt64Flag</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d">kNumberType</link>)&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79">kNumberFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a">kInt64Flag</link>),
1996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caaa1ee6a546d4db67f4bdef41d1f54f02">kNumberUint64Flag</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d">kNumberType</link>)&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79">kNumberFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94">kUint64Flag</link>),
1997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca29bc91c155577923abd8f19aa050058b">kNumberDoubleFlag</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d">kNumberType</link>)&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79">kNumberFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c">kDoubleFlag</link>),
1998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cab7805b1908fd181afc8d70fe07b17e18">kNumberAnyFlag</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d">kNumberType</link>)&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caa4776df2584fe4f341b183cdf3e00a79">kNumberFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae3fb211193e0067efaddeb5a067120fb">kIntFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca87c567a71dfa5a63363d82d32346884a">kInt64Flag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca7eba561e6cc6dcd704f907c5a005f3ce">kUintFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cac9200c78f749b6efaae640167a370c94">kUint64Flag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca70c741e7c488835892aa857f50090d7c">kDoubleFlag</link>),
1999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca5d26a84f26833eafd0028c0102a388a9">kConstStringFlag</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338">kStringType</link>)&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf3bf3661275a38c86addba900c52dccb">kStringFlag</link>),
2000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10c83f7f191dce81bb0273adc0d838de">kCopyStringFlag</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338">kStringType</link>)&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf3bf3661275a38c86addba900c52dccb">kStringFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10ef921aef1773bc1f88796bf1828f92">kCopyFlag</link>),
2001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caca24fa09485fa10b17071509a985ff01">kShortStringFlag</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338">kStringType</link>)&#32;|&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf3bf3661275a38c86addba900c52dccb">kStringFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10ef921aef1773bc1f88796bf1828f92">kCopyFlag</link>&#32;|&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae58a76d504c6a67566aebfa4a6bd2e55">kInlineStrFlag</link>),
2002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c">kObjectFlag</link>&#32;=&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f">kObjectType</link>,
2003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47">kArrayFlag</link>&#32;=&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8">kArrayType</link>,
2004 
2005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca793e0bc40e0abe1ed8bcb3e6fbba65c2">kTypeMask</link>&#32;=&#32;0x07
2006 &#32;&#32;&#32;&#32;};
2007 
2008 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_class_generic_value_1a188f57bdb1923c1fefe74baa995871a3">kDefaultArrayCapacity</link>&#32;=&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga10ba0ee06d0ac2803d0f2290d46b19f7">RAPIDJSON_VALUE_DEFAULT_ARRAY_CAPACITY</link>;
2009 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_class_generic_value_1a284d018914629aed9a4bd97fe2dc5899">kDefaultObjectCapacity</link>&#32;=&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5c88aa612939b592d15d3fc4bdf54272">RAPIDJSON_VALUE_DEFAULT_OBJECT_CAPACITY</link>;
2010 
2011 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_generic_value_1_1_flag">Flag</link>&#32;{
2012 <emphasis role="preprocessor">#if&#32;RAPIDJSON_48BITPOINTER_OPTIMIZATION</emphasis>
2013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_struct_generic_value_1_1_flag_1aced7ede2056a797fb80817d45634e3ea">payload</link>[<emphasis role="keyword">sizeof</emphasis>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>)&#32;*&#32;2&#32;+&#32;6];&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;2&#32;x&#32;SizeType&#32;+&#32;lower&#32;48-bit&#32;pointer</emphasis>
2014 <emphasis role="preprocessor">#elif&#32;RAPIDJSON_64BIT</emphasis>
2015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_struct_generic_value_1_1_flag_1aced7ede2056a797fb80817d45634e3ea">payload</link>[<emphasis role="keyword">sizeof</emphasis>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>)&#32;*&#32;2&#32;+&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">void</emphasis>*)&#32;+&#32;6];&#32;<emphasis role="comment">//&#32;6&#32;padding&#32;bytes</emphasis>
2016 <emphasis role="preprocessor">#else</emphasis>
2017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_struct_generic_value_1_1_flag_1aced7ede2056a797fb80817d45634e3ea">payload</link>[<emphasis role="keyword">sizeof</emphasis>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>)&#32;*&#32;2&#32;+&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">void</emphasis>*)&#32;+&#32;2];&#32;<emphasis role="comment">//&#32;2&#32;padding&#32;bytes</emphasis>
2018 <emphasis role="preprocessor">#endif</emphasis>
2019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stdint_8h_1a273cf69d639a59973b6019625df33e30">uint16_t</link>&#32;<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>;
2020 &#32;&#32;&#32;&#32;};
2021 
2022 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_generic_value_1_1_string">String</link>&#32;{
2023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_struct_generic_value_1_1_string_1ad6ffab0e093aa8db6e415812ff6443bf">length</link>;
2024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_struct_generic_value_1_1_string_1a73631052aeb72fbabb6eaab0175f858e">hashcode</link>;&#32;&#32;
2025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;<link linkend="_struct_generic_value_1_1_string_1a4eebc5acf3f93ab833efd82abf3ba84d">str</link>;
2026 &#32;&#32;&#32;&#32;};&#32;&#32;<emphasis role="comment">//&#32;12&#32;bytes&#32;in&#32;32-bit&#32;mode,&#32;16&#32;bytes&#32;in&#32;64-bit&#32;mode</emphasis>
2027 
2028 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;implementation&#32;detail:&#32;ShortString&#32;can&#32;represent&#32;zero-terminated&#32;strings&#32;up&#32;to&#32;MaxSize&#32;chars</emphasis>
2029 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(excluding&#32;the&#32;terminating&#32;zero)&#32;and&#32;store&#32;a&#32;value&#32;to&#32;determine&#32;the&#32;length&#32;of&#32;the&#32;contained</emphasis>
2030 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;string&#32;in&#32;the&#32;last&#32;character&#32;str[LenPos]&#32;by&#32;storing&#32;&quot;MaxSize&#32;-&#32;length&quot;&#32;there.&#32;If&#32;the&#32;string</emphasis>
2031 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;store&#32;has&#32;the&#32;maximal&#32;length&#32;of&#32;MaxSize&#32;then&#32;str[LenPos]&#32;will&#32;be&#32;0&#32;and&#32;therefore&#32;act&#32;as</emphasis>
2032 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;string&#32;terminator&#32;as&#32;well.&#32;For&#32;getting&#32;the&#32;string&#32;length&#32;back&#32;from&#32;that&#32;value&#32;just&#32;use</emphasis>
2033 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;MaxSize&#32;-&#32;str[LenPos]&quot;.</emphasis>
2034 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;allows&#32;to&#32;store&#32;13-chars&#32;strings&#32;in&#32;32-bit&#32;mode,&#32;21-chars&#32;strings&#32;in&#32;64-bit&#32;mode,</emphasis>
2035 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;13-chars&#32;strings&#32;for&#32;RAPIDJSON_48BITPOINTER_OPTIMIZATION=1&#32;inline&#32;(for&#32;`UTF8`-encoded&#32;strings).</emphasis>
2036 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_generic_value_1_1_short_string">ShortString</link>&#32;{
2037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;{&#32;<link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a6b29cffcea816906d271656a958bc0c7">MaxChars</link>&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_generic_value_1_1_flag">Flag</link>*<emphasis role="keyword">&gt;</emphasis>(0)-&gt;payload)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>),&#32;<link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a991735d2e27155ccabe1c657653044ba">MaxSize</link>&#32;=&#32;<link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a6b29cffcea816906d271656a958bc0c7">MaxChars</link>&#32;-&#32;1,&#32;<link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360ac4ec681af40f3f6cfe7dcf6500637364">LenPos</link>&#32;=&#32;<link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a991735d2e27155ccabe1c657653044ba">MaxSize</link>&#32;};
2038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>&#32;<link linkend="_struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b">str</link>[<link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a6b29cffcea816906d271656a958bc0c7">MaxChars</link>];
2039 
2040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_generic_value_1_1_short_string_1a73e40f625c1abbd84f95ac7fff8365f7">Usable</link>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;len)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a991735d2e27155ccabe1c657653044ba">MaxSize</link>&#32;&gt;=&#32;len);&#32;}
2041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_value_1_1_short_string_1adbfe8461e0cb0ccb2cb3825489e743c2">SetLength</link>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;len)&#32;{&#32;<link linkend="_struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b">str</link>[<link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360ac4ec681af40f3f6cfe7dcf6500637364">LenPos</link>]&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link><emphasis role="keyword">&gt;</emphasis>(<link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a991735d2e27155ccabe1c657653044ba">MaxSize</link>&#32;-&#32;&#32;len);&#32;}
2042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_struct_generic_value_1_1_short_string_1a4aa295331ab0d019fd64f8f5d57d450b">GetLength</link>()<emphasis role="keyword">&#32;const&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link><emphasis role="keyword">&gt;</emphasis>(<link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360a991735d2e27155ccabe1c657653044ba">MaxSize</link>&#32;-&#32;&#32;<link linkend="_struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b">str</link>[<link linkend="_struct_generic_value_1_1_short_string_1a9458c3a0d0eda7bac977cb41f1a19360ac4ec681af40f3f6cfe7dcf6500637364">LenPos</link>]);&#32;}
2043 &#32;&#32;&#32;&#32;};&#32;&#32;<emphasis role="comment">//&#32;at&#32;most&#32;as&#32;many&#32;bytes&#32;as&#32;&quot;String&quot;&#32;above&#32;=&gt;&#32;12&#32;bytes&#32;in&#32;32-bit&#32;mode,&#32;16&#32;bytes&#32;in&#32;64-bit&#32;mode</emphasis>
2044 
2045 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;By&#32;using&#32;proper&#32;binary&#32;layout,&#32;retrieval&#32;of&#32;different&#32;integer&#32;types&#32;do&#32;not&#32;need&#32;conversions.</emphasis>
2046 &#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis><link linkend="_union_generic_value_1_1_number">Number</link>&#32;{
2047 <emphasis role="preprocessor">#if&#32;RAPIDJSON_ENDIAN&#32;==&#32;RAPIDJSON_LITTLEENDIAN</emphasis>
2048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_generic_value_1_1_number_1_1_i">I</link>&#32;{
2049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_generic_value_1_1_number_1_1_i_1ae0b250dc448d284cf9019f3932bfc380">i</link>;
2050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_struct_generic_value_1_1_number_1_1_i_1aefc064997f30c9c0b2bdce187d1d4cce">padding</link>[4];
2051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<link linkend="_union_generic_value_1_1_number_1a0593fffc72a240979606668179e94436">i</link>;
2052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_generic_value_1_1_number_1_1_u">U</link>&#32;{
2053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<link linkend="_struct_generic_value_1_1_number_1_1_u_1a175e3a2bd43e6880791eb7c950d2f147">u</link>;
2054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_struct_generic_value_1_1_number_1_1_u_1a9341f65c1645f24fd001a1ebf58d3c5b">padding2</link>[4];
2055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<link linkend="_union_generic_value_1_1_number_1a3b5f0986718c830b88d641491248131d">u</link>;
2056 <emphasis role="preprocessor">#else</emphasis>
2057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>I&#32;{
2058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_struct_generic_value_1_1_number_1_1_i_1aefc064997f30c9c0b2bdce187d1d4cce">padding</link>[4];
2059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_generic_value_1_1_number_1_1_i_1ae0b250dc448d284cf9019f3932bfc380">i</link>;
2060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<link linkend="_union_generic_value_1_1_number_1a0593fffc72a240979606668179e94436">i</link>;
2061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>U&#32;{
2062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_struct_generic_value_1_1_number_1_1_u_1a9341f65c1645f24fd001a1ebf58d3c5b">padding2</link>[4];
2063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<link linkend="_struct_generic_value_1_1_number_1_1_u_1a175e3a2bd43e6880791eb7c950d2f147">u</link>;
2064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<link linkend="_union_generic_value_1_1_number_1a3b5f0986718c830b88d641491248131d">u</link>;
2065 <emphasis role="preprocessor">#endif</emphasis>
2066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&#32;<link linkend="_union_generic_value_1_1_number_1ae53d96a8ead92099541da3b71633b77b">i64</link>;
2067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;<link linkend="_union_generic_value_1_1_number_1a1c8d3c6d226cf74315e233b30b622430">u64</link>;
2068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_union_generic_value_1_1_number_1a7ca3ad492fff303586d241eb0d17c242">d</link>;
2069 &#32;&#32;&#32;&#32;};&#32;&#32;<emphasis role="comment">//&#32;8&#32;bytes</emphasis>
2070 
2071 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_generic_value_1_1_object_data">ObjectData</link>&#32;{
2072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>;
2073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b">capacity</link>;
2074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member">Member</link>*&#32;<link linkend="_struct_generic_value_1_1_object_data_1a108be865f16e4c028f2354b1474a1ec8">members</link>;
2075 &#32;&#32;&#32;&#32;};&#32;&#32;<emphasis role="comment">//&#32;12&#32;bytes&#32;in&#32;32-bit&#32;mode,&#32;16&#32;bytes&#32;in&#32;64-bit&#32;mode</emphasis>
2076 
2077 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_generic_value_1_1_array_data">ArrayData</link>&#32;{
2078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>;
2079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5">capacity</link>;
2080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>*&#32;<link linkend="_struct_generic_value_1_1_array_data_1a86df976cb6f65924aca20eb9bd35553e">elements</link>;
2081 &#32;&#32;&#32;&#32;};&#32;&#32;<emphasis role="comment">//&#32;12&#32;bytes&#32;in&#32;32-bit&#32;mode,&#32;16&#32;bytes&#32;in&#32;64-bit&#32;mode</emphasis>
2082 
2083 &#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis><link linkend="_union_generic_value_1_1_data">Data</link>&#32;{
2084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_value_1_1_string">String</link>&#32;<link linkend="_union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b">s</link>;
2085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_value_1_1_short_string">ShortString</link>&#32;<link linkend="_union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c">ss</link>;
2086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_generic_value_1_1_number">Number</link>&#32;<link linkend="_union_generic_value_1_1_data_1a243007cce2f4b75bea3e3c1ee4c3c239">n</link>;
2087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_value_1_1_object_data">ObjectData</link>&#32;<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>;
2088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_value_1_1_array_data">ArrayData</link>&#32;<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>;
2089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_value_1_1_flag">Flag</link>&#32;<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>;
2090 &#32;&#32;&#32;&#32;};&#32;&#32;<emphasis role="comment">//&#32;16&#32;bytes&#32;in&#32;32-bit&#32;mode,&#32;24&#32;bytes&#32;in&#32;64-bit&#32;mode,&#32;16&#32;bytes&#32;in&#32;64-bit&#32;with&#32;RAPIDJSON_48BITPOINTER_OPTIMIZATION</emphasis>
2091 
2092 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;RAPIDJSON_FORCEINLINE&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;<link linkend="_class_generic_value_1a28f6eb49f5d6d5a56d0bea696b89961d">DataString</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_union_generic_value_1_1_data">Data</link>&amp;&#32;data)&#32;{
2093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(data.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae58a76d504c6a67566aebfa4a6bd2e55">kInlineStrFlag</link>)&#32;?&#32;data.<link linkend="_union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c">ss</link>.<link linkend="_struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b">str</link>&#32;:&#32;<link linkend="_rapidjson_8h_1ab67ad54afdd78883907fd1ecd007573a">RAPIDJSON_GETPOINTER</link>(<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>,&#32;data.<link linkend="_union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b">s</link>.<link linkend="_struct_generic_value_1_1_string_1a4eebc5acf3f93ab833efd82abf3ba84d">str</link>);
2094 &#32;&#32;&#32;&#32;}
2095 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;RAPIDJSON_FORCEINLINE&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_class_generic_value_1a1373c36e6bdffc6ed79143f47c1024ee">DataStringLength</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_union_generic_value_1_1_data">Data</link>&amp;&#32;data)&#32;{
2096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(data.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;&amp;&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3cae58a76d504c6a67566aebfa4a6bd2e55">kInlineStrFlag</link>)&#32;?&#32;data.<link linkend="_union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c">ss</link>.<link linkend="_struct_generic_value_1_1_short_string_1a4aa295331ab0d019fd64f8f5d57d450b">GetLength</link>()&#32;:&#32;data.<link linkend="_union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b">s</link>.<link linkend="_struct_generic_value_1_1_string_1ad6ffab0e093aa8db6e415812ff6443bf">length</link>;
2097 &#32;&#32;&#32;&#32;}
2098 
2099 &#32;&#32;&#32;&#32;RAPIDJSON_FORCEINLINE&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;<link linkend="_class_generic_value_1af182f2ccbcd962d2a28f92407622e9a9">GetStringPointer</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_rapidjson_8h_1ab67ad54afdd78883907fd1ecd007573a">RAPIDJSON_GETPOINTER</link>(<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>,&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b">s</link>.<link linkend="_struct_generic_value_1_1_string_1a4eebc5acf3f93ab833efd82abf3ba84d">str</link>);&#32;}
2100 &#32;&#32;&#32;&#32;RAPIDJSON_FORCEINLINE&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;<link linkend="_class_generic_value_1ab3e8833927fb1454585e8692200dbb93">SetStringPointer</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;str)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_rapidjson_8h_1a113598c4750b3aab4de2782ff1865ed4">RAPIDJSON_SETPOINTER</link>(<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>,&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b">s</link>.<link linkend="_struct_generic_value_1_1_string_1a4eebc5acf3f93ab833efd82abf3ba84d">str</link>,&#32;str);&#32;}
2101 &#32;&#32;&#32;&#32;RAPIDJSON_FORCEINLINE&#32;<link linkend="_class_generic_value">GenericValue</link>*&#32;<link linkend="_class_generic_value_1a40f567bae6fabbb07822ebac5fe00bfc">GetElementsPointer</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_rapidjson_8h_1ab67ad54afdd78883907fd1ecd007573a">RAPIDJSON_GETPOINTER</link>(<link linkend="_class_generic_value">GenericValue</link>,&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a86df976cb6f65924aca20eb9bd35553e">elements</link>);&#32;}
2102 &#32;&#32;&#32;&#32;RAPIDJSON_FORCEINLINE&#32;<link linkend="_class_generic_value">GenericValue</link>*&#32;<link linkend="_class_generic_value_1a1ccc6e15fa49f0c30eab8e8f7f9418f2">SetElementsPointer</link>(<link linkend="_class_generic_value">GenericValue</link>*&#32;elements)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_rapidjson_8h_1a113598c4750b3aab4de2782ff1865ed4">RAPIDJSON_SETPOINTER</link>(<link linkend="_class_generic_value">GenericValue</link>,&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a86df976cb6f65924aca20eb9bd35553e">elements</link>,&#32;elements);&#32;}
2103 &#32;&#32;&#32;&#32;RAPIDJSON_FORCEINLINE&#32;<link linkend="_class_generic_member">Member</link>*&#32;<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_rapidjson_8h_1ab67ad54afdd78883907fd1ecd007573a">RAPIDJSON_GETPOINTER</link>(<link linkend="_class_generic_member">Member</link>,&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a108be865f16e4c028f2354b1474a1ec8">members</link>);&#32;}
2104 &#32;&#32;&#32;&#32;RAPIDJSON_FORCEINLINE&#32;<link linkend="_class_generic_member">Member</link>*&#32;<link linkend="_class_generic_value_1a634a87972649943604153708ca9aefb7">SetMembersPointer</link>(<link linkend="_class_generic_member">Member</link>*&#32;members)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_rapidjson_8h_1a113598c4750b3aab4de2782ff1865ed4">RAPIDJSON_SETPOINTER</link>(<link linkend="_class_generic_member">Member</link>,&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a108be865f16e4c028f2354b1474a1ec8">members</link>,&#32;members);&#32;}
2105 
2106 <emphasis role="preprocessor">#if&#32;RAPIDJSON_USE_MEMBERSMAP</emphasis>
2107 
2108 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>MapTraits&#32;{
2109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>Less&#32;{
2110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator()(<emphasis role="keyword">const</emphasis>&#32;Data&amp;&#32;s1,&#32;<emphasis role="keyword">const</emphasis>&#32;Data&amp;&#32;s2)<emphasis role="keyword">&#32;const&#32;</emphasis>{
2111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;n1&#32;=&#32;<link linkend="_class_generic_value_1a1373c36e6bdffc6ed79143f47c1024ee">DataStringLength</link>(s1),&#32;n2&#32;=&#32;<link linkend="_class_generic_value_1a1373c36e6bdffc6ed79143f47c1024ee">DataStringLength</link>(s2);
2112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cmp&#32;=&#32;std::memcmp(<link linkend="_class_generic_value_1a28f6eb49f5d6d5a56d0bea696b89961d">DataString</link>(s1),&#32;<link linkend="_class_generic_value_1a28f6eb49f5d6d5a56d0bea696b89961d">DataString</link>(s2),&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>)&#32;*&#32;(n1&#32;&lt;&#32;n2&#32;?&#32;n1&#32;:&#32;n2));
2113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cmp&#32;&lt;&#32;0&#32;||&#32;(cmp&#32;==&#32;0&#32;&amp;&amp;&#32;n1&#32;&lt;&#32;n2);
2114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
2116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::pair&lt;const&#32;Data,&#32;SizeType&gt;&#32;Pair;
2117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::multimap&lt;Data,&#32;SizeType,&#32;Less,&#32;StdAllocator&lt;Pair,&#32;Allocator&gt;&#32;&gt;&#32;<link linkend="_class_map">Map</link>;
2118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;Map::iterator&#32;Iterator;
2119 &#32;&#32;&#32;&#32;};
2120 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;MapTraits::Map&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>;
2121 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;MapTraits::Less&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MapLess;
2122 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;MapTraits::Pair&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MapPair;
2123 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;MapTraits::Iterator&#32;&#32;&#32;&#32;MapIterator;
2124 
2125 &#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
2126 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Layout&#32;of&#32;the&#32;members&apos;&#32;map/array,&#32;re(al)located&#32;according&#32;to&#32;the&#32;needed&#32;capacity:</emphasis>
2127 &#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
2128 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;{Map*}&lt;&gt;{capacity}&lt;&gt;{Member[capacity]}&lt;&gt;{MapIterator[capacity]}</emphasis>
2129 &#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
2130 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(where&#32;&lt;&gt;&#32;stands&#32;for&#32;the&#32;RAPIDJSON_ALIGN-ment,&#32;if&#32;needed)</emphasis>
2131 &#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
2132 
2133 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;RAPIDJSON_FORCEINLINE&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;GetMapLayoutSize(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;capacity)&#32;{
2134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242">RAPIDJSON_ALIGN</link>(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_map">Map</link>*))&#32;+
2135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242">RAPIDJSON_ALIGN</link>(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>))&#32;+
2136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242">RAPIDJSON_ALIGN</link>(capacity&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886">Member</link>))&#32;+
2137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(MapIterator);
2138 &#32;&#32;&#32;&#32;}
2139 
2140 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;RAPIDJSON_FORCEINLINE&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;&amp;GetMapCapacity(<link linkend="_class_map">Map</link>*&#32;&amp;map)&#32;{
2141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">reinterpret_cast&lt;</emphasis><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">reinterpret_cast&lt;</emphasis><link linkend="_stdint_8h_1a31b85deecb45924320becd11d3ee16ce">uintptr_t</link><emphasis role="keyword">&gt;</emphasis>(&amp;map)&#32;+
2142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242">RAPIDJSON_ALIGN</link>(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_map">Map</link>*)));
2143 &#32;&#32;&#32;&#32;}
2144 
2145 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;RAPIDJSON_FORCEINLINE&#32;<link linkend="_class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886">Member</link>*&#32;GetMapMembers(<link linkend="_class_map">Map</link>*&#32;&amp;map)&#32;{
2146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">reinterpret_cast&lt;</emphasis><link linkend="_class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886">Member</link>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">reinterpret_cast&lt;</emphasis><link linkend="_stdint_8h_1a31b85deecb45924320becd11d3ee16ce">uintptr_t</link><emphasis role="keyword">&gt;</emphasis>(&amp;map)&#32;+
2147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242">RAPIDJSON_ALIGN</link>(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_map">Map</link>*))&#32;+
2148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242">RAPIDJSON_ALIGN</link>(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>)));
2149 &#32;&#32;&#32;&#32;}
2150 
2151 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;RAPIDJSON_FORCEINLINE&#32;MapIterator*&#32;GetMapIterators(<link linkend="_class_map">Map</link>*&#32;&amp;map)&#32;{
2152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">reinterpret_cast&lt;</emphasis>MapIterator*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">reinterpret_cast&lt;</emphasis><link linkend="_stdint_8h_1a31b85deecb45924320becd11d3ee16ce">uintptr_t</link><emphasis role="keyword">&gt;</emphasis>(&amp;map)&#32;+
2153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242">RAPIDJSON_ALIGN</link>(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_map">Map</link>*))&#32;+
2154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242">RAPIDJSON_ALIGN</link>(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>))&#32;+
2155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242">RAPIDJSON_ALIGN</link>(GetMapCapacity(map)&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886">Member</link>)));
2156 &#32;&#32;&#32;&#32;}
2157 
2158 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;RAPIDJSON_FORCEINLINE&#32;<link linkend="_class_map">Map</link>*&#32;&amp;GetMap(<link linkend="_class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886">Member</link>*&#32;members)&#32;{
2159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(members&#32;!=&#32;0);
2160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">reinterpret_cast&lt;</emphasis><link linkend="_class_map">Map</link>**<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">reinterpret_cast&lt;</emphasis><link linkend="_stdint_8h_1a31b85deecb45924320becd11d3ee16ce">uintptr_t</link><emphasis role="keyword">&gt;</emphasis>(members)&#32;-
2161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242">RAPIDJSON_ALIGN</link>(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>))&#32;-
2162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga583915242504c7fdb36e826f02f76242">RAPIDJSON_ALIGN</link>(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_map">Map</link>*)));
2163 &#32;&#32;&#32;&#32;}
2164 
2165 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Some&#32;compilers&apos;&#32;debug&#32;mechanisms&#32;want&#32;all&#32;iterators&#32;to&#32;be&#32;destroyed,&#32;for&#32;their&#32;accounting..</emphasis>
2166 &#32;&#32;&#32;&#32;RAPIDJSON_FORCEINLINE&#32;MapIterator&#32;DropMapIterator(MapIterator&amp;&#32;rhs)&#32;{
2167 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11</emphasis>
2168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MapIterator&#32;ret&#32;=&#32;std::move(rhs);
2169 <emphasis role="preprocessor">#else</emphasis>
2170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MapIterator&#32;ret&#32;=&#32;rhs;
2171 <emphasis role="preprocessor">#endif</emphasis>
2172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rhs.~MapIterator();
2173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
2174 &#32;&#32;&#32;&#32;}
2175 
2176 &#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>*&#32;&amp;DoReallocMap(<link linkend="_class_map">Map</link>**&#32;oldMap,&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;newCapacity,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
2177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>&#32;**newMap&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_class_map">Map</link>**<emphasis role="keyword">&gt;</emphasis>(allocator.Malloc(GetMapLayoutSize(newCapacity)));
2178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetMapCapacity(*newMap)&#32;=&#32;newCapacity;
2179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!oldMap)&#32;{
2180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*newMap&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;(allocator.Malloc(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_map">Map</link>)))&#32;<link linkend="_class_map">Map</link>(MapLess(),&#32;allocator);
2181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*newMap&#32;=&#32;*oldMap;
2184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;count&#32;=&#32;(*oldMap)-&gt;size();
2185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memcpy(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(GetMapMembers(*newMap)),
2186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(GetMapMembers(*oldMap)),
2187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886">Member</link>));
2188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MapIterator&#32;*oldIt&#32;=&#32;GetMapIterators(*oldMap),
2189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*newIt&#32;=&#32;GetMapIterators(*newMap);
2190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(count--)&#32;{
2191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(&amp;newIt[count])&#32;MapIterator(DropMapIterator(oldIt[count]));
2192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e">Allocator::Free</link>(oldMap);
2194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*newMap;
2196 &#32;&#32;&#32;&#32;}
2197 
2198 &#32;&#32;&#32;&#32;RAPIDJSON_FORCEINLINE&#32;<link linkend="_class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886">Member</link>*&#32;<link linkend="_class_generic_value_1ae0d58cf0ac7a4d1aca47f8a18ba8cdfd">DoAllocMembers</link>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;capacity,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
2199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;GetMapMembers(DoReallocMap(0,&#32;capacity,&#32;allocator));
2200 &#32;&#32;&#32;&#32;}
2201 
2202 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_value_1a37e400c98968dec21293861983db9b06">DoReserveMembers</link>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;newCapacity,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
2203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ObjectData&amp;&#32;o&#32;=&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>;
2204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newCapacity&#32;&gt;&#32;o.capacity)&#32;{
2205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886">Member</link>*&#32;oldMembers&#32;=&#32;<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>();
2206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>&#32;**oldMap&#32;=&#32;oldMembers&#32;?&#32;&amp;GetMap(oldMembers)&#32;:&#32;0,
2207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&amp;newMap&#32;=&#32;DoReallocMap(oldMap,&#32;newCapacity,&#32;allocator);
2208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a113598c4750b3aab4de2782ff1865ed4">RAPIDJSON_SETPOINTER</link>(<link linkend="_class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886">Member</link>,&#32;o.members,&#32;GetMapMembers(newMap));
2209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;o.capacity&#32;=&#32;newCapacity;
2210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2211 &#32;&#32;&#32;&#32;}
2212 
2213 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
2214 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>&#32;<link linkend="_class_generic_value_1a62e070232ca1bab936de08b8dbf41a5d">DoFindMember</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&amp;&#32;name)&#32;{
2215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886">Member</link>*&#32;members&#32;=&#32;<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>())&#32;{
2216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>*&#32;&amp;map&#32;=&#32;GetMap(members);
2217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MapIterator&#32;mit&#32;=&#32;map-&gt;find(<emphasis role="keyword">reinterpret_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>Data&amp;<emphasis role="keyword">&gt;</emphasis>(name.<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>));
2218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mit&#32;!=&#32;map-&gt;end())&#32;{
2219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_value_1a349b8faae61edc42b4289726820be439">MemberIterator</link>(&amp;members[mit-&gt;second]);
2220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;MemberEnd();
2223 &#32;&#32;&#32;&#32;}
2224 
2225 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_value_1a4e2fbcde9054e87b591f79e6202a80d6">DoClearMembers</link>()&#32;{
2226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886">Member</link>*&#32;members&#32;=&#32;<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>())&#32;{
2227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>*&#32;&amp;map&#32;=&#32;GetMap(members);
2228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MapIterator*&#32;mit&#32;=&#32;GetMapIterators(map);
2229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>;&#32;i++)&#32;{
2230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;map-&gt;erase(DropMapIterator(mit[i]));
2231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;members[i].~Member();
2232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>&#32;=&#32;0;
2234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2235 &#32;&#32;&#32;&#32;}
2236 
2237 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_value_1aab3a51f8207a44ad87a1f8b0bbf53fe9">DoFreeMembers</link>()&#32;{
2238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886">Member</link>*&#32;members&#32;=&#32;<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>())&#32;{
2239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetMap(members)-&gt;~Map();
2240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>;&#32;i++)&#32;{
2241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;members[i].~Member();
2242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Allocator::kNeedFree)&#32;{&#32;<emphasis role="comment">//&#32;Shortcut&#32;by&#32;Allocator&apos;s&#32;trait</emphasis>
2244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>**&#32;map&#32;=&#32;&amp;GetMap(members);
2245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e">Allocator::Free</link>(*map);
2246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e">Allocator::Free</link>(map);
2247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2249 &#32;&#32;&#32;&#32;}
2250 
2251 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">//&#32;!RAPIDJSON_USE_MEMBERSMAP</emphasis>
2252 
2253 &#32;&#32;&#32;&#32;RAPIDJSON_FORCEINLINE&#32;<link linkend="_class_generic_member">Member</link>*&#32;<link linkend="_class_generic_value_1ae0d58cf0ac7a4d1aca47f8a18ba8cdfd">DoAllocMembers</link>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;capacity,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
2254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Malloc&lt;Member&gt;(allocator,&#32;capacity);
2255 &#32;&#32;&#32;&#32;}
2256 
2257 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_value_1a37e400c98968dec21293861983db9b06">DoReserveMembers</link>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;newCapacity,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
2258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_value_1_1_object_data">ObjectData</link>&amp;&#32;o&#32;=&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>;
2259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newCapacity&#32;&gt;&#32;o.<link linkend="_struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b">capacity</link>)&#32;{
2260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member">Member</link>*&#32;newMembers&#32;=&#32;Realloc&lt;Member&gt;(allocator,&#32;<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>(),&#32;o.<link linkend="_struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b">capacity</link>,&#32;newCapacity);
2261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a113598c4750b3aab4de2782ff1865ed4">RAPIDJSON_SETPOINTER</link>(<link linkend="_class_generic_member">Member</link>,&#32;o.<link linkend="_struct_generic_value_1_1_object_data_1a108be865f16e4c028f2354b1474a1ec8">members</link>,&#32;newMembers);
2262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;o.<link linkend="_struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b">capacity</link>&#32;=&#32;newCapacity;
2263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2264 &#32;&#32;&#32;&#32;}
2265 
2266 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
2267 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;<link linkend="_class_generic_value_1a62e070232ca1bab936de08b8dbf41a5d">DoFindMember</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&amp;&#32;name)&#32;{
2268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;member&#32;=&#32;MemberBegin();
2269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;member&#32;!=&#32;MemberEnd();&#32;++member)
2270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(name.<link linkend="_class_generic_value_1ad4d088dc601d99fea9d16300a7ec7ee1">StringEqual</link>(member-&gt;name))
2271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;member;
2273 &#32;&#32;&#32;&#32;}
2274 
2275 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_value_1a4e2fbcde9054e87b591f79e6202a80d6">DoClearMembers</link>()&#32;{
2276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;m&#32;=&#32;MemberBegin();&#32;m&#32;!=&#32;MemberEnd();&#32;++m)
2277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m-&gt;~Member();
2278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>&#32;=&#32;0;
2279 &#32;&#32;&#32;&#32;}
2280 
2281 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_value_1aab3a51f8207a44ad87a1f8b0bbf53fe9">DoFreeMembers</link>()&#32;{
2282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;m&#32;=&#32;MemberBegin();&#32;m&#32;!=&#32;MemberEnd();&#32;++m)
2283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m-&gt;~Member();
2284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_allocators_8h_1a471c182d62d396b7d5d564e8d6a62d9e">Allocator::Free</link>(<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>());
2285 &#32;&#32;&#32;&#32;}
2286 
2287 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;!RAPIDJSON_USE_MEMBERSMAP</emphasis>
2288 
2289 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_value_1a741c527ec9552ec0a7dce92f7b22d1c6">DoAddMember</link>(<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;name,&#32;<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
2290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_value_1_1_object_data">ObjectData</link>&amp;&#32;o&#32;=&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>;
2291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(o.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>&#32;&gt;=&#32;o.<link linkend="_struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b">capacity</link>)
2292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a37e400c98968dec21293861983db9b06">DoReserveMembers</link>(o.<link linkend="_struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b">capacity</link>&#32;?&#32;(o.<link linkend="_struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b">capacity</link>&#32;+&#32;(o.<link linkend="_struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b">capacity</link>&#32;+&#32;1)&#32;/&#32;2)&#32;:&#32;<link linkend="_class_generic_value_1a284d018914629aed9a4bd97fe2dc5899">kDefaultObjectCapacity</link>,&#32;allocator);
2293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member">Member</link>*&#32;members&#32;=&#32;<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>();
2294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member">Member</link>*&#32;m&#32;=&#32;members&#32;+&#32;o.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>;
2295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m-&gt;<link linkend="_class_generic_member_1a7124f7ccd67421533d33139938604fac">name</link>.RawAssign(name);
2296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m-&gt;<link linkend="_class_generic_member_1aad3cfa4f9e8b9018068c8bc865723083">value</link>.RawAssign(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>);
2297 <emphasis role="preprocessor">#if&#32;RAPIDJSON_USE_MEMBERSMAP</emphasis>
2298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>*&#32;&amp;map&#32;=&#32;GetMap(members);
2299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MapIterator*&#32;mit&#32;=&#32;GetMapIterators(map);
2300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(&amp;mit[o.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>])&#32;MapIterator(map-&gt;insert(MapPair(m-&gt;<link linkend="_class_generic_member_1a7124f7ccd67421533d33139938604fac">name</link>.data_,&#32;o.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>)));
2301 <emphasis role="preprocessor">#endif</emphasis>
2302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++o.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>;
2303 &#32;&#32;&#32;&#32;}
2304 
2305 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;<link linkend="_class_generic_value_1a6db9c0ed0d2417d00b135195e3546f50">DoRemoveMember</link>(<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;m)&#32;{
2306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_value_1_1_object_data">ObjectData</link>&amp;&#32;o&#32;=&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>;
2307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member">Member</link>*&#32;members&#32;=&#32;<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>();
2308 <emphasis role="preprocessor">#if&#32;RAPIDJSON_USE_MEMBERSMAP</emphasis>
2309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>*&#32;&amp;map&#32;=&#32;GetMap(members);
2310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MapIterator*&#32;mit&#32;=&#32;GetMapIterators(map);
2311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;mpos&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link><emphasis role="keyword">&gt;</emphasis>(&amp;*m&#32;-&#32;members);
2312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;map-&gt;erase(DropMapIterator(mit[mpos]));
2313 <emphasis role="preprocessor">#endif</emphasis>
2314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;last(members&#32;+&#32;(o.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>&#32;-&#32;1));
2315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(o.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>&#32;&gt;&#32;1&#32;&amp;&amp;&#32;m&#32;!=&#32;last)&#32;{
2316 <emphasis role="preprocessor">#if&#32;RAPIDJSON_USE_MEMBERSMAP</emphasis>
2317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(&amp;mit[mpos])&#32;MapIterator(DropMapIterator(mit[&amp;*last&#32;-&#32;members]));
2318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mit[mpos]-&gt;second&#32;=&#32;mpos;
2319 <emphasis role="preprocessor">#endif</emphasis>
2320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*m&#32;=&#32;*last;&#32;<emphasis role="comment">//&#32;Move&#32;the&#32;last&#32;one&#32;to&#32;this&#32;place</emphasis>
2321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m-&gt;~Member();&#32;<emphasis role="comment">//&#32;Only&#32;one&#32;left,&#32;just&#32;destroy</emphasis>
2324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--o.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>;
2326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m;
2327 &#32;&#32;&#32;&#32;}
2328 
2329 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;<link linkend="_class_generic_value_1a786fc0f1116ef209216884b13f814158">DoEraseMembers</link>(<link linkend="_class_generic_member_iterator">ConstMemberIterator</link>&#32;first,&#32;<link linkend="_class_generic_member_iterator">ConstMemberIterator</link>&#32;last)&#32;{
2330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_value_1_1_object_data">ObjectData</link>&amp;&#32;o&#32;=&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>;
2331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;beg&#32;=&#32;MemberBegin(),
2332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pos&#32;=&#32;beg&#32;+&#32;(first&#32;-&#32;beg),
2333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;end&#32;=&#32;MemberEnd();
2334 <emphasis role="preprocessor">#if&#32;RAPIDJSON_USE_MEMBERSMAP</emphasis>
2335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>*&#32;&amp;map&#32;=&#32;GetMap(<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>());
2336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MapIterator*&#32;mit&#32;=&#32;GetMapIterators(map);
2337 <emphasis role="preprocessor">#endif</emphasis>
2338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;itr&#32;=&#32;pos;&#32;itr&#32;!=&#32;last;&#32;++itr)&#32;{
2339 <emphasis role="preprocessor">#if&#32;RAPIDJSON_USE_MEMBERSMAP</emphasis>
2340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;map-&gt;erase(DropMapIterator(mit[itr&#32;-&#32;beg]));
2341 <emphasis role="preprocessor">#endif</emphasis>
2342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itr-&gt;~Member();
2343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2344 <emphasis role="preprocessor">#if&#32;RAPIDJSON_USE_MEMBERSMAP</emphasis>
2345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(first&#32;!=&#32;last)&#32;{
2346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;remaining&#32;members/iterators</emphasis>
2347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;next&#32;=&#32;pos&#32;+&#32;(last&#32;-&#32;first);
2348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;itr&#32;=&#32;pos;&#32;next&#32;!=&#32;end;&#32;++itr,&#32;++next)&#32;{
2349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memcpy(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(&amp;*itr),&#32;&amp;*next,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_member">Member</link>));
2350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;mpos&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link><emphasis role="keyword">&gt;</emphasis>(itr&#32;-&#32;beg);
2351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(&amp;mit[mpos])&#32;MapIterator(DropMapIterator(mit[next&#32;-&#32;beg]));
2352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mit[mpos]-&gt;second&#32;=&#32;mpos;
2353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2355 <emphasis role="preprocessor">#else</emphasis>
2356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memmove(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(&amp;*pos),&#32;&amp;*last,
2357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">size_t</emphasis><emphasis role="keyword">&gt;</emphasis>(end&#32;-&#32;last)&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_member">Member</link>));
2358 <emphasis role="preprocessor">#endif</emphasis>
2359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;o.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>&#32;-=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link><emphasis role="keyword">&gt;</emphasis>(last&#32;-&#32;first);
2360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pos;
2361 &#32;&#32;&#32;&#32;}
2362 
2363 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
2364 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_value_1a17e90627a90a4e97e8425e0ca4a22cbb">DoCopyMembers</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding,SourceAllocator&gt;</link>&amp;&#32;rhs,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;copyConstStrings)&#32;{
2365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(rhs.GetType()&#32;==&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f">kObjectType</link>);
2366 
2367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c">kObjectFlag</link>;
2368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;count&#32;=&#32;rhs.<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>;
2369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member">Member</link>*&#32;lm&#32;=&#32;<link linkend="_class_generic_value_1ae0d58cf0ac7a4d1aca47f8a18ba8cdfd">DoAllocMembers</link>(count,&#32;allocator);
2370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_class_generic_member">GenericValue&lt;Encoding,SourceAllocator&gt;::Member</link>*&#32;rm&#32;=&#32;rhs.<link linkend="_class_generic_value_1a8c39af1a639eae1b59db66e2cbb537c9">GetMembersPointer</link>();
2371 <emphasis role="preprocessor">#if&#32;RAPIDJSON_USE_MEMBERSMAP</emphasis>
2372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>*&#32;&amp;map&#32;=&#32;GetMap(lm);
2373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MapIterator*&#32;mit&#32;=&#32;GetMapIterators(map);
2374 <emphasis role="preprocessor">#endif</emphasis>
2375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;count;&#32;i++)&#32;{
2376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(&amp;lm[i].<link linkend="_class_generic_member_1a7124f7ccd67421533d33139938604fac">name</link>)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(rm[i].name,&#32;allocator,&#32;copyConstStrings);
2377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(&amp;lm[i].<link linkend="_class_generic_member_1aad3cfa4f9e8b9018068c8bc865723083">value</link>)&#32;<link linkend="_class_generic_value_1ab0205d57176d83814ea4e4598c596fe8">GenericValue</link>(rm[i].<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator,&#32;copyConstStrings);
2378 <emphasis role="preprocessor">#if&#32;RAPIDJSON_USE_MEMBERSMAP</emphasis>
2379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(&amp;mit[i])&#32;MapIterator(map-&gt;insert(MapPair(lm[i].name.data_,&#32;i)));
2380 <emphasis role="preprocessor">#endif</emphasis>
2381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>&#32;=&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b">capacity</link>&#32;=&#32;count;
2383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a634a87972649943604153708ca9aefb7">SetMembersPointer</link>(lm);
2384 &#32;&#32;&#32;&#32;}
2385 
2386 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;this&#32;value&#32;as&#32;array&#32;with&#32;initial&#32;data,&#32;without&#32;calling&#32;destructor.</emphasis>
2387 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_value_1a8f5f309065479de40a16cf28a340da65">SetArrayRaw</link>(<link linkend="_class_generic_value">GenericValue</link>*&#32;values,&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;count,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
2388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caf7d99965ba807c718b482a9a7fb28b47">kArrayFlag</link>;
2389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(count)&#32;{
2390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>*&#32;e&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_class_generic_value">GenericValue</link>*<emphasis role="keyword">&gt;</emphasis>(allocator.Malloc(count&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value">GenericValue</link>)));
2391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a1ccc6e15fa49f0c30eab8e8f7f9418f2">SetElementsPointer</link>(e);
2392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memcpy(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(e),&#32;values,&#32;count&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value">GenericValue</link>));
2393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a1ccc6e15fa49f0c30eab8e8f7f9418f2">SetElementsPointer</link>(0);
2396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a5306856f64aea8ec53abf263ed2a35e2">size</link>&#32;=&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1aeac31cf55bf5a024cead5ecb63e4fd48">a</link>.<link linkend="_struct_generic_value_1_1_array_data_1a0c6fe03c00e13d14b95abd31048aa1f5">capacity</link>&#32;=&#32;count;
2397 &#32;&#32;&#32;&#32;}
2398 
2400 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_value_1a26c8ec7d68858df1038506df7fcff22d">SetObjectRaw</link>(<link linkend="_class_generic_member">Member</link>*&#32;members,&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;count,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
2401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caba5811d4baeb56dc793a6510fe28748c">kObjectFlag</link>;
2402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(count)&#32;{
2403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_member">Member</link>*&#32;m&#32;=&#32;<link linkend="_class_generic_value_1ae0d58cf0ac7a4d1aca47f8a18ba8cdfd">DoAllocMembers</link>(count,&#32;allocator);
2404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a634a87972649943604153708ca9aefb7">SetMembersPointer</link>(m);
2405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memcpy(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">void</emphasis>*<emphasis role="keyword">&gt;</emphasis>(m),&#32;members,&#32;count&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_member">Member</link>));
2406 <emphasis role="preprocessor">#if&#32;RAPIDJSON_USE_MEMBERSMAP</emphasis>
2407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_map">Map</link>*&#32;&amp;map&#32;=&#32;GetMap(m);
2408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MapIterator*&#32;mit&#32;=&#32;GetMapIterators(map);
2409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;count;&#32;i++)&#32;{
2410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(&amp;mit[i])&#32;MapIterator(map-&gt;insert(MapPair(m[i].name.<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>,&#32;i)));
2411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2412 <emphasis role="preprocessor">#endif</emphasis>
2413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1a634a87972649943604153708ca9aefb7">SetMembersPointer</link>(0);
2416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a8aa09c430b245b9bb0745a1ab38201d5">size</link>&#32;=&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1af6417eca530fba0d8bd65d309628eb11">o</link>.<link linkend="_struct_generic_value_1_1_object_data_1a22b8d8b01d52db71471f0d4c990cb93b">capacity</link>&#32;=&#32;count;
2417 &#32;&#32;&#32;&#32;}
2418 
2420 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_value_1a1451603922dcdf34976f125dc60f70ee">SetStringRaw</link>(<link linkend="_struct_generic_string_ref">StringRefType</link>&#32;s)&#32;RAPIDJSON_NOEXCEPT&#32;{
2421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca5d26a84f26833eafd0028c0102a388a9">kConstStringFlag</link>;
2422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ab3e8833927fb1454585e8692200dbb93">SetStringPointer</link>(s);
2423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b">s</link>.<link linkend="_struct_generic_value_1_1_string_1ad6ffab0e093aa8db6e415812ff6443bf">length</link>&#32;=&#32;s.length;
2424 &#32;&#32;&#32;&#32;}
2425 
2427 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_value_1ad3d91db36dfdbfc1af40a79aae07723c">SetStringRaw</link>(<link linkend="_struct_generic_string_ref">StringRefType</link>&#32;s,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;allocator)&#32;{
2428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;str&#32;=&#32;0;
2429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct_generic_value_1_1_short_string_1a73e40f625c1abbd84f95ac7fff8365f7">ShortString::Usable</link>(s.<link linkend="_struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe">length</link>))&#32;{
2430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3caca24fa09485fa10b17071509a985ff01">kShortStringFlag</link>;
2431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c">ss</link>.<link linkend="_struct_generic_value_1_1_short_string_1adbfe8461e0cb0ccb2cb3825489e743c2">SetLength</link>(s.<link linkend="_struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe">length</link>);
2432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str&#32;=&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a410e39a5dc296eb3b152b54193740e4c">ss</link>.<link linkend="_struct_generic_value_1_1_short_string_1a444e24523d4cc33830d18a2cfcfd333b">str</link>;
2433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca10c83f7f191dce81bb0273adc0d838de">kCopyStringFlag</link>;
2435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>.<link linkend="_union_generic_value_1_1_data_1a6872a4b93763944063b425e6c001ed2b">s</link>.<link linkend="_struct_generic_value_1_1_string_1ad6ffab0e093aa8db6e415812ff6443bf">length</link>&#32;=&#32;s.<link linkend="_struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe">length</link>;
2436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>&#32;*<emphasis role="keyword">&gt;</emphasis>(allocator.Malloc((s.<link linkend="_struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe">length</link>&#32;+&#32;1)&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>)));
2437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ab3e8833927fb1454585e8692200dbb93">SetStringPointer</link>(str);
2438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memcpy(str,&#32;s,&#32;s.<link linkend="_struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe">length</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>));
2440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str[s.<link linkend="_struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe">length</link>]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
2441 &#32;&#32;&#32;&#32;}
2442 
2444 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81">RawAssign</link>(<link linkend="_class_generic_value">GenericValue</link>&amp;&#32;rhs)&#32;RAPIDJSON_NOEXCEPT&#32;{
2445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>&#32;=&#32;rhs.data_;
2446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;data_.f.flags&#32;=&#32;rhs.data_.f.flags;</emphasis>
2447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rhs.data_.<link linkend="_union_generic_value_1_1_data_1ad8572112da083c775ce21bcbca96b2ab">f</link>.<link linkend="_struct_generic_value_1_1_flag_1ac91f08067dcc0003fc78e870ca9b2d5d">flags</link>&#32;=&#32;<link linkend="_class_generic_value_1aacdfd9d0f85a6161380a134e6d0c9d3ca8c5507cf143edac6e50abec2d89cc40d">kNullFlag</link>;
2448 &#32;&#32;&#32;&#32;}
2449 
2450 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;
2451 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_value_1ad4d088dc601d99fea9d16300a7ec7ee1">StringEqual</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, SourceAllocator&gt;</link>&amp;&#32;rhs)<emphasis role="keyword">&#32;const&#32;</emphasis>{
2452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(IsString());
2453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(rhs.IsString());
2454 
2455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;len1&#32;=&#32;GetStringLength();
2456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;len2&#32;=&#32;rhs.GetStringLength();
2457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(len1&#32;!=&#32;len2)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;}
2458 
2459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;<emphasis role="keyword">const</emphasis>&#32;str1&#32;=&#32;<link linkend="_schemavalidator_8cpp_1a6d90bf6105415d941d0ee014f2aa79c0">GetString</link>();
2460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>*&#32;<emphasis role="keyword">const</emphasis>&#32;str2&#32;=&#32;rhs.GetString();
2461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(str1&#32;==&#32;str2)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}&#32;<emphasis role="comment">//&#32;fast&#32;path&#32;for&#32;constant&#32;string</emphasis>
2462 
2463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(std::memcmp(str1,&#32;str2,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">Ch</link>)&#32;*&#32;len1)&#32;==&#32;0);
2464 &#32;&#32;&#32;&#32;}
2465 
2466 &#32;&#32;&#32;&#32;<link linkend="_union_generic_value_1_1_data">Data</link>&#32;<link linkend="_class_generic_value_1aaf80f2c91d26fdde60b9edeeecd3509f">data_</link>;
2467 };
2468 
2470 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;UTF8&lt;&gt;</link>&#32;&gt;&#32;<link linkend="_document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481">Value</link>;
2471 
2473 <emphasis role="comment">//&#32;GenericDocument&#32;</emphasis>
2474 
2476 
2483 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&#32;=&#32;RAPIDJSON_DEFAULT_ALLOCATOR,&#32;<emphasis role="keyword">typename</emphasis>&#32;StackAllocator&#32;=&#32;RAPIDJSON_DEFAULT_STACK_ALLOCATOR&#32;&gt;
2484 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_document">GenericDocument</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_generic_value">GenericValue</link>&lt;Encoding,&#32;Allocator&gt;&#32;{
2485 <emphasis role="keyword">public</emphasis>:
2486 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;Encoding::Ch&#32;<link linkend="_class_generic_document_1a6f5b0b7b6626508d094ae67490269700">Ch</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
2487 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;Encoding, Allocator&gt;</link>&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>;&#32;&#32;&#32;&#32;
2488 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&#32;<link linkend="_class_generic_document_1a35155b912da66ced38d22e2551364c57">AllocatorType</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
2489 
2491 
2497 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_generic_document_1a3da21e72ec8f26b9da77d86cc1d41cdd">GenericDocument</link>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">Type</link>&#32;type,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>*&#32;allocator&#32;=&#32;0,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;stackCapacity&#32;=&#32;<link linkend="_class_generic_document_1a90d452abe8940d8a9c9634d1c49d8f49">kDefaultStackCapacity</link>,&#32;StackAllocator*&#32;stackAllocator&#32;=&#32;0)&#32;:
2498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">GenericValue</link>&lt;<link linkend="_classrapidjson_1_1_encoding">Encoding</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&gt;(type),&#32;&#32;<link linkend="_class_generic_document_1a9b5f15fc75c8035612c37f796548e87a">allocator_</link>(allocator),&#32;<link linkend="_class_generic_document_1ada153f6865201106b3a753861c870266">ownAllocator_</link>(0),&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>(stackAllocator,&#32;stackCapacity),&#32;<link linkend="_class_generic_document_1a499058f1c615928337d96cfaf374373e">parseResult_</link>()
2499 &#32;&#32;&#32;&#32;{
2500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_generic_document_1a9b5f15fc75c8035612c37f796548e87a">allocator_</link>)
2501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ada153f6865201106b3a753861c870266">ownAllocator_</link>&#32;=&#32;<link linkend="_class_generic_document_1a9b5f15fc75c8035612c37f796548e87a">allocator_</link>&#32;=&#32;<link linkend="_rapidjson_8h_1abdc7cd7902748ffe6626d71c59a73c3b">RAPIDJSON_NEW</link>(<link linkend="_classrapidjson_1_1_allocator">Allocator</link>)();
2502 &#32;&#32;&#32;&#32;}
2503 
2505 
2510 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1a6b1c313ad538cafc4d23d4bd5f97178c">GenericDocument</link>(<link linkend="_classrapidjson_1_1_allocator">Allocator</link>*&#32;allocator&#32;=&#32;0,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;stackCapacity&#32;=&#32;<link linkend="_class_generic_document_1a90d452abe8940d8a9c9634d1c49d8f49">kDefaultStackCapacity</link>,&#32;StackAllocator*&#32;stackAllocator&#32;=&#32;0)&#32;:&#32;
2511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1a9b5f15fc75c8035612c37f796548e87a">allocator_</link>(allocator),&#32;<link linkend="_class_generic_document_1ada153f6865201106b3a753861c870266">ownAllocator_</link>(0),&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>(stackAllocator,&#32;stackCapacity),&#32;<link linkend="_class_generic_document_1a499058f1c615928337d96cfaf374373e">parseResult_</link>()
2512 &#32;&#32;&#32;&#32;{
2513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_generic_document_1a9b5f15fc75c8035612c37f796548e87a">allocator_</link>)
2514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ada153f6865201106b3a753861c870266">ownAllocator_</link>&#32;=&#32;<link linkend="_class_generic_document_1a9b5f15fc75c8035612c37f796548e87a">allocator_</link>&#32;=&#32;<link linkend="_rapidjson_8h_1abdc7cd7902748ffe6626d71c59a73c3b">RAPIDJSON_NEW</link>(<link linkend="_classrapidjson_1_1_allocator">Allocator</link>)();
2515 &#32;&#32;&#32;&#32;}
2516 
2517 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
2519 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ab05bc9e52e201a2867ea5bac141ee1ae">GenericDocument</link>(<link linkend="_class_generic_document">GenericDocument</link>&amp;&amp;&#32;rhs)&#32;RAPIDJSON_NOEXCEPT
2520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>(std::forward&lt;ValueType&gt;(rhs)),&#32;<emphasis role="comment">//&#32;explicit&#32;cast&#32;to&#32;avoid&#32;prohibited&#32;move&#32;from&#32;Document</emphasis>
2521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1a9b5f15fc75c8035612c37f796548e87a">allocator_</link>(rhs.allocator_),
2522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ada153f6865201106b3a753861c870266">ownAllocator_</link>(rhs.ownAllocator_),
2523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>(std::move(rhs.stack_)),
2524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1a499058f1c615928337d96cfaf374373e">parseResult_</link>(rhs.parseResult_)
2525 &#32;&#32;&#32;&#32;{
2526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rhs.allocator_&#32;=&#32;0;
2527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rhs.ownAllocator_&#32;=&#32;0;
2528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rhs.parseResult_&#32;=&#32;<link linkend="_struct_parse_result">ParseResult</link>();
2529 &#32;&#32;&#32;&#32;}
2530 <emphasis role="preprocessor">#endif</emphasis>
2531 
2532 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1aa9f980909298a4de32f66526484820bf">~GenericDocument</link>()&#32;{
2533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;the&#32;::ValueType&#32;before&#32;ownAllocator&#32;is&#32;destroyed,&#32;~ValueType()</emphasis>
2534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;runs&#32;last&#32;and&#32;may&#32;access&#32;its&#32;elements&#32;or&#32;members&#32;which&#32;would&#32;be&#32;freed</emphasis>
2535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;with&#32;an&#32;allocator&#32;like&#32;MemoryPoolAllocator&#32;(CrtAllocator&#32;does&#32;not</emphasis>
2536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;free&#32;its&#32;data&#32;when&#32;destroyed,&#32;but&#32;MemoryPoolAllocator&#32;does).</emphasis>
2537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_generic_document_1ada153f6865201106b3a753861c870266">ownAllocator_</link>)&#32;{
2538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ValueType::SetNull();
2539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ad72f36087f5129ad4b5321cf8418c923">Destroy</link>();
2541 &#32;&#32;&#32;&#32;}
2542 
2543 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
2545 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a78dfa0732175b3d721d97fdcf8ad66a6">operator=</link>(<link linkend="_class_generic_document">GenericDocument</link>&amp;&amp;&#32;rhs)&#32;RAPIDJSON_NOEXCEPT
2546 &#32;&#32;&#32;&#32;{
2547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;cast&#32;to&#32;ValueType&#32;is&#32;necessary&#32;here,&#32;because&#32;otherwise&#32;it&#32;would</emphasis>
2548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;attempt&#32;to&#32;call&#32;GenericValue&apos;s&#32;templated&#32;assignment&#32;operator.</emphasis>
2549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90">ValueType::operator=</link>(std::forward&lt;ValueType&gt;(rhs));
2550 
2551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calling&#32;the&#32;destructor&#32;here&#32;would&#32;prematurely&#32;call&#32;stack_&apos;s&#32;destructor</emphasis>
2552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ad72f36087f5129ad4b5321cf8418c923">Destroy</link>();
2553 
2554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1a9b5f15fc75c8035612c37f796548e87a">allocator_</link>&#32;=&#32;rhs.allocator_;
2555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ada153f6865201106b3a753861c870266">ownAllocator_</link>&#32;=&#32;rhs.ownAllocator_;
2556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>&#32;=&#32;std::move(rhs.stack_);
2557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1a499058f1c615928337d96cfaf374373e">parseResult_</link>&#32;=&#32;rhs.parseResult_;
2558 
2559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rhs.allocator_&#32;=&#32;0;
2560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rhs.ownAllocator_&#32;=&#32;0;
2561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rhs.parseResult_&#32;=&#32;<link linkend="_struct_parse_result">ParseResult</link>();
2562 
2563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
2564 &#32;&#32;&#32;&#32;}
2565 <emphasis role="preprocessor">#endif</emphasis>
2566 
2568 
2573 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a1c3ab2d23fcced40fced7409b9d4a1d2">Swap</link>(<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;rhs)&#32;RAPIDJSON_NOEXCEPT&#32;{
2574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceinternal_1a72b2c71d36273b9691487f58c671ce04">ValueType::Swap</link>(rhs);
2575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.<link linkend="_classinternal_1_1_stack_1a5e601199a21d84b1ac612f558be0f2c3">Swap</link>(rhs.stack_);
2576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceinternal_1a72b2c71d36273b9691487f58c671ce04">internal::Swap</link>(<link linkend="_class_generic_document_1a9b5f15fc75c8035612c37f796548e87a">allocator_</link>,&#32;rhs.allocator_);
2577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceinternal_1a72b2c71d36273b9691487f58c671ce04">internal::Swap</link>(<link linkend="_class_generic_document_1ada153f6865201106b3a753861c870266">ownAllocator_</link>,&#32;rhs.ownAllocator_);
2578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceinternal_1a72b2c71d36273b9691487f58c671ce04">internal::Swap</link>(<link linkend="_class_generic_document_1a499058f1c615928337d96cfaf374373e">parseResult_</link>,&#32;rhs.parseResult_);
2579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
2580 &#32;&#32;&#32;&#32;}
2581 
2582 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Allow&#32;Swap&#32;with&#32;ValueType.</emphasis>
2583 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Refer&#32;to&#32;Effective&#32;C++&#32;3rd&#32;Edition/Item&#32;33:&#32;Avoid&#32;hiding&#32;inherited&#32;names.</emphasis>
2584 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespaceinternal_1a72b2c71d36273b9691487f58c671ce04">ValueType::Swap</link>;
2585 
2587 
2598 &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_document_1a0d63efcc43758ac3aed77e868233369d">swap</link>(<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>,&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;b)&#32;RAPIDJSON_NOEXCEPT&#32;{&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>.Swap(b);&#32;}
2599 
2601 
2605 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Generator&gt;
2606 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1ac30b4e8887974060b695be20c3ceb02c">Populate</link>(Generator&amp;&#32;g)&#32;{
2607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_document_1_1_clear_stack_on_exit">ClearStackOnExit</link>&#32;scope(*<emphasis role="keyword">this</emphasis>);
2608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(g(*<emphasis role="keyword">this</emphasis>))&#32;{
2609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.<link linkend="_classinternal_1_1_stack_1ac484468a2791bd3e9ba609bd1600ab48">GetSize</link>()&#32;==&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value">ValueType</link>));&#32;<emphasis role="comment">//&#32;Got&#32;one&#32;and&#32;only&#32;one&#32;root&#32;object</emphasis>
2610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90">ValueType::operator=</link>(*<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Pop&lt;ValueType&gt;(1));<emphasis role="comment">//&#32;Move&#32;value&#32;from&#32;stack&#32;to&#32;document</emphasis>
2611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
2613 &#32;&#32;&#32;&#32;}
2614 
2617 
2619 
2625 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">unsigned</emphasis>&#32;parseFlags,&#32;<emphasis role="keyword">typename</emphasis>&#32;SourceEncoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;InputStream&gt;
2626 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a7bc1827a7ab04de4789fe46237f0e921">ParseStream</link>(InputStream&amp;&#32;is)&#32;{
2627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_reader">GenericReader&lt;SourceEncoding, Encoding, StackAllocator&gt;</link>&#32;reader(
2628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.<link linkend="_classinternal_1_1_stack_1a657ae4d477b25d4e0045aee0efd809c3">HasAllocator</link>()&#32;?&#32;&amp;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.<link linkend="_classinternal_1_1_stack_1aa6f933acc7ecd92a2b567db5fa8cd43a">GetAllocator</link>()&#32;:&#32;0);
2629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_document_1_1_clear_stack_on_exit">ClearStackOnExit</link>&#32;scope(*<emphasis role="keyword">this</emphasis>);
2630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1a499058f1c615928337d96cfaf374373e">parseResult_</link>&#32;=&#32;reader.template&#32;Parse&lt;parseFlags&gt;(is,&#32;*<emphasis role="keyword">this</emphasis>);
2631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_generic_document_1a499058f1c615928337d96cfaf374373e">parseResult_</link>)&#32;{
2632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.<link linkend="_classinternal_1_1_stack_1ac484468a2791bd3e9ba609bd1600ab48">GetSize</link>()&#32;==&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_class_generic_value">ValueType</link>));&#32;<emphasis role="comment">//&#32;Got&#32;one&#32;and&#32;only&#32;one&#32;root&#32;object</emphasis>
2633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value_1ad7502bbfcd0c14f7ece07243d56e2b90">ValueType::operator=</link>(*<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Pop&lt;ValueType&gt;(1));<emphasis role="comment">//&#32;Move&#32;value&#32;from&#32;stack&#32;to&#32;document</emphasis>
2634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
2636 &#32;&#32;&#32;&#32;}
2637 
2639 
2644 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">unsigned</emphasis>&#32;parseFlags,&#32;<emphasis role="keyword">typename</emphasis>&#32;InputStream&gt;
2645 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a54d96ce0902d2afe033faebfd2863bbc">ParseStream</link>(InputStream&amp;&#32;is)&#32;{
2646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ParseStream&lt;parseFlags,&#32;Encoding,&#32;InputStream&gt;(is);
2647 &#32;&#32;&#32;&#32;}
2648 
2650 
2654 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;InputStream&gt;
2655 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a78f0a1448172e3e998778662e2beb0e3">ParseStream</link>(InputStream&amp;&#32;is)&#32;{
2656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ParseStream&lt;kParseDefaultFlags,&#32;Encoding,&#32;InputStream&gt;(is);
2657 &#32;&#32;&#32;&#32;}
2659 
2662 
2664 
2668 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">unsigned</emphasis>&#32;parseFlags&gt;
2669 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a13f68b1896a24eea4cdbc03a3916225f">ParseInsitu</link>(<link linkend="_class_generic_document_1a6f5b0b7b6626508d094ae67490269700">Ch</link>*&#32;str)&#32;{
2670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_insitu_string_stream">GenericInsituStringStream&lt;Encoding&gt;</link>&#32;s(str);
2671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ParseStream&lt;parseFlags&#32;|&#32;kParseInsituFlag&gt;(s);
2672 &#32;&#32;&#32;&#32;}
2673 
2675 
2678 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a9bd648666f9c538e272bc980aff1b807">ParseInsitu</link>(<link linkend="_class_generic_document_1a6f5b0b7b6626508d094ae67490269700">Ch</link>*&#32;str)&#32;{
2679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ParseInsitu&lt;kParseDefaultFlags&gt;(str);
2680 &#32;&#32;&#32;&#32;}
2682 
2685 
2687 
2691 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">unsigned</emphasis>&#32;parseFlags,&#32;<emphasis role="keyword">typename</emphasis>&#32;SourceEncoding&gt;
2692 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a901db1678f99a1b550003eed75bc380a">Parse</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;SourceEncoding::Ch*&#32;str)&#32;{
2693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(!(parseFlags&#32;&amp;&#32;<link linkend="_reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01">kParseInsituFlag</link>));
2694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_string_stream">GenericStringStream&lt;SourceEncoding&gt;</link>&#32;s(str);
2695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ParseStream&lt;parseFlags,&#32;SourceEncoding&gt;(s);
2696 &#32;&#32;&#32;&#32;}
2697 
2699 
2702 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">unsigned</emphasis>&#32;parseFlags&gt;
2703 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a3c3977dcf15fafe17d57f6784e0ce2b5">Parse</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_document_1a6f5b0b7b6626508d094ae67490269700">Ch</link>*&#32;str)&#32;{
2704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Parse&lt;parseFlags,&#32;Encoding&gt;(str);
2705 &#32;&#32;&#32;&#32;}
2706 
2708 
2710 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1afc8eb27bf748df642d27f5767ae4eaab">Parse</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_document_1a6f5b0b7b6626508d094ae67490269700">Ch</link>*&#32;str)&#32;{
2711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Parse&lt;kParseDefaultFlags&gt;(str);
2712 &#32;&#32;&#32;&#32;}
2713 
2714 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">unsigned</emphasis>&#32;parseFlags,&#32;<emphasis role="keyword">typename</emphasis>&#32;SourceEncoding&gt;
2715 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1ae9f7f4eeb5950d342e71bdca6437ff27">Parse</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;SourceEncoding::Ch*&#32;str,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length)&#32;{
2716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(!(parseFlags&#32;&amp;&#32;<link linkend="_reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01">kParseInsituFlag</link>));
2717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_memory_stream">MemoryStream</link>&#32;ms(<emphasis role="keyword">reinterpret_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><emphasis role="keywordtype">char</emphasis>*<emphasis role="keyword">&gt;</emphasis>(str),&#32;length&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keyword">typename</emphasis>&#32;SourceEncoding::Ch));
2718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_encoded_input_stream">EncodedInputStream&lt;SourceEncoding, MemoryStream&gt;</link>&#32;is(ms);
2719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ParseStream&lt;parseFlags,&#32;SourceEncoding&gt;(is);
2720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
2721 &#32;&#32;&#32;&#32;}
2722 
2723 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">unsigned</emphasis>&#32;parseFlags&gt;
2724 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a40ca30aefee5016888756cac60dec261">Parse</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_document_1a6f5b0b7b6626508d094ae67490269700">Ch</link>*&#32;str,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length)&#32;{
2725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Parse&lt;parseFlags,&#32;Encoding&gt;(str,&#32;length);
2726 &#32;&#32;&#32;&#32;}
2727 &#32;&#32;&#32;&#32;
2728 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a7b436b2c997ffaa7d965e6ecec2f7ae4">Parse</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_document_1a6f5b0b7b6626508d094ae67490269700">Ch</link>*&#32;str,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length)&#32;{
2729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Parse&lt;kParseDefaultFlags&gt;(str,&#32;length);
2730 &#32;&#32;&#32;&#32;}
2731 
2732 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
2733 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">unsigned</emphasis>&#32;parseFlags,&#32;<emphasis role="keyword">typename</emphasis>&#32;SourceEncoding&gt;
2734 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a901db1678f99a1b550003eed75bc380a">Parse</link>(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;typename&#32;SourceEncoding::Ch&gt;&amp;&#32;str)&#32;{
2735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;c_str()&#32;is&#32;constant&#32;complexity&#32;according&#32;to&#32;standard.&#32;Should&#32;be&#32;faster&#32;than&#32;Parse(const&#32;char*,&#32;size_t)</emphasis>
2736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Parse&lt;parseFlags,&#32;SourceEncoding&gt;(str.c_str());
2737 &#32;&#32;&#32;&#32;}
2738 
2739 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">unsigned</emphasis>&#32;parseFlags&gt;
2740 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a901db1678f99a1b550003eed75bc380a">Parse</link>(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;str)&#32;{
2741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Parse&lt;parseFlags,&#32;Encoding&gt;(str.c_str());
2742 &#32;&#32;&#32;&#32;}
2743 
2744 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a901db1678f99a1b550003eed75bc380a">Parse</link>(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;str)&#32;{
2745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Parse&lt;kParseDefaultFlags&gt;(str);
2746 &#32;&#32;&#32;&#32;}
2747 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RAPIDJSON_HAS_STDSTRING&#32;&#32;&#32;&#32;</emphasis>
2748 
2750 
2753 
2755 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1a510a0588db4eb372f5d81bc3646578fb">HasParseError</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_document_1a499058f1c615928337d96cfaf374373e">parseResult_</link>.<link linkend="_struct_parse_result_1adfe0ef5b994e82f8aa9ebf0b30c924b1">IsError</link>();&#32;}
2756 
2758 &#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7">ParseErrorCode</link>&#32;<link linkend="_class_generic_document_1a9400a5bd3169cc6ed545e681ccc06070">GetParseError</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_document_1a499058f1c615928337d96cfaf374373e">parseResult_</link>.<link linkend="_struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e">Code</link>();&#32;}
2759 
2761 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_class_generic_document_1ae1ef7ca99ced428e9300c68e5142afdb">GetErrorOffset</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_document_1a499058f1c615928337d96cfaf374373e">parseResult_</link>.<link linkend="_struct_parse_result_1afbe762766ac21b2aae266105f1dfa643">Offset</link>();&#32;}
2762 
2764 <emphasis role="preprocessor">#ifndef&#32;__clang&#32;</emphasis><emphasis role="comment">//&#32;-Wdocumentation</emphasis>
2774 <emphasis role="comment"></emphasis>#endif
2775 &#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_parse_result">ParseResult</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_document_1a499058f1c615928337d96cfaf374373e">parseResult_</link>;&#32;}
2777 
2779 &#32;&#32;&#32;&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>&amp;&#32;<link linkend="_class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6">GetAllocator</link>()&#32;{
2780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(<link linkend="_class_generic_document_1a9b5f15fc75c8035612c37f796548e87a">allocator_</link>);
2781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<link linkend="_class_generic_document_1a9b5f15fc75c8035612c37f796548e87a">allocator_</link>;
2782 &#32;&#32;&#32;&#32;}
2783 
2785 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_class_generic_document_1a9e2e543c326b8b981d4f2c3d6793d15b">GetStackCapacity</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.<link linkend="_classinternal_1_1_stack_1a67d5d7ee9424d3dd46cf9d001b6cdc6b">GetCapacity</link>();&#32;}
2786 
2787 <emphasis role="keyword">private</emphasis>:
2788 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;clear&#32;stack&#32;on&#32;any&#32;exit&#32;from&#32;ParseStream,&#32;e.g.&#32;due&#32;to&#32;exception</emphasis>
2789 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_generic_document_1_1_clear_stack_on_exit">ClearStackOnExit</link>&#32;{
2790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_struct_generic_document_1_1_clear_stack_on_exit_1a99ba88d8b8ae15ccf5c979fff80c713a">ClearStackOnExit</link>(<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;d)&#32;:&#32;<link linkend="_struct_generic_document_1_1_clear_stack_on_exit_1a56c2e82730f07911288b42640b029dc3">d_</link>(d)&#32;{}
2791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_document_1_1_clear_stack_on_exit_1aa51248f341ec130a29e4f8c3705c9312">~ClearStackOnExit</link>()&#32;{&#32;<link linkend="_struct_generic_document_1_1_clear_stack_on_exit_1a56c2e82730f07911288b42640b029dc3">d_</link>.<link linkend="_class_generic_document_1aa6f040219ed1d4cdd48f7ed9353942a4">ClearStack</link>();&#32;}
2792 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
2793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_document_1_1_clear_stack_on_exit_1ae009d5d42300fb5790227d24b4b38921">ClearStackOnExit</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_generic_document_1_1_clear_stack_on_exit">ClearStackOnExit</link>&amp;);
2794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_generic_document_1_1_clear_stack_on_exit">ClearStackOnExit</link>&amp;&#32;<link linkend="_struct_generic_document_1_1_clear_stack_on_exit_1a1247a0671a8108906ae005ad9f0bc026">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_generic_document_1_1_clear_stack_on_exit">ClearStackOnExit</link>&amp;);
2795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_struct_generic_document_1_1_clear_stack_on_exit_1a56c2e82730f07911288b42640b029dc3">d_</link>;
2796 &#32;&#32;&#32;&#32;};
2797 
2798 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;callers&#32;of&#32;the&#32;following&#32;private&#32;Handler&#32;functions</emphasis>
2799 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;template&#32;&lt;typename,typename,typename&gt;&#32;friend&#32;class&#32;GenericReader;&#32;//&#32;for&#32;parsing</emphasis>
2800 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_value">GenericValue</link>;&#32;<emphasis role="comment">//&#32;for&#32;deep&#32;copying</emphasis>
2801 
2802 <emphasis role="keyword">public</emphasis>:
2803 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Implementation&#32;of&#32;Handler</emphasis>
2804 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1a87dc7f66b2b92660b8a43546733f9df2">Null</link>()&#32;{&#32;<emphasis role="keyword">new</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Push&lt;ValueType&gt;())&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>();&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}
2805 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1a4c44780642518dd34bd241a1ea0ceaf1">Bool</link>(<emphasis role="keywordtype">bool</emphasis>&#32;b)&#32;{&#32;<emphasis role="keyword">new</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Push&lt;ValueType&gt;())&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>(b);&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}
2806 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1a8cc986266becaa268474c607489745c7">Int</link>(<emphasis role="keywordtype">int</emphasis>&#32;i)&#32;{&#32;<emphasis role="keyword">new</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Push&lt;ValueType&gt;())&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>(i);&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}
2807 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1a530dd899a04a00ba74f52507b488d2c1">Uint</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;i)&#32;{&#32;<emphasis role="keyword">new</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Push&lt;ValueType&gt;())&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>(i);&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}
2808 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1a934b1b7a7ed89917615a5410db77a942">Int64</link>(<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&#32;i)&#32;{&#32;<emphasis role="keyword">new</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Push&lt;ValueType&gt;())&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>(i);&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}
2809 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1a50ac3451a1afd0ce248dcc023d5e09e8">Uint64</link>(<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;i)&#32;{&#32;<emphasis role="keyword">new</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Push&lt;ValueType&gt;())&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>(i);&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}
2810 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1a934bf7a5d1ff062ab079756d842e4f6b">Double</link>(<emphasis role="keywordtype">double</emphasis>&#32;d)&#32;{&#32;<emphasis role="keyword">new</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Push&lt;ValueType&gt;())&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>(d);&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}
2811 
2812 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1af703994dec5af6ef049a24b5243aceab">RawNumber</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_document_1a6f5b0b7b6626508d094ae67490269700">Ch</link>*&#32;str,&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;length,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;copy)&#32;{&#32;
2813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(copy)&#32;
2814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Push&lt;ValueType&gt;())&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>(str,&#32;length,&#32;<link linkend="_class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6">GetAllocator</link>());
2815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Push&lt;ValueType&gt;())&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>(str,&#32;length);
2817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
2818 &#32;&#32;&#32;&#32;}
2819 
2820 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1ad319fcc9e13606b6795424b9374a7398">String</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_document_1a6f5b0b7b6626508d094ae67490269700">Ch</link>*&#32;str,&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;length,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;copy)&#32;{&#32;
2821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(copy)&#32;
2822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Push&lt;ValueType&gt;())&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>(str,&#32;length,&#32;<link linkend="_class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6">GetAllocator</link>());
2823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Push&lt;ValueType&gt;())&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>(str,&#32;length);
2825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
2826 &#32;&#32;&#32;&#32;}
2827 
2828 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1abb1417fde52cc34cb340e3b50a3295da">StartObject</link>()&#32;{&#32;<emphasis role="keyword">new</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Push&lt;ValueType&gt;())&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f">kObjectType</link>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}
2829 &#32;&#32;&#32;&#32;
2830 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1a600d0950baabbcab11197cacb1459c7a">Key</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_document_1a6f5b0b7b6626508d094ae67490269700">Ch</link>*&#32;str,&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;length,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;copy)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_document_1ad319fcc9e13606b6795424b9374a7398">String</link>(str,&#32;length,&#32;copy);&#32;}
2831 
2832 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1a42f2df68f9c9d8b88a15b609716867d9">EndObject</link>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;memberCount)&#32;{
2833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_class_generic_member">ValueType::Member</link>*&#32;members&#32;=&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Pop&lt;typename&#32;ValueType::Member&gt;(memberCount);
2834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Top&lt;ValueType&gt;()-&gt;SetObjectRaw(members,&#32;memberCount,&#32;<link linkend="_class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6">GetAllocator</link>());
2835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
2836 &#32;&#32;&#32;&#32;}
2837 
2838 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1ae12c513c61745ae731a47b1ca33db063">StartArray</link>()&#32;{&#32;<emphasis role="keyword">new</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Push&lt;ValueType&gt;())&#32;<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>(<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8">kArrayType</link>);&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}
2839 &#32;&#32;&#32;&#32;
2840 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_document_1a14097c833bed1a9c7be064ea619c887f">EndArray</link>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;elementCount)&#32;{
2841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_value">ValueType</link>*&#32;elements&#32;=&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Pop&lt;ValueType&gt;(elementCount);
2842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Top&lt;ValueType&gt;()-&gt;SetArrayRaw(elements,&#32;elementCount,&#32;<link linkend="_class_generic_document_1a1362cbdcce6ca37356744a3a0dbb11d6">GetAllocator</link>());
2843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
2844 &#32;&#32;&#32;&#32;}
2845 
2846 <emphasis role="keyword">private</emphasis>:
2848 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1a58dd6c300949aeb9627de7f9e34796db">GenericDocument</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;);
2850 &#32;&#32;&#32;&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;&#32;<link linkend="_class_generic_document_1a78dfa0732175b3d721d97fdcf8ad66a6">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_document">GenericDocument</link>&amp;);
2851 
2852 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_document_1aa6f040219ed1d4cdd48f7ed9353942a4">ClearStack</link>()&#32;{
2853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Allocator::kNeedFree)
2854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.<link linkend="_classinternal_1_1_stack_1ac484468a2791bd3e9ba609bd1600ab48">GetSize</link>()&#32;&gt;&#32;0)&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Here&#32;assumes&#32;all&#32;elements&#32;in&#32;stack&#32;array&#32;are&#32;GenericValue&#32;(Member&#32;is&#32;actually&#32;2&#32;GenericValue&#32;objects)</emphasis>
2855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.template&#32;Pop&lt;ValueType&gt;(1))-&gt;~<link linkend="_class_generic_document_1a8936205dc215dda029060d7e835e0549">ValueType</link>();
2856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.<link linkend="_classinternal_1_1_stack_1a02da31665a372738e81ded2f7b7d598e">Clear</link>();
2858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>.<link linkend="_classinternal_1_1_stack_1a3852b8494d69c91f6a238a51572e591e">ShrinkToFit</link>();
2859 &#32;&#32;&#32;&#32;}
2860 
2861 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_document_1ad72f36087f5129ad4b5321cf8418c923">Destroy</link>()&#32;{
2862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a52c941c3fdd646527cdcd42aa846a28a">RAPIDJSON_DELETE</link>(<link linkend="_class_generic_document_1ada153f6865201106b3a753861c870266">ownAllocator_</link>);
2863 &#32;&#32;&#32;&#32;}
2864 
2865 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_class_generic_document_1a90d452abe8940d8a9c9634d1c49d8f49">kDefaultStackCapacity</link>&#32;=&#32;1024;
2866 &#32;&#32;&#32;&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>*&#32;<link linkend="_class_generic_document_1a9b5f15fc75c8035612c37f796548e87a">allocator_</link>;
2867 &#32;&#32;&#32;&#32;<link linkend="_classrapidjson_1_1_allocator">Allocator</link>*&#32;<link linkend="_class_generic_document_1ada153f6865201106b3a753861c870266">ownAllocator_</link>;
2868 &#32;&#32;&#32;&#32;<link linkend="_classinternal_1_1_stack">internal::Stack&lt;StackAllocator&gt;</link>&#32;<link linkend="_class_generic_document_1ad2169359326bdf8a7180338fec77e77f">stack_</link>;
2869 &#32;&#32;&#32;&#32;<link linkend="_struct_parse_result">ParseResult</link>&#32;<link linkend="_class_generic_document_1a499058f1c615928337d96cfaf374373e">parseResult_</link>;
2870 };
2871 
2873 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_document">GenericDocument&lt;UTF8&lt;&gt;</link>&#32;&gt;&#32;<link linkend="_document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7">Document</link>;
2874 
2875 
2877 
2881 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Const,&#32;<emphasis role="keyword">typename</emphasis>&#32;ValueT&gt;
2882 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_array">GenericArray</link>&#32;{
2883 <emphasis role="keyword">public</emphasis>:
2884 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_array">GenericArray&lt;true, ValueT&gt;</link>&#32;<link linkend="_class_generic_array_1a84f0b14518bc5cc44b4ff76a7d5ef81b">ConstArray</link>;
2885 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_array">GenericArray&lt;false, ValueT&gt;</link>&#32;<link linkend="_class_generic_array_1a6683902e86c051c2319e873537dca7b1">Array</link>;
2886 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;ValueT&#32;<link linkend="_class_generic_array_1aecea8be3dca6799bc523f4bffd221839">PlainType</link>;
2887 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">internal::MaybeAddConst&lt;Const,PlainType&gt;::Type</link>&#32;<link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link>;
2888 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link>*&#32;<link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link>;&#32;&#32;<emphasis role="comment">//&#32;This&#32;may&#32;be&#32;const&#32;or&#32;non-const&#32;iterator</emphasis>
2889 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;ValueT*&#32;<link linkend="_class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68">ConstValueIterator</link>;
2890 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&#32;<link linkend="_class_generic_array_1af9cdc12de03c742b9c33dfc172756b97">AllocatorType</link>;
2891 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_generic_string_ref">ValueType::StringRefType</link>&#32;<link linkend="_class_generic_array_1a8dcb9e2a2e103ce1051c16a7486465b9">StringRefType</link>;
2892 
2893 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;
2894 &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_value">GenericValue</link>;
2895 
2896 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array_1aa589d897a194b349d5053391a6f1491d">GenericArray</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_array">GenericArray</link>&amp;&#32;rhs)&#32;:&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>(rhs.<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>)&#32;{}
2897 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array">GenericArray</link>&amp;&#32;<link linkend="_class_generic_array_1a7ddfd0ec5e4f34697863e7651be1067f">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_array">GenericArray</link>&amp;&#32;rhs)&#32;{&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>&#32;=&#32;rhs.<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2898 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array_1a9c6b8f44efa60f720155f968b662e99e">~GenericArray</link>()&#32;{}
2899 
2900 &#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link>&amp;()&#32;<emphasis role="keyword">const</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>;&#32;}
2901 &#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_class_generic_array_1a62d5b7f423edc2141cd4524c7dfd138b">Size</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.Size();&#32;}
2902 &#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_class_generic_array_1ab385434ab7a99de7a0a17e5ee7e09d7f">Capacity</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.Capacity();&#32;}
2903 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_array_1af09e3aaeaeeb5fd825d79cc6663dfcf5">Empty</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.Empty();&#32;}
2904 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_array_1a5e6c158ff76ab8a8ed568fa486e63c80">Clear</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.Clear();&#32;}
2905 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link>&amp;&#32;<link linkend="_class_generic_array_1afb2a9d136405df4d2306fec9909ba23e">operator[]</link>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;index)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>[index];&#32;}
2906 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link>&#32;<link linkend="_class_generic_array_1a3efaa020b29ceed9c1a03465676a32a7">Begin</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.Begin();&#32;}
2907 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link>&#32;<link linkend="_class_generic_array_1a396f83d328f4879225106ea14b1dca84">End</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.End();&#32;}
2908 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array">GenericArray</link>&#32;<link linkend="_class_generic_array_1a7c74901e8e2174fe4661f4848995f355">Reserve</link>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;newCapacity,&#32;<link linkend="_classrapidjson_1_1_allocator">AllocatorType</link>&#32;&amp;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.Reserve(newCapacity,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2909 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array">GenericArray</link>&#32;<link linkend="_class_generic_array_1a2ed88f0630c044bad695a127a866c348">PushBack</link>(<link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link>&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.PushBack(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2910 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
2911 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array">GenericArray</link>&#32;<link linkend="_class_generic_array_1a2ed88f0630c044bad695a127a866c348">PushBack</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_class_generic_array_1af9cdc12de03c742b9c33dfc172756b97">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.PushBack(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2912 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
2913 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array">GenericArray</link>&#32;<link linkend="_class_generic_array_1ae599de6aee1167648085672b79dd6bcc">PushBack</link>(<link linkend="_struct_generic_string_ref">StringRefType</link>&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.PushBack(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2914 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<link linkend="_class_generic_array_1a12adff0c1e11aa3be6f4160015a65df0">RAPIDJSON_DISABLEIF_RETURN</link>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,&#32;<link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue&lt;T&gt;</link>&#32;&gt;),&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_array">GenericArray</link>&amp;))&#32;<link linkend="_class_generic_array_1a2ed88f0630c044bad695a127a866c348">PushBack</link>(<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.PushBack(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2915 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array">GenericArray</link>&#32;<link linkend="_class_generic_array_1afd1c75a82d2fc4366cde18256962edf6">PopBack</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.PopBack();&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2916 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link>&#32;<link linkend="_class_generic_array_1aefa57a363accf2ade867583771f8a54b">Erase</link>(<link linkend="_class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68">ConstValueIterator</link>&#32;pos)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.Erase(pos);&#32;}
2917 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link>&#32;<link linkend="_class_generic_array_1ac1be0c701ad3aaf0570a8a1ffc715fd5">Erase</link>(<link linkend="_class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68">ConstValueIterator</link>&#32;first,&#32;<link linkend="_class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68">ConstValueIterator</link>&#32;last)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.Erase(first,&#32;last);&#32;}
2918 
2919 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_RANGE_FOR</emphasis>
2920 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link>&#32;begin()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.Begin();&#32;}
2921 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link>&#32;end()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>.End();&#32;}
2922 <emphasis role="preprocessor">#endif</emphasis>
2923 
2924 <emphasis role="keyword">private</emphasis>:
2925 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array_1ab657142e2eb04a6be8e69d51c84c067a">GenericArray</link>();
2926 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array_1aefb32b089262f573804bea9faa9c6a22">GenericArray</link>(<link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link>&amp;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>)&#32;:&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>)&#32;{}
2927 &#32;&#32;&#32;&#32;<link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link>&amp;&#32;<link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link>;
2928 };
2929 
2931 
2935 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Const,&#32;<emphasis role="keyword">typename</emphasis>&#32;ValueT&gt;
2936 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_object">GenericObject</link>&#32;{
2937 <emphasis role="keyword">public</emphasis>:
2938 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_object">GenericObject&lt;true, ValueT&gt;</link>&#32;<link linkend="_class_generic_object_1aeee588f9a85e88cac89b7c4dfb6b0bd3">ConstObject</link>;
2939 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_object">GenericObject&lt;false, ValueT&gt;</link>&#32;<link linkend="_class_generic_object_1ae8f5673d0cf8e7ebfd2d4f6ab27b632d">Object</link>;
2940 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;ValueT&#32;<link linkend="_class_generic_object_1a4c25f4a5f696745c418b91ad9f577f12">PlainType</link>;
2941 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">internal::MaybeAddConst&lt;Const,PlainType&gt;::Type</link>&#32;<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link>;
2942 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator&lt;Const, typename ValueT::EncodingType, typename ValueT::AllocatorType&gt;</link>&#32;<link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link>;&#32;&#32;<emphasis role="comment">//&#32;This&#32;may&#32;be&#32;const&#32;or&#32;non-const&#32;iterator</emphasis>
2943 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_member_iterator">GenericMemberIterator&lt;true, typename ValueT::EncodingType, typename ValueT::AllocatorType&gt;</link>&#32;<link linkend="_class_generic_object_1af16706c0ad32b957c56e7d0541628cd5">ConstMemberIterator</link>;
2944 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_allocator">ValueType::AllocatorType</link>&#32;<link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link>;
2945 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_generic_string_ref">ValueType::StringRefType</link>&#32;<link linkend="_class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59">StringRefType</link>;
2946 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_classrapidjson_1_1_encoding">ValueType::EncodingType</link>&#32;<link linkend="_class_generic_object_1a96ebfdde095e2ce42535d15ae5dc58ef">EncodingType</link>;
2947 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb">ValueType::Ch</link>&#32;<link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link>;
2948 
2949 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>,&#32;<emphasis role="keyword">typename</emphasis>&gt;
2950 &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_value">GenericValue</link>;
2951 
2952 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object_1a10173c42d0e8a71ca0e3ae75d800887a">GenericObject</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_object">GenericObject</link>&amp;&#32;rhs)&#32;:&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>(rhs.<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>)&#32;{}
2953 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object">GenericObject</link>&amp;&#32;<link linkend="_class_generic_object_1a995b0e01b59efd7e268f837b8127e0bc">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_object">GenericObject</link>&amp;&#32;rhs)&#32;{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>&#32;=&#32;rhs.<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2954 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object_1a8ac79abb76ac4d2c647681a37fc4ab46">~GenericObject</link>()&#32;{}
2955 
2956 &#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link>&amp;()&#32;<emphasis role="keyword">const</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>;&#32;}
2957 &#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_class_generic_object_1a15326564c82f2b545811f753534563e4">MemberCount</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.MemberCount();&#32;}
2958 &#32;&#32;&#32;&#32;<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;<link linkend="_class_generic_object_1a0389754cbdb435d732bad6edf4f8cdb2">MemberCapacity</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.MemberCapacity();&#32;}
2959 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_object_1a9cc10bfeeb6a5eb95ba1ae587b6e6ad8">ObjectEmpty</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.ObjectEmpty();&#32;}
2960 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link>&amp;&#32;<link linkend="_class_generic_object_1a2bd0d4a75b18ae78c8a1e1051e8ec9ac">operator[]</link>(<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>*&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>[name];&#32;}
2961 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;&#32;<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link>&amp;&#32;<link linkend="_class_generic_object_1a21c677e997d4dfe4e0692cdb75067428">operator[]</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;EncodingType, SourceAllocator&gt;</link>&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>[name];&#32;}
2962 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
2963 &#32;&#32;&#32;&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_class_generic_object_1a2bd0d4a75b18ae78c8a1e1051e8ec9ac">operator[]</link>(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>[name];&#32;}
2964 <emphasis role="preprocessor">#endif</emphasis>
2965 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;<link linkend="_class_generic_object_1af1e80a8a521f05530f9b6a448242ff2d">MemberBegin</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.MemberBegin();&#32;}
2966 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;<link linkend="_class_generic_object_1a75873786614f67796bfb190008e004dc">MemberEnd</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.MemberEnd();&#32;}
2967 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object">GenericObject</link>&#32;<link linkend="_class_generic_object_1af750abd40d05136da98705899b4575c2">MemberReserve</link>(<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>&#32;newCapacity,&#32;<link linkend="_classrapidjson_1_1_allocator">AllocatorType</link>&#32;&amp;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.MemberReserve(newCapacity,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2968 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_object_1a996d775e52cc7c5cf2aa308cf5a2b2cf">HasMember</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link>*&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.HasMember(name);&#32;}
2969 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
2970 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_object_1a996d775e52cc7c5cf2aa308cf5a2b2cf">HasMember</link>(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.HasMember(name);&#32;}
2971 <emphasis role="preprocessor">#endif</emphasis>
2972 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_object_1a0b63666ca05c86f9d719350f2302a3f7">HasMember</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;EncodingType, SourceAllocator&gt;</link>&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.HasMember(name);&#32;}
2973 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;<link linkend="_class_generic_object_1a979890ccb3b116af19f9e3e77d3d286f">FindMember</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link>*&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.FindMember(name);&#32;}
2974 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;<link linkend="_class_generic_object_1a12a4fbbf2219d6bb43c3d61923830ab4">FindMember</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;EncodingType, SourceAllocator&gt;</link>&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.FindMember(name);&#32;}
2975 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
2976 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link>&#32;<link linkend="_class_generic_object_1a979890ccb3b116af19f9e3e77d3d286f">FindMember</link>(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.FindMember(name);&#32;}
2977 <emphasis role="preprocessor">#endif</emphasis>
2978 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object">GenericObject</link>&#32;<link linkend="_class_generic_object_1a3668524c8566c46cbae97d938064f5fa">AddMember</link>(<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link>&amp;&#32;name,&#32;<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link>&amp;&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.AddMember(name,&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2979 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object">GenericObject</link>&#32;<link linkend="_class_generic_object_1ae871adc8c906a72878b7cf5df279ed1f">AddMember</link>(<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link>&amp;&#32;name,&#32;<link linkend="_struct_generic_string_ref">StringRefType</link>&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.AddMember(name,&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2980 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
2981 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object">GenericObject</link>&#32;<link linkend="_class_generic_object_1a3668524c8566c46cbae97d938064f5fa">AddMember</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;name,&#32;std::basic_string&lt;Ch&gt;&amp;&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;<link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.AddMember(name,&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2982 <emphasis role="preprocessor">#endif</emphasis>
2983 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<link linkend="_class_generic_object_1a98ebcec632c41442d89cd8634b7ecc47">RAPIDJSON_DISABLEIF_RETURN</link>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,&#32;<link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue&lt;T&gt;</link>&#32;&gt;),&#32;(<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link>&amp;))&#32;<link linkend="_class_generic_object_1a3668524c8566c46cbae97d938064f5fa">AddMember</link>(<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link>&amp;&#32;name,&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.AddMember(name,&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2984 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
2985 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object">GenericObject</link>&#32;<link linkend="_class_generic_object_1a3668524c8566c46cbae97d938064f5fa">AddMember</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&amp;&#32;name,&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&amp;&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;<link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.AddMember(name,&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2986 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object">GenericObject</link>&#32;<link linkend="_class_generic_object_1a3668524c8566c46cbae97d938064f5fa">AddMember</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&amp;&#32;name,&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;<link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.AddMember(name,&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2987 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object">GenericObject</link>&#32;<link linkend="_class_generic_object_1a3668524c8566c46cbae97d938064f5fa">AddMember</link>(<link linkend="_class_generic_value">ValueType</link>&amp;&#32;name,&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&amp;&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;<link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.AddMember(name,&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2988 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object">GenericObject</link>&#32;<link linkend="_class_generic_object_1a3668524c8566c46cbae97d938064f5fa">AddMember</link>(<link linkend="_class_generic_object_1a9b8381fc96f5f89b2163b052ed66cc59">StringRefType</link>&#32;name,&#32;<link linkend="_class_generic_value">ValueType</link>&amp;&amp;&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;<link linkend="_class_generic_object_1a00c8cee952d5ebadc5e1c309aa489ad9">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.AddMember(name,&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2989 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RAPIDJSON_HAS_CXX11_RVALUE_REFS</emphasis>
2990 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object">GenericObject</link>&#32;<link linkend="_class_generic_object_1a011a0dd06baf841e3f6e21a3c95db3c1">AddMember</link>(<link linkend="_struct_generic_string_ref">StringRefType</link>&#32;name,&#32;<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link>&amp;&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.AddMember(name,&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2991 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object">GenericObject</link>&#32;<link linkend="_class_generic_object_1a3af43681aea03c4313d689bcbf5e3363">AddMember</link>(<link linkend="_struct_generic_string_ref">StringRefType</link>&#32;name,&#32;<link linkend="_struct_generic_string_ref">StringRefType</link>&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.AddMember(name,&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2992 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;&#32;<link linkend="_class_generic_object_1af361a4b677882964789201fc605541d0">RAPIDJSON_DISABLEIF_RETURN</link>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,&#32;<link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue&lt;T&gt;</link>&#32;&gt;),&#32;(<link linkend="_class_generic_object">GenericObject</link>))&#32;<link linkend="_class_generic_object_1a3668524c8566c46cbae97d938064f5fa">AddMember</link>(<link linkend="_struct_generic_string_ref">StringRefType</link>&#32;name,&#32;<link linkend="_prettywritertest_8cpp_1a6283df8c4e365cc8a01727e2d7ad44bf">T</link>&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;<link linkend="_classrapidjson_1_1_allocator">AllocatorType</link>&amp;&#32;allocator)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.AddMember(name,&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>,&#32;allocator);&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;&#32;}
2993 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_generic_object_1a129ce3843a6658e620a7f740d9f44ee1">RemoveAllMembers</link>()&#32;{&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.RemoveAllMembers();&#32;}
2994 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_object_1aebeda9c2cac6afd56dda55caaf2c4a0c">RemoveMember</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link>*&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.RemoveMember(name);&#32;}
2995 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
2996 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_object_1aebeda9c2cac6afd56dda55caaf2c4a0c">RemoveMember</link>(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.RemoveMember(name);&#32;}
2997 <emphasis role="preprocessor">#endif</emphasis>
2998 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_object_1a8e29dc07b992e71e35dd93a57f95842c">RemoveMember</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;EncodingType, SourceAllocator&gt;</link>&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.RemoveMember(name);&#32;}
2999 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;<link linkend="_class_generic_object_1a006f76a33dada85c9d13e069cc43623d">RemoveMember</link>(<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;m)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.RemoveMember(m);&#32;}
3000 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;<link linkend="_class_generic_object_1a29ad0490a4a088d57df7a9884f979a82">EraseMember</link>(<link linkend="_class_generic_member_iterator">ConstMemberIterator</link>&#32;pos)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.EraseMember(pos);&#32;}
3001 &#32;&#32;&#32;&#32;<link linkend="_class_generic_member_iterator">MemberIterator</link>&#32;<link linkend="_class_generic_object_1a67f85d2da462287dead8e35f2ac974b5">EraseMember</link>(<link linkend="_class_generic_member_iterator">ConstMemberIterator</link>&#32;first,&#32;<link linkend="_class_generic_member_iterator">ConstMemberIterator</link>&#32;last)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.EraseMember(first,&#32;last);&#32;}
3002 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_object_1af0d31a8547051624449494a339b20107">EraseMember</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_object_1ac6747e5baa13e15bcea1658b5624647a">Ch</link>*&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.EraseMember(name);&#32;}
3003 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_STDSTRING</emphasis>
3004 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_object_1a29ad0490a4a088d57df7a9884f979a82">EraseMember</link>(<emphasis role="keyword">const</emphasis>&#32;std::basic_string&lt;Ch&gt;&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a29ad0490a4a088d57df7a9884f979a82">EraseMember</link>(<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link>(<link linkend="_document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5">StringRef</link>(name)));&#32;}
3005 <emphasis role="preprocessor">#endif</emphasis>
3006 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceAllocator&gt;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_generic_object_1a4cd6f90444f20cc9d5577747d3968da4">EraseMember</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;EncodingType, SourceAllocator&gt;</link>&amp;&#32;name)<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.EraseMember(name);&#32;}
3007 
3008 <emphasis role="preprocessor">#if&#32;RAPIDJSON_HAS_CXX11_RANGE_FOR</emphasis>
3009 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link>&#32;begin()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.MemberBegin();&#32;}
3010 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object_1a1f531d70f8d57ed30199ac445b5935e6">MemberIterator</link>&#32;end()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>.MemberEnd();&#32;}
3011 <emphasis role="preprocessor">#endif</emphasis>
3012 
3013 <emphasis role="keyword">private</emphasis>:
3014 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object_1a4bd854dbe7168cf81541fad6fd9d9f12">GenericObject</link>();
3015 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object_1a56600535a7936f35f53973e358cd4731">GenericObject</link>(<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link>&amp;&#32;<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>)&#32;:&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>(<link linkend="_class_generic_object_1a131538fbbacbc0a3a5ad15dbea66394f">value</link>)&#32;{}
3016 &#32;&#32;&#32;&#32;<link linkend="_class_generic_object_1a930aa30f89caee7ba7bff60bf9dc21b1">ValueType</link>&amp;&#32;<link linkend="_class_generic_object_1a2578a62ca4786f6fb056400138623473">value_</link>;
3017 };
3018 
3019 <link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1">RAPIDJSON_NAMESPACE_END</link>
3020 RAPIDJSON_DIAG_POP
3021 
3022 <emphasis role="preprocessor">#ifdef&#32;RAPIDJSON_WINDOWS_GETOBJECT_WORKAROUND_APPLIED</emphasis>
3023 <emphasis role="preprocessor">#pragma&#32;pop_macro(&quot;GetObject&quot;</emphasis>)
3024 <emphasis role="preprocessor">#undef&#32;RAPIDJSON_WINDOWS_GETOBJECT_WORKAROUND_APPLIED</emphasis>
3025 <emphasis role="preprocessor">#endif</emphasis>
3026 
3027 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RAPIDJSON_DOCUMENT_H_</emphasis>
</programlisting></section>
