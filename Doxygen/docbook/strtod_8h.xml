<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_strtod_8h" xml:lang="en-US">
<title>src/rapidjson/include/rapidjson/internal/strtod.h File Reference</title>
<indexterm><primary>src/rapidjson/include/rapidjson/internal/strtod.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;ieee754.h&quot;
#include &quot;biginteger.h&quot;
#include &quot;diyfp.h&quot;
#include &quot;pow10.h&quot;
#include &lt;climits&gt;
#include &lt;limits&gt;
</programlisting><simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespaceinternal">internal</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>double <link linkend="_namespaceinternal_1aa1bb51d788788eb5390a16462b40d98d">internal::FastPath</link> (double significand, int exp)</para>
</listitem>
            <listitem><para>double <link linkend="_namespaceinternal_1a9e5fac4695310f09892fe52b1d24ab19">internal::StrtodNormalPrecision</link> (double d, int p)</para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; </para><para><link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> <link linkend="_namespaceinternal_1ace304441347098a4953ea99f50805da9">internal::Min3</link> (<link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> <link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>, <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> b, <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> c)</para>
</listitem>
            <listitem><para>int <link linkend="_namespaceinternal_1a190f9c286df64526a7e3550528ed6b02">internal::CheckWithinHalfULP</link> (double b, const BigInteger &amp;d, int dExp)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespaceinternal_1a598b2d2f85130bff3c3942e4750b9185">internal::StrtodFast</link> (double d, int p, double *result)</para>
</listitem>
            <listitem><para>template&lt;typename Ch &gt; </para><para>bool <link linkend="_namespaceinternal_1aab0ac7e895939a3e117ec8e3395fd334">internal::StrtodDiyFp</link> (const Ch *decimals, int dLen, int dExp, double *result)</para>
</listitem>
            <listitem><para>template&lt;typename Ch &gt; </para><para>double <link linkend="_namespaceinternal_1aa69b729bd9d047f70ba772424cfb65cb">internal::StrtodBigInteger</link> (double approx, const Ch *decimals, int dLen, int dExp)</para>
</listitem>
            <listitem><para>template&lt;typename Ch &gt; </para><para>double <link linkend="_namespaceinternal_1a6109c750ee4707d4f71de280816a1a00">internal::StrtodFullPrecision</link> (double d, int p, const Ch *decimals, size_t length, size_t decimalPosition, int exp)</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
