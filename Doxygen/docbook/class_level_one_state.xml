<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_level_one_state" xml:lang="en-US">
<title>LevelOneState Class Reference</title>
<indexterm><primary>LevelOneState</primary></indexterm>
<para>
<computeroutput>#include &lt;LevelOneState.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for LevelOneState:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_level_one_state.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_level_one_state_1a3c7442500fb80b2cea0c79f3c855c11b">LevelOneState</link> (std::stack&lt; <link linkend="_class_game_state">GameState</link> * &gt; *<link linkend="_class_game_state_1a6e9e1aa616cd1071425f2766a76957ec">states</link>)</para>

<para>Konstruktor przyjmujący odniesienie do stosu stanów aplikacji. </para>
</listitem>
            <listitem><para>void <link linkend="_class_level_one_state_1a75b5cebe202e376c76974148252978cc">update</link> (float deltaTime) override</para>

<para>Odświeża logikę stanu. </para>
</listitem>
            <listitem><para>void <link linkend="_class_level_one_state_1a2f451c45e79cda05456e9f93a62d04ce">render</link> (sf::RenderTarget &amp;window) override</para>

<para>Wyświetla elementy stanu na ekranie. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_level_one_state_1a3c7442500fb80b2cea0c79f3c855c11b"/><section>
    <title>LevelOneState()</title>
<indexterm><primary>LevelOneState</primary><secondary>LevelOneState</secondary></indexterm>
<indexterm><primary>LevelOneState</primary><secondary>LevelOneState</secondary></indexterm>
<para><computeroutput>LevelOneState::LevelOneState (std::stack&lt; <link linkend="_class_game_state">GameState</link> * &gt; * states)<computeroutput>[explicit]</computeroutput></computeroutput></para><para>

<para>Konstruktor przyjmujący odniesienie do stosu stanów aplikacji. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_level_one_state_1a2f451c45e79cda05456e9f93a62d04ce"/><section>
    <title>render()</title>
<indexterm><primary>render</primary><secondary>LevelOneState</secondary></indexterm>
<indexterm><primary>LevelOneState</primary><secondary>render</secondary></indexterm>
<para><computeroutput>void LevelOneState::render (sf::RenderTarget &amp; window)<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Wyświetla elementy stanu na ekranie. </para>
</para>
<para>
Reimplemented from <link linkend="_class_game_state_1ab54d45c62b2ec2719bd48788b982b471">GameState</link>.</para>
</section>
<anchor xml:id="_class_level_one_state_1a75b5cebe202e376c76974148252978cc"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>LevelOneState</secondary></indexterm>
<indexterm><primary>LevelOneState</primary><secondary>update</secondary></indexterm>
<para><computeroutput>void LevelOneState::update (float deltaTime)<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Odświeża logikę stanu. </para>
</para>
<para>
Implements <link linkend="_class_game_state_1a360521bb5b371ea942a9e4e2ba1e8145">GameState</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/states/<link linkend="__level_one_state_8h">LevelOneState.h</link>src/states/<link linkend="__level_one_state_8cpp">LevelOneState.cpp</link></section>
</section>
