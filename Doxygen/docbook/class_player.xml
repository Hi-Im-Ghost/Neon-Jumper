<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_player" xml:lang="en-US">
<title>Player Class Reference</title>
<indexterm><primary>Player</primary></indexterm>
<para>
<computeroutput>#include &lt;Player.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Player:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_player.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_player_1ac1956730c1a4efd8a07546b0276f8b60">Player</link> (float x=0, float y=0)</para>

<para>Konstruktor gracza z opcją podania lokalizacji początkowej na mapie. </para>
</listitem>
            <listitem><para>void <link linkend="_class_player_1a7ece6518af33ca7bc6a3fc36fd06bd85">move</link> (float x, float y)</para>

<para>Służy do poruszania graczem. Podanie wartości 1 jako argument porusza graczem w domyślny sposób. </para>
</listitem>
            <listitem><para>sf::Vector2f <link linkend="_class_player_1a23356f99a9de86d3d47eadb679b332dc">getPosition</link> ()</para>

<para>Zwraca pozycję gracza. </para>
</listitem>
            <listitem><para>void <link linkend="_class_player_1a8127e94cc6c15d49f28ad840126a4ae5">zeroVelocity</link> (bool x, bool y)</para>

<para>Zeruje x - poziomą, y - pionową prędkość gracza. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_player_1a308bbc68e154a988d40d813d3d1de44c">checkForIntersection</link> (sf::RectangleShape &amp;shape)</para>

<para>Sprawdza, czy hitbox gracza nachodzi na hitbox podany w parametrze. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_player_1a045c23cf9bbbebfefbfcf32701ba4faf">getTimeStopped</link> () const</para>

<para>Pozwala sprawdzić czy czas jest zatrzymany. </para>
</listitem>
            <listitem><para>float <link linkend="_class_player_1ad8a8b25b36812e3f2281fffa900312dd">getTimeStopValue</link> () const</para>

<para>Zwraca wartość 0-1 reprezentującą stopień naładowania umiejętności zatrzymania czasu. </para>
</listitem>
            <listitem><para>void <link linkend="_class_player_1a0b8b2c0946659d50a45b560cf83815ee">update</link> (float deltaTime, const std::list&lt; sf::RectangleShape &gt; &amp;allHitboxes)</para>

<para>Odświeża logikę gracza odpowiedzialną za ruch, czytanie klawiatury itd. </para>
</listitem>
            <listitem><para>void <link linkend="_class_player_1a317b439dc6ba2bb2b6aad2f82b130c02">render</link> (sf::RenderTarget &amp;window)</para>

<para>Wyświetla postać gracza na ekranie. </para>
</listitem>
            <listitem><para>void <link linkend="_class_player_1a64b65de6130f811ce670be4b0ca790b4">setPosition</link> (sf::Vector2f)</para>

<para>Ustawia pozycję postaci gracza a mapie. </para>
</listitem>
            <listitem><para>void <link linkend="_class_player_1a0b8255feb633ed5922ca99598776de9e">switchAnimation</link> (<link linkend="_class_animated_1a1f2b6a8597e3a5fb5c1d1d8a28d587fb">Animation</link> newAnimation)</para>

<para>Zmienia stan animacji gracza na podany. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_player_1a836420cfbc65547977599ba7c1a5a77c">isReady</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_player_1ac1956730c1a4efd8a07546b0276f8b60"/><section>
    <title>Player()</title>
<indexterm><primary>Player</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>Player</secondary></indexterm>
<para><computeroutput>Player::Player (float x = <computeroutput>0</computeroutput>
, float y = <computeroutput>0</computeroutput>
)<computeroutput>[explicit]</computeroutput></computeroutput></para><para>

<para>Konstruktor gracza z opcją podania lokalizacji początkowej na mapie. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_player_1a308bbc68e154a988d40d813d3d1de44c"/><section>
    <title>checkForIntersection()</title>
<indexterm><primary>checkForIntersection</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>checkForIntersection</secondary></indexterm>
<para><computeroutput>bool Player::checkForIntersection (sf::RectangleShape &amp; shape)</computeroutput></para><para>

<para>Sprawdza, czy hitbox gracza nachodzi na hitbox podany w parametrze. </para>
</para>
</section>
<anchor xml:id="_class_player_1a23356f99a9de86d3d47eadb679b332dc"/><section>
    <title>getPosition()</title>
<indexterm><primary>getPosition</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>getPosition</secondary></indexterm>
<para><computeroutput>sf::Vector2f Player::getPosition ( )</computeroutput></para><para>

<para>Zwraca pozycję gracza. </para>
</para>
</section>
<anchor xml:id="_class_player_1a045c23cf9bbbebfefbfcf32701ba4faf"/><section>
    <title>getTimeStopped()</title>
<indexterm><primary>getTimeStopped</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>getTimeStopped</secondary></indexterm>
<para><computeroutput>bool Player::getTimeStopped ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Pozwala sprawdzić czy czas jest zatrzymany. </para>
</para>
</section>
<anchor xml:id="_class_player_1ad8a8b25b36812e3f2281fffa900312dd"/><section>
    <title>getTimeStopValue()</title>
<indexterm><primary>getTimeStopValue</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>getTimeStopValue</secondary></indexterm>
<para><computeroutput>float Player::getTimeStopValue ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca wartość 0-1 reprezentującą stopień naładowania umiejętności zatrzymania czasu. </para>
</para>
</section>
<anchor xml:id="_class_player_1a7ece6518af33ca7bc6a3fc36fd06bd85"/><section>
    <title>move()</title>
<indexterm><primary>move</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>move</secondary></indexterm>
<para><computeroutput>void Player::move (float x, float y)</computeroutput></para><para>

<para>Służy do poruszania graczem. Podanie wartości 1 jako argument porusza graczem w domyślny sposób. </para>
</para>
</section>
<anchor xml:id="_class_player_1a317b439dc6ba2bb2b6aad2f82b130c02"/><section>
    <title>render()</title>
<indexterm><primary>render</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>render</secondary></indexterm>
<para><computeroutput>void Player::render (sf::RenderTarget &amp; window)</computeroutput></para><para>

<para>Wyświetla postać gracza na ekranie. </para>
</para>
</section>
<anchor xml:id="_class_player_1a64b65de6130f811ce670be4b0ca790b4"/><section>
    <title>setPosition()</title>
<indexterm><primary>setPosition</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>setPosition</secondary></indexterm>
<para><computeroutput>void Player::setPosition (sf::Vector2f newPos)</computeroutput></para><para>

<para>Ustawia pozycję postaci gracza a mapie. </para>
</para>
</section>
<anchor xml:id="_class_player_1a0b8255feb633ed5922ca99598776de9e"/><section>
    <title>switchAnimation()</title>
<indexterm><primary>switchAnimation</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>switchAnimation</secondary></indexterm>
<para><computeroutput>void Player::switchAnimation (<link linkend="_class_animated_1a1f2b6a8597e3a5fb5c1d1d8a28d587fb">Animation</link> newAnimation)</computeroutput></para><para>

<para>Zmienia stan animacji gracza na podany. </para>
</para>
</section>
<anchor xml:id="_class_player_1a0b8b2c0946659d50a45b560cf83815ee"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>update</secondary></indexterm>
<para><computeroutput>void Player::update (float deltaTime, const std::list&lt; sf::RectangleShape &gt; &amp; allHitboxes)</computeroutput></para><para>

<para>Odświeża logikę gracza odpowiedzialną za ruch, czytanie klawiatury itd. </para>
</para>
</section>
<anchor xml:id="_class_player_1a8127e94cc6c15d49f28ad840126a4ae5"/><section>
    <title>zeroVelocity()</title>
<indexterm><primary>zeroVelocity</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>zeroVelocity</secondary></indexterm>
<para><computeroutput>void Player::zeroVelocity (bool x, bool y)</computeroutput></para><para>

<para>Zeruje x - poziomą, y - pionową prędkość gracza. </para>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_player_1a836420cfbc65547977599ba7c1a5a77c"/><section>
    <title>isReady</title>
<indexterm><primary>isReady</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>isReady</secondary></indexterm>
<para><computeroutput>bool Player::isReady</computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
src/entities/<link linkend="__player_8h">Player.h</link>src/entities/<link linkend="__player_8cpp">Player.cpp</link></section>
</section>
