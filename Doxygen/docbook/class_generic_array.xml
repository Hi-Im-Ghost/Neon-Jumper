<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_generic_array" xml:lang="en-US">
<title>GenericArray&lt; Const, ValueT &gt; Class Template Reference</title>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary></indexterm>
<para>

<para>Helper class for accessing Value of array type. </para>
 
</para>
<para>
<computeroutput>#include &lt;document.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_class_generic_array">GenericArray</link>&lt; true, ValueT &gt; <link linkend="_class_generic_array_1a84f0b14518bc5cc44b4ff76a7d5ef81b">ConstArray</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_array">GenericArray</link>&lt; false, ValueT &gt; <link linkend="_class_generic_array_1a6683902e86c051c2319e873537dca7b1">Array</link></para>
</listitem>
            <listitem><para>typedef ValueT <link linkend="_class_generic_array_1aecea8be3dca6799bc523f4bffd221839">PlainType</link></para>
</listitem>
            <listitem><para>typedef internal::MaybeAddConst&lt; Const, <link linkend="_class_generic_array_1aecea8be3dca6799bc523f4bffd221839">PlainType</link> &gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link> <link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link> * <link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link> ValueT * <link linkend="_class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68">ConstValueIterator</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1">ValueType::AllocatorType</link> <link linkend="_class_generic_array_1af9cdc12de03c742b9c33dfc172756b97">AllocatorType</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">ValueType::StringRefType</link> <link linkend="_class_generic_array_1a8dcb9e2a2e103ce1051c16a7486465b9">StringRefType</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_array_1aa589d897a194b349d5053391a6f1491d">GenericArray</link> (<link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link> <link linkend="_class_generic_array">GenericArray</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_class_generic_array">GenericArray</link> &amp; <link linkend="_class_generic_array_1a7ddfd0ec5e4f34697863e7651be1067f">operator=</link> (<link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link> <link linkend="_class_generic_array">GenericArray</link> &amp;rhs)</para>
</listitem>
            <listitem><para><link linkend="_class_generic_array_1a9c6b8f44efa60f720155f968b662e99e">~GenericArray</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_generic_array_1a28693c9c06b9e0445df7a5d9c4e8bb18">operator ValueType &amp;</link> () <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_array_1a62d5b7f423edc2141cd4524c7dfd138b">Size</link> () <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
            <listitem><para><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_array_1ab385434ab7a99de7a0a17e5ee7e09d7f">Capacity</link> () <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_generic_array_1af09e3aaeaeeb5fd825d79cc6663dfcf5">Empty</link> () <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
            <listitem><para>void <link linkend="_class_generic_array_1a5e6c158ff76ab8a8ed568fa486e63c80">Clear</link> () <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link> &amp; <link linkend="_class_generic_array_1afb2a9d136405df4d2306fec9909ba23e">operator[]</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index) <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link> <link linkend="_class_generic_array_1a3efaa020b29ceed9c1a03465676a32a7">Begin</link> () <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link> <link linkend="_class_generic_array_1a396f83d328f4879225106ea14b1dca84">End</link> () <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_array">GenericArray</link> <link linkend="_class_generic_array_1a7c74901e8e2174fe4661f4848995f355">Reserve</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> newCapacity, <link linkend="_class_generic_array_1af9cdc12de03c742b9c33dfc172756b97">AllocatorType</link> &amp;allocator) <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_array">GenericArray</link> <link linkend="_class_generic_array_1a2ed88f0630c044bad695a127a866c348">PushBack</link> (<link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link> &amp;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>, <link linkend="_class_generic_array_1af9cdc12de03c742b9c33dfc172756b97">AllocatorType</link> &amp;allocator) <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_array">GenericArray</link> <link linkend="_class_generic_array_1ae599de6aee1167648085672b79dd6bcc">PushBack</link> (<link linkend="_class_generic_array_1a8dcb9e2a2e103ce1051c16a7486465b9">StringRefType</link> <link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>, <link linkend="_class_generic_array_1af9cdc12de03c742b9c33dfc172756b97">AllocatorType</link> &amp;allocator) <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
            <listitem><para>template&lt;typename <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; </para><para><link linkend="_class_generic_array_1a12adff0c1e11aa3be6f4160015a65df0">RAPIDJSON_DISABLEIF_RETURN</link> ((internal::OrExpr&lt; internal::IsPointer&lt; <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt;, <link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue</link>&lt; <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; &gt;),(<link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link> <link linkend="_class_generic_array">GenericArray</link> &amp;)) <link linkend="_class_generic_array_1a2ed88f0630c044bad695a127a866c348">PushBack</link>(<link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> <link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_array">GenericArray</link> <link linkend="_class_generic_array_1afd1c75a82d2fc4366cde18256962edf6">PopBack</link> () <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link> <link linkend="_class_generic_array_1aefa57a363accf2ade867583771f8a54b">Erase</link> (<link linkend="_class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68">ConstValueIterator</link> pos) <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
            <listitem><para><link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link> <link linkend="_class_generic_array_1ac1be0c701ad3aaf0570a8a1ffc715fd5">Erase</link> (<link linkend="_class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68">ConstValueIterator</link> first, <link linkend="_class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68">ConstValueIterator</link> last) <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_array_1af9cdc12de03c742b9c33dfc172756b97">AllocatorType</link> &amp;allocator <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link> { value_.PushBack(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>, allocator)</para>
</listitem>
            <listitem><para>return * <link linkend="_class_generic_array_1aef8b7baa9ec5cd68d8951fa8bad85217">this</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_array_1ab657142e2eb04a6be8e69d51c84c067a">GenericArray</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_generic_array_1aefb32b089262f573804bea9faa9c6a22">GenericArray</link> (<link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link> &amp;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link> &amp; <link linkend="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5">value_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename , typename &gt; </para><para>class <link linkend="_class_generic_array_1a899449e1a645b5e377af059fb61113d8">GenericValue</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;bool Const, typename ValueT&gt;
class GenericArray&lt; Const, ValueT &gt;</title></simplesect>

<para>Helper class for accessing Value of array type. </para>



<para>Instance of this helper class is obtained by <computeroutput>GenericValue::GetArray()</computeroutput>. In addition to all APIs for array type, it provides range-based for loop if <computeroutput>RAPIDJSON_HAS_CXX11_RANGE_FOR=1</computeroutput>. </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_generic_array_1af9cdc12de03c742b9c33dfc172756b97"/><section>
    <title>AllocatorType</title>
<indexterm><primary>AllocatorType</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>AllocatorType</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1">ValueType::AllocatorType</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::AllocatorType</computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a6683902e86c051c2319e873537dca7b1"/><section>
    <title>Array</title>
<indexterm><primary>Array</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>Array</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_array">GenericArray</link>&lt;false, ValueT&gt; <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::Array</computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a84f0b14518bc5cc44b4ff76a7d5ef81b"/><section>
    <title>ConstArray</title>
<indexterm><primary>ConstArray</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>ConstArray</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_array">GenericArray</link>&lt;true, ValueT&gt; <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::ConstArray</computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68"/><section>
    <title>ConstValueIterator</title>
<indexterm><primary>ConstValueIterator</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>ConstValueIterator</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link> ValueT* <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::ConstValueIterator</computeroutput></para></section>
<anchor xml:id="_class_generic_array_1aecea8be3dca6799bc523f4bffd221839"/><section>
    <title>PlainType</title>
<indexterm><primary>PlainType</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>PlainType</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef ValueT <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::PlainType</computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a8dcb9e2a2e103ce1051c16a7486465b9"/><section>
    <title>StringRefType</title>
<indexterm><primary>StringRefType</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>StringRefType</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_value_1a32e0f30ee278072374c8168b14d3317f">ValueType::StringRefType</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::StringRefType</computeroutput></para></section>
<anchor xml:id="_class_generic_array_1afc6ad62c3f00531fa378db266182704a"/><section>
    <title>ValueIterator</title>
<indexterm><primary>ValueIterator</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>ValueIterator</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef <link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link>* <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::ValueIterator</computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed"/><section>
    <title>ValueType</title>
<indexterm><primary>ValueType</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>ValueType</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>typedef internal::MaybeAddConst&lt;Const,<link linkend="_class_generic_array_1aecea8be3dca6799bc523f4bffd221839">PlainType</link>&gt;<link linkend="_rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7">::Type</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;<link linkend="_schemavalidator_8cpp_1af2c59956daf09ddf36e71b173b084b0f">::ValueType</link></computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_generic_array_1aa589d897a194b349d5053391a6f1491d"/><section>
    <title>GenericArray()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>GenericArray</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>GenericArray</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;<link linkend="_class_generic_array">::GenericArray</link> (<link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt; &amp; rhs)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a9c6b8f44efa60f720155f968b662e99e"/><section>
    <title>~GenericArray()</title>
<indexterm><primary>~GenericArray</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>~GenericArray</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::~<link linkend="_class_generic_array">GenericArray</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1ab657142e2eb04a6be8e69d51c84c067a"/><section>
    <title>GenericArray()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>GenericArray</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>GenericArray</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;<link linkend="_class_generic_array">::GenericArray</link> ( )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1aefb32b089262f573804bea9faa9c6a22"/><section>
    <title>GenericArray()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>GenericArray</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>GenericArray</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;<link linkend="_class_generic_array">::GenericArray</link> (<link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link> &amp; value)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_generic_array_1a3efaa020b29ceed9c1a03465676a32a7"/><section>
    <title>Begin()</title>
<indexterm><primary>Begin</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>Begin</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::Begin ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1ab385434ab7a99de7a0a17e5ee7e09d7f"/><section>
    <title>Capacity()</title>
<indexterm><primary>Capacity</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>Capacity</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::Capacity ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a5e6c158ff76ab8a8ed568fa486e63c80"/><section>
    <title>Clear()</title>
<indexterm><primary>Clear</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>Clear</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>void <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::Clear ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1af09e3aaeaeeb5fd825d79cc6663dfcf5"/><section>
    <title>Empty()</title>
<indexterm><primary>Empty</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>Empty</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::Empty ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a396f83d328f4879225106ea14b1dca84"/><section>
    <title>End()</title>
<indexterm><primary>End</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>End</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::End ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1ac1be0c701ad3aaf0570a8a1ffc715fd5"/><section>
    <title>Erase()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Erase</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>Erase</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::Erase (<link linkend="_class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68">ConstValueIterator</link> first, <link linkend="_class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68">ConstValueIterator</link> last) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1aefa57a363accf2ade867583771f8a54b"/><section>
    <title>Erase()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Erase</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>Erase</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array_1afc6ad62c3f00531fa378db266182704a">ValueIterator</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::Erase (<link linkend="_class_generic_array_1a1cd7bb3e75ccfeed3e8b0a6bb5563d68">ConstValueIterator</link> pos) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a28693c9c06b9e0445df7a5d9c4e8bb18"/><section>
    <title>operator ValueType &amp;()</title>
<indexterm><primary>operator ValueType &amp;</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>operator ValueType &amp;</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::operator <link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link> &amp; ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a7ddfd0ec5e4f34697863e7651be1067f"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array">GenericArray</link> &amp; <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::operator= (<link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt; &amp; rhs)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1afb2a9d136405df4d2306fec9909ba23e"/><section>
    <title>operator[]()</title>
<indexterm><primary>operator[]</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link> &amp; <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::operator[] (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> index) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1afd1c75a82d2fc4366cde18256962edf6"/><section>
    <title>PopBack()</title>
<indexterm><primary>PopBack</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>PopBack</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array">GenericArray</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::PopBack ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1ae599de6aee1167648085672b79dd6bcc"/><section>
    <title>PushBack()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>PushBack</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>PushBack</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array">GenericArray</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::PushBack (<link linkend="_class_generic_array_1a8dcb9e2a2e103ce1051c16a7486465b9">StringRefType</link> value, <link linkend="_class_generic_array_1af9cdc12de03c742b9c33dfc172756b97">AllocatorType</link> &amp; allocator) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a2ed88f0630c044bad695a127a866c348"/><section>
    <title>PushBack()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>PushBack</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>PushBack</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array">GenericArray</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::PushBack (<link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link> &amp; value, <link linkend="_class_generic_array_1af9cdc12de03c742b9c33dfc172756b97">AllocatorType</link> &amp; allocator) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a12adff0c1e11aa3be6f4160015a65df0"/><section>
    <title>RAPIDJSON_DISABLEIF_RETURN()</title>
<indexterm><primary>RAPIDJSON_DISABLEIF_RETURN</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>RAPIDJSON_DISABLEIF_RETURN</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><computeroutput>template&lt;typename <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::RAPIDJSON_DISABLEIF_RETURN ((internal::OrExpr&lt; internal::IsPointer&lt; <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt;, <link linkend="_structinternal_1_1_is_generic_value">internal::IsGenericValue</link>&lt; <link linkend="_writertest_8cpp_1a16a0f7e7053a679c9bf4289b441a2be7">T</link> &gt; &gt;) , (<link linkend="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc">const</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt; &amp;) )</computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a7c74901e8e2174fe4661f4848995f355"/><section>
    <title>Reserve()</title>
<indexterm><primary>Reserve</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>Reserve</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array">GenericArray</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::Reserve (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> newCapacity, <link linkend="_class_generic_array_1af9cdc12de03c742b9c33dfc172756b97">AllocatorType</link> &amp; allocator) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_generic_array_1a62d5b7f423edc2141cd4524c7dfd138b"/><section>
    <title>Size()</title>
<indexterm><primary>Size</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>Size</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::Size ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Friends And Related Function Documentation</title>
<anchor xml:id="_class_generic_array_1a899449e1a645b5e377af059fb61113d8"/><section>
    <title>GenericValue</title>
<indexterm><primary>GenericValue</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>GenericValue</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><computeroutput>template&lt;typename , typename &gt; </computeroutput><para><computeroutput>friend class <link linkend="_class_generic_value">GenericValue</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_generic_array_1a25d2ed55daa117c41db6a5b3f87e9ddc"/><section>
    <title>const</title>
<indexterm><primary>const</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>const</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array_1af9cdc12de03c742b9c33dfc172756b97">AllocatorType</link>&amp; allocator <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::const { value_.PushBack(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>, allocator)</computeroutput></para></section>
<anchor xml:id="_class_generic_array_1aef8b7baa9ec5cd68d8951fa8bad85217"/><section>
    <title>this</title>
<indexterm><primary>this</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>this</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput>return* <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::this</computeroutput></para></section>
<anchor xml:id="_class_generic_array_1afac7de0d842f341d32a36919fd17cad5"/><section>
    <title>value_</title>
<indexterm><primary>value_</primary><secondary>GenericArray&lt; Const, ValueT &gt;</secondary></indexterm>
<indexterm><primary>GenericArray&lt; Const, ValueT &gt;</primary><secondary>value_</secondary></indexterm>
<computeroutput>template&lt;bool Const, typename ValueT &gt; </computeroutput><para><computeroutput><link linkend="_class_generic_array_1a93e53f38a99fc5167eb2a28653de64ed">ValueType</link>&amp; <link linkend="_class_generic_array">GenericArray</link>&lt; Const, ValueT &gt;::value_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_document_8h">document.h</link></section>
</section>
