<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__projectile_8h_source" xml:lang="en-US">
<title>Projectile.h</title>
<indexterm><primary>src/entities/projectiles/Projectile.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;TREES_JSON_PROJECTILE_H</emphasis>
2 <emphasis role="preprocessor">#define&#32;TREES_JSON_PROJECTILE_H</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&lt;SFML/Graphics.hpp&gt;</emphasis>
8 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_projectile">Projectile</link>&#32;{
9 <emphasis role="keyword">private</emphasis>:
11 &#32;&#32;&#32;&#32;sf::Texture&#32;<link linkend="_class_projectile_1a1220dfd08fe74bb7ab09e8008d1cf70d">_texture</link>;
13 &#32;&#32;&#32;&#32;sf::Sprite&#32;<link linkend="_class_projectile_1af96e1c6bd505495166db6c59f5301656">_sprite</link>;
15 &#32;&#32;&#32;&#32;sf::RectangleShape&#32;<link linkend="_class_projectile_1ae13dbe19f644c0f60751e75f5edcbc2a">_hitbox</link>;
16 
18 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_projectile_1a57cd904f69bfb6291ac3fb9807e7ba32">_bMovingRight</link>;
20 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_projectile_1a7220229e045cd2d5bc18dcf42c483c43">_bShouldBeDestroyed</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
21 
22 <emphasis role="keyword">protected</emphasis>:
24 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_projectile_1a1e7043391129f4b34c7b9ab011edb3ef">move</link>()&#32;=&#32;0;
29 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_projectile_1acdf51147e7efc2a15af8bca73b3243be">setPosition</link>(<emphasis role="keywordtype">float</emphasis>&#32;x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;y);
30 
35 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_projectile_1a76008c00d23d28ef400a863bd0b56257">initTexture</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;path,&#32;sf::IntRect&#32;textureRect);
36 <emphasis role="keyword">public</emphasis>:
42 &#32;&#32;&#32;&#32;<link linkend="_class_projectile_1a3f19ab91fddb8211bac7e1196b0f15c0">Projectile</link>(sf::Vector2f&#32;pos,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;movingRight);
43 
48 &#32;&#32;&#32;&#32;sf::Vector2f&#32;<link linkend="_class_projectile_1a88ed5be04ec9eddeb83deb201607368c">getPosition</link>();
53 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_projectile_1a91ca302f63a06df2c67b9b94a478b0f6">getIsMovingRight</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_projectile_1a57cd904f69bfb6291ac3fb9807e7ba32">_bMovingRight</link>;}
58 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_projectile_1a321c90dbedd089ad2d0b3ec8f21d5922">getShouldBeDestroyed</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_projectile_1a7220229e045cd2d5bc18dcf42c483c43">_bShouldBeDestroyed</link>;}
64 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_projectile_1a429879cf9406d612f95183e9428f104b">isColliding</link>(<emphasis role="keyword">const</emphasis>&#32;sf::RectangleShape&amp;&#32;recShape);
66 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_projectile_1a970ca4296053eaff4665f0c4ff3e83c7">markForDestruction</link>()&#32;{<link linkend="_class_projectile_1a7220229e045cd2d5bc18dcf42c483c43">_bShouldBeDestroyed</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;}
67 
71 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_projectile_1a5bc646de87829b911d6817a6478c353e">update</link>(<emphasis role="keywordtype">float</emphasis>&#32;deltaTime);
76 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_projectile_1a44595d2283e231188003bef859f98eb9">render</link>(sf::RenderTarget&amp;&#32;window);
77 };
78 
79 
80 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//TREES_JSON_PROJECTILE_H</emphasis>
</programlisting></section>
