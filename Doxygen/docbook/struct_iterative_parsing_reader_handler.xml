<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_iterative_parsing_reader_handler" xml:lang="en-US">
<title>IterativeParsingReaderHandler&lt; Encoding &gt; Struct Template Reference</title>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary></indexterm>
<para>Inheritance diagram for IterativeParsingReaderHandler&lt; Encoding &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_iterative_parsing_reader_handler.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef Encoding::Ch <link linkend="_struct_iterative_parsing_reader_handler_1ab2a1071324757bf9f617d09f0998e2a0">Ch</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_iterative_parsing_reader_handler_1ab1b40c3fcbc2f53c641124b99b0cf023">IterativeParsingReaderHandler</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1a749649db75f791e04833c9aa82eb93ea">Null</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1ab45ff8f39b4537568aa0f7d25669d569">Bool</link> (bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1ab2e5476c61b710ee8cced770297ced2b">Int</link> (int)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1ac25635362ab5139ccb8aea0fa5403d9d">Uint</link> (unsigned)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1ab1a990b65daec328c99059a086001ccf">Int64</link> (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1a4a68c6855ba60b33b6b2bcb8bf6f0891">Uint64</link> (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1a509a1218da0724dd76979d071f9cff38">Double</link> (double)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1a8fced3aa6a40040123a0408098986624">RawNumber</link> (const <link linkend="_struct_iterative_parsing_reader_handler_1ab2a1071324757bf9f617d09f0998e2a0">Ch</link> *, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>, bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1a05dcb37660a1083a044756bcab92a05c">String</link> (const <link linkend="_struct_iterative_parsing_reader_handler_1ab2a1071324757bf9f617d09f0998e2a0">Ch</link> *, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>, bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1a6190db7ad16ce10cf0dbcae3788decf0">StartObject</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1a0966244f2ac26fbf6e806317a1472d3f">Key</link> (const <link linkend="_struct_iterative_parsing_reader_handler_1ab2a1071324757bf9f617d09f0998e2a0">Ch</link> *, <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link>, bool)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1aee1c9b5a18ec7e0c8aba23b35bfd8c2d">EndObject</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> c)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1a144a7b777ddab8498549a992d7556b05">StartArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_iterative_parsing_reader_handler_1a799522d5e138c61dd035276f6dbf4edf">EndArray</link> (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> c)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884">Logs</link> [<link linkend="_struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5">LogCapacity</link>]</para>
</listitem>
            <listitem><para>size_t <link linkend="_struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d">LogCount</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>static const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1a3c096cea45af81e09675b0954f9df5b1">LOG_NULL</link> = 0x10000000</para>
</listitem>
            <listitem><para>static const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1a1cec7d66e55f8d8dc1f60f78502b6058">LOG_BOOL</link> = 0x20000000</para>
</listitem>
            <listitem><para>static const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1a580d89f73e2a327bdba873a3c68b550a">LOG_INT</link> = 0x30000000</para>
</listitem>
            <listitem><para>static const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1a6c21e30374cb3b8aa0030d0920a03131">LOG_UINT</link> = 0x40000000</para>
</listitem>
            <listitem><para>static const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1a23450d62f01eb0951379e3b03d4fc340">LOG_INT64</link> = 0x50000000</para>
</listitem>
            <listitem><para>static const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1a3c53bd31348781d8138a96a1ae67b54f">LOG_UINT64</link> = 0x60000000</para>
</listitem>
            <listitem><para>static const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1a1a30c03ff10fc96c5d0bc35aa9e2704a">LOG_DOUBLE</link> = 0x70000000</para>
</listitem>
            <listitem><para>static const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1a931864e899c8da14a11446b180f09502">LOG_STRING</link> = 0x80000000</para>
</listitem>
            <listitem><para>static const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1ab488e7de7961b7b234bd5a315594b1cc">LOG_STARTOBJECT</link> = 0x90000000</para>
</listitem>
            <listitem><para>static const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1a940ea6a3d815546e8bc2707795bb927c">LOG_KEY</link> = 0xA0000000</para>
</listitem>
            <listitem><para>static const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1a952f68ebc1bb8b6852e71c76dfaf518b">LOG_ENDOBJECT</link> = 0xB0000000</para>
</listitem>
            <listitem><para>static const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1ad1c867965c72e99e85d98b43ed86cfdd">LOG_STARTARRAY</link> = 0xC0000000</para>
</listitem>
            <listitem><para>static const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler_1af4a9abe34b336931c1624e07409c8365">LOG_ENDARRAY</link> = 0xD0000000</para>
</listitem>
            <listitem><para>static const size_t <link linkend="_struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5">LogCapacity</link> = 256</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1ab2a1071324757bf9f617d09f0998e2a0"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>Ch</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>typedef Encoding::Ch <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Ch</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1ab1b40c3fcbc2f53c641124b99b0cf023"/><section>
    <title>IterativeParsingReaderHandler()</title>
<indexterm><primary>IterativeParsingReaderHandler</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>IterativeParsingReaderHandler</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput><link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;<link linkend="_struct_iterative_parsing_reader_handler">::IterativeParsingReaderHandler</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1ab45ff8f39b4537568aa0f7d25669d569"/><section>
    <title>Bool()</title>
<indexterm><primary>Bool</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>Bool</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Bool (bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a509a1218da0724dd76979d071f9cff38"/><section>
    <title>Double()</title>
<indexterm><primary>Double</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>Double</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Double (double )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a799522d5e138c61dd035276f6dbf4edf"/><section>
    <title>EndArray()</title>
<indexterm><primary>EndArray</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>EndArray</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::EndArray (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> c)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1aee1c9b5a18ec7e0c8aba23b35bfd8c2d"/><section>
    <title>EndObject()</title>
<indexterm><primary>EndObject</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>EndObject</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::EndObject (<link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> c)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1ab2e5476c61b710ee8cced770297ced2b"/><section>
    <title>Int()</title>
<indexterm><primary>Int</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>Int</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Int (int )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1ab1a990b65daec328c99059a086001ccf"/><section>
    <title>Int64()</title>
<indexterm><primary>Int64</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>Int64</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Int64 (<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a0966244f2ac26fbf6e806317a1472d3f"/><section>
    <title>Key()</title>
<indexterm><primary>Key</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>Key</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Key (const <link linkend="_struct_iterative_parsing_reader_handler_1ab2a1071324757bf9f617d09f0998e2a0">Ch</link> * , <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> , bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a749649db75f791e04833c9aa82eb93ea"/><section>
    <title>Null()</title>
<indexterm><primary>Null</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>Null</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Null ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a8fced3aa6a40040123a0408098986624"/><section>
    <title>RawNumber()</title>
<indexterm><primary>RawNumber</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>RawNumber</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::RawNumber (const <link linkend="_struct_iterative_parsing_reader_handler_1ab2a1071324757bf9f617d09f0998e2a0">Ch</link> * , <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> , bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a144a7b777ddab8498549a992d7556b05"/><section>
    <title>StartArray()</title>
<indexterm><primary>StartArray</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>StartArray</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::StartArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a6190db7ad16ce10cf0dbcae3788decf0"/><section>
    <title>StartObject()</title>
<indexterm><primary>StartObject</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>StartObject</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::StartObject ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a05dcb37660a1083a044756bcab92a05c"/><section>
    <title>String()</title>
<indexterm><primary>String</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>String</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::String (const <link linkend="_struct_iterative_parsing_reader_handler_1ab2a1071324757bf9f617d09f0998e2a0">Ch</link> * , <link linkend="_rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5">SizeType</link> , bool )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1ac25635362ab5139ccb8aea0fa5403d9d"/><section>
    <title>Uint()</title>
<indexterm><primary>Uint</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>Uint</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Uint (unsigned )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a4a68c6855ba60b33b6b2bcb8bf6f0891"/><section>
    <title>Uint64()</title>
<indexterm><primary>Uint64</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>Uint64</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>bool <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Uint64 (<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a1cec7d66e55f8d8dc1f60f78502b6058"/><section>
    <title>LOG_BOOL</title>
<indexterm><primary>LOG_BOOL</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LOG_BOOL</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LOG_BOOL = 0x20000000<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a1a30c03ff10fc96c5d0bc35aa9e2704a"/><section>
    <title>LOG_DOUBLE</title>
<indexterm><primary>LOG_DOUBLE</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LOG_DOUBLE</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LOG_DOUBLE = 0x70000000<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1af4a9abe34b336931c1624e07409c8365"/><section>
    <title>LOG_ENDARRAY</title>
<indexterm><primary>LOG_ENDARRAY</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LOG_ENDARRAY</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LOG_ENDARRAY = 0xD0000000<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a952f68ebc1bb8b6852e71c76dfaf518b"/><section>
    <title>LOG_ENDOBJECT</title>
<indexterm><primary>LOG_ENDOBJECT</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LOG_ENDOBJECT</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LOG_ENDOBJECT = 0xB0000000<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a580d89f73e2a327bdba873a3c68b550a"/><section>
    <title>LOG_INT</title>
<indexterm><primary>LOG_INT</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LOG_INT</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LOG_INT = 0x30000000<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a23450d62f01eb0951379e3b03d4fc340"/><section>
    <title>LOG_INT64</title>
<indexterm><primary>LOG_INT64</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LOG_INT64</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LOG_INT64 = 0x50000000<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a940ea6a3d815546e8bc2707795bb927c"/><section>
    <title>LOG_KEY</title>
<indexterm><primary>LOG_KEY</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LOG_KEY</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LOG_KEY = 0xA0000000<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a3c096cea45af81e09675b0954f9df5b1"/><section>
    <title>LOG_NULL</title>
<indexterm><primary>LOG_NULL</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LOG_NULL</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LOG_NULL = 0x10000000<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1ad1c867965c72e99e85d98b43ed86cfdd"/><section>
    <title>LOG_STARTARRAY</title>
<indexterm><primary>LOG_STARTARRAY</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LOG_STARTARRAY</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LOG_STARTARRAY = 0xC0000000<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1ab488e7de7961b7b234bd5a315594b1cc"/><section>
    <title>LOG_STARTOBJECT</title>
<indexterm><primary>LOG_STARTOBJECT</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LOG_STARTOBJECT</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LOG_STARTOBJECT = 0x90000000<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a931864e899c8da14a11446b180f09502"/><section>
    <title>LOG_STRING</title>
<indexterm><primary>LOG_STRING</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LOG_STRING</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LOG_STRING = 0x80000000<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a6c21e30374cb3b8aa0030d0920a03131"/><section>
    <title>LOG_UINT</title>
<indexterm><primary>LOG_UINT</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LOG_UINT</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LOG_UINT = 0x40000000<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a3c53bd31348781d8138a96a1ae67b54f"/><section>
    <title>LOG_UINT64</title>
<indexterm><primary>LOG_UINT64</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LOG_UINT64</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LOG_UINT64 = 0x60000000<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5"/><section>
    <title>LogCapacity</title>
<indexterm><primary>LogCapacity</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LogCapacity</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>const size_t <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LogCapacity = 256<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1ac7a98465a273a5fc081ff896add09d6d"/><section>
    <title>LogCount</title>
<indexterm><primary>LogCount</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>LogCount</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput>size_t <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::LogCount</computeroutput></para></section>
<anchor xml:id="_struct_iterative_parsing_reader_handler_1a7da230a69a88a61db94554d9daf84884"/><section>
    <title>Logs</title>
<indexterm><primary>Logs</primary><secondary>IterativeParsingReaderHandler&lt; Encoding &gt;</secondary></indexterm>
<indexterm><primary>IterativeParsingReaderHandler&lt; Encoding &gt;</primary><secondary>Logs</secondary></indexterm>
<computeroutput>template&lt;typename <link linkend="_classrapidjson_1_1_encoding">Encoding</link>  = UTF8&lt;&gt;&gt; </computeroutput><para><computeroutput><link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_struct_iterative_parsing_reader_handler">IterativeParsingReaderHandler</link>&lt; <link linkend="_classrapidjson_1_1_encoding">Encoding</link> &gt;::Logs[<link linkend="_struct_iterative_parsing_reader_handler_1a986e60bf01c4ec57208ea008c63dfac5">LogCapacity</link>]</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
src/rapidjson/test/unittest/<link linkend="_readertest_8cpp">readertest.cpp</link></section>
</section>
