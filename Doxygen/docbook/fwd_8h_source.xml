<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_fwd_8h_source" xml:lang="en-US">
<title>fwd.h</title>
<indexterm><primary>src/rapidjson/include/rapidjson/fwd.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Tencent&#32;is&#32;pleased&#32;to&#32;support&#32;the&#32;open&#32;source&#32;community&#32;by&#32;making&#32;RapidJSON&#32;available.</emphasis>
2 <emphasis role="comment">//&#32;</emphasis>
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2015&#32;THL&#32;A29&#32;Limited,&#32;a&#32;Tencent&#32;company,&#32;and&#32;Milo&#32;Yip.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;Licensed&#32;under&#32;the&#32;MIT&#32;License&#32;(the&#32;&quot;License&quot;);&#32;you&#32;may&#32;not&#32;use&#32;this&#32;file&#32;except</emphasis>
6 <emphasis role="comment">//&#32;in&#32;compliance&#32;with&#32;the&#32;License.&#32;You&#32;may&#32;obtain&#32;a&#32;copy&#32;of&#32;the&#32;License&#32;at</emphasis>
7 <emphasis role="comment">//</emphasis>
8 <emphasis role="comment">//&#32;http://opensource.org/licenses/MIT</emphasis>
9 <emphasis role="comment">//</emphasis>
10 <emphasis role="comment">//&#32;Unless&#32;required&#32;by&#32;applicable&#32;law&#32;or&#32;agreed&#32;to&#32;in&#32;writing,&#32;software&#32;distributed&#32;</emphasis>
11 <emphasis role="comment">//&#32;under&#32;the&#32;License&#32;is&#32;distributed&#32;on&#32;an&#32;&quot;AS&#32;IS&quot;&#32;BASIS,&#32;WITHOUT&#32;WARRANTIES&#32;OR&#32;</emphasis>
12 <emphasis role="comment">//&#32;CONDITIONS&#32;OF&#32;ANY&#32;KIND,&#32;either&#32;express&#32;or&#32;implied.&#32;See&#32;the&#32;License&#32;for&#32;the&#32;</emphasis>
13 <emphasis role="comment">//&#32;specific&#32;language&#32;governing&#32;permissions&#32;and&#32;limitations&#32;under&#32;the&#32;License.</emphasis>
14 
15 <emphasis role="preprocessor">#ifndef&#32;RAPIDJSON_FWD_H_</emphasis>
16 <emphasis role="preprocessor">#define&#32;RAPIDJSON_FWD_H_</emphasis>
17 
18 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_rapidjson_8h">rapidjson.h</link>&quot;</emphasis>
19 
20 <link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc">RAPIDJSON_NAMESPACE_BEGIN</link>
21 
22 <emphasis role="comment">//&#32;encodings.h</emphasis>
23 
24 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_u_t_f8">UTF8</link>;
25 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_u_t_f16">UTF16</link>;
26 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_u_t_f16_b_e">UTF16BE</link>;
27 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_u_t_f16_l_e">UTF16LE</link>;
28 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_u_t_f32">UTF32</link>;
29 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_u_t_f32_b_e">UTF32BE</link>;
30 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_u_t_f32_l_e">UTF32LE</link>;
31 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_a_s_c_i_i">ASCII</link>;
32 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_auto_u_t_f">AutoUTF</link>;
33 
34 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceEncoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;TargetEncoding&gt;
35 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_transcoder">Transcoder</link>;
36 
37 <emphasis role="comment">//&#32;allocators.h</emphasis>
38 
39 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_crt_allocator">CrtAllocator</link>;
40 
41 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;BaseAllocator&gt;
42 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_memory_pool_allocator">MemoryPoolAllocator</link>;
43 
44 <emphasis role="comment">//&#32;stream.h</emphasis>
45 
46 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding&gt;
47 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_generic_string_stream">GenericStringStream</link>;
48 
49 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct_generic_string_stream">GenericStringStream&lt;UTF8&lt;char&gt;</link>&#32;&gt;&#32;<link linkend="_fwd_8h_1a2d1473c3dd9ab6c975589b45436fe55e">StringStream</link>;
50 
51 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding&gt;
52 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_generic_insitu_string_stream">GenericInsituStringStream</link>;
53 
54 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct_generic_insitu_string_stream">GenericInsituStringStream&lt;UTF8&lt;char&gt;</link>&#32;&gt;&#32;<link linkend="_fwd_8h_1a87256fd77e335ea15cd195ed8c55e312">InsituStringStream</link>;
55 
56 <emphasis role="comment">//&#32;stringbuffer.h</emphasis>
57 
58 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&gt;
59 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_string_buffer">GenericStringBuffer</link>;
60 
61 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_string_buffer">GenericStringBuffer&lt;UTF8&lt;char&gt;</link>,&#32;<link linkend="_class_crt_allocator">CrtAllocator</link>&gt;&#32;<link linkend="_fwd_8h_1ab956b6537825abf8aac4112e81cfad7e">StringBuffer</link>;
62 
63 <emphasis role="comment">//&#32;filereadstream.h</emphasis>
64 
65 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_file_read_stream">FileReadStream</link>;
66 
67 <emphasis role="comment">//&#32;filewritestream.h</emphasis>
68 
69 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_file_write_stream">FileWriteStream</link>;
70 
71 <emphasis role="comment">//&#32;memorybuffer.h</emphasis>
72 
73 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Allocator&gt;
74 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_generic_memory_buffer">GenericMemoryBuffer</link>;
75 
76 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct_generic_memory_buffer">GenericMemoryBuffer&lt;CrtAllocator&gt;</link>&#32;<link linkend="_fwd_8h_1a611aeb4e5d606f0b099c6408fd8e8e4d">MemoryBuffer</link>;
77 
78 <emphasis role="comment">//&#32;memorystream.h</emphasis>
79 
80 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_memory_stream">MemoryStream</link>;
81 
82 <emphasis role="comment">//&#32;reader.h</emphasis>
83 
84 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Derived&gt;
85 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_base_reader_handler">BaseReaderHandler</link>;
86 
87 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SourceEncoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;TargetEncoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;StackAllocator&gt;
88 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_reader">GenericReader</link>;
89 
90 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_reader">GenericReader&lt;UTF8&lt;char&gt;</link>,&#32;<link linkend="_struct_u_t_f8">UTF8&lt;char&gt;</link>,&#32;<link linkend="_class_crt_allocator">CrtAllocator</link>&gt;&#32;<link linkend="_fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788">Reader</link>;
91 
92 <emphasis role="comment">//&#32;writer.h</emphasis>
93 
94 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;OutputStream,&#32;<emphasis role="keyword">typename</emphasis>&#32;SourceEncoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;TargetEncoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;StackAllocator,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;writeFlags&gt;
95 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_writer">Writer</link>;
96 
97 <emphasis role="comment">//&#32;prettywriter.h</emphasis>
98 
99 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;OutputStream,&#32;<emphasis role="keyword">typename</emphasis>&#32;SourceEncoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;TargetEncoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;StackAllocator,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;writeFlags&gt;
100 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_pretty_writer">PrettyWriter</link>;
101 
102 <emphasis role="comment">//&#32;document.h</emphasis>
103 
104 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&gt;&#32;
105 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_member">GenericMember</link>;
106 
107 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keywordtype">bool</emphasis>&#32;Const,&#32;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&gt;
108 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_member_iterator">GenericMemberIterator</link>;
109 
110 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharType&gt;
111 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_generic_string_ref">GenericStringRef</link>;
112 
113 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&gt;&#32;
114 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_value">GenericValue</link>;
115 
116 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_value">GenericValue&lt;UTF8&lt;char&gt;</link>,&#32;<link linkend="_class_memory_pool_allocator">MemoryPoolAllocator&lt;CrtAllocator&gt;</link>&#32;&gt;&#32;<link linkend="_fwd_8h_1a887ce50b3fe61c5e9cfd9b9506548dd9">Value</link>;
117 
118 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Encoding,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator,&#32;<emphasis role="keyword">typename</emphasis>&#32;StackAllocator&gt;
119 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_document">GenericDocument</link>;
120 
121 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_document">GenericDocument&lt;UTF8&lt;char&gt;</link>,&#32;<link linkend="_class_memory_pool_allocator">MemoryPoolAllocator&lt;CrtAllocator&gt;</link>,&#32;<link linkend="_class_crt_allocator">CrtAllocator</link>&gt;&#32;<link linkend="_fwd_8h_1a90f4c2712ef99a3f016ce5f8eee03292">Document</link>;
122 
123 <emphasis role="comment">//&#32;pointer.h</emphasis>
124 
125 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueType,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&gt;
126 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_pointer">GenericPointer</link>;
127 
128 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_pointer">GenericPointer&lt;Value, CrtAllocator&gt;</link>&#32;<link linkend="_fwd_8h_1a0e5c49dba7ec654cdda5735347c00397">Pointer</link>;
129 
130 <emphasis role="comment">//&#32;schema.h</emphasis>
131 
132 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;SchemaDocumentType&gt;
133 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_i_generic_remote_schema_document_provider">IGenericRemoteSchemaDocumentProvider</link>;
134 
135 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;ValueT,&#32;<emphasis role="keyword">typename</emphasis>&#32;Allocator&gt;
136 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_schema_document">GenericSchemaDocument</link>;
137 
138 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_schema_document">GenericSchemaDocument&lt;Value, CrtAllocator&gt;</link>&#32;<link linkend="_fwd_8h_1a05c97278ec100471e77a4d678957701b">SchemaDocument</link>;
139 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_i_generic_remote_schema_document_provider">IGenericRemoteSchemaDocumentProvider&lt;SchemaDocument&gt;</link>&#32;<link linkend="_fwd_8h_1afec32b8c8d16360397849fd8bcd28441">IRemoteSchemaDocumentProvider</link>;
140 
141 <emphasis role="keyword">template</emphasis>&#32;&lt;
142 &#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;SchemaDocumentType,
143 &#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;OutputHandler,
144 &#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;StateAllocator&gt;
145 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_generic_schema_validator">GenericSchemaValidator</link>;
146 
147 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_class_generic_schema_validator">GenericSchemaValidator&lt;SchemaDocument, BaseReaderHandler&lt;UTF8&lt;char&gt;</link>,&#32;<emphasis role="keywordtype">void</emphasis>&gt;,&#32;<link linkend="_class_crt_allocator">CrtAllocator</link>&gt;&#32;<link linkend="_fwd_8h_1a2c91a2e7dd109dba1803ed2280a2dfa4">SchemaValidator</link>;
148 
149 <link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1">RAPIDJSON_NAMESPACE_END</link>
150 
151 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RAPIDJSON_RAPIDJSONFWD_H_</emphasis>
</programlisting></section>
