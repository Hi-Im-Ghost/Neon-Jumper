<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_file_read_stream" xml:lang="en-US">
<title>FileReadStream Class Reference</title>
<indexterm><primary>FileReadStream</primary></indexterm>
<para>

<para>File byte stream for input using fread(). </para>
 
</para>
<para>
<computeroutput>#include &lt;filereadstream.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef char <link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link></para>

<para>Character type (byte). </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_file_read_stream_1adf91191843d50b900f43cb4f35f16f67">FileReadStream</link> (std::FILE *fp, char *buffer, size_t bufferSize)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> <link linkend="_class_file_read_stream_1ab7d47da8952d3fe5856a261ec3c020c9">Peek</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> <link linkend="_class_file_read_stream_1addcbccc9d86ccbbe6d8e876ba595dbcb">Take</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_file_read_stream_1ae82cfaafe347286b3af8976548bedf86">Tell</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_file_read_stream_1a4f2eac5b08033b1527bff517be657a36">Put</link> (<link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_class_file_read_stream_1acd031e3f578b23bc2a792ac41e1e95ae">Flush</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> * <link linkend="_class_file_read_stream_1a21421afa5b1f41f7349f633f290aa223">PutBegin</link> ()</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_file_read_stream_1a886660c89f698ff913d641d61466108f">PutEnd</link> (<link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> *)</para>
</listitem>
            <listitem><para>const <link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> * <link linkend="_class_file_read_stream_1a1989429ffa42111e6f56ee14a3916cac">Peek4</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_file_read_stream_1a9213039798b7a07275a451f96a42361a">Read</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>std::FILE * <link linkend="_class_file_read_stream_1a47dc4f7f100bcc02a02e619f9b494a62">fp_</link></para>
</listitem>
            <listitem><para><link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> * <link linkend="_class_file_read_stream_1a1b5563bcaa959d95f9bc3511a73ebbad">buffer_</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_class_file_read_stream_1af65abe97e76c94c7f0f6419f94e9105f">bufferSize_</link></para>
</listitem>
            <listitem><para><link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> * <link linkend="_class_file_read_stream_1a5affa127604e77646d7acc94432c7e59">bufferLast_</link></para>
</listitem>
            <listitem><para><link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> * <link linkend="_class_file_read_stream_1a0c7b4824d8742960eba2ac81c1e6b662">current_</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_class_file_read_stream_1a1b1a7cadb599e83b1f781c0b16d4ed50">readCount_</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_class_file_read_stream_1a55018d0ad821b9ea01e0ec5001008ab2">count_</link></para>

<para>Number of characters read. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_file_read_stream_1a02a64d8fc7a4df830834f756b8ac08af">eof_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>File byte stream for input using fread(). </para>



<para><note><title>Note</title>

<para>implements Stream concept </para>
</note>
</para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046"/><section>
    <title>Ch</title>
<indexterm><primary>Ch</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>Ch</secondary></indexterm>
<para><computeroutput>typedef char <link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">FileReadStream::Ch</link></computeroutput></para><para>

<para>Character type (byte). </para>
</para>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_file_read_stream_1adf91191843d50b900f43cb4f35f16f67"/><section>
    <title>FileReadStream()</title>
<indexterm><primary>FileReadStream</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>FileReadStream</secondary></indexterm>
<para><computeroutput>FileReadStream::FileReadStream (std::FILE * fp, char * buffer, size_t bufferSize)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fp</entry><entry>
<para>File pointer opened for read. </para>
</entry>
                            </row>
                            <row>
<entry>buffer</entry><entry>
<para>user-supplied buffer. </para>
</entry>
                            </row>
                            <row>
<entry>bufferSize</entry><entry>
<para>size of buffer in bytes. Must &gt;=4 bytes. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_file_read_stream_1acd031e3f578b23bc2a792ac41e1e95ae"/><section>
    <title>Flush()</title>
<indexterm><primary>Flush</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>Flush</secondary></indexterm>
<para><computeroutput>void FileReadStream::Flush ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1ab7d47da8952d3fe5856a261ec3c020c9"/><section>
    <title>Peek()</title>
<indexterm><primary>Peek</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>Peek</secondary></indexterm>
<para><computeroutput><link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> FileReadStream::Peek ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1a1989429ffa42111e6f56ee14a3916cac"/><section>
    <title>Peek4()</title>
<indexterm><primary>Peek4</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>Peek4</secondary></indexterm>
<para><computeroutput>const <link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> * FileReadStream::Peek4 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1a4f2eac5b08033b1527bff517be657a36"/><section>
    <title>Put()</title>
<indexterm><primary>Put</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>Put</secondary></indexterm>
<para><computeroutput>void FileReadStream::Put (<link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1a21421afa5b1f41f7349f633f290aa223"/><section>
    <title>PutBegin()</title>
<indexterm><primary>PutBegin</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>PutBegin</secondary></indexterm>
<para><computeroutput><link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> * FileReadStream::PutBegin ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1a886660c89f698ff913d641d61466108f"/><section>
    <title>PutEnd()</title>
<indexterm><primary>PutEnd</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>PutEnd</secondary></indexterm>
<para><computeroutput>size_t FileReadStream::PutEnd (<link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> * )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1a9213039798b7a07275a451f96a42361a"/><section>
    <title>Read()</title>
<indexterm><primary>Read</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>Read</secondary></indexterm>
<para><computeroutput>void FileReadStream::Read ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1addcbccc9d86ccbbe6d8e876ba595dbcb"/><section>
    <title>Take()</title>
<indexterm><primary>Take</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>Take</secondary></indexterm>
<para><computeroutput><link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link> FileReadStream::Take ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1ae82cfaafe347286b3af8976548bedf86"/><section>
    <title>Tell()</title>
<indexterm><primary>Tell</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>Tell</secondary></indexterm>
<para><computeroutput>size_t FileReadStream::Tell ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_file_read_stream_1a1b5563bcaa959d95f9bc3511a73ebbad"/><section>
    <title>buffer_</title>
<indexterm><primary>buffer_</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>buffer_</secondary></indexterm>
<para><computeroutput><link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link>* FileReadStream::buffer_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1a5affa127604e77646d7acc94432c7e59"/><section>
    <title>bufferLast_</title>
<indexterm><primary>bufferLast_</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>bufferLast_</secondary></indexterm>
<para><computeroutput><link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link>* FileReadStream::bufferLast_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1af65abe97e76c94c7f0f6419f94e9105f"/><section>
    <title>bufferSize_</title>
<indexterm><primary>bufferSize_</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>bufferSize_</secondary></indexterm>
<para><computeroutput>size_t FileReadStream::bufferSize_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1a55018d0ad821b9ea01e0ec5001008ab2"/><section>
    <title>count_</title>
<indexterm><primary>count_</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>count_</secondary></indexterm>
<para><computeroutput>size_t FileReadStream::count_<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Number of characters read. </para>
</para>
</section>
<anchor xml:id="_class_file_read_stream_1a0c7b4824d8742960eba2ac81c1e6b662"/><section>
    <title>current_</title>
<indexterm><primary>current_</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>current_</secondary></indexterm>
<para><computeroutput><link linkend="_class_file_read_stream_1ae1f83d9ca3c76d1d151af0b6c427f046">Ch</link>* FileReadStream::current_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1a02a64d8fc7a4df830834f756b8ac08af"/><section>
    <title>eof_</title>
<indexterm><primary>eof_</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>eof_</secondary></indexterm>
<para><computeroutput>bool FileReadStream::eof_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1a47dc4f7f100bcc02a02e619f9b494a62"/><section>
    <title>fp_</title>
<indexterm><primary>fp_</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>fp_</secondary></indexterm>
<para><computeroutput>std::FILE* FileReadStream::fp_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_file_read_stream_1a1b1a7cadb599e83b1f781c0b16d4ed50"/><section>
    <title>readCount_</title>
<indexterm><primary>readCount_</primary><secondary>FileReadStream</secondary></indexterm>
<indexterm><primary>FileReadStream</primary><secondary>readCount_</secondary></indexterm>
<para><computeroutput>size_t FileReadStream::readCount_<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_filereadstream_8h">filereadstream.h</link></section>
</section>
