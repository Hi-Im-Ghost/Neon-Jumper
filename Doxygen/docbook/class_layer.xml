<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_layer" xml:lang="en-US">
<title>Layer Class Reference</title>
<indexterm><primary>Layer</primary></indexterm>
<para>
<computeroutput>#include &lt;Layer.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_layer_1a8f623c7c4737dc29ecc86978d243ac6f">Layer</link> ()</para>

<para>Konstruktor pusty. </para>
</listitem>
            <listitem><para><link linkend="_class_layer_1a582167f70d2ae94bc90c5986661475a6">Layer</link> (<link linkend="_fwd_8h_1a887ce50b3fe61c5e9cfd9b9506548dd9">rapidjson::Value</link> &amp;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>)</para>

<para>Konstruktor który przyjmuje sparsowane wartości z json&apos;a. </para>
</listitem>
            <listitem><para><link linkend="_class_layer_1a1b1ba4804451dfe6cc357194e42762ae">~Layer</link> ()</para>

<para>Destruktor. </para>
</listitem>
            <listitem><para>std::vector&lt; int &gt; <link linkend="_class_layer_1abd8ad603c5223d39187225e1fce2ac72">getData</link> ()</para>

<para>Służy do zwracania informacji o miejscach wystąpienia na mapie danej warstwy. </para>
</listitem>
            <listitem><para>int <link linkend="_class_layer_1a974c0866509db4c131f8f38d281fbcd1">getHeight</link> ()</para>

<para>Zwraca wysokość warstwy. </para>
</listitem>
            <listitem><para>int <link linkend="_class_layer_1a818d3ab6d8176de677ca5a476ec72e88">getId</link> ()</para>

<para>Zwraca id warstwy. </para>
</listitem>
            <listitem><para>std::string <link linkend="_class_layer_1a03296398e674b6ed9e4e893653f0434b">getImage</link> ()</para>

<para>Zwraca sciezke do obrazka. </para>
</listitem>
            <listitem><para>std::string <link linkend="_class_layer_1a1f981903fa03cd45b44aa68042ac809a">getName</link> ()</para>

<para>Zwraca nazwe. </para>
</listitem>
            <listitem><para>int <link linkend="_class_layer_1ab49da526ffa214b3d1efe59531843979">getOpacity</link> ()</para>

<para>Zwraca informacje o przezroczystości. </para>
</listitem>
            <listitem><para>std::string <link linkend="_class_layer_1afbdf075a35996b080e67a5bb8129adb6">getType</link> ()</para>

<para>Zwraca informacje o typie. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_layer_1a79e172a9898791194b47d581e7d7f7ca">isVisible</link> ()</para>

<para>Zwraca informacje o widoczności. </para>
</listitem>
            <listitem><para>int <link linkend="_class_layer_1a39e3b346235715e15d99a0a8ac95e0a7">getWidth</link> ()</para>

<para>Zwraca szerokość warstwy. </para>
</listitem>
            <listitem><para>int <link linkend="_class_layer_1aede3ba05e099573525f65420168664cd">getX</link> ()</para>

<para>Zwraca współrzędną x. </para>
</listitem>
            <listitem><para>int <link linkend="_class_layer_1a72ca6f6610005d666795a64599f37d0d">getY</link> ()</para>

<para>Zwraca współrzędną y. </para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_layer_object">LayerObject</link> &gt; <link linkend="_class_layer_1ab48a21d96242142516cecfca51fd37d3">getObjects</link> ()</para>

<para>Zwraca obiekty występujące w warstwie. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_layer_1a8f623c7c4737dc29ecc86978d243ac6f"/><section>
    <title>Layer()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Layer</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>Layer</secondary></indexterm>
<para><computeroutput>Layer::Layer ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Konstruktor pusty. </para>
</para>
</section>
<anchor xml:id="_class_layer_1a582167f70d2ae94bc90c5986661475a6"/><section>
    <title>Layer()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Layer</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>Layer</secondary></indexterm>
<para><computeroutput>Layer::Layer (<link linkend="_fwd_8h_1a887ce50b3fe61c5e9cfd9b9506548dd9">rapidjson::Value</link> &amp; value)</computeroutput></para><para>

<para>Konstruktor który przyjmuje sparsowane wartości z json&apos;a. </para>
</para>
</section>
<anchor xml:id="_class_layer_1a1b1ba4804451dfe6cc357194e42762ae"/><section>
    <title>~Layer()</title>
<indexterm><primary>~Layer</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>~Layer</secondary></indexterm>
<para><computeroutput>Layer::~Layer ( )<computeroutput>[default]</computeroutput></computeroutput></para><para>

<para>Destruktor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_layer_1abd8ad603c5223d39187225e1fce2ac72"/><section>
    <title>getData()</title>
<indexterm><primary>getData</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>getData</secondary></indexterm>
<para><computeroutput>std::vector&lt; int &gt; Layer::getData ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Służy do zwracania informacji o miejscach wystąpienia na mapie danej warstwy. </para>
</para>
</section>
<anchor xml:id="_class_layer_1a974c0866509db4c131f8f38d281fbcd1"/><section>
    <title>getHeight()</title>
<indexterm><primary>getHeight</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>getHeight</secondary></indexterm>
<para><computeroutput>int Layer::getHeight ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca wysokość warstwy. </para>
</para>
</section>
<anchor xml:id="_class_layer_1a818d3ab6d8176de677ca5a476ec72e88"/><section>
    <title>getId()</title>
<indexterm><primary>getId</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>getId</secondary></indexterm>
<para><computeroutput>int Layer::getId ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca id warstwy. </para>
</para>
</section>
<anchor xml:id="_class_layer_1a03296398e674b6ed9e4e893653f0434b"/><section>
    <title>getImage()</title>
<indexterm><primary>getImage</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>getImage</secondary></indexterm>
<para><computeroutput>std::string Layer::getImage ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca sciezke do obrazka. </para>
</para>
</section>
<anchor xml:id="_class_layer_1a1f981903fa03cd45b44aa68042ac809a"/><section>
    <title>getName()</title>
<indexterm><primary>getName</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>getName</secondary></indexterm>
<para><computeroutput>std::string Layer::getName ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca nazwe. </para>
</para>
</section>
<anchor xml:id="_class_layer_1ab48a21d96242142516cecfca51fd37d3"/><section>
    <title>getObjects()</title>
<indexterm><primary>getObjects</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>getObjects</secondary></indexterm>
<para><computeroutput>std::vector&lt; <link linkend="_class_layer_object">LayerObject</link> &gt; Layer::getObjects ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca obiekty występujące w warstwie. </para>
</para>
</section>
<anchor xml:id="_class_layer_1ab49da526ffa214b3d1efe59531843979"/><section>
    <title>getOpacity()</title>
<indexterm><primary>getOpacity</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>getOpacity</secondary></indexterm>
<para><computeroutput>int Layer::getOpacity ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca informacje o przezroczystości. </para>
</para>
</section>
<anchor xml:id="_class_layer_1afbdf075a35996b080e67a5bb8129adb6"/><section>
    <title>getType()</title>
<indexterm><primary>getType</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>getType</secondary></indexterm>
<para><computeroutput>std::string Layer::getType ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca informacje o typie. </para>
</para>
</section>
<anchor xml:id="_class_layer_1a39e3b346235715e15d99a0a8ac95e0a7"/><section>
    <title>getWidth()</title>
<indexterm><primary>getWidth</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>getWidth</secondary></indexterm>
<para><computeroutput>int Layer::getWidth ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca szerokość warstwy. </para>
</para>
</section>
<anchor xml:id="_class_layer_1aede3ba05e099573525f65420168664cd"/><section>
    <title>getX()</title>
<indexterm><primary>getX</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>getX</secondary></indexterm>
<para><computeroutput>int Layer::getX ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca współrzędną x. </para>
</para>
</section>
<anchor xml:id="_class_layer_1a72ca6f6610005d666795a64599f37d0d"/><section>
    <title>getY()</title>
<indexterm><primary>getY</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>getY</secondary></indexterm>
<para><computeroutput>int Layer::getY ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca współrzędną y. </para>
</para>
</section>
<anchor xml:id="_class_layer_1a79e172a9898791194b47d581e7d7f7ca"/><section>
    <title>isVisible()</title>
<indexterm><primary>isVisible</primary><secondary>Layer</secondary></indexterm>
<indexterm><primary>Layer</primary><secondary>isVisible</secondary></indexterm>
<para><computeroutput>bool Layer::isVisible ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Zwraca informacje o widoczności. </para>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/<link linkend="__layer_8h">Layer.h</link>src/<link linkend="__layer_8cpp">Layer.cpp</link></section>
</section>
