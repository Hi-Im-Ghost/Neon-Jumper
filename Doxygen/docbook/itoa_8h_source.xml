<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_itoa_8h_source" xml:lang="en-US">
<title>itoa.h</title>
<indexterm><primary>src/rapidjson/include/rapidjson/internal/itoa.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Tencent&#32;is&#32;pleased&#32;to&#32;support&#32;the&#32;open&#32;source&#32;community&#32;by&#32;making&#32;RapidJSON&#32;available.</emphasis>
2 <emphasis role="comment">//</emphasis>
3 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2015&#32;THL&#32;A29&#32;Limited,&#32;a&#32;Tencent&#32;company,&#32;and&#32;Milo&#32;Yip.</emphasis>
4 <emphasis role="comment">//</emphasis>
5 <emphasis role="comment">//&#32;Licensed&#32;under&#32;the&#32;MIT&#32;License&#32;(the&#32;&quot;License&quot;);&#32;you&#32;may&#32;not&#32;use&#32;this&#32;file&#32;except</emphasis>
6 <emphasis role="comment">//&#32;in&#32;compliance&#32;with&#32;the&#32;License.&#32;You&#32;may&#32;obtain&#32;a&#32;copy&#32;of&#32;the&#32;License&#32;at</emphasis>
7 <emphasis role="comment">//</emphasis>
8 <emphasis role="comment">//&#32;http://opensource.org/licenses/MIT</emphasis>
9 <emphasis role="comment">//</emphasis>
10 <emphasis role="comment">//&#32;Unless&#32;required&#32;by&#32;applicable&#32;law&#32;or&#32;agreed&#32;to&#32;in&#32;writing,&#32;software&#32;distributed</emphasis>
11 <emphasis role="comment">//&#32;under&#32;the&#32;License&#32;is&#32;distributed&#32;on&#32;an&#32;&quot;AS&#32;IS&quot;&#32;BASIS,&#32;WITHOUT&#32;WARRANTIES&#32;OR</emphasis>
12 <emphasis role="comment">//&#32;CONDITIONS&#32;OF&#32;ANY&#32;KIND,&#32;either&#32;express&#32;or&#32;implied.&#32;See&#32;the&#32;License&#32;for&#32;the</emphasis>
13 <emphasis role="comment">//&#32;specific&#32;language&#32;governing&#32;permissions&#32;and&#32;limitations&#32;under&#32;the&#32;License.</emphasis>
14 
15 <emphasis role="preprocessor">#ifndef&#32;RAPIDJSON_ITOA_</emphasis>
16 <emphasis role="preprocessor">#define&#32;RAPIDJSON_ITOA_</emphasis>
17 
18 <emphasis role="preprocessor">#include&#32;&quot;../rapidjson.h&quot;</emphasis>
19 
20 <link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc">RAPIDJSON_NAMESPACE_BEGIN</link>
21 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceinternal">internal</link>&#32;{
22 
23 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_namespaceinternal_1a76ad2b55668f695effde1971d53a5ce1">GetDigitsLut</link>()&#32;{
24 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;cDigitsLut[200]&#32;=&#32;{
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;9&apos;</emphasis>,<emphasis role="charliteral">&apos;0&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,<emphasis role="charliteral">&apos;1&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,<emphasis role="charliteral">&apos;2&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,<emphasis role="charliteral">&apos;3&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,<emphasis role="charliteral">&apos;4&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,<emphasis role="charliteral">&apos;5&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,<emphasis role="charliteral">&apos;6&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,<emphasis role="charliteral">&apos;7&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,<emphasis role="charliteral">&apos;8&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>,<emphasis role="charliteral">&apos;9&apos;</emphasis>
35 &#32;&#32;&#32;&#32;};
36 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cDigitsLut;
37 }
38 
39 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_namespaceinternal_1a90e3cb218b557548f361e99dc718b4b1">u32toa</link>(<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<emphasis role="keywordtype">char</emphasis>*&#32;buffer)&#32;{
40 &#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(buffer&#32;!=&#32;0);
41 
42 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;cDigitsLut&#32;=&#32;<link linkend="_namespaceinternal_1a76ad2b55668f695effde1971d53a5ce1">GetDigitsLut</link>();
43 
44 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&lt;&#32;10000)&#32;{
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d1&#32;=&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d2&#32;=&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
47 
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;1000)
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1];
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;100)
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1&#32;+&#32;1];
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;10)
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2];
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2&#32;+&#32;1];
55 &#32;&#32;&#32;&#32;}
56 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&lt;&#32;100000000)&#32;{
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;value&#32;=&#32;bbbbcccc</emphasis>
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;b&#32;=&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;/&#32;10000;
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;c&#32;=&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;%&#32;10000;
60 
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d1&#32;=&#32;(b&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d2&#32;=&#32;(b&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
63 
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d3&#32;=&#32;(c&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d4&#32;=&#32;(c&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
66 
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;10000000)
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1];
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;1000000)
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1&#32;+&#32;1];
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;100000)
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2];
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2&#32;+&#32;1];
74 
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d3];
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d3&#32;+&#32;1];
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d4];
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d4&#32;+&#32;1];
79 &#32;&#32;&#32;&#32;}
80 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;value&#32;=&#32;aabbbbcccc&#32;in&#32;decimal</emphasis>
82 
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;=&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;/&#32;100000000;&#32;<emphasis role="comment">//&#32;1&#32;to&#32;42</emphasis>
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;%=&#32;100000000;
85 
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;&gt;=&#32;10)&#32;{
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;i&#32;=&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;&lt;&lt;&#32;1;
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[i];
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[i&#32;+&#32;1];
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">char</emphasis><emphasis role="keyword">&gt;</emphasis>(<emphasis role="charliteral">&apos;0&apos;</emphasis>&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">char</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>));
93 
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;b&#32;=&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;/&#32;10000;&#32;<emphasis role="comment">//&#32;0&#32;to&#32;9999</emphasis>
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;c&#32;=&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;%&#32;10000;&#32;<emphasis role="comment">//&#32;0&#32;to&#32;9999</emphasis>
96 
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d1&#32;=&#32;(b&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d2&#32;=&#32;(b&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
99 
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d3&#32;=&#32;(c&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d4&#32;=&#32;(c&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
102 
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1];
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1&#32;+&#32;1];
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2];
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2&#32;+&#32;1];
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d3];
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d3&#32;+&#32;1];
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d4];
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d4&#32;+&#32;1];
111 &#32;&#32;&#32;&#32;}
112 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer;
113 }
114 
115 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_namespaceinternal_1ac6c7d763acc9ca9f15a759241640328e">i32toa</link>(<link linkend="_stdint_8h_1ab1967d8591af1a4e48c37fd2b0f184d0">int32_t</link>&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<emphasis role="keywordtype">char</emphasis>*&#32;buffer)&#32;{
116 &#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(buffer&#32;!=&#32;0);
117 &#32;&#32;&#32;&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;u&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link><emphasis role="keyword">&gt;</emphasis>(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>);
118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&lt;&#32;0)&#32;{
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>;
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u&#32;=&#32;~u&#32;+&#32;1;
121 &#32;&#32;&#32;&#32;}
122 
123 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceinternal_1a90e3cb218b557548f361e99dc718b4b1">u32toa</link>(u,&#32;buffer);
124 }
125 
126 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_namespaceinternal_1a489150922c0320e4290b455bf3c6e36c">u64toa</link>(<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<emphasis role="keywordtype">char</emphasis>*&#32;buffer)&#32;{
127 &#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(buffer&#32;!=&#32;0);
128 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;cDigitsLut&#32;=&#32;<link linkend="_namespaceinternal_1a76ad2b55668f695effde1971d53a5ce1">GetDigitsLut</link>();
129 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;&#32;kTen8&#32;=&#32;100000000;
130 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;&#32;kTen9&#32;=&#32;kTen8&#32;*&#32;10;
131 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;kTen10&#32;=&#32;kTen8&#32;*&#32;100;
132 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;kTen11&#32;=&#32;kTen8&#32;*&#32;1000;
133 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;kTen12&#32;=&#32;kTen8&#32;*&#32;10000;
134 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;kTen13&#32;=&#32;kTen8&#32;*&#32;100000;
135 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;kTen14&#32;=&#32;kTen8&#32;*&#32;1000000;
136 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;kTen15&#32;=&#32;kTen8&#32;*&#32;10000000;
137 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;kTen16&#32;=&#32;kTen8&#32;*&#32;kTen8;
138 
139 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&lt;&#32;kTen8)&#32;{
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;v&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link><emphasis role="keyword">&gt;</emphasis>(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>);
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v&#32;&lt;&#32;10000)&#32;{
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d1&#32;=&#32;(v&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d2&#32;=&#32;(v&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
144 
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v&#32;&gt;=&#32;1000)
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1];
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v&#32;&gt;=&#32;100)
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1&#32;+&#32;1];
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v&#32;&gt;=&#32;10)
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2];
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2&#32;+&#32;1];
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;value&#32;=&#32;bbbbcccc</emphasis>
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;b&#32;=&#32;v&#32;/&#32;10000;
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;c&#32;=&#32;v&#32;%&#32;10000;
157 
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d1&#32;=&#32;(b&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d2&#32;=&#32;(b&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
160 
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d3&#32;=&#32;(c&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d4&#32;=&#32;(c&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
163 
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;10000000)
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1];
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;1000000)
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1&#32;+&#32;1];
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;100000)
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2];
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2&#32;+&#32;1];
171 
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d3];
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d3&#32;+&#32;1];
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d4];
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d4&#32;+&#32;1];
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
177 &#32;&#32;&#32;&#32;}
178 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&lt;&#32;kTen16)&#32;{
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;v0&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link><emphasis role="keyword">&gt;</emphasis>(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;/&#32;kTen8);
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;v1&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link><emphasis role="keyword">&gt;</emphasis>(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;%&#32;kTen8);
181 
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;b0&#32;=&#32;v0&#32;/&#32;10000;
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;c0&#32;=&#32;v0&#32;%&#32;10000;
184 
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d1&#32;=&#32;(b0&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d2&#32;=&#32;(b0&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
187 
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d3&#32;=&#32;(c0&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d4&#32;=&#32;(c0&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
190 
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;b1&#32;=&#32;v1&#32;/&#32;10000;
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;c1&#32;=&#32;v1&#32;%&#32;10000;
193 
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d5&#32;=&#32;(b1&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d6&#32;=&#32;(b1&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
196 
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d7&#32;=&#32;(c1&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d8&#32;=&#32;(c1&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
199 
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;kTen15)
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1];
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;kTen14)
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1&#32;+&#32;1];
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;kTen13)
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2];
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;kTen12)
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2&#32;+&#32;1];
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;kTen11)
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d3];
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;kTen10)
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d3&#32;+&#32;1];
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&gt;=&#32;kTen9)
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d4];
214 
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d4&#32;+&#32;1];
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d5];
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d5&#32;+&#32;1];
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d6];
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d6&#32;+&#32;1];
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d7];
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d7&#32;+&#32;1];
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d8];
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d8&#32;+&#32;1];
224 &#32;&#32;&#32;&#32;}
225 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link><emphasis role="keyword">&gt;</emphasis>(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;/&#32;kTen16);&#32;<emphasis role="comment">//&#32;1&#32;to&#32;1844</emphasis>
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;%=&#32;kTen16;
228 
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;&lt;&#32;10)
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">char</emphasis><emphasis role="keyword">&gt;</emphasis>(<emphasis role="charliteral">&apos;0&apos;</emphasis>&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">char</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>));
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;&lt;&#32;100)&#32;{
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;i&#32;=&#32;<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;&lt;&lt;&#32;1;
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[i];
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[i&#32;+&#32;1];
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;&lt;&#32;1000)&#32;{
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">char</emphasis><emphasis role="keyword">&gt;</emphasis>(<emphasis role="charliteral">&apos;0&apos;</emphasis>&#32;+&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">char</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;/&#32;100));
238 
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;i&#32;=&#32;(<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[i];
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[i&#32;+&#32;1];
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;i&#32;=&#32;(<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;j&#32;=&#32;(<link linkend="_pointer_8h_1aeeddce917cf130d62c370b8f216026dd">a</link>&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[i];
247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[i&#32;+&#32;1];
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[j];
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[j&#32;+&#32;1];
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
251 
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;v0&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link><emphasis role="keyword">&gt;</emphasis>(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;/&#32;kTen8);
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;v1&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link><emphasis role="keyword">&gt;</emphasis>(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;%&#32;kTen8);
254 
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;b0&#32;=&#32;v0&#32;/&#32;10000;
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;c0&#32;=&#32;v0&#32;%&#32;10000;
257 
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d1&#32;=&#32;(b0&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d2&#32;=&#32;(b0&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
260 
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d3&#32;=&#32;(c0&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d4&#32;=&#32;(c0&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
263 
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;b1&#32;=&#32;v1&#32;/&#32;10000;
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;c1&#32;=&#32;v1&#32;%&#32;10000;
266 
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d5&#32;=&#32;(b1&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d6&#32;=&#32;(b1&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
269 
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d7&#32;=&#32;(c1&#32;/&#32;100)&#32;&lt;&lt;&#32;1;
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;d8&#32;=&#32;(c1&#32;%&#32;100)&#32;&lt;&lt;&#32;1;
272 
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1];
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d1&#32;+&#32;1];
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2];
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d2&#32;+&#32;1];
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d3];
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d3&#32;+&#32;1];
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d4];
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d4&#32;+&#32;1];
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d5];
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d5&#32;+&#32;1];
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d6];
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d6&#32;+&#32;1];
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d7];
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d7&#32;+&#32;1];
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d8];
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;cDigitsLut[d8&#32;+&#32;1];
289 &#32;&#32;&#32;&#32;}
290 
291 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer;
292 }
293 
294 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_namespaceinternal_1a527358458754f514c249c55c27b35526">i64toa</link>(<link linkend="_stdint_8h_1a414156feea104f8f75b4ed9e3121b2f6">int64_t</link>&#32;<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>,&#32;<emphasis role="keywordtype">char</emphasis>*&#32;buffer)&#32;{
295 &#32;&#32;&#32;&#32;<link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c">RAPIDJSON_ASSERT</link>(buffer&#32;!=&#32;0);
296 &#32;&#32;&#32;&#32;<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>&#32;u&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link><emphasis role="keyword">&gt;</emphasis>(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>);
297 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_pointer_8h_1a32aff7c6c4cd253fdf6563677afab5ce">value</link>&#32;&lt;&#32;0)&#32;{
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*buffer++&#32;=&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>;
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;u&#32;=&#32;~u&#32;+&#32;1;
300 &#32;&#32;&#32;&#32;}
301 
302 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceinternal_1a489150922c0320e4290b455bf3c6e36c">u64toa</link>(u,&#32;buffer);
303 }
304 
305 }&#32;<emphasis role="comment">//&#32;namespace&#32;internal</emphasis>
306 <link linkend="_group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1">RAPIDJSON_NAMESPACE_END</link>
307 
308 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;RAPIDJSON_ITOA_</emphasis>
</programlisting></section>
