<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classinternal_1_1_i_schema_state_factory" xml:lang="en-US">
<title>internal::ISchemaStateFactory&lt; SchemaType &gt; Class Template Reference</title>
<indexterm><primary>internal::ISchemaStateFactory&lt; SchemaType &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;schema.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual <link linkend="_classinternal_1_1_i_schema_state_factory_1ae769eac75f9561fc8d0da7fadad2f6b4">~ISchemaStateFactory</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> * <link linkend="_classinternal_1_1_i_schema_state_factory_1ada66af7e924238f29314e3b462f1e3fb">CreateSchemaValidator</link> (const SchemaType &amp;, const bool inheritContinueOnErrors)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_schema_state_factory_1a112cbf154077050bc30ffe670032442c">DestroySchemaValidator</link> (<link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> *validator)=0</para>
</listitem>
            <listitem><para>virtual void * <link linkend="_classinternal_1_1_i_schema_state_factory_1ab26076418c94535cec2af570e8b0a436">CreateHasher</link> ()=0</para>
</listitem>
            <listitem><para>virtual <link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> <link linkend="_classinternal_1_1_i_schema_state_factory_1addfcf00963cc777edf642b204f07c8d6">GetHashCode</link> (void *hasher)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_schema_state_factory_1a70b8d88180d2e6993105b17f19101635">DestroryHasher</link> (void *hasher)=0</para>
</listitem>
            <listitem><para>virtual void * <link linkend="_classinternal_1_1_i_schema_state_factory_1abf29f19ba86e08f62b84b74a879b8922">MallocState</link> (size_t size)=0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classinternal_1_1_i_schema_state_factory_1a27bd2138940cac3c330dd8399c49b22b">FreeState</link> (void *p)=0</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classinternal_1_1_i_schema_state_factory_1ae769eac75f9561fc8d0da7fadad2f6b4"/><section>
    <title>~ISchemaStateFactory()</title>
<indexterm><primary>~ISchemaStateFactory</primary><secondary>internal::ISchemaStateFactory&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::ISchemaStateFactory&lt; SchemaType &gt;</primary><secondary>~ISchemaStateFactory</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual <link linkend="_classinternal_1_1_i_schema_state_factory">internal::ISchemaStateFactory</link>&lt; SchemaType &gt;::~<link linkend="_classinternal_1_1_i_schema_state_factory">ISchemaStateFactory</link> ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classinternal_1_1_i_schema_state_factory_1ab26076418c94535cec2af570e8b0a436"/><section>
    <title>CreateHasher()</title>
<indexterm><primary>CreateHasher</primary><secondary>internal::ISchemaStateFactory&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::ISchemaStateFactory&lt; SchemaType &gt;</primary><secondary>CreateHasher</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void * <link linkend="_classinternal_1_1_i_schema_state_factory">internal::ISchemaStateFactory</link>&lt; SchemaType &gt;::CreateHasher ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a48ecc252813e60a0efdb4eb44b193bd5">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_schema_state_factory_1ada66af7e924238f29314e3b462f1e3fb"/><section>
    <title>CreateSchemaValidator()</title>
<indexterm><primary>CreateSchemaValidator</primary><secondary>internal::ISchemaStateFactory&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::ISchemaStateFactory&lt; SchemaType &gt;</primary><secondary>CreateSchemaValidator</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual <link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> * <link linkend="_classinternal_1_1_i_schema_state_factory">internal::ISchemaStateFactory</link>&lt; SchemaType &gt;::CreateSchemaValidator (const SchemaType &amp; , const bool inheritContinueOnErrors)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1ad4afd8cdb09a6f47a23406894f77ee8a">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_schema_state_factory_1a70b8d88180d2e6993105b17f19101635"/><section>
    <title>DestroryHasher()</title>
<indexterm><primary>DestroryHasher</primary><secondary>internal::ISchemaStateFactory&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::ISchemaStateFactory&lt; SchemaType &gt;</primary><secondary>DestroryHasher</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_schema_state_factory">internal::ISchemaStateFactory</link>&lt; SchemaType &gt;::DestroryHasher (void * hasher)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a007eef58be575dc562543d069ddd2710">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_schema_state_factory_1a112cbf154077050bc30ffe670032442c"/><section>
    <title>DestroySchemaValidator()</title>
<indexterm><primary>DestroySchemaValidator</primary><secondary>internal::ISchemaStateFactory&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::ISchemaStateFactory&lt; SchemaType &gt;</primary><secondary>DestroySchemaValidator</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_schema_state_factory">internal::ISchemaStateFactory</link>&lt; SchemaType &gt;::DestroySchemaValidator (<link linkend="_classinternal_1_1_i_schema_validator">ISchemaValidator</link> * validator)<computeroutput>[pure virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classinternal_1_1_i_schema_state_factory_1a27bd2138940cac3c330dd8399c49b22b"/><section>
    <title>FreeState()</title>
<indexterm><primary>FreeState</primary><secondary>internal::ISchemaStateFactory&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::ISchemaStateFactory&lt; SchemaType &gt;</primary><secondary>FreeState</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_classinternal_1_1_i_schema_state_factory">internal::ISchemaStateFactory</link>&lt; SchemaType &gt;::FreeState (void * p)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a4e250737a411af2969a9e585a7da4187">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_schema_state_factory_1addfcf00963cc777edf642b204f07c8d6"/><section>
    <title>GetHashCode()</title>
<indexterm><primary>GetHashCode</primary><secondary>internal::ISchemaStateFactory&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::ISchemaStateFactory&lt; SchemaType &gt;</primary><secondary>GetHashCode</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual <link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> <link linkend="_classinternal_1_1_i_schema_state_factory">internal::ISchemaStateFactory</link>&lt; SchemaType &gt;::GetHashCode (void * hasher)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1ac01c45982a1f512e1ca06fe5544b0c0f">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<anchor xml:id="_classinternal_1_1_i_schema_state_factory_1abf29f19ba86e08f62b84b74a879b8922"/><section>
    <title>MallocState()</title>
<indexterm><primary>MallocState</primary><secondary>internal::ISchemaStateFactory&lt; SchemaType &gt;</secondary></indexterm>
<indexterm><primary>internal::ISchemaStateFactory&lt; SchemaType &gt;</primary><secondary>MallocState</secondary></indexterm>
<computeroutput>template&lt;typename SchemaType &gt; </computeroutput><para><computeroutput>virtual void * <link linkend="_classinternal_1_1_i_schema_state_factory">internal::ISchemaStateFactory</link>&lt; SchemaType &gt;::MallocState (size_t size)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_generic_schema_validator_1a9f983043d6bd1a12d9e2dac756dabbae">GenericSchemaValidator&lt; SchemaDocumentType, OutputHandler, StateAllocator &gt;</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
src/rapidjson/include/rapidjson/<link linkend="_schema_8h">schema.h</link></section>
</section>
